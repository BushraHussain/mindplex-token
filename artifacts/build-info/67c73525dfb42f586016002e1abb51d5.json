{"id":"67c73525dfb42f586016002e1abb51d5","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlUpgradeable.sol\";\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../utils/StringsUpgradeable.sol\";\nimport \"../utils/introspection/ERC165Upgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControlUpgradeable, ERC165Upgradeable {\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        StringsUpgradeable.toHexString(account),\n                        \" is missing role \",\n                        StringsUpgradeable.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControlUpgradeable {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.0;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n *\n * _Available since v4.5._\n */\ninterface IVotesUpgradeable {\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     */\n    function getPastVotes(address account, uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) external;\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC5267Upgradeable {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/IERC5805Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5805.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../governance/utils/IVotesUpgradeable.sol\";\nimport \"./IERC6372Upgradeable.sol\";\n\ninterface IERC5805Upgradeable is IERC6372Upgradeable, IVotesUpgradeable {}\n"},"@openzeppelin/contracts-upgradeable/interfaces/IERC6372Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC6372.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC6372Upgradeable {\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() external view returns (uint48);\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() external view returns (string memory);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Upgradeable.sol\";\nimport \"./extensions/IERC20MetadataUpgradeable.sol\";\nimport \"../../utils/ContextUpgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[45] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20PermitUpgradeable.sol\";\nimport \"../ERC20Upgradeable.sol\";\nimport \"../../../utils/cryptography/ECDSAUpgradeable.sol\";\nimport \"../../../utils/cryptography/EIP712Upgradeable.sol\";\nimport \"../../../utils/CountersUpgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * _Available since v3.4._\n *\n * @custom:storage-size 51\n */\nabstract contract ERC20PermitUpgradeable is Initializable, ERC20Upgradeable, IERC20PermitUpgradeable, EIP712Upgradeable {\n    using CountersUpgradeable for CountersUpgradeable.Counter;\n\n    mapping(address => CountersUpgradeable.Counter) private _nonces;\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private constant _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    /**\n     * @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n     * However, to ensure consistency with the upgradeable transpiler, we will continue\n     * to reserve a slot.\n     * @custom:oz-renamed-from _PERMIT_TYPEHASH\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private _PERMIT_TYPEHASH_DEPRECATED_SLOT;\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    function __ERC20Permit_init(string memory name) internal onlyInitializing {\n        __EIP712_init_unchained(name, \"1\");\n    }\n\n    function __ERC20Permit_init_unchained(string memory) internal onlyInitializing {}\n\n    /**\n     * @dev See {IERC20Permit-permit}.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\n\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSAUpgradeable.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @dev See {IERC20Permit-nonces}.\n     */\n    function nonces(address owner) public view virtual override returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @dev See {IERC20Permit-DOMAIN_SEPARATOR}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev \"Consume a nonce\": return the current value and increment.\n     *\n     * _Available since v4.1._\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        CountersUpgradeable.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/ERC20Votes.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC20PermitUpgradeable.sol\";\nimport \"../../../interfaces/IERC5805Upgradeable.sol\";\nimport \"../../../utils/math/MathUpgradeable.sol\";\nimport \"../../../utils/math/SafeCastUpgradeable.sol\";\nimport \"../../../utils/cryptography/ECDSAUpgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n * and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n *\n * NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n * power can be queried through the public accessors {getVotes} and {getPastVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n *\n * _Available since v4.2._\n */\nabstract contract ERC20VotesUpgradeable is Initializable, ERC20PermitUpgradeable, IERC5805Upgradeable {\n    function __ERC20Votes_init() internal onlyInitializing {\n    }\n\n    function __ERC20Votes_init_unchained() internal onlyInitializing {\n    }\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint224 votes;\n    }\n\n    bytes32 private constant _DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address => address) private _delegates;\n    mapping(address => Checkpoint[]) private _checkpoints;\n    Checkpoint[] private _totalSupplyCheckpoints;\n\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() public view virtual override returns (uint48) {\n        return SafeCastUpgradeable.toUint48(block.number);\n    }\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() public view virtual override returns (string memory) {\n        // Check that the clock was not modified\n        require(clock() == block.number, \"ERC20Votes: broken clock mode\");\n        return \"mode=blocknumber&from=default\";\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoint memory) {\n        return _checkpoints[account][pos];\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account) public view virtual returns (uint32) {\n        return SafeCastUpgradeable.toUint32(_checkpoints[account].length);\n    }\n\n    /**\n     * @dev Get the address `account` is currently delegating to.\n     */\n    function delegates(address account) public view virtual override returns (address) {\n        return _delegates[account];\n    }\n\n    /**\n     * @dev Gets the current votes balance for `account`\n     */\n    function getVotes(address account) public view virtual override returns (uint256) {\n        uint256 pos = _checkpoints[account].length;\n        unchecked {\n            return pos == 0 ? 0 : _checkpoints[account][pos - 1].votes;\n        }\n    }\n\n    /**\n     * @dev Retrieve the number of votes for `account` at the end of `timepoint`.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past\n     */\n    function getPastVotes(address account, uint256 timepoint) public view virtual override returns (uint256) {\n        require(timepoint < clock(), \"ERC20Votes: future lookup\");\n        return _checkpointsLookup(_checkpoints[account], timepoint);\n    }\n\n    /**\n     * @dev Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances.\n     * It is NOT the sum of all the delegated votes!\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past\n     */\n    function getPastTotalSupply(uint256 timepoint) public view virtual override returns (uint256) {\n        require(timepoint < clock(), \"ERC20Votes: future lookup\");\n        return _checkpointsLookup(_totalSupplyCheckpoints, timepoint);\n    }\n\n    /**\n     * @dev Lookup a value in a list of (sorted) checkpoints.\n     */\n    function _checkpointsLookup(Checkpoint[] storage ckpts, uint256 timepoint) private view returns (uint256) {\n        // We run a binary search to look for the last (most recent) checkpoint taken before (or at) `timepoint`.\n        //\n        // Initially we check if the block is recent to narrow the search range.\n        // During the loop, the index of the wanted checkpoint remains in the range [low-1, high).\n        // With each iteration, either `low` or `high` is moved towards the middle of the range to maintain the invariant.\n        // - If the middle checkpoint is after `timepoint`, we look in [low, mid)\n        // - If the middle checkpoint is before or equal to `timepoint`, we look in [mid+1, high)\n        // Once we reach a single value (when low == high), we've found the right checkpoint at the index high-1, if not\n        // out of bounds (in which case we're looking too far in the past and the result is 0).\n        // Note that if the latest checkpoint available is exactly for `timepoint`, we end up with an index that is\n        // past the end of the array, so we technically don't find a checkpoint after `timepoint`, but it works out\n        // the same.\n        uint256 length = ckpts.length;\n\n        uint256 low = 0;\n        uint256 high = length;\n\n        if (length > 5) {\n            uint256 mid = length - MathUpgradeable.sqrt(length);\n            if (_unsafeAccess(ckpts, mid).fromBlock > timepoint) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        while (low < high) {\n            uint256 mid = MathUpgradeable.average(low, high);\n            if (_unsafeAccess(ckpts, mid).fromBlock > timepoint) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        unchecked {\n            return high == 0 ? 0 : _unsafeAccess(ckpts, high - 1).votes;\n        }\n    }\n\n    /**\n     * @dev Delegate votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual override {\n        _delegate(_msgSender(), delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= expiry, \"ERC20Votes: signature expired\");\n        address signer = ECDSAUpgradeable.recover(\n            _hashTypedDataV4(keccak256(abi.encode(_DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        require(nonce == _useNonce(signer), \"ERC20Votes: invalid nonce\");\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1).\n     */\n    function _maxSupply() internal view virtual returns (uint224) {\n        return type(uint224).max;\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been increased.\n     */\n    function _mint(address account, uint256 amount) internal virtual override {\n        super._mint(account, amount);\n        require(totalSupply() <= _maxSupply(), \"ERC20Votes: total supply risks overflowing votes\");\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _add, amount);\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been decreased.\n     */\n    function _burn(address account, uint256 amount) internal virtual override {\n        super._burn(account, amount);\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _subtract, amount);\n    }\n\n    /**\n     * @dev Move voting power when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual override {\n        super._afterTokenTransfer(from, to, amount);\n\n        _moveVotingPower(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Change delegation for `delegator` to `delegatee`.\n     *\n     * Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}.\n     */\n    function _delegate(address delegator, address delegatee) internal virtual {\n        address currentDelegate = delegates(delegator);\n        uint256 delegatorBalance = balanceOf(delegator);\n        _delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveVotingPower(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveVotingPower(address src, address dst, uint256 amount) private {\n        if (src != dst && amount > 0) {\n            if (src != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[src], _subtract, amount);\n                emit DelegateVotesChanged(src, oldWeight, newWeight);\n            }\n\n            if (dst != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[dst], _add, amount);\n                emit DelegateVotesChanged(dst, oldWeight, newWeight);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        Checkpoint[] storage ckpts,\n        function(uint256, uint256) view returns (uint256) op,\n        uint256 delta\n    ) private returns (uint256 oldWeight, uint256 newWeight) {\n        uint256 pos = ckpts.length;\n\n        unchecked {\n            Checkpoint memory oldCkpt = pos == 0 ? Checkpoint(0, 0) : _unsafeAccess(ckpts, pos - 1);\n\n            oldWeight = oldCkpt.votes;\n            newWeight = op(oldWeight, delta);\n\n            if (pos > 0 && oldCkpt.fromBlock == clock()) {\n                _unsafeAccess(ckpts, pos - 1).votes = SafeCastUpgradeable.toUint224(newWeight);\n            } else {\n                ckpts.push(Checkpoint({fromBlock: SafeCastUpgradeable.toUint32(clock()), votes: SafeCastUpgradeable.toUint224(newWeight)}));\n            }\n        }\n    }\n\n    function _add(uint256 a, uint256 b) private pure returns (uint256) {\n        return a + b;\n    }\n\n    function _subtract(uint256 a, uint256 b) private pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(Checkpoint[] storage ckpts, uint256 pos) private pure returns (Checkpoint storage result) {\n        assembly {\n            mstore(0, ckpts.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[47] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20PermitUpgradeable {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary CountersUpgradeable {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../StringsUpgradeable.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSAUpgradeable {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", StringsUpgradeable.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./ECDSAUpgradeable.sol\";\nimport \"../../interfaces/IERC5267Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * _Available since v3.4._\n *\n * @custom:storage-size 52\n */\nabstract contract EIP712Upgradeable is Initializable, IERC5267Upgradeable {\n    bytes32 private constant _TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    /// @custom:oz-renamed-from _HASHED_NAME\n    bytes32 private _hashedName;\n    /// @custom:oz-renamed-from _HASHED_VERSION\n    bytes32 private _hashedVersion;\n\n    string private _name;\n    string private _version;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    function __EIP712_init(string memory name, string memory version) internal onlyInitializing {\n        __EIP712_init_unchained(name, version);\n    }\n\n    function __EIP712_init_unchained(string memory name, string memory version) internal onlyInitializing {\n        _name = name;\n        _version = version;\n\n        // Reset prior values in storage if upgrading\n        _hashedName = 0;\n        _hashedVersion = 0;\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        return _buildDomainSeparator();\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(_TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSAUpgradeable.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {EIP-5267}.\n     *\n     * _Available since v4.9._\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        override\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        // If the hashed name and version in storage are non-zero, the contract hasn't been properly initialized\n        // and the EIP712 domain is not reliable, as it will be missing name and version.\n        require(_hashedName == 0 && _hashedVersion == 0, \"EIP712: Uninitialized\");\n\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712Name() internal virtual view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712Version() internal virtual view returns (string memory) {\n        return _version;\n    }\n\n    /**\n     * @dev The hash of the name parameter for the EIP712 domain.\n     *\n     * NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Name` instead.\n     */\n    function _EIP712NameHash() internal view returns (bytes32) {\n        string memory name = _EIP712Name();\n        if (bytes(name).length > 0) {\n            return keccak256(bytes(name));\n        } else {\n            // If the name is empty, the contract may have been upgraded without initializing the new storage.\n            // We return the name hash in storage if non-zero, otherwise we assume the name is empty by design.\n            bytes32 hashedName = _hashedName;\n            if (hashedName != 0) {\n                return hashedName;\n            } else {\n                return keccak256(\"\");\n            }\n        }\n    }\n\n    /**\n     * @dev The hash of the version parameter for the EIP712 domain.\n     *\n     * NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Version` instead.\n     */\n    function _EIP712VersionHash() internal view returns (bytes32) {\n        string memory version = _EIP712Version();\n        if (bytes(version).length > 0) {\n            return keccak256(bytes(version));\n        } else {\n            // If the version is empty, the contract may have been upgraded without initializing the new storage.\n            // We return the version hash in storage if non-zero, otherwise we assume the version is empty by design.\n            bytes32 hashedVersion = _hashedVersion;\n            if (hashedVersion != 0) {\n                return hashedVersion;\n            } else {\n                return keccak256(\"\");\n            }\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[48] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary MathUpgradeable {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCastUpgradeable {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 248 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 240 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 232 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 224 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 216 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 208 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 200 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 192 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 184 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 176 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 168 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 160 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 152 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 144 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 136 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 128 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 120 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 112 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 104 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 96 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 88 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 80 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 72 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 64 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 56 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 48 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 40 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 32 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 24 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 16 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 8 bits\");\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMathUpgradeable {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/MathUpgradeable.sol\";\nimport \"./math/SignedMathUpgradeable.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary StringsUpgradeable {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = MathUpgradeable.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMathUpgradeable.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/MindplexUpgradeableToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\nfunction c_553d27b8(bytes8 c__553d27b8) pure {}\nfunction c_true553d27b8(bytes8 c__553d27b8) pure returns (bool){ return true; }\nfunction c_false553d27b8(bytes8 c__553d27b8) pure returns (bool){ return false; }\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\n\n/**\n *  @title MindplexUpgradeableToken\n *  @notice This contract represents an {ERC20} utility token\n *  @dev This contract is a fixed supply of {ERC20} token including functionalities:\n *  - To pause and unpause the contract\n *  - To burn and mint tokens\n *  - To restrict functionality access for only specific roles\n *  - To be upgraded\n*/\ncontract MindplexUpgradeableToken is \n    AccessControlUpgradeable,\n    ERC20Upgradeable,\n    ERC20VotesUpgradeable,\n    PausableUpgradeable\n{\nfunction c_e1ac8b9c(bytes8 c__e1ac8b9c) internal pure {}\nfunction c_truee1ac8b9c(bytes8 c__e1ac8b9c) internal pure returns (bool){ return true; }\nfunction c_falsee1ac8b9c(bytes8 c__e1ac8b9c) internal pure returns (bool){ return false; }\nmodifier c_mod939d7b80{ c_e1ac8b9c(0x62ff3d194fb103ec); /* modifier-post */ \n _; }\nmodifier c_modfb804101{ c_e1ac8b9c(0x444cc09b6123a024); /* modifier-pre */ \n _; }\nmodifier c_mod131d9412{ c_e1ac8b9c(0xabe91030000d1ac0); /* modifier-post */ \n _; }\nmodifier c_mod4f8c6f6e{ c_e1ac8b9c(0x609999f02b3d32d5); /* modifier-pre */ \n _; }\nmodifier c_modfbf231e7{ c_e1ac8b9c(0x008adad4de1c304a); /* modifier-post */ \n _; }\nmodifier c_mod591f10d0{ c_e1ac8b9c(0xebb165517487136f); /* modifier-pre */ \n _; }\nmodifier c_modcb635b8c{ c_e1ac8b9c(0xe002f4a7f1138ae8); /* modifier-post */ \n _; }\nmodifier c_modd085a7e0{ c_e1ac8b9c(0x7e144a1024e26768); /* modifier-pre */ \n _; }\nmodifier c_mod7cdc1fe2{ c_e1ac8b9c(0x807a5faab267db3e); /* modifier-post */ \n _; }\nmodifier c_modc7f3a650{ c_e1ac8b9c(0x7d1353b017bd2acb); /* modifier-pre */ \n _; }\n\n    // Role that has the access to pause and unpause this contract\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    // Role that has the access to mint tokens on this contract \n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    // Max supply of the token\n    uint256 public constant MAX_SUPPLY = 1000000000 * 10**uint(6);\n\n    //------------------------------- Initializer -----------------------------//    \n\n    /**\n     * @dev Initializes name and symbol of the token contract\n     * Grants `DEFAULT_ADMIN_ROLE`, `PAUSER_ROLE` and `MINTER_ROLE` to the\n     * account that deploys the contract.\n     * Mints the `MAX_SUPPLY` of `MPX` Token on contract deployment.\n    */\n    function initialize(\n        string memory name,\n        string memory symbol\n    ) \n         c_modc7f3a650 initializer c_mod7cdc1fe2  \n        public \n    {c_e1ac8b9c(0x1b87ec61cb2af8fd); /* function */ \n\nc_e1ac8b9c(0x75fb0fffe85d5ba0); /* line */ \n        c_e1ac8b9c(0x6e9287142fa2bf5d); /* statement */ \n__ERC20_init(name, symbol);\nc_e1ac8b9c(0x5362e89620d126dd); /* line */ \n        c_e1ac8b9c(0xdc3081c3b05d8e28); /* statement */ \n__ERC20Permit_init(name);\nc_e1ac8b9c(0x535585d7b1c7d4bc); /* line */ \n        c_e1ac8b9c(0x4b157aa2e3b72fba); /* statement */ \n__Pausable_init();\nc_e1ac8b9c(0x0e7a7141161bee42); /* line */ \n        c_e1ac8b9c(0x54aeeb5a2d5cc814); /* statement */ \n__AccessControl_init();\nc_e1ac8b9c(0xc7ef261c6b52e840); /* line */ \n        c_e1ac8b9c(0xed8bf8d8aa09f5a8); /* statement */ \n_grantRole(DEFAULT_ADMIN_ROLE, _msgSender());\nc_e1ac8b9c(0x9fef610354934c36); /* line */ \n        c_e1ac8b9c(0x5642366cad1df8b9); /* statement */ \n_grantRole(PAUSER_ROLE, _msgSender());\nc_e1ac8b9c(0x631d5a374bcef4dc); /* line */ \n        c_e1ac8b9c(0x2508c509e3bc1ea6); /* statement */ \n_grantRole(MINTER_ROLE, _msgSender());\n\nc_e1ac8b9c(0xb2e403d7374d65aa); /* line */ \n        c_e1ac8b9c(0x130d054c74f7230f); /* statement */ \n_mint(_msgSender(), MAX_SUPPLY);\n    }\n\n    //------------------------------- EXTERNAL -----------------------------// \n\n    function mint(\n        address to, \n        uint256 amount\n    ) \n        external \n         c_modd085a7e0 onlyRole(MINTER_ROLE) c_modcb635b8c  \n    {c_e1ac8b9c(0x633c34d81d9c2e7a); /* function */ \n\nc_e1ac8b9c(0xc5f2d1228bc0d60d); /* line */ \n        c_e1ac8b9c(0xef978fb6da0fd805); /* requirePre */ \nc_e1ac8b9c(0x4fdafa4b0cddd4d3); /* statement */ \nrequire(\n            totalSupply() + amount <= MAX_SUPPLY,\n            \"Token to be minted should not exceed Max supply\"\n        );c_e1ac8b9c(0xd53c72cad467e7ba); /* requirePost */ \n \nc_e1ac8b9c(0x344ed792e6fd2a14); /* line */ \n        c_e1ac8b9c(0x690192438dc80361); /* statement */ \n_mint(to, amount);\n    }\n    \n    function burn(\n        uint256 amount\n    ) external virtual {c_e1ac8b9c(0x77e3700c135e6c4e); /* function */ \n\nc_e1ac8b9c(0xdabd11cca3d2544d); /* line */ \n        c_e1ac8b9c(0xc7f8ab0a5c0665d4); /* statement */ \n_burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n    */\n    function burnFrom(address account, uint256 amount) external {c_e1ac8b9c(0x607442f905452daa); /* function */ \n\nc_e1ac8b9c(0x1395f68543aa27f4); /* line */ \n        c_e1ac8b9c(0x0827047d6b13681e); /* statement */ \nuint256 currentAllowance = allowance(account, _msgSender());\nc_e1ac8b9c(0x44f3479ec179ef05); /* line */ \n        c_e1ac8b9c(0xbc481ed37c3138b0); /* requirePre */ \nc_e1ac8b9c(0x486fc6494b6c9788); /* statement */ \nrequire(currentAllowance >= amount, \"ERC20: burn amount exceeds allowance\");c_e1ac8b9c(0x8e6de9144bd4ddf7); /* requirePost */ \n\nc_e1ac8b9c(0x6e67c260954339a0); /* line */ \n        unchecked {\nc_e1ac8b9c(0x2e7c51116fbfe06f); /* line */ \n            c_e1ac8b9c(0x2fa744005f173f63); /* statement */ \n_approve(account, _msgSender(), currentAllowance - amount);\n        }\nc_e1ac8b9c(0x1af6ea53ee18c33f); /* line */ \n        c_e1ac8b9c(0x79063f61dd074654); /* statement */ \n_burn(account, amount);\n    }\n\n    /**\n     * @dev Pauses all token transfers.\n     *\n     * See {Pausable-_pause}.\n     *\n     * Requirements:\n     *\n     * - The caller must have the `PAUSER_ROLE`.\n     * - The contract must not be in paused state \n    */\n    function pause() external  c_mod591f10d0 onlyRole(PAUSER_ROLE) c_modfbf231e7  {c_e1ac8b9c(0x5f719cafd3ed6c93); /* function */ \n\nc_e1ac8b9c(0x3cbaca61587caa0f); /* line */ \n        c_e1ac8b9c(0x0fe0ea4ed91e2d2c); /* statement */ \n_pause();\n    }\n\n    /**\n     * @dev Unpauses all token transfers.\n     *\n     * See {Pausable-_unpause}.\n     *\n     * Requirements:\n     *\n     * - The caller must have the `PAUSER_ROLE`.\n     * - The contract must be in paused state \n    */\n    function unpause() external  c_mod4f8c6f6e onlyRole(PAUSER_ROLE) c_mod131d9412  {c_e1ac8b9c(0xc59fe76821dd927a); /* function */ \n\nc_e1ac8b9c(0xbc1dee6fafac93db); /* line */ \n        c_e1ac8b9c(0x159893534c8de7e0); /* statement */ \n_unpause();\n    }\n\n    //------------------------------- PUBLIC -----------------------------//\n\n    /**\n    * @dev Returns the number of decimals `6` used to get its user representation.\n    * See {ERC20-decimals}\n    */\n    function decimals() public pure override returns (uint8) {c_e1ac8b9c(0x6ceffb00f5b8f424); /* function */ \n\nc_e1ac8b9c(0x6f181a4c156b28df); /* line */ \n        c_e1ac8b9c(0x2fd4b306738ce299); /* statement */ \nreturn 6;\n    }\n\n    //------------------------------- INTERNAL -----------------------------// \n\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n    */\n    function _burn(address account, uint256 amount)\n        internal\n        override(ERC20Upgradeable, ERC20VotesUpgradeable)\n    {c_e1ac8b9c(0x5f0acf80ee14088e); /* function */ \n\nc_e1ac8b9c(0x657c1cdd7dd3eef0); /* line */ \n        c_e1ac8b9c(0xa2ae61bcf032aa41); /* statement */ \nsuper._burn(account, amount);\n    }\n\n    /**\n     * @dev Creates `amount` of new tokens and assigns them to an address `to`.\n     * See {ERC20-_mint}.\n     *\n     * Requirements:\n     *\n     * - The caller must have the `MINTER_ROLE`.\n     * - The total supply should not exceed MAX_SUPPLY \n    */\n    function _mint(address to, uint256 amount)\n        internal\n        override(\n            ERC20Upgradeable, \n            ERC20VotesUpgradeable\n        )\n    {c_e1ac8b9c(0x15060568254823a0); /* function */ \n\nc_e1ac8b9c(0x8c6c359bba103ede); /* line */ \n        c_e1ac8b9c(0x41eb3bcee080785a); /* statement */ \nsuper._mint(to, amount);\n    }\n\n    /**\n     *@dev Hook to be called after before token transfer\n     * See {ERC20-_beforeTokenTransfer}.\n    */\n    function _beforeTokenTransfer(\n        address from, \n        address to, \n        uint256 amount\n    )\n        internal\n         c_modfb804101 whenNotPaused c_mod939d7b80 \n        override\n    {c_e1ac8b9c(0x938a90d94264968d); /* function */ \n\nc_e1ac8b9c(0xd4b19e2bd3ddc3ea); /* line */ \n        c_e1ac8b9c(0x34e741239a9f760c); /* statement */ \nsuper._beforeTokenTransfer(from, to, amount);\n    }\n\n    /**\n     * @dev Hook to be called after every token transfer\n     * See {ERC20-_afterTokenTransfer}.\n    */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) \n        internal \n        virtual \n        override(\n            ERC20Upgradeable,  \n            ERC20VotesUpgradeable\n        )\n    {c_e1ac8b9c(0xbbeee96de4b55cf7); /* function */ \n\nc_e1ac8b9c(0x97e889cf08d5d19d); /* line */ \n        c_e1ac8b9c(0x81f53f79b57312d3); /* statement */ \nsuper._afterTokenTransfer(from, to, amount);\n    } \n}\n\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}},"metadata":{"useLiteralContent":false}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n --> contracts/MindplexUpgradeableToken.sol:4:25:\n  |\n4 | function c_true553d27b8(bytes8 c__553d27b8) pure returns (bool){ return true; }\n  |                         ^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":147,"file":"contracts/MindplexUpgradeableToken.sol","start":129},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n --> contracts/MindplexUpgradeableToken.sol:5:26:\n  |\n5 | function c_false553d27b8(bytes8 c__553d27b8) pure returns (bool){ return false; }\n  |                          ^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":228,"file":"contracts/MindplexUpgradeableToken.sol","start":210},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/MindplexUpgradeableToken.sol:28:25:\n   |\n28 | function c_truee1ac8b9c(bytes8 c__e1ac8b9c) internal pure returns (bool){ return true; }\n   |                         ^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":1190,"file":"contracts/MindplexUpgradeableToken.sol","start":1172},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/MindplexUpgradeableToken.sol:29:26:\n   |\n29 | function c_falsee1ac8b9c(bytes8 c__e1ac8b9c) internal pure returns (bool){ return false; }\n   |                          ^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":1280,"file":"contracts/MindplexUpgradeableToken.sol","start":1262},"type":"Warning"},{"component":"general","errorCode":"5574","formattedMessage":"Warning: Contract code size is 25694 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low \"runs\" value!), turning off revert strings, or using libraries.\n  --> contracts/MindplexUpgradeableToken.sol:21:1:\n   |\n21 | contract MindplexUpgradeableToken is \n   | ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Contract code size is 25694 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low \"runs\" value!), turning off revert strings, or using libraries.","severity":"warning","sourceLocation":{"end":9945,"file":"contracts/MindplexUpgradeableToken.sol","start":948},"type":"Warning"}],"sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[335],"AddressUpgradeable":[2857],"ContextUpgradeable":[2899],"ERC165Upgradeable":[3896],"IAccessControlUpgradeable":[408],"IERC165Upgradeable":[3908],"Initializable":[704],"MathUpgradeable":[4774],"SignedMathUpgradeable":[6420],"StringsUpgradeable":[3202]},"id":336,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","file":"./IAccessControlUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":336,"sourceUnit":409,"src":"133:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":336,"sourceUnit":2900,"src":"175:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","file":"../utils/StringsUpgradeable.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":336,"sourceUnit":3203,"src":"217:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../utils/introspection/ERC165Upgradeable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":336,"sourceUnit":3897,"src":"259:54:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":6,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":336,"sourceUnit":705,"src":"314:42:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":8,"name":"Initializable","nameLocations":["2065:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"2065:13:0"},"id":9,"nodeType":"InheritanceSpecifier","src":"2065:13:0"},{"baseName":{"id":10,"name":"ContextUpgradeable","nameLocations":["2080:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":2899,"src":"2080:18:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"2080:18:0"},{"baseName":{"id":12,"name":"IAccessControlUpgradeable","nameLocations":["2100:25:0"],"nodeType":"IdentifierPath","referencedDeclaration":408,"src":"2100:25:0"},"id":13,"nodeType":"InheritanceSpecifier","src":"2100:25:0"},{"baseName":{"id":14,"name":"ERC165Upgradeable","nameLocations":["2127:17:0"],"nodeType":"IdentifierPath","referencedDeclaration":3896,"src":"2127:17:0"},"id":15,"nodeType":"InheritanceSpecifier","src":"2127:17:0"}],"canonicalName":"AccessControlUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":7,"nodeType":"StructuredDocumentation","src":"358:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":335,"linearizedBaseContracts":[335,3896,3908,408,2899,704],"name":"AccessControlUpgradeable","nameLocation":"2037:24:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":20,"nodeType":"Block","src":"2209:7:0","statements":[]},"id":21,"implemented":true,"kind":"function","modifiers":[{"id":18,"kind":"modifierInvocation","modifierName":{"id":17,"name":"onlyInitializing","nameLocations":["2192:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":649,"src":"2192:16:0"},"nodeType":"ModifierInvocation","src":"2192:16:0"}],"name":"__AccessControl_init","nameLocation":"2160:20:0","nodeType":"FunctionDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"2180:2:0"},"returnParameters":{"id":19,"nodeType":"ParameterList","parameters":[],"src":"2209:0:0"},"scope":335,"src":"2151:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":26,"nodeType":"Block","src":"2290:7:0","statements":[]},"id":27,"implemented":true,"kind":"function","modifiers":[{"id":24,"kind":"modifierInvocation","modifierName":{"id":23,"name":"onlyInitializing","nameLocations":["2273:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":649,"src":"2273:16:0"},"nodeType":"ModifierInvocation","src":"2273:16:0"}],"name":"__AccessControl_init_unchained","nameLocation":"2231:30:0","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"2261:2:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"2290:0:0"},"scope":335,"src":"2222:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"canonicalName":"AccessControlUpgradeable.RoleData","id":34,"members":[{"constant":false,"id":31,"mutability":"mutable","name":"members","nameLocation":"2353:7:0","nodeType":"VariableDeclaration","scope":34,"src":"2328:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":30,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"2336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2328:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":29,"name":"bool","nodeType":"ElementaryTypeName","src":"2347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":33,"mutability":"mutable","name":"adminRole","nameLocation":"2378:9:0","nodeType":"VariableDeclaration","scope":34,"src":"2370:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2370:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2309:8:0","nodeType":"StructDefinition","scope":335,"src":"2302:92:0","visibility":"public"},{"constant":false,"id":39,"mutability":"mutable","name":"_roles","nameLocation":"2437:6:0","nodeType":"VariableDeclaration","scope":335,"src":"2400:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"typeName":{"id":38,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":35,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2408:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2400:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":37,"nodeType":"UserDefinedTypeName","pathNode":{"id":36,"name":"RoleData","nameLocations":["2419:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":34,"src":"2419:8:0"},"referencedDeclaration":34,"src":"2419:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$34_storage_ptr","typeString":"struct AccessControlUpgradeable.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":42,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2474:18:0","nodeType":"VariableDeclaration","scope":335,"src":"2450:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":40,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2450:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":41,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":52,"nodeType":"Block","src":"2918:44:0","statements":[{"expression":{"arguments":[{"id":48,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"2939:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":47,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[107,146],"referencedDeclaration":107,"src":"2928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2928:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":50,"nodeType":"ExpressionStatement","src":"2928:16:0"},{"id":51,"nodeType":"PlaceholderStatement","src":"2954:1:0"}]},"documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"2506:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":53,"name":"onlyRole","nameLocation":"2895:8:0","nodeType":"ModifierDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"role","nameLocation":"2912:4:0","nodeType":"VariableDeclaration","scope":53,"src":"2904:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":44,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2904:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2903:14:0"},"src":"2886:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[3890],"body":{"id":74,"nodeType":"Block","src":"3120:122:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"3137:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":64,"name":"IAccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"3157:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlUpgradeable_$408_$","typeString":"type(contract IAccessControlUpgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlUpgradeable_$408_$","typeString":"type(contract IAccessControlUpgradeable)"}],"id":63,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3152:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3152:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlUpgradeable_$408","typeString":"type(contract IAccessControlUpgradeable)"}},"id":66,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3184:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"3152:43:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3137:58:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":70,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"3223:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":68,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3199:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlUpgradeable_$335_$","typeString":"type(contract super AccessControlUpgradeable)"}},"id":69,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3205:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3890,"src":"3199:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":71,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3199:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3137:98:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":61,"id":73,"nodeType":"Return","src":"3130:105:0"}]},"documentation":{"id":54,"nodeType":"StructuredDocumentation","src":"2968:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":75,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3038:17:0","nodeType":"FunctionDefinition","overrides":{"id":58,"nodeType":"OverrideSpecifier","overrides":[],"src":"3096:8:0"},"parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"interfaceId","nameLocation":"3063:11:0","nodeType":"VariableDeclaration","scope":75,"src":"3056:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":55,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3056:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3055:20:0"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":75,"src":"3114:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":59,"name":"bool","nodeType":"ElementaryTypeName","src":"3114:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3113:6:0"},"scope":335,"src":"3029:213:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[375],"body":{"id":93,"nodeType":"Block","src":"3421:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":86,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"3438:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":88,"indexExpression":{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"3445:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3438:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$34_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":89,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3451:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":31,"src":"3438:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":91,"indexExpression":{"id":90,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3459:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3438:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":85,"id":92,"nodeType":"Return","src":"3431:36:0"}]},"documentation":{"id":76,"nodeType":"StructuredDocumentation","src":"3248:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":94,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3338:7:0","nodeType":"FunctionDefinition","overrides":{"id":82,"nodeType":"OverrideSpecifier","overrides":[],"src":"3397:8:0"},"parameters":{"id":81,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"role","nameLocation":"3354:4:0","nodeType":"VariableDeclaration","scope":94,"src":"3346:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":77,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3346:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":80,"mutability":"mutable","name":"account","nameLocation":"3368:7:0","nodeType":"VariableDeclaration","scope":94,"src":"3360:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":79,"name":"address","nodeType":"ElementaryTypeName","src":"3360:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3345:31:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":94,"src":"3415:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":83,"name":"bool","nodeType":"ElementaryTypeName","src":"3415:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3414:6:0"},"scope":335,"src":"3329:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":106,"nodeType":"Block","src":"3824:47:0","statements":[{"expression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3845:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":102,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"3851:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[107,146],"referencedDeclaration":146,"src":"3834:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3834:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":105,"nodeType":"ExpressionStatement","src":"3834:30:0"}]},"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"3480:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":107,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3777:10:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97,"mutability":"mutable","name":"role","nameLocation":"3796:4:0","nodeType":"VariableDeclaration","scope":107,"src":"3788:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":96,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3788:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3787:14:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3824:0:0"},"scope":335,"src":"3768:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":145,"nodeType":"Block","src":"4225:428:0","statements":[{"condition":{"id":119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4239:23:0","subExpression":{"arguments":[{"id":116,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"4248:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":117,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"4254:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":115,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"4240:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":144,"nodeType":"IfStatement","src":"4235:412:0","trueBody":{"id":143,"nodeType":"Block","src":"4264:383:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4372:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":128,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"4454:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":126,"name":"StringsUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"4423:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringsUpgradeable_$3202_$","typeString":"type(library StringsUpgradeable)"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4442:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"4423:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4423:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4488:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":135,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"4572:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4564:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":133,"name":"uint256","nodeType":"ElementaryTypeName","src":"4564:7:0","typeDescriptions":{}}},"id":136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4564:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4579:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":131,"name":"StringsUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"4533:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringsUpgradeable_$3202_$","typeString":"type(library StringsUpgradeable)"}},"id":132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4552:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":3156,"src":"4533:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4533:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":123,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4330:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4334:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"4330:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:274:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4302:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":121,"name":"string","nodeType":"ElementaryTypeName","src":"4302:6:0","typeDescriptions":{}}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:320:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":120,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"4278:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4278:358:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":142,"nodeType":"ExpressionStatement","src":"4278:358:0"}]}}]},"documentation":{"id":108,"nodeType":"StructuredDocumentation","src":"3877:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4161:10:0","nodeType":"FunctionDefinition","parameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":110,"mutability":"mutable","name":"role","nameLocation":"4180:4:0","nodeType":"VariableDeclaration","scope":146,"src":"4172:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":109,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4172:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":112,"mutability":"mutable","name":"account","nameLocation":"4194:7:0","nodeType":"VariableDeclaration","scope":146,"src":"4186:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"4186:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4171:31:0"},"returnParameters":{"id":114,"nodeType":"ParameterList","parameters":[],"src":"4225:0:0"},"scope":335,"src":"4152:501:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[383],"body":{"id":160,"nodeType":"Block","src":"4917:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":155,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"4934:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":157,"indexExpression":{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"4941:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4934:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$34_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4947:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":33,"src":"4934:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":154,"id":159,"nodeType":"Return","src":"4927:29:0"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"4659:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":161,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4843:12:0","nodeType":"FunctionDefinition","overrides":{"id":151,"nodeType":"OverrideSpecifier","overrides":[],"src":"4890:8:0"},"parameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"role","nameLocation":"4864:4:0","nodeType":"VariableDeclaration","scope":161,"src":"4856:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4856:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4855:14:0"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":161,"src":"4908:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4908:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4907:9:0"},"scope":335,"src":"4834:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[391],"body":{"id":180,"nodeType":"Block","src":"5362:42:0","statements":[{"expression":{"arguments":[{"id":176,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"5383:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":177,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"5389:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":175,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"5372:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5372:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":179,"nodeType":"ExpressionStatement","src":"5372:25:0"}]},"documentation":{"id":162,"nodeType":"StructuredDocumentation","src":"4969:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":181,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":171,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"5355:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":170,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"5342:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5342:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":173,"kind":"modifierInvocation","modifierName":{"id":169,"name":"onlyRole","nameLocations":["5333:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":53,"src":"5333:8:0"},"nodeType":"ModifierInvocation","src":"5333:28:0"}],"name":"grantRole","nameLocation":"5268:9:0","nodeType":"FunctionDefinition","overrides":{"id":168,"nodeType":"OverrideSpecifier","overrides":[],"src":"5324:8:0"},"parameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"role","nameLocation":"5286:4:0","nodeType":"VariableDeclaration","scope":181,"src":"5278:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5278:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"account","nameLocation":"5300:7:0","nodeType":"VariableDeclaration","scope":181,"src":"5292:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":165,"name":"address","nodeType":"ElementaryTypeName","src":"5292:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5277:31:0"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"5362:0:0"},"scope":335,"src":"5259:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[399],"body":{"id":200,"nodeType":"Block","src":"5788:43:0","statements":[{"expression":{"arguments":[{"id":196,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"5810:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":197,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"5816:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":195,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"5798:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5798:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":199,"nodeType":"ExpressionStatement","src":"5798:26:0"}]},"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"5410:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":201,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":191,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"5781:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":190,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"5768:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5768:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":193,"kind":"modifierInvocation","modifierName":{"id":189,"name":"onlyRole","nameLocations":["5759:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":53,"src":"5759:8:0"},"nodeType":"ModifierInvocation","src":"5759:28:0"}],"name":"revokeRole","nameLocation":"5693:10:0","nodeType":"FunctionDefinition","overrides":{"id":188,"nodeType":"OverrideSpecifier","overrides":[],"src":"5750:8:0"},"parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"role","nameLocation":"5712:4:0","nodeType":"VariableDeclaration","scope":201,"src":"5704:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5704:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"account","nameLocation":"5726:7:0","nodeType":"VariableDeclaration","scope":201,"src":"5718:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"5718:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5703:31:0"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"5788:0:0"},"scope":335,"src":"5684:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[407],"body":{"id":223,"nodeType":"Block","src":"6445:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":211,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"6463:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":212,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"6474:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6474:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6463:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6488:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":210,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6455:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6455:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":217,"nodeType":"ExpressionStatement","src":"6455:83:0"},{"expression":{"arguments":[{"id":219,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"6561:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":220,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"6567:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":218,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"6549:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6549:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":222,"nodeType":"ExpressionStatement","src":"6549:26:0"}]},"documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"5837:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":224,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6377:12:0","nodeType":"FunctionDefinition","overrides":{"id":208,"nodeType":"OverrideSpecifier","overrides":[],"src":"6436:8:0"},"parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"role","nameLocation":"6398:4:0","nodeType":"VariableDeclaration","scope":224,"src":"6390:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6390:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"account","nameLocation":"6412:7:0","nodeType":"VariableDeclaration","scope":224,"src":"6404:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"6404:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6389:31:0"},"returnParameters":{"id":209,"nodeType":"ParameterList","parameters":[],"src":"6445:0:0"},"scope":335,"src":"6368:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":237,"nodeType":"Block","src":"7335:42:0","statements":[{"expression":{"arguments":[{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"7356:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":234,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"7362:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":232,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"7345:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7345:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":236,"nodeType":"ExpressionStatement","src":"7345:25:0"}]},"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"6588:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":238,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"7276:10:0","nodeType":"FunctionDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"role","nameLocation":"7295:4:0","nodeType":"VariableDeclaration","scope":238,"src":"7287:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7287:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":229,"mutability":"mutable","name":"account","nameLocation":"7309:7:0","nodeType":"VariableDeclaration","scope":238,"src":"7301:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"7301:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7286:31:0"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[],"src":"7335:0:0"},"scope":335,"src":"7267:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":265,"nodeType":"Block","src":"7575:174:0","statements":[{"assignments":[247],"declarations":[{"constant":false,"id":247,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7593:17:0","nodeType":"VariableDeclaration","scope":265,"src":"7585:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7585:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[{"id":249,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"7626:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":248,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"7613:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7613:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7585:46:0"},{"expression":{"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":252,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"7641:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":254,"indexExpression":{"id":253,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"7648:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7641:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$34_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7654:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":33,"src":"7641:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":256,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"7666:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7641:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":258,"nodeType":"ExpressionStatement","src":"7641:34:0"},{"eventCall":{"arguments":[{"id":260,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"7707:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":261,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"7713:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":262,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"7732:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":259,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"7690:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7690:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":264,"nodeType":"EmitStatement","src":"7685:57:0"}]},"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"7383:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":266,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7511:13:0","nodeType":"FunctionDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"role","nameLocation":"7533:4:0","nodeType":"VariableDeclaration","scope":266,"src":"7525:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":240,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7525:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"adminRole","nameLocation":"7547:9:0","nodeType":"VariableDeclaration","scope":266,"src":"7539:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7539:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7524:33:0"},"returnParameters":{"id":245,"nodeType":"ParameterList","parameters":[],"src":"7575:0:0"},"scope":335,"src":"7502:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":297,"nodeType":"Block","src":"7985:165:0","statements":[{"condition":{"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7999:23:0","subExpression":{"arguments":[{"id":275,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"8008:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":276,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"8014:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":274,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"8000:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8000:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":296,"nodeType":"IfStatement","src":"7995:149:0","trueBody":{"id":295,"nodeType":"Block","src":"8024:120:0","statements":[{"expression":{"id":286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":279,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"8038:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":281,"indexExpression":{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"8045:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8038:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$34_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8051:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":31,"src":"8038:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":284,"indexExpression":{"id":283,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"8059:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8038:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8070:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8038:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":287,"nodeType":"ExpressionStatement","src":"8038:36:0"},{"eventCall":{"arguments":[{"id":289,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"8105:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":290,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"8111:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":291,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"8120:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8120:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":288,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"8093:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8093:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":294,"nodeType":"EmitStatement","src":"8088:45:0"}]}}]},"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"7755:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":298,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7926:10:0","nodeType":"FunctionDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"role","nameLocation":"7945:4:0","nodeType":"VariableDeclaration","scope":298,"src":"7937:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":268,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7937:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":271,"mutability":"mutable","name":"account","nameLocation":"7959:7:0","nodeType":"VariableDeclaration","scope":298,"src":"7951:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"7951:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7936:31:0"},"returnParameters":{"id":273,"nodeType":"ParameterList","parameters":[],"src":"7985:0:0"},"scope":335,"src":"7917:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":328,"nodeType":"Block","src":"8390:165:0","statements":[{"condition":{"arguments":[{"id":307,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"8412:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":308,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"8418:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":306,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"8404:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8404:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":327,"nodeType":"IfStatement","src":"8400:149:0","trueBody":{"id":326,"nodeType":"Block","src":"8428:121:0","statements":[{"expression":{"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":310,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"8442:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":312,"indexExpression":{"id":311,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"8449:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8442:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$34_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8455:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":31,"src":"8442:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":315,"indexExpression":{"id":314,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"8463:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8442:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8474:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8442:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":318,"nodeType":"ExpressionStatement","src":"8442:37:0"},{"eventCall":{"arguments":[{"id":320,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"8510:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":321,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"8516:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":322,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"8525:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8525:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":319,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"8498:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8498:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":325,"nodeType":"EmitStatement","src":"8493:45:0"}]}}]},"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"8156:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":329,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"8330:11:0","nodeType":"FunctionDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"role","nameLocation":"8350:4:0","nodeType":"VariableDeclaration","scope":329,"src":"8342:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8342:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"account","nameLocation":"8364:7:0","nodeType":"VariableDeclaration","scope":329,"src":"8356:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"8356:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8341:31:0"},"returnParameters":{"id":305,"nodeType":"ParameterList","parameters":[],"src":"8390:0:0"},"scope":335,"src":"8321:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"8561:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":334,"mutability":"mutable","name":"__gap","nameLocation":"8840:5:0","nodeType":"VariableDeclaration","scope":335,"src":"8820:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"8820:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":333,"length":{"hexValue":"3439","id":332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8828:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"8820:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":336,"src":"2019:6829:0","usedErrors":[],"usedEvents":[347,356,365,550]}],"src":"108:8741:0"},"id":0},"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","exportedSymbols":{"IAccessControlUpgradeable":[408]},"id":409,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":337,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControlUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":338,"nodeType":"StructuredDocumentation","src":"119:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":408,"linearizedBaseContracts":[408],"name":"IAccessControlUpgradeable","nameLocation":"219:25:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":339,"nodeType":"StructuredDocumentation","src":"251:292:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":347,"name":"RoleAdminChanged","nameLocation":"554:16:1","nodeType":"EventDefinition","parameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"587:4:1","nodeType":"VariableDeclaration","scope":347,"src":"571:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"571:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":343,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"609:17:1","nodeType":"VariableDeclaration","scope":347,"src":"593:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":342,"name":"bytes32","nodeType":"ElementaryTypeName","src":"593:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":345,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"644:12:1","nodeType":"VariableDeclaration","scope":347,"src":"628:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"628:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"570:87:1"},"src":"548:110:1"},{"anonymous":false,"documentation":{"id":348,"nodeType":"StructuredDocumentation","src":"664:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":356,"name":"RoleGranted","nameLocation":"887:11:1","nodeType":"EventDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":350,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"915:4:1","nodeType":"VariableDeclaration","scope":356,"src":"899:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":349,"name":"bytes32","nodeType":"ElementaryTypeName","src":"899:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":352,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"937:7:1","nodeType":"VariableDeclaration","scope":356,"src":"921:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":354,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"962:6:1","nodeType":"VariableDeclaration","scope":356,"src":"946:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"946:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"898:71:1"},"src":"881:89:1"},{"anonymous":false,"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"976:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":365,"name":"RoleRevoked","nameLocation":"1262:11:1","nodeType":"EventDefinition","parameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1290:4:1","nodeType":"VariableDeclaration","scope":365,"src":"1274:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1274:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":361,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1312:7:1","nodeType":"VariableDeclaration","scope":365,"src":"1296:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"1296:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":363,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1337:6:1","nodeType":"VariableDeclaration","scope":365,"src":"1321:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":362,"name":"address","nodeType":"ElementaryTypeName","src":"1321:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1273:71:1"},"src":"1256:89:1"},{"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"1351:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":375,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1441:7:1","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"role","nameLocation":"1457:4:1","nodeType":"VariableDeclaration","scope":375,"src":"1449:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1449:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"account","nameLocation":"1471:7:1","nodeType":"VariableDeclaration","scope":375,"src":"1463:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":369,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1448:31:1"},"returnParameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":375,"src":"1503:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":372,"name":"bool","nodeType":"ElementaryTypeName","src":"1503:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1502:6:1"},"scope":408,"src":"1432:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"1515:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":383,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1713:12:1","nodeType":"FunctionDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"role","nameLocation":"1734:4:1","nodeType":"VariableDeclaration","scope":383,"src":"1726:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1726:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1725:14:1"},"returnParameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":383,"src":"1763:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1763:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1762:9:1"},"scope":408,"src":"1704:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"1778:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":391,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2031:9:1","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"role","nameLocation":"2049:4:1","nodeType":"VariableDeclaration","scope":391,"src":"2041:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2041:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"account","nameLocation":"2063:7:1","nodeType":"VariableDeclaration","scope":391,"src":"2055:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"2055:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2040:31:1"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"2080:0:1"},"scope":408,"src":"2022:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"2087:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":399,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2324:10:1","nodeType":"FunctionDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"role","nameLocation":"2343:4:1","nodeType":"VariableDeclaration","scope":399,"src":"2335:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2335:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"account","nameLocation":"2357:7:1","nodeType":"VariableDeclaration","scope":399,"src":"2349:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"2349:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2334:31:1"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[],"src":"2374:0:1"},"scope":408,"src":"2315:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":400,"nodeType":"StructuredDocumentation","src":"2381:480:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":407,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2875:12:1","nodeType":"FunctionDefinition","parameters":{"id":405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"role","nameLocation":"2896:4:1","nodeType":"VariableDeclaration","scope":407,"src":"2888:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":401,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2888:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":404,"mutability":"mutable","name":"account","nameLocation":"2910:7:1","nodeType":"VariableDeclaration","scope":407,"src":"2902:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":403,"name":"address","nodeType":"ElementaryTypeName","src":"2902:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2887:31:1"},"returnParameters":{"id":406,"nodeType":"ParameterList","parameters":[],"src":"2927:0:1"},"scope":408,"src":"2866:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":409,"src":"209:2721:1","usedErrors":[],"usedEvents":[347,356,365]}],"src":"94:2837:1"},"id":1},"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol","exportedSymbols":{"IVotesUpgradeable":[486]},"id":487,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":410,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotesUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"135:132:2","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n _Available since v4.5._"},"fullyImplemented":false,"id":486,"linearizedBaseContracts":[486],"name":"IVotesUpgradeable","nameLocation":"278:17:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"302:71:2","text":" @dev Emitted when an account changes their delegate."},"eventSelector":"3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f","id":420,"name":"DelegateChanged","nameLocation":"384:15:2","nodeType":"EventDefinition","parameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":414,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"416:9:2","nodeType":"VariableDeclaration","scope":420,"src":"400:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"400:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":416,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"443:12:2","nodeType":"VariableDeclaration","scope":420,"src":"427:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":415,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":418,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"473:10:2","nodeType":"VariableDeclaration","scope":420,"src":"457:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"457:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"399:85:2"},"src":"378:107:2"},{"anonymous":false,"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"491:124:2","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes."},"eventSelector":"dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724","id":429,"name":"DelegateVotesChanged","nameLocation":"626:20:2","nodeType":"EventDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"663:8:2","nodeType":"VariableDeclaration","scope":429,"src":"647:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"647:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":425,"indexed":false,"mutability":"mutable","name":"previousBalance","nameLocation":"681:15:2","nodeType":"VariableDeclaration","scope":429,"src":"673:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":424,"name":"uint256","nodeType":"ElementaryTypeName","src":"673:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":427,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"706:10:2","nodeType":"VariableDeclaration","scope":429,"src":"698:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":426,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:71:2"},"src":"620:98:2"},{"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"724:79:2","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":437,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"817:8:2","nodeType":"FunctionDefinition","parameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":432,"mutability":"mutable","name":"account","nameLocation":"834:7:2","nodeType":"VariableDeclaration","scope":437,"src":"826:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"825:17:2"},"returnParameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":437,"src":"866:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":434,"name":"uint256","nodeType":"ElementaryTypeName","src":"866:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"865:9:2"},"scope":486,"src":"808:67:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"881:230:2","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block."},"functionSelector":"3a46b1a8","id":447,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"1125:12:2","nodeType":"FunctionDefinition","parameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"mutability":"mutable","name":"account","nameLocation":"1146:7:2","nodeType":"VariableDeclaration","scope":447,"src":"1138:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":439,"name":"address","nodeType":"ElementaryTypeName","src":"1138:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":442,"mutability":"mutable","name":"timepoint","nameLocation":"1163:9:2","nodeType":"VariableDeclaration","scope":447,"src":"1155:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"1155:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1137:36:2"},"returnParameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":447,"src":"1197:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":444,"name":"uint256","nodeType":"ElementaryTypeName","src":"1197:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1196:9:2"},"scope":486,"src":"1116:90:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":448,"nodeType":"StructuredDocumentation","src":"1212:481:2","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":455,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1707:18:2","nodeType":"FunctionDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"timepoint","nameLocation":"1734:9:2","nodeType":"VariableDeclaration","scope":455,"src":"1726:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":449,"name":"uint256","nodeType":"ElementaryTypeName","src":"1726:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1725:19:2"},"returnParameters":{"id":454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":455,"src":"1768:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":452,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1767:9:2"},"scope":486,"src":"1698:79:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":456,"nodeType":"StructuredDocumentation","src":"1783:71:2","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":463,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1868:9:2","nodeType":"FunctionDefinition","parameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":458,"mutability":"mutable","name":"account","nameLocation":"1886:7:2","nodeType":"VariableDeclaration","scope":463,"src":"1878:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":457,"name":"address","nodeType":"ElementaryTypeName","src":"1878:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1877:17:2"},"returnParameters":{"id":462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":463,"src":"1918:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"1918:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1917:9:2"},"scope":486,"src":"1859:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"1933:71:2","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":469,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"2018:8:2","nodeType":"FunctionDefinition","parameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"mutability":"mutable","name":"delegatee","nameLocation":"2035:9:2","nodeType":"VariableDeclaration","scope":469,"src":"2027:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":465,"name":"address","nodeType":"ElementaryTypeName","src":"2027:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2026:19:2"},"returnParameters":{"id":468,"nodeType":"ParameterList","parameters":[],"src":"2054:0:2"},"scope":486,"src":"2009:46:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":470,"nodeType":"StructuredDocumentation","src":"2061:67:2","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":485,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"2142:13:2","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"delegatee","nameLocation":"2164:9:2","nodeType":"VariableDeclaration","scope":485,"src":"2156:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"2156:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":474,"mutability":"mutable","name":"nonce","nameLocation":"2183:5:2","nodeType":"VariableDeclaration","scope":485,"src":"2175:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":473,"name":"uint256","nodeType":"ElementaryTypeName","src":"2175:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":476,"mutability":"mutable","name":"expiry","nameLocation":"2198:6:2","nodeType":"VariableDeclaration","scope":485,"src":"2190:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":475,"name":"uint256","nodeType":"ElementaryTypeName","src":"2190:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":478,"mutability":"mutable","name":"v","nameLocation":"2212:1:2","nodeType":"VariableDeclaration","scope":485,"src":"2206:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":477,"name":"uint8","nodeType":"ElementaryTypeName","src":"2206:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"r","nameLocation":"2223:1:2","nodeType":"VariableDeclaration","scope":485,"src":"2215:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2215:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"s","nameLocation":"2234:1:2","nodeType":"VariableDeclaration","scope":485,"src":"2226:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":481,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2226:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2155:81:2"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"2245:0:2"},"scope":486,"src":"2133:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":487,"src":"268:1980:2","usedErrors":[],"usedEvents":[420,429]}],"src":"110:2139:2"},"id":2},"@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol","exportedSymbols":{"IERC5267Upgradeable":[511]},"id":512,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":488,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267Upgradeable","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":511,"linearizedBaseContracts":[511],"name":"IERC5267Upgradeable","nameLocation":"142:19:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"168:84:3","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":491,"name":"EIP712DomainChanged","nameLocation":"263:19:3","nodeType":"EventDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"282:2:3"},"src":"257:28:3"},{"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"291:140:3","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":510,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"445:12:3","nodeType":"FunctionDefinition","parameters":{"id":493,"nodeType":"ParameterList","parameters":[],"src":"457:2:3"},"returnParameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":495,"mutability":"mutable","name":"fields","nameLocation":"527:6:3","nodeType":"VariableDeclaration","scope":510,"src":"520:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":494,"name":"bytes1","nodeType":"ElementaryTypeName","src":"520:6:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":497,"mutability":"mutable","name":"name","nameLocation":"561:4:3","nodeType":"VariableDeclaration","scope":510,"src":"547:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":496,"name":"string","nodeType":"ElementaryTypeName","src":"547:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":499,"mutability":"mutable","name":"version","nameLocation":"593:7:3","nodeType":"VariableDeclaration","scope":510,"src":"579:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":498,"name":"string","nodeType":"ElementaryTypeName","src":"579:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":501,"mutability":"mutable","name":"chainId","nameLocation":"622:7:3","nodeType":"VariableDeclaration","scope":510,"src":"614:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":500,"name":"uint256","nodeType":"ElementaryTypeName","src":"614:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":503,"mutability":"mutable","name":"verifyingContract","nameLocation":"651:17:3","nodeType":"VariableDeclaration","scope":510,"src":"643:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"643:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"salt","nameLocation":"690:4:3","nodeType":"VariableDeclaration","scope":510,"src":"682:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"682:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":508,"mutability":"mutable","name":"extensions","nameLocation":"725:10:3","nodeType":"VariableDeclaration","scope":510,"src":"708:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":506,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":507,"nodeType":"ArrayTypeName","src":"708:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"506:239:3"},"scope":511,"src":"436:310:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":512,"src":"132:616:3","usedErrors":[],"usedEvents":[491]}],"src":"107:642:3"},"id":3},"@openzeppelin/contracts-upgradeable/interfaces/IERC5805Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC5805Upgradeable.sol","exportedSymbols":{"IERC5805Upgradeable":[520],"IERC6372Upgradeable":[535],"IVotesUpgradeable":[486]},"id":521,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":513,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol","file":"../governance/utils/IVotesUpgradeable.sol","id":514,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":521,"sourceUnit":487,"src":"132:51:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC6372Upgradeable.sol","file":"./IERC6372Upgradeable.sol","id":515,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":521,"sourceUnit":536,"src":"184:35:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":516,"name":"IERC6372Upgradeable","nameLocations":["254:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":535,"src":"254:19:4"},"id":517,"nodeType":"InheritanceSpecifier","src":"254:19:4"},{"baseName":{"id":518,"name":"IVotesUpgradeable","nameLocations":["275:17:4"],"nodeType":"IdentifierPath","referencedDeclaration":486,"src":"275:17:4"},"id":519,"nodeType":"InheritanceSpecifier","src":"275:17:4"}],"canonicalName":"IERC5805Upgradeable","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":520,"linearizedBaseContracts":[520,486,535],"name":"IERC5805Upgradeable","nameLocation":"231:19:4","nodeType":"ContractDefinition","nodes":[],"scope":521,"src":"221:74:4","usedErrors":[],"usedEvents":[420,429]}],"src":"107:189:4"},"id":4},"@openzeppelin/contracts-upgradeable/interfaces/IERC6372Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC6372Upgradeable.sol","exportedSymbols":{"IERC6372Upgradeable":[535]},"id":536,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":522,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6372Upgradeable","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":535,"linearizedBaseContracts":[535],"name":"IERC6372Upgradeable","nameLocation":"142:19:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"168:133:5","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":528,"implemented":false,"kind":"function","modifiers":[],"name":"clock","nameLocation":"315:5:5","nodeType":"FunctionDefinition","parameters":{"id":524,"nodeType":"ParameterList","parameters":[],"src":"320:2:5"},"returnParameters":{"id":527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":528,"src":"346:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":525,"name":"uint48","nodeType":"ElementaryTypeName","src":"346:6:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"345:8:5"},"scope":535,"src":"306:48:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"360:48:5","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":534,"implemented":false,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"475:10:5","nodeType":"FunctionDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[],"src":"485:2:5"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":534,"src":"511:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":531,"name":"string","nodeType":"ElementaryTypeName","src":"511:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"510:15:5"},"scope":535,"src":"466:60:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":536,"src":"132:396:5","usedErrors":[],"usedEvents":[]}],"src":"107:422:5"},"id":5},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[2857],"Initializable":[704]},"id":705,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":537,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":538,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":705,"sourceUnit":2858,"src":"138:44:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"184:2209:6","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":704,"linearizedBaseContracts":[704],"name":"Initializable","nameLocation":"2412:13:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":540,"nodeType":"StructuredDocumentation","src":"2432:109:6","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":542,"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:6","nodeType":"VariableDeclaration","scope":704,"src":"2546:26:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":541,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"2579:91:6","text":" @dev Indicates that the contract is in the process of being initialized."},"id":545,"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:6","nodeType":"VariableDeclaration","scope":704,"src":"2675:26:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":544,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":546,"nodeType":"StructuredDocumentation","src":"2708:90:6","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":550,"name":"Initialized","nameLocation":"2809:11:6","nodeType":"EventDefinition","parameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":548,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:6","nodeType":"VariableDeclaration","scope":550,"src":"2821:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":547,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:6"},"src":"2803:33:6"},{"body":{"id":605,"nodeType":"Block","src":"3269:483:6","statements":[{"assignments":[554],"declarations":[{"constant":false,"id":554,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:6","nodeType":"VariableDeclaration","scope":605,"src":"3279:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":553,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":557,"initialValue":{"id":556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:6","subExpression":{"id":555,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"3302:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":559,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3347:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":560,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"3365:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":564,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:6","subExpression":{"arguments":[{"arguments":[{"id":569,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$704","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$704","typeString":"contract Initializable"}],"id":568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:6","typeDescriptions":{}}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":565,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"3388:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2857_$","typeString":"type(library AddressUpgradeable)"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:10:6","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2545,"src":"3388:29:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":573,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"3436:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":577,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":558,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:201:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"ExpressionStatement","src":"3325:201:6"},{"expression":{"id":584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":582,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"3536:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":585,"nodeType":"ExpressionStatement","src":"3536:16:6"},{"condition":{"id":586,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3566:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":592,"nodeType":"IfStatement","src":"3562:65:6","trueBody":{"id":591,"nodeType":"Block","src":"3582:45:6","statements":[{"expression":{"id":589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":587,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"3596:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":590,"nodeType":"ExpressionStatement","src":"3596:20:6"}]}},{"id":593,"nodeType":"PlaceholderStatement","src":"3636:1:6"},{"condition":{"id":594,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3651:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":604,"nodeType":"IfStatement","src":"3647:99:6","trueBody":{"id":603,"nodeType":"Block","src":"3667:79:6","statements":[{"expression":{"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":595,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"3681:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":598,"nodeType":"ExpressionStatement","src":"3681:21:6"},{"eventCall":{"arguments":[{"hexValue":"31","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":599,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"3721:11:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":602,"nodeType":"EmitStatement","src":"3716:19:6"}]}}]},"documentation":{"id":551,"nodeType":"StructuredDocumentation","src":"2842:399:6","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":606,"name":"initializer","nameLocation":"3255:11:6","nodeType":"ModifierDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[],"src":"3266:2:6"},"src":"3246:506:6","virtual":false,"visibility":"internal"},{"body":{"id":638,"nodeType":"Block","src":"4863:255:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:6","subExpression":{"id":612,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"4882:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":614,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"4899:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":615,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"4914:7:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":611,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4873:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:99:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":620,"nodeType":"ExpressionStatement","src":"4873:99:6"},{"expression":{"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":621,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"4982:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":622,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"4997:7:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":624,"nodeType":"ExpressionStatement","src":"4982:22:6"},{"expression":{"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":625,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"5014:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":628,"nodeType":"ExpressionStatement","src":"5014:20:6"},{"id":629,"nodeType":"PlaceholderStatement","src":"5044:1:6"},{"expression":{"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":630,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"5055:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":633,"nodeType":"ExpressionStatement","src":"5055:21:6"},{"eventCall":{"arguments":[{"id":635,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"5103:7:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":634,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"5091:11:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":637,"nodeType":"EmitStatement","src":"5086:25:6"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"3758:1062:6","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":639,"name":"reinitializer","nameLocation":"4834:13:6","nodeType":"ModifierDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"version","nameLocation":"4854:7:6","nodeType":"VariableDeclaration","scope":639,"src":"4848:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":608,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:6"},"src":"4825:293:6","virtual":false,"visibility":"internal"},{"body":{"id":648,"nodeType":"Block","src":"5356:97:6","statements":[{"expression":{"arguments":[{"id":643,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"5374:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":642,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":646,"nodeType":"ExpressionStatement","src":"5366:69:6"},{"id":647,"nodeType":"PlaceholderStatement","src":"5445:1:6"}]},"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"5124:199:6","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":649,"name":"onlyInitializing","nameLocation":"5337:16:6","nodeType":"ModifierDefinition","parameters":{"id":641,"nodeType":"ParameterList","parameters":[],"src":"5353:2:6"},"src":"5328:125:6","virtual":false,"visibility":"internal"},{"body":{"id":684,"nodeType":"Block","src":"5988:231:6","statements":[{"expression":{"arguments":[{"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:6","subExpression":{"id":654,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"6007:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":653,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5998:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:66:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":658,"nodeType":"ExpressionStatement","src":"5998:66:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":659,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"6078:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":661,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":660,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6106:3:6","memberName":"max","nodeType":"MemberAccess","src":"6094:15:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":683,"nodeType":"IfStatement","src":"6074:139:6","trueBody":{"id":682,"nodeType":"Block","src":"6111:102:6","statements":[{"expression":{"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":666,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"6125:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":668,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":667,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6152:3:6","memberName":"max","nodeType":"MemberAccess","src":"6140:15:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":673,"nodeType":"ExpressionStatement","src":"6125:30:6"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":676,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":675,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6198:3:6","memberName":"max","nodeType":"MemberAccess","src":"6186:15:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":674,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"6174:11:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":681,"nodeType":"EmitStatement","src":"6169:33:6"}]}}]},"documentation":{"id":650,"nodeType":"StructuredDocumentation","src":"5459:475:6","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":685,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:6","nodeType":"FunctionDefinition","parameters":{"id":651,"nodeType":"ParameterList","parameters":[],"src":"5968:2:6"},"returnParameters":{"id":652,"nodeType":"ParameterList","parameters":[],"src":"5988:0:6"},"scope":704,"src":"5939:280:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":693,"nodeType":"Block","src":"6393:36:6","statements":[{"expression":{"id":691,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"6410:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":690,"id":692,"nodeType":"Return","src":"6403:19:6"}]},"documentation":{"id":686,"nodeType":"StructuredDocumentation","src":"6225:99:6","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":694,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:6","nodeType":"FunctionDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"6360:2:6"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":694,"src":"6386:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":688,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:6"},"scope":704,"src":"6329:100:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":702,"nodeType":"Block","src":"6601:37:6","statements":[{"expression":{"id":700,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"6618:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":699,"id":701,"nodeType":"Return","src":"6611:20:6"}]},"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"6435:105:6","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":703,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:6","nodeType":"FunctionDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[],"src":"6569:2:6"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":703,"src":"6595:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":697,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:6"},"scope":704,"src":"6545:93:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":705,"src":"2394:4246:6","usedErrors":[],"usedEvents":[550]}],"src":"113:6528:6"},"id":6},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2857],"ContextUpgradeable":[2899],"Initializable":[704],"PausableUpgradeable":[831]},"id":832,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":706,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":707,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":832,"sourceUnit":2900,"src":"130:41:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":708,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":832,"sourceUnit":705,"src":"172:42:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":710,"name":"Initializable","nameLocations":["697:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"697:13:7"},"id":711,"nodeType":"InheritanceSpecifier","src":"697:13:7"},{"baseName":{"id":712,"name":"ContextUpgradeable","nameLocations":["712:18:7"],"nodeType":"IdentifierPath","referencedDeclaration":2899,"src":"712:18:7"},"id":713,"nodeType":"InheritanceSpecifier","src":"712:18:7"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":709,"nodeType":"StructuredDocumentation","src":"216:439:7","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":831,"linearizedBaseContracts":[831,2899,704],"name":"PausableUpgradeable","nameLocation":"674:19:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":714,"nodeType":"StructuredDocumentation","src":"737:73:7","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":718,"name":"Paused","nameLocation":"821:6:7","nodeType":"EventDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"836:7:7","nodeType":"VariableDeclaration","scope":718,"src":"828:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"828:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"827:17:7"},"src":"815:30:7"},{"anonymous":false,"documentation":{"id":719,"nodeType":"StructuredDocumentation","src":"851:70:7","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":723,"name":"Unpaused","nameLocation":"932:8:7","nodeType":"EventDefinition","parameters":{"id":722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":721,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"949:7:7","nodeType":"VariableDeclaration","scope":723,"src":"941:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"941:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"940:17:7"},"src":"926:32:7"},{"constant":false,"id":725,"mutability":"mutable","name":"_paused","nameLocation":"977:7:7","nodeType":"VariableDeclaration","scope":831,"src":"964:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":724,"name":"bool","nodeType":"ElementaryTypeName","src":"964:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":734,"nodeType":"Block","src":"1116:44:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":731,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"1126:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1126:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":733,"nodeType":"ExpressionStatement","src":"1126:27:7"}]},"documentation":{"id":726,"nodeType":"StructuredDocumentation","src":"991:67:7","text":" @dev Initializes the contract in unpaused state."},"id":735,"implemented":true,"kind":"function","modifiers":[{"id":729,"kind":"modifierInvocation","modifierName":{"id":728,"name":"onlyInitializing","nameLocations":["1099:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":649,"src":"1099:16:7"},"nodeType":"ModifierInvocation","src":"1099:16:7"}],"name":"__Pausable_init","nameLocation":"1072:15:7","nodeType":"FunctionDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[],"src":"1087:2:7"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[],"src":"1116:0:7"},"scope":831,"src":"1063:97:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":744,"nodeType":"Block","src":"1229:32:7","statements":[{"expression":{"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":740,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"1239:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1249:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1239:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":743,"nodeType":"ExpressionStatement","src":"1239:15:7"}]},"id":745,"implemented":true,"kind":"function","modifiers":[{"id":738,"kind":"modifierInvocation","modifierName":{"id":737,"name":"onlyInitializing","nameLocations":["1212:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":649,"src":"1212:16:7"},"nodeType":"ModifierInvocation","src":"1212:16:7"}],"name":"__Pausable_init_unchained","nameLocation":"1175:25:7","nodeType":"FunctionDefinition","parameters":{"id":736,"nodeType":"ParameterList","parameters":[],"src":"1200:2:7"},"returnParameters":{"id":739,"nodeType":"ParameterList","parameters":[],"src":"1229:0:7"},"scope":831,"src":"1166:95:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":752,"nodeType":"Block","src":"1472:47:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":748,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"1482:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1482:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":750,"nodeType":"ExpressionStatement","src":"1482:19:7"},{"id":751,"nodeType":"PlaceholderStatement","src":"1511:1:7"}]},"documentation":{"id":746,"nodeType":"StructuredDocumentation","src":"1267:175:7","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":753,"name":"whenNotPaused","nameLocation":"1456:13:7","nodeType":"ModifierDefinition","parameters":{"id":747,"nodeType":"ParameterList","parameters":[],"src":"1469:2:7"},"src":"1447:72:7","virtual":false,"visibility":"internal"},{"body":{"id":760,"nodeType":"Block","src":"1719:44:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":756,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"1729:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1729:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"ExpressionStatement","src":"1729:16:7"},{"id":759,"nodeType":"PlaceholderStatement","src":"1755:1:7"}]},"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"1525:167:7","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":761,"name":"whenPaused","nameLocation":"1706:10:7","nodeType":"ModifierDefinition","parameters":{"id":755,"nodeType":"ParameterList","parameters":[],"src":"1716:2:7"},"src":"1697:66:7","virtual":false,"visibility":"internal"},{"body":{"id":769,"nodeType":"Block","src":"1911:31:7","statements":[{"expression":{"id":767,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"1928:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":766,"id":768,"nodeType":"Return","src":"1921:14:7"}]},"documentation":{"id":762,"nodeType":"StructuredDocumentation","src":"1769:84:7","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":770,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1867:6:7","nodeType":"FunctionDefinition","parameters":{"id":763,"nodeType":"ParameterList","parameters":[],"src":"1873:2:7"},"returnParameters":{"id":766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":770,"src":"1905:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":764,"name":"bool","nodeType":"ElementaryTypeName","src":"1905:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1904:6:7"},"scope":831,"src":"1858:84:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":781,"nodeType":"Block","src":"2061:55:7","statements":[{"expression":{"arguments":[{"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2079:9:7","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":775,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"2080:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2080:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2090:18:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":774,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2071:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2071:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":780,"nodeType":"ExpressionStatement","src":"2071:38:7"}]},"documentation":{"id":771,"nodeType":"StructuredDocumentation","src":"1948:57:7","text":" @dev Throws if the contract is paused."},"id":782,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2019:17:7","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[],"src":"2036:2:7"},"returnParameters":{"id":773,"nodeType":"ParameterList","parameters":[],"src":"2061:0:7"},"scope":831,"src":"2010:106:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":792,"nodeType":"Block","src":"2236:58:7","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":787,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"2254:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2254:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2264:22:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":786,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2246:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":791,"nodeType":"ExpressionStatement","src":"2246:41:7"}]},"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"2122:61:7","text":" @dev Throws if the contract is not paused."},"id":793,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2197:14:7","nodeType":"FunctionDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"2211:2:7"},"returnParameters":{"id":785,"nodeType":"ParameterList","parameters":[],"src":"2236:0:7"},"scope":831,"src":"2188:106:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":808,"nodeType":"Block","src":"2478:66:7","statements":[{"expression":{"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":799,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"2488:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2498:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2488:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":802,"nodeType":"ExpressionStatement","src":"2488:14:7"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":804,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"2524:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2524:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":803,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"2517:6:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":807,"nodeType":"EmitStatement","src":"2512:25:7"}]},"documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"2300:124:7","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":809,"implemented":true,"kind":"function","modifiers":[{"id":797,"kind":"modifierInvocation","modifierName":{"id":796,"name":"whenNotPaused","nameLocations":["2464:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":753,"src":"2464:13:7"},"nodeType":"ModifierInvocation","src":"2464:13:7"}],"name":"_pause","nameLocation":"2438:6:7","nodeType":"FunctionDefinition","parameters":{"id":795,"nodeType":"ParameterList","parameters":[],"src":"2444:2:7"},"returnParameters":{"id":798,"nodeType":"ParameterList","parameters":[],"src":"2478:0:7"},"scope":831,"src":"2429:115:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":824,"nodeType":"Block","src":"2724:69:7","statements":[{"expression":{"id":817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":815,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"2734:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2744:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2734:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":818,"nodeType":"ExpressionStatement","src":"2734:15:7"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":820,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"2773:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2773:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":819,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"2764:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2764:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":823,"nodeType":"EmitStatement","src":"2759:27:7"}]},"documentation":{"id":810,"nodeType":"StructuredDocumentation","src":"2550:121:7","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":825,"implemented":true,"kind":"function","modifiers":[{"id":813,"kind":"modifierInvocation","modifierName":{"id":812,"name":"whenPaused","nameLocations":["2713:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":761,"src":"2713:10:7"},"nodeType":"ModifierInvocation","src":"2713:10:7"}],"name":"_unpause","nameLocation":"2685:8:7","nodeType":"FunctionDefinition","parameters":{"id":811,"nodeType":"ParameterList","parameters":[],"src":"2693:2:7"},"returnParameters":{"id":814,"nodeType":"ParameterList","parameters":[],"src":"2724:0:7"},"scope":831,"src":"2676:117:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":826,"nodeType":"StructuredDocumentation","src":"2799:254:7","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":830,"mutability":"mutable","name":"__gap","nameLocation":"3078:5:7","nodeType":"VariableDeclaration","scope":831,"src":"3058:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"3058:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":829,"length":{"hexValue":"3439","id":828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3066:2:7","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3058:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":832,"src":"656:2430:7","usedErrors":[],"usedEvents":[550,718,723]}],"src":"105:2982:7"},"id":7},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2857],"ContextUpgradeable":[2899],"ERC20Upgradeable":[1443],"IERC20MetadataUpgradeable":[2491],"IERC20Upgradeable":[1521],"Initializable":[704]},"id":1444,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":833,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:8"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"./IERC20Upgradeable.sol","id":834,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1444,"sourceUnit":1522,"src":"130:33:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","file":"./extensions/IERC20MetadataUpgradeable.sol","id":835,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1444,"sourceUnit":2492,"src":"164:52:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":836,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1444,"sourceUnit":2900,"src":"217:44:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":837,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1444,"sourceUnit":705,"src":"262:45:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":839,"name":"Initializable","nameLocations":["1640:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"1640:13:8"},"id":840,"nodeType":"InheritanceSpecifier","src":"1640:13:8"},{"baseName":{"id":841,"name":"ContextUpgradeable","nameLocations":["1655:18:8"],"nodeType":"IdentifierPath","referencedDeclaration":2899,"src":"1655:18:8"},"id":842,"nodeType":"InheritanceSpecifier","src":"1655:18:8"},{"baseName":{"id":843,"name":"IERC20Upgradeable","nameLocations":["1675:17:8"],"nodeType":"IdentifierPath","referencedDeclaration":1521,"src":"1675:17:8"},"id":844,"nodeType":"InheritanceSpecifier","src":"1675:17:8"},{"baseName":{"id":845,"name":"IERC20MetadataUpgradeable","nameLocations":["1694:25:8"],"nodeType":"IdentifierPath","referencedDeclaration":2491,"src":"1694:25:8"},"id":846,"nodeType":"InheritanceSpecifier","src":"1694:25:8"}],"canonicalName":"ERC20Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":838,"nodeType":"StructuredDocumentation","src":"309:1301:8","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1443,"linearizedBaseContracts":[1443,2491,1521,2899,704],"name":"ERC20Upgradeable","nameLocation":"1620:16:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":850,"mutability":"mutable","name":"_balances","nameLocation":"1762:9:8","nodeType":"VariableDeclaration","scope":1443,"src":"1726:45:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":849,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":847,"name":"address","nodeType":"ElementaryTypeName","src":"1734:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1726:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"1745:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":856,"mutability":"mutable","name":"_allowances","nameLocation":"1834:11:8","nodeType":"VariableDeclaration","scope":1443,"src":"1778:67:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":855,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"1786:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1778:47:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":854,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"1805:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1797:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":853,"name":"uint256","nodeType":"ElementaryTypeName","src":"1816:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":858,"mutability":"mutable","name":"_totalSupply","nameLocation":"1868:12:8","nodeType":"VariableDeclaration","scope":1443,"src":"1852:28:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":857,"name":"uint256","nodeType":"ElementaryTypeName","src":"1852:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":860,"mutability":"mutable","name":"_name","nameLocation":"1902:5:8","nodeType":"VariableDeclaration","scope":1443,"src":"1887:20:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":859,"name":"string","nodeType":"ElementaryTypeName","src":"1887:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":862,"mutability":"mutable","name":"_symbol","nameLocation":"1928:7:8","nodeType":"VariableDeclaration","scope":1443,"src":"1913:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":861,"name":"string","nodeType":"ElementaryTypeName","src":"1913:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":877,"nodeType":"Block","src":"2210:55:8","statements":[{"expression":{"arguments":[{"id":873,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"2243:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":874,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"2250:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":872,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"2220:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2220:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":876,"nodeType":"ExpressionStatement","src":"2220:38:8"}]},"documentation":{"id":863,"nodeType":"StructuredDocumentation","src":"1942:171:8","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":878,"implemented":true,"kind":"function","modifiers":[{"id":870,"kind":"modifierInvocation","modifierName":{"id":869,"name":"onlyInitializing","nameLocations":["2193:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":649,"src":"2193:16:8"},"nodeType":"ModifierInvocation","src":"2193:16:8"}],"name":"__ERC20_init","nameLocation":"2127:12:8","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"name_","nameLocation":"2154:5:8","nodeType":"VariableDeclaration","scope":878,"src":"2140:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":864,"name":"string","nodeType":"ElementaryTypeName","src":"2140:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"symbol_","nameLocation":"2175:7:8","nodeType":"VariableDeclaration","scope":878,"src":"2161:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":866,"name":"string","nodeType":"ElementaryTypeName","src":"2161:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2139:44:8"},"returnParameters":{"id":871,"nodeType":"ParameterList","parameters":[],"src":"2210:0:8"},"scope":1443,"src":"2118:147:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":895,"nodeType":"Block","src":"2373:57:8","statements":[{"expression":{"id":889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":887,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"2383:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":888,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"2391:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2383:13:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":890,"nodeType":"ExpressionStatement","src":"2383:13:8"},{"expression":{"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":891,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"2406:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":892,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"2416:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2406:17:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":894,"nodeType":"ExpressionStatement","src":"2406:17:8"}]},"id":896,"implemented":true,"kind":"function","modifiers":[{"id":885,"kind":"modifierInvocation","modifierName":{"id":884,"name":"onlyInitializing","nameLocations":["2356:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":649,"src":"2356:16:8"},"nodeType":"ModifierInvocation","src":"2356:16:8"}],"name":"__ERC20_init_unchained","nameLocation":"2280:22:8","nodeType":"FunctionDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"name_","nameLocation":"2317:5:8","nodeType":"VariableDeclaration","scope":896,"src":"2303:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":879,"name":"string","nodeType":"ElementaryTypeName","src":"2303:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"symbol_","nameLocation":"2338:7:8","nodeType":"VariableDeclaration","scope":896,"src":"2324:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":881,"name":"string","nodeType":"ElementaryTypeName","src":"2324:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2302:44:8"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[],"src":"2373:0:8"},"scope":1443,"src":"2271:159:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2478],"body":{"id":905,"nodeType":"Block","src":"2564:29:8","statements":[{"expression":{"id":903,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"2581:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":902,"id":904,"nodeType":"Return","src":"2574:12:8"}]},"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"2436:54:8","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":906,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2504:4:8","nodeType":"FunctionDefinition","overrides":{"id":899,"nodeType":"OverrideSpecifier","overrides":[],"src":"2531:8:8"},"parameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"2508:2:8"},"returnParameters":{"id":902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":906,"src":"2549:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":900,"name":"string","nodeType":"ElementaryTypeName","src":"2549:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2548:15:8"},"scope":1443,"src":"2495:98:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2484],"body":{"id":915,"nodeType":"Block","src":"2777:31:8","statements":[{"expression":{"id":913,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"2794:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":912,"id":914,"nodeType":"Return","src":"2787:14:8"}]},"documentation":{"id":907,"nodeType":"StructuredDocumentation","src":"2599:102:8","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":916,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2715:6:8","nodeType":"FunctionDefinition","overrides":{"id":909,"nodeType":"OverrideSpecifier","overrides":[],"src":"2744:8:8"},"parameters":{"id":908,"nodeType":"ParameterList","parameters":[],"src":"2721:2:8"},"returnParameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":916,"src":"2762:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":910,"name":"string","nodeType":"ElementaryTypeName","src":"2762:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2761:15:8"},"scope":1443,"src":"2706:102:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2490],"body":{"id":925,"nodeType":"Block","src":"3506:26:8","statements":[{"expression":{"hexValue":"3138","id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3523:2:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":922,"id":924,"nodeType":"Return","src":"3516:9:8"}]},"documentation":{"id":917,"nodeType":"StructuredDocumentation","src":"2814:622:8","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":926,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3450:8:8","nodeType":"FunctionDefinition","overrides":{"id":919,"nodeType":"OverrideSpecifier","overrides":[],"src":"3481:8:8"},"parameters":{"id":918,"nodeType":"ParameterList","parameters":[],"src":"3458:2:8"},"returnParameters":{"id":922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":926,"src":"3499:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":920,"name":"uint8","nodeType":"ElementaryTypeName","src":"3499:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3498:7:8"},"scope":1443,"src":"3441:91:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1470],"body":{"id":935,"nodeType":"Block","src":"3662:36:8","statements":[{"expression":{"id":933,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"3679:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":932,"id":934,"nodeType":"Return","src":"3672:19:8"}]},"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"3538:49:8","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":936,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3601:11:8","nodeType":"FunctionDefinition","overrides":{"id":929,"nodeType":"OverrideSpecifier","overrides":[],"src":"3635:8:8"},"parameters":{"id":928,"nodeType":"ParameterList","parameters":[],"src":"3612:2:8"},"returnParameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":936,"src":"3653:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":930,"name":"uint256","nodeType":"ElementaryTypeName","src":"3653:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3652:9:8"},"scope":1443,"src":"3592:106:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1478],"body":{"id":949,"nodeType":"Block","src":"3839:42:8","statements":[{"expression":{"baseExpression":{"id":945,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"3856:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":947,"indexExpression":{"id":946,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"3866:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3856:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":944,"id":948,"nodeType":"Return","src":"3849:25:8"}]},"documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"3704:47:8","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":950,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3765:9:8","nodeType":"FunctionDefinition","overrides":{"id":941,"nodeType":"OverrideSpecifier","overrides":[],"src":"3812:8:8"},"parameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"account","nameLocation":"3783:7:8","nodeType":"VariableDeclaration","scope":950,"src":"3775:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"3775:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3774:17:8"},"returnParameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":950,"src":"3830:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":942,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3829:9:8"},"scope":1443,"src":"3756:125:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1488],"body":{"id":974,"nodeType":"Block","src":"4162:104:8","statements":[{"assignments":[962],"declarations":[{"constant":false,"id":962,"mutability":"mutable","name":"owner","nameLocation":"4180:5:8","nodeType":"VariableDeclaration","scope":974,"src":"4172:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":961,"name":"address","nodeType":"ElementaryTypeName","src":"4172:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":965,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":963,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"4188:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4188:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4172:28:8"},{"expression":{"arguments":[{"id":967,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"4220:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":968,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"4227:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":969,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"4231:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":966,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"4210:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4210:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":971,"nodeType":"ExpressionStatement","src":"4210:28:8"},{"expression":{"hexValue":"74727565","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4255:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":960,"id":973,"nodeType":"Return","src":"4248:11:8"}]},"documentation":{"id":951,"nodeType":"StructuredDocumentation","src":"3887:185:8","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":975,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4086:8:8","nodeType":"FunctionDefinition","overrides":{"id":957,"nodeType":"OverrideSpecifier","overrides":[],"src":"4138:8:8"},"parameters":{"id":956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"to","nameLocation":"4103:2:8","nodeType":"VariableDeclaration","scope":975,"src":"4095:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"4095:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":955,"mutability":"mutable","name":"amount","nameLocation":"4115:6:8","nodeType":"VariableDeclaration","scope":975,"src":"4107:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":954,"name":"uint256","nodeType":"ElementaryTypeName","src":"4107:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4094:28:8"},"returnParameters":{"id":960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":975,"src":"4156:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":958,"name":"bool","nodeType":"ElementaryTypeName","src":"4156:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4155:6:8"},"scope":1443,"src":"4077:189:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1498],"body":{"id":992,"nodeType":"Block","src":"4422:51:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":986,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"4439:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":988,"indexExpression":{"id":987,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"4451:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4439:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":990,"indexExpression":{"id":989,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"4458:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4439:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":985,"id":991,"nodeType":"Return","src":"4432:34:8"}]},"documentation":{"id":976,"nodeType":"StructuredDocumentation","src":"4272:47:8","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":993,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"4333:9:8","nodeType":"FunctionDefinition","overrides":{"id":982,"nodeType":"OverrideSpecifier","overrides":[],"src":"4395:8:8"},"parameters":{"id":981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":978,"mutability":"mutable","name":"owner","nameLocation":"4351:5:8","nodeType":"VariableDeclaration","scope":993,"src":"4343:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":977,"name":"address","nodeType":"ElementaryTypeName","src":"4343:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":980,"mutability":"mutable","name":"spender","nameLocation":"4366:7:8","nodeType":"VariableDeclaration","scope":993,"src":"4358:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":979,"name":"address","nodeType":"ElementaryTypeName","src":"4358:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4342:32:8"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":993,"src":"4413:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"4413:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4412:9:8"},"scope":1443,"src":"4324:149:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1508],"body":{"id":1017,"nodeType":"Block","src":"4870:108:8","statements":[{"assignments":[1005],"declarations":[{"constant":false,"id":1005,"mutability":"mutable","name":"owner","nameLocation":"4888:5:8","nodeType":"VariableDeclaration","scope":1017,"src":"4880:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"4880:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1008,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1006,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"4896:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4896:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4880:28:8"},{"expression":{"arguments":[{"id":1010,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"4927:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1011,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"4934:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1012,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"4943:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1009,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"4918:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4918:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1014,"nodeType":"ExpressionStatement","src":"4918:32:8"},{"expression":{"hexValue":"74727565","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4967:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1003,"id":1016,"nodeType":"Return","src":"4960:11:8"}]},"documentation":{"id":994,"nodeType":"StructuredDocumentation","src":"4479:297:8","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1018,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4790:7:8","nodeType":"FunctionDefinition","overrides":{"id":1000,"nodeType":"OverrideSpecifier","overrides":[],"src":"4846:8:8"},"parameters":{"id":999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"spender","nameLocation":"4806:7:8","nodeType":"VariableDeclaration","scope":1018,"src":"4798:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":998,"mutability":"mutable","name":"amount","nameLocation":"4823:6:8","nodeType":"VariableDeclaration","scope":1018,"src":"4815:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":997,"name":"uint256","nodeType":"ElementaryTypeName","src":"4815:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:33:8"},"returnParameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1018,"src":"4864:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1001,"name":"bool","nodeType":"ElementaryTypeName","src":"4864:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4863:6:8"},"scope":1443,"src":"4781:197:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1520],"body":{"id":1050,"nodeType":"Block","src":"5643:153:8","statements":[{"assignments":[1032],"declarations":[{"constant":false,"id":1032,"mutability":"mutable","name":"spender","nameLocation":"5661:7:8","nodeType":"VariableDeclaration","scope":1050,"src":"5653:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"5653:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1035,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1033,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"5671:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5671:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5653:30:8"},{"expression":{"arguments":[{"id":1037,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"5709:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1038,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"5715:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1039,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"5724:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1036,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"5693:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5693:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1041,"nodeType":"ExpressionStatement","src":"5693:38:8"},{"expression":{"arguments":[{"id":1043,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"5751:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1044,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"5757:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1045,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"5761:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1042,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"5741:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5741:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1047,"nodeType":"ExpressionStatement","src":"5741:27:8"},{"expression":{"hexValue":"74727565","id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5785:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1030,"id":1049,"nodeType":"Return","src":"5778:11:8"}]},"documentation":{"id":1019,"nodeType":"StructuredDocumentation","src":"4984:551:8","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":1051,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5549:12:8","nodeType":"FunctionDefinition","overrides":{"id":1027,"nodeType":"OverrideSpecifier","overrides":[],"src":"5619:8:8"},"parameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"from","nameLocation":"5570:4:8","nodeType":"VariableDeclaration","scope":1051,"src":"5562:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"5562:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"to","nameLocation":"5584:2:8","nodeType":"VariableDeclaration","scope":1051,"src":"5576:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1022,"name":"address","nodeType":"ElementaryTypeName","src":"5576:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"amount","nameLocation":"5596:6:8","nodeType":"VariableDeclaration","scope":1051,"src":"5588:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1024,"name":"uint256","nodeType":"ElementaryTypeName","src":"5588:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5561:42:8"},"returnParameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1051,"src":"5637:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1028,"name":"bool","nodeType":"ElementaryTypeName","src":"5637:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5636:6:8"},"scope":1443,"src":"5540:256:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1079,"nodeType":"Block","src":"6285:140:8","statements":[{"assignments":[1062],"declarations":[{"constant":false,"id":1062,"mutability":"mutable","name":"owner","nameLocation":"6303:5:8","nodeType":"VariableDeclaration","scope":1079,"src":"6295:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"6295:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1065,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1063,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"6311:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6311:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6295:28:8"},{"expression":{"arguments":[{"id":1067,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"6342:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1068,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"6349:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1070,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"6368:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1071,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"6375:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1069,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"6358:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6358:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1073,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"6386:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6358:38:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1066,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"6333:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6333:64:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1076,"nodeType":"ExpressionStatement","src":"6333:64:8"},{"expression":{"hexValue":"74727565","id":1077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6414:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1060,"id":1078,"nodeType":"Return","src":"6407:11:8"}]},"documentation":{"id":1052,"nodeType":"StructuredDocumentation","src":"5802:384:8","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":1080,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"6200:17:8","nodeType":"FunctionDefinition","parameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"spender","nameLocation":"6226:7:8","nodeType":"VariableDeclaration","scope":1080,"src":"6218:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"6218:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"addedValue","nameLocation":"6243:10:8","nodeType":"VariableDeclaration","scope":1080,"src":"6235:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1055,"name":"uint256","nodeType":"ElementaryTypeName","src":"6235:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6217:37:8"},"returnParameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1080,"src":"6279:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1058,"name":"bool","nodeType":"ElementaryTypeName","src":"6279:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6278:6:8"},"scope":1443,"src":"6191:234:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1120,"nodeType":"Block","src":"7011:328:8","statements":[{"assignments":[1091],"declarations":[{"constant":false,"id":1091,"mutability":"mutable","name":"owner","nameLocation":"7029:5:8","nodeType":"VariableDeclaration","scope":1120,"src":"7021:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1090,"name":"address","nodeType":"ElementaryTypeName","src":"7021:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1094,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1092,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"7037:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7037:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7021:28:8"},{"assignments":[1096],"declarations":[{"constant":false,"id":1096,"mutability":"mutable","name":"currentAllowance","nameLocation":"7067:16:8","nodeType":"VariableDeclaration","scope":1120,"src":"7059:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"7059:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1101,"initialValue":{"arguments":[{"id":1098,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"7096:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1099,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"7103:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1097,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"7086:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7059:52:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1103,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"7129:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1104,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"7149:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7129:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7166:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":1102,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7121:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7121:85:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1108,"nodeType":"ExpressionStatement","src":"7121:85:8"},{"id":1117,"nodeType":"UncheckedBlock","src":"7216:95:8","statements":[{"expression":{"arguments":[{"id":1110,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"7249:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1111,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"7256:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1112,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"7265:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1113,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"7284:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7265:34:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1109,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"7240:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7240:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1116,"nodeType":"ExpressionStatement","src":"7240:60:8"}]},{"expression":{"hexValue":"74727565","id":1118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7328:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1089,"id":1119,"nodeType":"Return","src":"7321:11:8"}]},"documentation":{"id":1081,"nodeType":"StructuredDocumentation","src":"6431:476:8","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":1121,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6921:17:8","nodeType":"FunctionDefinition","parameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"spender","nameLocation":"6947:7:8","nodeType":"VariableDeclaration","scope":1121,"src":"6939:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1082,"name":"address","nodeType":"ElementaryTypeName","src":"6939:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"subtractedValue","nameLocation":"6964:15:8","nodeType":"VariableDeclaration","scope":1121,"src":"6956:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1084,"name":"uint256","nodeType":"ElementaryTypeName","src":"6956:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6938:42:8"},"returnParameters":{"id":1089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1121,"src":"7005:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1087,"name":"bool","nodeType":"ElementaryTypeName","src":"7005:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7004:6:8"},"scope":1443,"src":"6912:427:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1197,"nodeType":"Block","src":"7871:710:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1132,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"7889:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7905:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7897:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1133,"name":"address","nodeType":"ElementaryTypeName","src":"7897:7:8","typeDescriptions":{}}},"id":1136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7897:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7889:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7909:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":1131,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7881:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7881:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1140,"nodeType":"ExpressionStatement","src":"7881:68:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1142,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"7967:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7981:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7973:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1143,"name":"address","nodeType":"ElementaryTypeName","src":"7973:7:8","typeDescriptions":{}}},"id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7973:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7967:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":1148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7985:37:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":1141,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7959:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7959:64:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1150,"nodeType":"ExpressionStatement","src":"7959:64:8"},{"expression":{"arguments":[{"id":1152,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"8055:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1153,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"8061:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1154,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"8065:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1151,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"8034:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8034:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1156,"nodeType":"ExpressionStatement","src":"8034:38:8"},{"assignments":[1158],"declarations":[{"constant":false,"id":1158,"mutability":"mutable","name":"fromBalance","nameLocation":"8091:11:8","nodeType":"VariableDeclaration","scope":1197,"src":"8083:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"8083:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1162,"initialValue":{"baseExpression":{"id":1159,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"8105:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1161,"indexExpression":{"id":1160,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"8115:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8105:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8083:37:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1164,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"8138:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1165,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"8153:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8138:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8161:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":1163,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8130:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8130:72:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1169,"nodeType":"ExpressionStatement","src":"8130:72:8"},{"id":1184,"nodeType":"UncheckedBlock","src":"8212:273:8","statements":[{"expression":{"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1170,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"8236:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1172,"indexExpression":{"id":1171,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"8246:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8236:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1173,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"8254:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1174,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"8268:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8254:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8236:38:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1177,"nodeType":"ExpressionStatement","src":"8236:38:8"},{"expression":{"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1178,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"8451:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1180,"indexExpression":{"id":1179,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"8461:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8451:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1181,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"8468:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8451:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1183,"nodeType":"ExpressionStatement","src":"8451:23:8"}]},{"eventCall":{"arguments":[{"id":1186,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"8509:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1187,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"8515:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1188,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"8519:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1185,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"8500:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8500:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1190,"nodeType":"EmitStatement","src":"8495:31:8"},{"expression":{"arguments":[{"id":1192,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"8557:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1193,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"8563:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1194,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"8567:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1191,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"8537:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8537:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1196,"nodeType":"ExpressionStatement","src":"8537:37:8"}]},"documentation":{"id":1122,"nodeType":"StructuredDocumentation","src":"7345:443:8","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":1198,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7802:9:8","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"from","nameLocation":"7820:4:8","nodeType":"VariableDeclaration","scope":1198,"src":"7812:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"7812:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"to","nameLocation":"7834:2:8","nodeType":"VariableDeclaration","scope":1198,"src":"7826:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1125,"name":"address","nodeType":"ElementaryTypeName","src":"7826:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"amount","nameLocation":"7846:6:8","nodeType":"VariableDeclaration","scope":1198,"src":"7838:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"7838:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7811:42:8"},"returnParameters":{"id":1130,"nodeType":"ParameterList","parameters":[],"src":"7871:0:8"},"scope":1443,"src":"7793:788:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1254,"nodeType":"Block","src":"8922:470:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1207,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"8940:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8959:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8951:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1208,"name":"address","nodeType":"ElementaryTypeName","src":"8951:7:8","typeDescriptions":{}}},"id":1211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8951:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8940:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":1213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8963:33:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":1206,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8932:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8932:65:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1215,"nodeType":"ExpressionStatement","src":"8932:65:8"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9037:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9029:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"9029:7:8","typeDescriptions":{}}},"id":1220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9029:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1221,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"9041:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1222,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"9050:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1216,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"9008:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9008:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1224,"nodeType":"ExpressionStatement","src":"9008:49:8"},{"expression":{"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1225,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"9068:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1226,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"9084:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9068:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1228,"nodeType":"ExpressionStatement","src":"9068:22:8"},{"id":1235,"nodeType":"UncheckedBlock","src":"9100:175:8","statements":[{"expression":{"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1229,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"9236:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1231,"indexExpression":{"id":1230,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"9246:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9236:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1232,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"9258:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9236:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1234,"nodeType":"ExpressionStatement","src":"9236:28:8"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9306:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9298:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1237,"name":"address","nodeType":"ElementaryTypeName","src":"9298:7:8","typeDescriptions":{}}},"id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9298:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1241,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"9310:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1242,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"9319:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1236,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"9289:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9289:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1244,"nodeType":"EmitStatement","src":"9284:42:8"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9365:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"9357:7:8","typeDescriptions":{}}},"id":1249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9357:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1250,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"9369:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1251,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"9378:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1245,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"9337:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9337:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1253,"nodeType":"ExpressionStatement","src":"9337:48:8"}]},"documentation":{"id":1199,"nodeType":"StructuredDocumentation","src":"8587:265:8","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":1255,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8866:5:8","nodeType":"FunctionDefinition","parameters":{"id":1204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"account","nameLocation":"8880:7:8","nodeType":"VariableDeclaration","scope":1255,"src":"8872:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1200,"name":"address","nodeType":"ElementaryTypeName","src":"8872:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1203,"mutability":"mutable","name":"amount","nameLocation":"8897:6:8","nodeType":"VariableDeclaration","scope":1255,"src":"8889:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1202,"name":"uint256","nodeType":"ElementaryTypeName","src":"8889:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8871:33:8"},"returnParameters":{"id":1205,"nodeType":"ParameterList","parameters":[],"src":"8922:0:8"},"scope":1443,"src":"8857:535:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1326,"nodeType":"Block","src":"9777:594:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1264,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"9795:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9814:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9806:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"9806:7:8","typeDescriptions":{}}},"id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9806:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9795:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":1270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9818:35:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":1263,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9787:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9787:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1272,"nodeType":"ExpressionStatement","src":"9787:67:8"},{"expression":{"arguments":[{"id":1274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"9886:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9903:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9895:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1275,"name":"address","nodeType":"ElementaryTypeName","src":"9895:7:8","typeDescriptions":{}}},"id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9895:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1279,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"9907:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1273,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"9865:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9865:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1281,"nodeType":"ExpressionStatement","src":"9865:49:8"},{"assignments":[1283],"declarations":[{"constant":false,"id":1283,"mutability":"mutable","name":"accountBalance","nameLocation":"9933:14:8","nodeType":"VariableDeclaration","scope":1326,"src":"9925:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1282,"name":"uint256","nodeType":"ElementaryTypeName","src":"9925:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1287,"initialValue":{"baseExpression":{"id":1284,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"9950:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1286,"indexExpression":{"id":1285,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"9960:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9950:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9925:43:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1289,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"9986:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1290,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"10004:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10012:36:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":1288,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9978:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9978:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1294,"nodeType":"ExpressionStatement","src":"9978:71:8"},{"id":1307,"nodeType":"UncheckedBlock","src":"10059:194:8","statements":[{"expression":{"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1295,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"10083:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1297,"indexExpression":{"id":1296,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"10093:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10083:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1298,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"10104:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1299,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"10121:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10104:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10083:44:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1302,"nodeType":"ExpressionStatement","src":"10083:44:8"},{"expression":{"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1303,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"10220:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1304,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"10236:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10220:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1306,"nodeType":"ExpressionStatement","src":"10220:22:8"}]},{"eventCall":{"arguments":[{"id":1309,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"10277:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10294:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1310,"name":"address","nodeType":"ElementaryTypeName","src":"10286:7:8","typeDescriptions":{}}},"id":1313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1314,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"10298:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1308,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"10268:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10268:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1316,"nodeType":"EmitStatement","src":"10263:42:8"},{"expression":{"arguments":[{"id":1318,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"10336:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10353:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10345:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1319,"name":"address","nodeType":"ElementaryTypeName","src":"10345:7:8","typeDescriptions":{}}},"id":1322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10345:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1323,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"10357:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1317,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"10316:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10316:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1325,"nodeType":"ExpressionStatement","src":"10316:48:8"}]},"documentation":{"id":1256,"nodeType":"StructuredDocumentation","src":"9398:309:8","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":1327,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9721:5:8","nodeType":"FunctionDefinition","parameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1258,"mutability":"mutable","name":"account","nameLocation":"9735:7:8","nodeType":"VariableDeclaration","scope":1327,"src":"9727:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1257,"name":"address","nodeType":"ElementaryTypeName","src":"9727:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1260,"mutability":"mutable","name":"amount","nameLocation":"9752:6:8","nodeType":"VariableDeclaration","scope":1327,"src":"9744:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"9744:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9726:33:8"},"returnParameters":{"id":1262,"nodeType":"ParameterList","parameters":[],"src":"9777:0:8"},"scope":1443,"src":"9712:659:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1371,"nodeType":"Block","src":"10877:257:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1338,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"10895:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10912:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10904:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1339,"name":"address","nodeType":"ElementaryTypeName","src":"10904:7:8","typeDescriptions":{}}},"id":1342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10904:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10895:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10916:38:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":1337,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10887:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10887:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1346,"nodeType":"ExpressionStatement","src":"10887:68:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1348,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"10973:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10992:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10984:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"10984:7:8","typeDescriptions":{}}},"id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10984:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10973:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10996:36:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":1347,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10965:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10965:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1356,"nodeType":"ExpressionStatement","src":"10965:68:8"},{"expression":{"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1357,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"11044:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1360,"indexExpression":{"id":1358,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"11056:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11044:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1361,"indexExpression":{"id":1359,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"11063:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11044:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1362,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"11074:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11044:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1364,"nodeType":"ExpressionStatement","src":"11044:36:8"},{"eventCall":{"arguments":[{"id":1366,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"11104:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1367,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"11111:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1368,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"11120:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1365,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"11095:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11095:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1370,"nodeType":"EmitStatement","src":"11090:37:8"}]},"documentation":{"id":1328,"nodeType":"StructuredDocumentation","src":"10377:412:8","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":1372,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10803:8:8","nodeType":"FunctionDefinition","parameters":{"id":1335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"owner","nameLocation":"10820:5:8","nodeType":"VariableDeclaration","scope":1372,"src":"10812:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"10812:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"spender","nameLocation":"10835:7:8","nodeType":"VariableDeclaration","scope":1372,"src":"10827:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1331,"name":"address","nodeType":"ElementaryTypeName","src":"10827:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1334,"mutability":"mutable","name":"amount","nameLocation":"10852:6:8","nodeType":"VariableDeclaration","scope":1372,"src":"10844:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1333,"name":"uint256","nodeType":"ElementaryTypeName","src":"10844:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10811:48:8"},"returnParameters":{"id":1336,"nodeType":"ParameterList","parameters":[],"src":"10877:0:8"},"scope":1443,"src":"10794:340:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1414,"nodeType":"Block","src":"11505:321:8","statements":[{"assignments":[1383],"declarations":[{"constant":false,"id":1383,"mutability":"mutable","name":"currentAllowance","nameLocation":"11523:16:8","nodeType":"VariableDeclaration","scope":1414,"src":"11515:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1382,"name":"uint256","nodeType":"ElementaryTypeName","src":"11515:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1388,"initialValue":{"arguments":[{"id":1385,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"11552:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1386,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"11559:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1384,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"11542:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11542:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11515:52:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1389,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"11581:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11606:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1391,"name":"uint256","nodeType":"ElementaryTypeName","src":"11606:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1390,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11601:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11601:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11615:3:8","memberName":"max","nodeType":"MemberAccess","src":"11601:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11581:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1413,"nodeType":"IfStatement","src":"11577:243:8","trueBody":{"id":1412,"nodeType":"Block","src":"11620:200:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1397,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"11642:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1398,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"11662:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11642:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11670:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":1396,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11634:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11634:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1402,"nodeType":"ExpressionStatement","src":"11634:68:8"},{"id":1411,"nodeType":"UncheckedBlock","src":"11716:94:8","statements":[{"expression":{"arguments":[{"id":1404,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"11753:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1405,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"11760:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1406,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"11769:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1407,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"11788:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11769:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1403,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"11744:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11744:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1410,"nodeType":"ExpressionStatement","src":"11744:51:8"}]}]}}]},"documentation":{"id":1373,"nodeType":"StructuredDocumentation","src":"11140:270:8","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":1415,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11424:15:8","nodeType":"FunctionDefinition","parameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1375,"mutability":"mutable","name":"owner","nameLocation":"11448:5:8","nodeType":"VariableDeclaration","scope":1415,"src":"11440:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1374,"name":"address","nodeType":"ElementaryTypeName","src":"11440:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1377,"mutability":"mutable","name":"spender","nameLocation":"11463:7:8","nodeType":"VariableDeclaration","scope":1415,"src":"11455:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1376,"name":"address","nodeType":"ElementaryTypeName","src":"11455:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1379,"mutability":"mutable","name":"amount","nameLocation":"11480:6:8","nodeType":"VariableDeclaration","scope":1415,"src":"11472:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1378,"name":"uint256","nodeType":"ElementaryTypeName","src":"11472:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11439:48:8"},"returnParameters":{"id":1381,"nodeType":"ParameterList","parameters":[],"src":"11505:0:8"},"scope":1443,"src":"11415:411:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1425,"nodeType":"Block","src":"12499:2:8","statements":[]},"documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"11832:573:8","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1426,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12419:20:8","nodeType":"FunctionDefinition","parameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"from","nameLocation":"12448:4:8","nodeType":"VariableDeclaration","scope":1426,"src":"12440:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"12440:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"to","nameLocation":"12462:2:8","nodeType":"VariableDeclaration","scope":1426,"src":"12454:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1419,"name":"address","nodeType":"ElementaryTypeName","src":"12454:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1422,"mutability":"mutable","name":"amount","nameLocation":"12474:6:8","nodeType":"VariableDeclaration","scope":1426,"src":"12466:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1421,"name":"uint256","nodeType":"ElementaryTypeName","src":"12466:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12439:42:8"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[],"src":"12499:0:8"},"scope":1443,"src":"12410:91:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1436,"nodeType":"Block","src":"13177:2:8","statements":[]},"documentation":{"id":1427,"nodeType":"StructuredDocumentation","src":"12507:577:8","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1437,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"13098:19:8","nodeType":"FunctionDefinition","parameters":{"id":1434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"from","nameLocation":"13126:4:8","nodeType":"VariableDeclaration","scope":1437,"src":"13118:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1428,"name":"address","nodeType":"ElementaryTypeName","src":"13118:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1431,"mutability":"mutable","name":"to","nameLocation":"13140:2:8","nodeType":"VariableDeclaration","scope":1437,"src":"13132:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1430,"name":"address","nodeType":"ElementaryTypeName","src":"13132:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1433,"mutability":"mutable","name":"amount","nameLocation":"13152:6:8","nodeType":"VariableDeclaration","scope":1437,"src":"13144:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"13144:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13117:42:8"},"returnParameters":{"id":1435,"nodeType":"ParameterList","parameters":[],"src":"13177:0:8"},"scope":1443,"src":"13089:90:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1438,"nodeType":"StructuredDocumentation","src":"13185:254:8","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1442,"mutability":"mutable","name":"__gap","nameLocation":"13464:5:8","nodeType":"VariableDeclaration","scope":1443,"src":"13444:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$45_storage","typeString":"uint256[45]"},"typeName":{"baseType":{"id":1439,"name":"uint256","nodeType":"ElementaryTypeName","src":"13444:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1441,"length":{"hexValue":"3435","id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:8","typeDescriptions":{"typeIdentifier":"t_rational_45_by_1","typeString":"int_const 45"},"value":"45"},"nodeType":"ArrayTypeName","src":"13444:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$45_storage_ptr","typeString":"uint256[45]"}},"visibility":"private"}],"scope":1444,"src":"1611:11861:8","usedErrors":[],"usedEvents":[550,1455,1464]}],"src":"105:13368:8"},"id":8},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","exportedSymbols":{"IERC20Upgradeable":[1521]},"id":1522,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1445,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1446,"nodeType":"StructuredDocumentation","src":"131:70:9","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1521,"linearizedBaseContracts":[1521],"name":"IERC20Upgradeable","nameLocation":"212:17:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1447,"nodeType":"StructuredDocumentation","src":"236:158:9","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1455,"name":"Transfer","nameLocation":"405:8:9","nodeType":"EventDefinition","parameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"430:4:9","nodeType":"VariableDeclaration","scope":1455,"src":"414:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1448,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1451,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"452:2:9","nodeType":"VariableDeclaration","scope":1455,"src":"436:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1450,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1453,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"464:5:9","nodeType":"VariableDeclaration","scope":1455,"src":"456:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1452,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"413:57:9"},"src":"399:72:9"},{"anonymous":false,"documentation":{"id":1456,"nodeType":"StructuredDocumentation","src":"477:148:9","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1464,"name":"Approval","nameLocation":"636:8:9","nodeType":"EventDefinition","parameters":{"id":1463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"661:5:9","nodeType":"VariableDeclaration","scope":1464,"src":"645:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1457,"name":"address","nodeType":"ElementaryTypeName","src":"645:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1460,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"684:7:9","nodeType":"VariableDeclaration","scope":1464,"src":"668:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1459,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1462,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"701:5:9","nodeType":"VariableDeclaration","scope":1464,"src":"693:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1461,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"644:63:9"},"src":"630:78:9"},{"documentation":{"id":1465,"nodeType":"StructuredDocumentation","src":"714:66:9","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1470,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"794:11:9","nodeType":"FunctionDefinition","parameters":{"id":1466,"nodeType":"ParameterList","parameters":[],"src":"805:2:9"},"returnParameters":{"id":1469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1470,"src":"831:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1467,"name":"uint256","nodeType":"ElementaryTypeName","src":"831:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"830:9:9"},"scope":1521,"src":"785:55:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1471,"nodeType":"StructuredDocumentation","src":"846:72:9","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1478,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"932:9:9","nodeType":"FunctionDefinition","parameters":{"id":1474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1473,"mutability":"mutable","name":"account","nameLocation":"950:7:9","nodeType":"VariableDeclaration","scope":1478,"src":"942:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1472,"name":"address","nodeType":"ElementaryTypeName","src":"942:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"941:17:9"},"returnParameters":{"id":1477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1478,"src":"982:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1475,"name":"uint256","nodeType":"ElementaryTypeName","src":"982:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"981:9:9"},"scope":1521,"src":"923:68:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1479,"nodeType":"StructuredDocumentation","src":"997:202:9","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1488,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:9","nodeType":"FunctionDefinition","parameters":{"id":1484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1481,"mutability":"mutable","name":"to","nameLocation":"1230:2:9","nodeType":"VariableDeclaration","scope":1488,"src":"1222:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1480,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1483,"mutability":"mutable","name":"amount","nameLocation":"1242:6:9","nodeType":"VariableDeclaration","scope":1488,"src":"1234:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1482,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:28:9"},"returnParameters":{"id":1487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1488,"src":"1268:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1485,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:9"},"scope":1521,"src":"1204:70:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1489,"nodeType":"StructuredDocumentation","src":"1280:264:9","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1498,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:9","nodeType":"FunctionDefinition","parameters":{"id":1494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1491,"mutability":"mutable","name":"owner","nameLocation":"1576:5:9","nodeType":"VariableDeclaration","scope":1498,"src":"1568:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1490,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1493,"mutability":"mutable","name":"spender","nameLocation":"1591:7:9","nodeType":"VariableDeclaration","scope":1498,"src":"1583:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1492,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:9"},"returnParameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1498,"src":"1623:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1495,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:9"},"scope":1521,"src":"1549:83:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1499,"nodeType":"StructuredDocumentation","src":"1638:642:9","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1508,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2294:7:9","nodeType":"FunctionDefinition","parameters":{"id":1504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"spender","nameLocation":"2310:7:9","nodeType":"VariableDeclaration","scope":1508,"src":"2302:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"2302:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1503,"mutability":"mutable","name":"amount","nameLocation":"2327:6:9","nodeType":"VariableDeclaration","scope":1508,"src":"2319:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1502,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:33:9"},"returnParameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1508,"src":"2353:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1505,"name":"bool","nodeType":"ElementaryTypeName","src":"2353:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2352:6:9"},"scope":1521,"src":"2285:74:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1509,"nodeType":"StructuredDocumentation","src":"2365:287:9","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1520,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2666:12:9","nodeType":"FunctionDefinition","parameters":{"id":1516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1511,"mutability":"mutable","name":"from","nameLocation":"2687:4:9","nodeType":"VariableDeclaration","scope":1520,"src":"2679:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1510,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1513,"mutability":"mutable","name":"to","nameLocation":"2701:2:9","nodeType":"VariableDeclaration","scope":1520,"src":"2693:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1512,"name":"address","nodeType":"ElementaryTypeName","src":"2693:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1515,"mutability":"mutable","name":"amount","nameLocation":"2713:6:9","nodeType":"VariableDeclaration","scope":1520,"src":"2705:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1514,"name":"uint256","nodeType":"ElementaryTypeName","src":"2705:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2678:42:9"},"returnParameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1520,"src":"2739:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1517,"name":"bool","nodeType":"ElementaryTypeName","src":"2739:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2738:6:9"},"scope":1521,"src":"2657:88:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1522,"src":"202:2545:9","usedErrors":[],"usedEvents":[1455,1464]}],"src":"106:2642:9"},"id":9},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2857],"ContextUpgradeable":[2899],"CountersUpgradeable":[2973],"ECDSAUpgradeable":[3568],"EIP712Upgradeable":[3852],"ERC20PermitUpgradeable":[1712],"ERC20Upgradeable":[1443],"IERC20MetadataUpgradeable":[2491],"IERC20PermitUpgradeable":[2527],"IERC20Upgradeable":[1521],"IERC5267Upgradeable":[511],"Initializable":[704],"MathUpgradeable":[4774],"SignedMathUpgradeable":[6420],"StringsUpgradeable":[3202]},"id":1713,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1523,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"122:23:10"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol","file":"./IERC20PermitUpgradeable.sol","id":1524,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1713,"sourceUnit":2528,"src":"147:39:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":1525,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1713,"sourceUnit":1444,"src":"187:33:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","file":"../../../utils/cryptography/ECDSAUpgradeable.sol","id":1526,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1713,"sourceUnit":3569,"src":"221:58:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","file":"../../../utils/cryptography/EIP712Upgradeable.sol","id":1527,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1713,"sourceUnit":3853,"src":"280:59:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","file":"../../../utils/CountersUpgradeable.sol","id":1528,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1713,"sourceUnit":2974,"src":"340:48:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1529,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1713,"sourceUnit":705,"src":"389:48:10","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1531,"name":"Initializable","nameLocations":["1031:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"1031:13:10"},"id":1532,"nodeType":"InheritanceSpecifier","src":"1031:13:10"},{"baseName":{"id":1533,"name":"ERC20Upgradeable","nameLocations":["1046:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":1443,"src":"1046:16:10"},"id":1534,"nodeType":"InheritanceSpecifier","src":"1046:16:10"},{"baseName":{"id":1535,"name":"IERC20PermitUpgradeable","nameLocations":["1064:23:10"],"nodeType":"IdentifierPath","referencedDeclaration":2527,"src":"1064:23:10"},"id":1536,"nodeType":"InheritanceSpecifier","src":"1064:23:10"},{"baseName":{"id":1537,"name":"EIP712Upgradeable","nameLocations":["1089:17:10"],"nodeType":"IdentifierPath","referencedDeclaration":3852,"src":"1089:17:10"},"id":1538,"nodeType":"InheritanceSpecifier","src":"1089:17:10"}],"canonicalName":"ERC20PermitUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1530,"nodeType":"StructuredDocumentation","src":"439:547:10","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._\n @custom:storage-size 51"},"fullyImplemented":true,"id":1712,"linearizedBaseContracts":[1712,3852,511,2527,1443,2491,1521,2899,704],"name":"ERC20PermitUpgradeable","nameLocation":"1005:22:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1542,"libraryName":{"id":1539,"name":"CountersUpgradeable","nameLocations":["1119:19:10"],"nodeType":"IdentifierPath","referencedDeclaration":2973,"src":"1119:19:10"},"nodeType":"UsingForDirective","src":"1113:58:10","typeName":{"id":1541,"nodeType":"UserDefinedTypeName","pathNode":{"id":1540,"name":"CountersUpgradeable.Counter","nameLocations":["1143:19:10","1163:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2905,"src":"1143:27:10"},"referencedDeclaration":2905,"src":"1143:27:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2905_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}}},{"constant":false,"id":1547,"mutability":"mutable","name":"_nonces","nameLocation":"1233:7:10","nodeType":"VariableDeclaration","scope":1712,"src":"1177:63:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2905_storage_$","typeString":"mapping(address => struct CountersUpgradeable.Counter)"},"typeName":{"id":1546,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1543,"name":"address","nodeType":"ElementaryTypeName","src":"1185:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1177:47:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2905_storage_$","typeString":"mapping(address => struct CountersUpgradeable.Counter)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1545,"nodeType":"UserDefinedTypeName","pathNode":{"id":1544,"name":"CountersUpgradeable.Counter","nameLocations":["1196:19:10","1216:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2905,"src":"1196:27:10"},"referencedDeclaration":2905,"src":"1196:27:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2905_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}}},"visibility":"private"},{"constant":true,"id":1552,"mutability":"constant","name":"_PERMIT_TYPEHASH","nameLocation":"1324:16:10","nodeType":"VariableDeclaration","scope":1712,"src":"1299:147:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1299:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1361:84:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1549,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1351:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1351:95:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"documentation":{"id":1553,"nodeType":"StructuredDocumentation","src":"1452:254:10","text":" @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n However, to ensure consistency with the upgradeable transpiler, we will continue\n to reserve a slot.\n @custom:oz-renamed-from _PERMIT_TYPEHASH"},"id":1555,"mutability":"mutable","name":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","nameLocation":"1779:32:10","nodeType":"VariableDeclaration","scope":1712,"src":"1763:48:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1554,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1763:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":1568,"nodeType":"Block","src":"2117:51:10","statements":[{"expression":{"arguments":[{"id":1564,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"2151:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2157:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""}],"id":1563,"name":"__EIP712_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"2127:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2127:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1567,"nodeType":"ExpressionStatement","src":"2127:34:10"}]},"documentation":{"id":1556,"nodeType":"StructuredDocumentation","src":"1818:220:10","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":1569,"implemented":true,"kind":"function","modifiers":[{"id":1561,"kind":"modifierInvocation","modifierName":{"id":1560,"name":"onlyInitializing","nameLocations":["2100:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":649,"src":"2100:16:10"},"nodeType":"ModifierInvocation","src":"2100:16:10"}],"name":"__ERC20Permit_init","nameLocation":"2052:18:10","nodeType":"FunctionDefinition","parameters":{"id":1559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"name","nameLocation":"2085:4:10","nodeType":"VariableDeclaration","scope":1569,"src":"2071:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1557,"name":"string","nodeType":"ElementaryTypeName","src":"2071:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2070:20:10"},"returnParameters":{"id":1562,"nodeType":"ParameterList","parameters":[],"src":"2117:0:10"},"scope":1712,"src":"2043:125:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1576,"nodeType":"Block","src":"2253:2:10","statements":[]},"id":1577,"implemented":true,"kind":"function","modifiers":[{"id":1574,"kind":"modifierInvocation","modifierName":{"id":1573,"name":"onlyInitializing","nameLocations":["2236:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":649,"src":"2236:16:10"},"nodeType":"ModifierInvocation","src":"2236:16:10"}],"name":"__ERC20Permit_init_unchained","nameLocation":"2183:28:10","nodeType":"FunctionDefinition","parameters":{"id":1572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1577,"src":"2212:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1570,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:10"},"returnParameters":{"id":1575,"nodeType":"ParameterList","parameters":[],"src":"2253:0:10"},"scope":1712,"src":"2174:81:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2512],"body":{"id":1649,"nodeType":"Block","src":"2514:439:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1597,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2532:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2538:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"2532:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1599,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"2551:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2532:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2561:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""},"value":"ERC20Permit: expired deadline"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""}],"id":1596,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2524:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2524:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1603,"nodeType":"ExpressionStatement","src":"2524:69:10"},{"assignments":[1605],"declarations":[{"constant":false,"id":1605,"mutability":"mutable","name":"structHash","nameLocation":"2612:10:10","nodeType":"VariableDeclaration","scope":1649,"src":"2604:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1604,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2604:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1619,"initialValue":{"arguments":[{"arguments":[{"id":1609,"name":"_PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"2646:16:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1610,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"2664:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1611,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"2671:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"2680:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1614,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"2697:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1613,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"2687:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2687:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1616,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"2705:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1607,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2635:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2639:6:10","memberName":"encode","nodeType":"MemberAccess","src":"2635:10:10","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2635:79:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1606,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2625:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:90:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2604:111:10"},{"assignments":[1621],"declarations":[{"constant":false,"id":1621,"mutability":"mutable","name":"hash","nameLocation":"2734:4:10","nodeType":"VariableDeclaration","scope":1649,"src":"2726:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2726:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1625,"initialValue":{"arguments":[{"id":1623,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"2758:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1622,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"2741:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2741:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2726:43:10"},{"assignments":[1627],"declarations":[{"constant":false,"id":1627,"mutability":"mutable","name":"signer","nameLocation":"2788:6:10","nodeType":"VariableDeclaration","scope":1649,"src":"2780:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1626,"name":"address","nodeType":"ElementaryTypeName","src":"2780:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1635,"initialValue":{"arguments":[{"id":1630,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"2822:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1631,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"2828:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1632,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"2831:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1633,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"2834:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1628,"name":"ECDSAUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"2797:16:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSAUpgradeable_$3568_$","typeString":"type(library ECDSAUpgradeable)"}},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2814:7:10","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3503,"src":"2797:24:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2797:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2780:56:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1637,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"2854:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"2864:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2854:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2871:32:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""},"value":"ERC20Permit: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""}],"id":1636,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2846:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2846:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1642,"nodeType":"ExpressionStatement","src":"2846:58:10"},{"expression":{"arguments":[{"id":1644,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"2924:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1645,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"2931:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"2940:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1643,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"2915:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2915:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1648,"nodeType":"ExpressionStatement","src":"2915:31:10"}]},"documentation":{"id":1578,"nodeType":"StructuredDocumentation","src":"2261:50:10","text":" @dev See {IERC20Permit-permit}."},"functionSelector":"d505accf","id":1650,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"2325:6:10","nodeType":"FunctionDefinition","overrides":{"id":1594,"nodeType":"OverrideSpecifier","overrides":[],"src":"2505:8:10"},"parameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"owner","nameLocation":"2349:5:10","nodeType":"VariableDeclaration","scope":1650,"src":"2341:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1579,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"spender","nameLocation":"2372:7:10","nodeType":"VariableDeclaration","scope":1650,"src":"2364:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1581,"name":"address","nodeType":"ElementaryTypeName","src":"2364:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1584,"mutability":"mutable","name":"value","nameLocation":"2397:5:10","nodeType":"VariableDeclaration","scope":1650,"src":"2389:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1583,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1586,"mutability":"mutable","name":"deadline","nameLocation":"2420:8:10","nodeType":"VariableDeclaration","scope":1650,"src":"2412:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1585,"name":"uint256","nodeType":"ElementaryTypeName","src":"2412:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1588,"mutability":"mutable","name":"v","nameLocation":"2444:1:10","nodeType":"VariableDeclaration","scope":1650,"src":"2438:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1587,"name":"uint8","nodeType":"ElementaryTypeName","src":"2438:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1590,"mutability":"mutable","name":"r","nameLocation":"2463:1:10","nodeType":"VariableDeclaration","scope":1650,"src":"2455:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1589,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2455:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1592,"mutability":"mutable","name":"s","nameLocation":"2482:1:10","nodeType":"VariableDeclaration","scope":1650,"src":"2474:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2474:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2331:158:10"},"returnParameters":{"id":1595,"nodeType":"ParameterList","parameters":[],"src":"2514:0:10"},"scope":1712,"src":"2316:637:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2520],"body":{"id":1665,"nodeType":"Block","src":"3092:48:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":1659,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"3109:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2905_storage_$","typeString":"mapping(address => struct CountersUpgradeable.Counter storage ref)"}},"id":1661,"indexExpression":{"id":1660,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"3117:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3109:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2905_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":1662,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3124:7:10","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2917,"src":"3109:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2905_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2905_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3109:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1658,"id":1664,"nodeType":"Return","src":"3102:31:10"}]},"documentation":{"id":1651,"nodeType":"StructuredDocumentation","src":"2959:50:10","text":" @dev See {IERC20Permit-nonces}."},"functionSelector":"7ecebe00","id":1666,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3023:6:10","nodeType":"FunctionDefinition","overrides":{"id":1655,"nodeType":"OverrideSpecifier","overrides":[],"src":"3065:8:10"},"parameters":{"id":1654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1653,"mutability":"mutable","name":"owner","nameLocation":"3038:5:10","nodeType":"VariableDeclaration","scope":1666,"src":"3030:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1652,"name":"address","nodeType":"ElementaryTypeName","src":"3030:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3029:15:10"},"returnParameters":{"id":1658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1666,"src":"3083:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"3083:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3082:9:10"},"scope":1712,"src":"3014:126:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2526],"body":{"id":1676,"nodeType":"Block","src":"3333:44:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1673,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"3350:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3350:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1672,"id":1675,"nodeType":"Return","src":"3343:27:10"}]},"documentation":{"id":1667,"nodeType":"StructuredDocumentation","src":"3146:60:10","text":" @dev See {IERC20Permit-DOMAIN_SEPARATOR}."},"functionSelector":"3644e515","id":1677,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3273:16:10","nodeType":"FunctionDefinition","overrides":{"id":1669,"nodeType":"OverrideSpecifier","overrides":[],"src":"3306:8:10"},"parameters":{"id":1668,"nodeType":"ParameterList","parameters":[],"src":"3289:2:10"},"returnParameters":{"id":1672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1677,"src":"3324:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1670,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3324:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3323:9:10"},"scope":1712,"src":"3264:113:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1705,"nodeType":"Block","src":"3585:137:10","statements":[{"assignments":[1689],"declarations":[{"constant":false,"id":1689,"mutability":"mutable","name":"nonce","nameLocation":"3631:5:10","nodeType":"VariableDeclaration","scope":1705,"src":"3595:41:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2905_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":1688,"nodeType":"UserDefinedTypeName","pathNode":{"id":1687,"name":"CountersUpgradeable.Counter","nameLocations":["3595:19:10","3615:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2905,"src":"3595:27:10"},"referencedDeclaration":2905,"src":"3595:27:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2905_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"id":1693,"initialValue":{"baseExpression":{"id":1690,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"3639:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2905_storage_$","typeString":"mapping(address => struct CountersUpgradeable.Counter storage ref)"}},"id":1692,"indexExpression":{"id":1691,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"3647:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3639:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2905_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3595:58:10"},{"expression":{"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1694,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"3663:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1695,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"3673:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2905_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":1696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3679:7:10","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2917,"src":"3673:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2905_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2905_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3673:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3663:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1699,"nodeType":"ExpressionStatement","src":"3663:25:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1700,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"3698:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2905_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":1702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3704:9:10","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":2931,"src":"3698:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$2905_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$2905_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer)"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3698:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1704,"nodeType":"ExpressionStatement","src":"3698:17:10"}]},"documentation":{"id":1678,"nodeType":"StructuredDocumentation","src":"3383:120:10","text":" @dev \"Consume a nonce\": return the current value and increment.\n _Available since v4.1._"},"id":1706,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"3517:9:10","nodeType":"FunctionDefinition","parameters":{"id":1681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1680,"mutability":"mutable","name":"owner","nameLocation":"3535:5:10","nodeType":"VariableDeclaration","scope":1706,"src":"3527:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1679,"name":"address","nodeType":"ElementaryTypeName","src":"3527:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3526:15:10"},"returnParameters":{"id":1684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1683,"mutability":"mutable","name":"current","nameLocation":"3576:7:10","nodeType":"VariableDeclaration","scope":1706,"src":"3568:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1682,"name":"uint256","nodeType":"ElementaryTypeName","src":"3568:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3567:17:10"},"scope":1712,"src":"3508:214:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1707,"nodeType":"StructuredDocumentation","src":"3728:254:10","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1711,"mutability":"mutable","name":"__gap","nameLocation":"4007:5:10","nodeType":"VariableDeclaration","scope":1712,"src":"3987:25:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":1708,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1710,"length":{"hexValue":"3439","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3995:2:10","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3987:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":1713,"src":"987:3028:10","usedErrors":[],"usedEvents":[491,550,1455,1464]}],"src":"122:3894:10"},"id":10},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2857],"ContextUpgradeable":[2899],"CountersUpgradeable":[2973],"ECDSAUpgradeable":[3568],"EIP712Upgradeable":[3852],"ERC20PermitUpgradeable":[1712],"ERC20Upgradeable":[1443],"ERC20VotesUpgradeable":[2466],"IERC20MetadataUpgradeable":[2491],"IERC20PermitUpgradeable":[2527],"IERC20Upgradeable":[1521],"IERC5267Upgradeable":[511],"IERC5805Upgradeable":[520],"IERC6372Upgradeable":[535],"IVotesUpgradeable":[486],"Initializable":[704],"MathUpgradeable":[4774],"SafeCastUpgradeable":[6315],"SignedMathUpgradeable":[6420],"StringsUpgradeable":[3202]},"id":2467,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1714,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"121:23:11"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol","file":"./ERC20PermitUpgradeable.sol","id":1715,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2467,"sourceUnit":1713,"src":"146:38:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC5805Upgradeable.sol","file":"../../../interfaces/IERC5805Upgradeable.sol","id":1716,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2467,"sourceUnit":521,"src":"185:53:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","file":"../../../utils/math/MathUpgradeable.sol","id":1717,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2467,"sourceUnit":4775,"src":"239:49:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol","file":"../../../utils/math/SafeCastUpgradeable.sol","id":1718,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2467,"sourceUnit":6316,"src":"289:53:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","file":"../../../utils/cryptography/ECDSAUpgradeable.sol","id":1719,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2467,"sourceUnit":3569,"src":"343:58:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1720,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2467,"sourceUnit":705,"src":"402:48:11","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1722,"name":"Initializable","nameLocations":["1390:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"1390:13:11"},"id":1723,"nodeType":"InheritanceSpecifier","src":"1390:13:11"},{"baseName":{"id":1724,"name":"ERC20PermitUpgradeable","nameLocations":["1405:22:11"],"nodeType":"IdentifierPath","referencedDeclaration":1712,"src":"1405:22:11"},"id":1725,"nodeType":"InheritanceSpecifier","src":"1405:22:11"},{"baseName":{"id":1726,"name":"IERC5805Upgradeable","nameLocations":["1429:19:11"],"nodeType":"IdentifierPath","referencedDeclaration":520,"src":"1429:19:11"},"id":1727,"nodeType":"InheritanceSpecifier","src":"1429:19:11"}],"canonicalName":"ERC20VotesUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1721,"nodeType":"StructuredDocumentation","src":"452:894:11","text":" @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n power can be queried through the public accessors {getVotes} and {getPastVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n _Available since v4.2._"},"fullyImplemented":true,"id":2466,"internalFunctionIDs":{"2431":1,"2445":2},"linearizedBaseContracts":[2466,520,486,535,1712,3852,511,2527,1443,2491,1521,2899,704],"name":"ERC20VotesUpgradeable","nameLocation":"1365:21:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1732,"nodeType":"Block","src":"1510:7:11","statements":[]},"id":1733,"implemented":true,"kind":"function","modifiers":[{"id":1730,"kind":"modifierInvocation","modifierName":{"id":1729,"name":"onlyInitializing","nameLocations":["1493:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":649,"src":"1493:16:11"},"nodeType":"ModifierInvocation","src":"1493:16:11"}],"name":"__ERC20Votes_init","nameLocation":"1464:17:11","nodeType":"FunctionDefinition","parameters":{"id":1728,"nodeType":"ParameterList","parameters":[],"src":"1481:2:11"},"returnParameters":{"id":1731,"nodeType":"ParameterList","parameters":[],"src":"1510:0:11"},"scope":2466,"src":"1455:62:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1738,"nodeType":"Block","src":"1588:7:11","statements":[]},"id":1739,"implemented":true,"kind":"function","modifiers":[{"id":1736,"kind":"modifierInvocation","modifierName":{"id":1735,"name":"onlyInitializing","nameLocations":["1571:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":649,"src":"1571:16:11"},"nodeType":"ModifierInvocation","src":"1571:16:11"}],"name":"__ERC20Votes_init_unchained","nameLocation":"1532:27:11","nodeType":"FunctionDefinition","parameters":{"id":1734,"nodeType":"ParameterList","parameters":[],"src":"1559:2:11"},"returnParameters":{"id":1737,"nodeType":"ParameterList","parameters":[],"src":"1588:0:11"},"scope":2466,"src":"1523:72:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"canonicalName":"ERC20VotesUpgradeable.Checkpoint","id":1744,"members":[{"constant":false,"id":1741,"mutability":"mutable","name":"fromBlock","nameLocation":"1635:9:11","nodeType":"VariableDeclaration","scope":1744,"src":"1628:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1740,"name":"uint32","nodeType":"ElementaryTypeName","src":"1628:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1743,"mutability":"mutable","name":"votes","nameLocation":"1662:5:11","nodeType":"VariableDeclaration","scope":1744,"src":"1654:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1742,"name":"uint224","nodeType":"ElementaryTypeName","src":"1654:7:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint","nameLocation":"1607:10:11","nodeType":"StructDefinition","scope":2466,"src":"1600:74:11","visibility":"public"},{"constant":true,"id":1749,"mutability":"constant","name":"_DELEGATION_TYPEHASH","nameLocation":"1705:20:11","nodeType":"VariableDeclaration","scope":2466,"src":"1680:127:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1745,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1680:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1746:60:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":1746,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1736:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1736:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1753,"mutability":"mutable","name":"_delegates","nameLocation":"1850:10:11","nodeType":"VariableDeclaration","scope":2466,"src":"1814:46:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":1752,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1750,"name":"address","nodeType":"ElementaryTypeName","src":"1822:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1814:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1751,"name":"address","nodeType":"ElementaryTypeName","src":"1833:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1759,"mutability":"mutable","name":"_checkpoints","nameLocation":"1907:12:11","nodeType":"VariableDeclaration","scope":2466,"src":"1866:53:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])"},"typeName":{"id":1758,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1754,"name":"address","nodeType":"ElementaryTypeName","src":"1874:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1866:32:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":1756,"nodeType":"UserDefinedTypeName","pathNode":{"id":1755,"name":"Checkpoint","nameLocations":["1885:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1744,"src":"1885:10:11"},"referencedDeclaration":1744,"src":"1885:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1744_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"id":1757,"nodeType":"ArrayTypeName","src":"1885:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"}}},"visibility":"private"},{"constant":false,"id":1763,"mutability":"mutable","name":"_totalSupplyCheckpoints","nameLocation":"1946:23:11","nodeType":"VariableDeclaration","scope":2466,"src":"1925:44:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"},"typeName":{"baseType":{"id":1761,"nodeType":"UserDefinedTypeName","pathNode":{"id":1760,"name":"Checkpoint","nameLocations":["1925:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1744,"src":"1925:10:11"},"referencedDeclaration":1744,"src":"1925:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1744_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"id":1762,"nodeType":"ArrayTypeName","src":"1925:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"}},"visibility":"private"},{"baseFunctions":[528],"body":{"id":1776,"nodeType":"Block","src":"2177:66:11","statements":[{"expression":{"arguments":[{"expression":{"id":1772,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2223:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2229:6:11","memberName":"number","nodeType":"MemberAccess","src":"2223:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1770,"name":"SafeCastUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"2194:19:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCastUpgradeable_$6315_$","typeString":"type(library SafeCastUpgradeable)"}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2214:8:11","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":5427,"src":"2194:28:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2194:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":1769,"id":1775,"nodeType":"Return","src":"2187:49:11"}]},"documentation":{"id":1764,"nodeType":"StructuredDocumentation","src":"1976:133:11","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":1777,"implemented":true,"kind":"function","modifiers":[],"name":"clock","nameLocation":"2123:5:11","nodeType":"FunctionDefinition","overrides":{"id":1766,"nodeType":"OverrideSpecifier","overrides":[],"src":"2151:8:11"},"parameters":{"id":1765,"nodeType":"ParameterList","parameters":[],"src":"2128:2:11"},"returnParameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1777,"src":"2169:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1767,"name":"uint48","nodeType":"ElementaryTypeName","src":"2169:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2168:8:11"},"scope":2466,"src":"2114:129:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[534],"body":{"id":1795,"nodeType":"Block","src":"2430:179:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1785,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"2497:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1787,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2508:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2514:6:11","memberName":"number","nodeType":"MemberAccess","src":"2508:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a2062726f6b656e20636c6f636b206d6f6465","id":1790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2522:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df","typeString":"literal_string \"ERC20Votes: broken clock mode\""},"value":"ERC20Votes: broken clock mode"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df","typeString":"literal_string \"ERC20Votes: broken clock mode\""}],"id":1784,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2489:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2489:65:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1792,"nodeType":"ExpressionStatement","src":"2489:65:11"},{"expression":{"hexValue":"6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74","id":1793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2571:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f79d44e499ce83a99049e0b7ebf2d6f56e249303be3c14798235137af5ea536","typeString":"literal_string \"mode=blocknumber&from=default\""},"value":"mode=blocknumber&from=default"},"functionReturnParameters":1783,"id":1794,"nodeType":"Return","src":"2564:38:11"}]},"documentation":{"id":1778,"nodeType":"StructuredDocumentation","src":"2249:48:11","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":1796,"implemented":true,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"2364:10:11","nodeType":"FunctionDefinition","overrides":{"id":1780,"nodeType":"OverrideSpecifier","overrides":[],"src":"2397:8:11"},"parameters":{"id":1779,"nodeType":"ParameterList","parameters":[],"src":"2374:2:11"},"returnParameters":{"id":1783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1796,"src":"2415:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1781,"name":"string","nodeType":"ElementaryTypeName","src":"2415:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2414:15:11"},"scope":2466,"src":"2355:254:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1813,"nodeType":"Block","src":"2784:50:11","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1807,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"2801:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":1809,"indexExpression":{"id":1808,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"2814:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2801:21:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},"id":1811,"indexExpression":{"id":1810,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"2823:3:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2801:26:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1744_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref"}},"functionReturnParameters":1806,"id":1812,"nodeType":"Return","src":"2794:33:11"}]},"documentation":{"id":1797,"nodeType":"StructuredDocumentation","src":"2615:66:11","text":" @dev Get the `pos`-th checkpoint for `account`."},"functionSelector":"f1127ed8","id":1814,"implemented":true,"kind":"function","modifiers":[],"name":"checkpoints","nameLocation":"2695:11:11","nodeType":"FunctionDefinition","parameters":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1799,"mutability":"mutable","name":"account","nameLocation":"2715:7:11","nodeType":"VariableDeclaration","scope":1814,"src":"2707:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1798,"name":"address","nodeType":"ElementaryTypeName","src":"2707:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1801,"mutability":"mutable","name":"pos","nameLocation":"2731:3:11","nodeType":"VariableDeclaration","scope":1814,"src":"2724:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1800,"name":"uint32","nodeType":"ElementaryTypeName","src":"2724:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2706:29:11"},"returnParameters":{"id":1806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1814,"src":"2765:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1744_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"},"typeName":{"id":1804,"nodeType":"UserDefinedTypeName","pathNode":{"id":1803,"name":"Checkpoint","nameLocations":["2765:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1744,"src":"2765:10:11"},"referencedDeclaration":1744,"src":"2765:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1744_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"visibility":"internal"}],"src":"2764:19:11"},"scope":2466,"src":"2686:148:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1830,"nodeType":"Block","src":"2987:82:11","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1824,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"3033:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":1826,"indexExpression":{"id":1825,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"3046:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3033:21:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3055:6:11","memberName":"length","nodeType":"MemberAccess","src":"3033:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1822,"name":"SafeCastUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"3004:19:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCastUpgradeable_$6315_$","typeString":"type(library SafeCastUpgradeable)"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3024:8:11","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":5477,"src":"3004:28:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3004:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":1821,"id":1829,"nodeType":"Return","src":"2997:65:11"}]},"documentation":{"id":1815,"nodeType":"StructuredDocumentation","src":"2840:64:11","text":" @dev Get number of checkpoints for `account`."},"functionSelector":"6fcfff45","id":1831,"implemented":true,"kind":"function","modifiers":[],"name":"numCheckpoints","nameLocation":"2918:14:11","nodeType":"FunctionDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1817,"mutability":"mutable","name":"account","nameLocation":"2941:7:11","nodeType":"VariableDeclaration","scope":1831,"src":"2933:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1816,"name":"address","nodeType":"ElementaryTypeName","src":"2933:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2932:17:11"},"returnParameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1831,"src":"2979:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1819,"name":"uint32","nodeType":"ElementaryTypeName","src":"2979:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2978:8:11"},"scope":2466,"src":"2909:160:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[463],"body":{"id":1844,"nodeType":"Block","src":"3240:43:11","statements":[{"expression":{"baseExpression":{"id":1840,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"3257:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1842,"indexExpression":{"id":1841,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"3268:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3257:19:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1839,"id":1843,"nodeType":"Return","src":"3250:26:11"}]},"documentation":{"id":1832,"nodeType":"StructuredDocumentation","src":"3075:77:11","text":" @dev Get the address `account` is currently delegating to."},"functionSelector":"587cde1e","id":1845,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"3166:9:11","nodeType":"FunctionDefinition","overrides":{"id":1836,"nodeType":"OverrideSpecifier","overrides":[],"src":"3213:8:11"},"parameters":{"id":1835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"account","nameLocation":"3184:7:11","nodeType":"VariableDeclaration","scope":1845,"src":"3176:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1833,"name":"address","nodeType":"ElementaryTypeName","src":"3176:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3175:17:11"},"returnParameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1845,"src":"3231:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1837,"name":"address","nodeType":"ElementaryTypeName","src":"3231:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3230:9:11"},"scope":2466,"src":"3157:126:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[437],"body":{"id":1876,"nodeType":"Block","src":"3444:161:11","statements":[{"assignments":[1855],"declarations":[{"constant":false,"id":1855,"mutability":"mutable","name":"pos","nameLocation":"3462:3:11","nodeType":"VariableDeclaration","scope":1876,"src":"3454:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1854,"name":"uint256","nodeType":"ElementaryTypeName","src":"3454:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1860,"initialValue":{"expression":{"baseExpression":{"id":1856,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"3468:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":1858,"indexExpression":{"id":1857,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"3481:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3468:21:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3490:6:11","memberName":"length","nodeType":"MemberAccess","src":"3468:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3454:42:11"},{"id":1875,"nodeType":"UncheckedBlock","src":"3506:93:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1861,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"3537:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3544:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3537:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"baseExpression":{"baseExpression":{"id":1865,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"3552:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":1867,"indexExpression":{"id":1866,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"3565:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3552:21:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},"id":1871,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1868,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"3574:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3580:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3574:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3552:30:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1744_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref"}},"id":1872,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3583:5:11","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1743,"src":"3552:36:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3537:51:11","trueExpression":{"hexValue":"30","id":1864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3548:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1853,"id":1874,"nodeType":"Return","src":"3530:58:11"}]}]},"documentation":{"id":1846,"nodeType":"StructuredDocumentation","src":"3289:68:11","text":" @dev Gets the current votes balance for `account`"},"functionSelector":"9ab24eb0","id":1877,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"3371:8:11","nodeType":"FunctionDefinition","overrides":{"id":1850,"nodeType":"OverrideSpecifier","overrides":[],"src":"3417:8:11"},"parameters":{"id":1849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"account","nameLocation":"3388:7:11","nodeType":"VariableDeclaration","scope":1877,"src":"3380:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1847,"name":"address","nodeType":"ElementaryTypeName","src":"3380:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3379:17:11"},"returnParameters":{"id":1853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1877,"src":"3435:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"3435:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3434:9:11"},"scope":2466,"src":"3362:243:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[447],"body":{"id":1903,"nodeType":"Block","src":"3890:143:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1889,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"3908:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1890,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"3920:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3920:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3908:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20667574757265206c6f6f6b7570","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3929:27:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""},"value":"ERC20Votes: future lookup"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""}],"id":1888,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3900:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3900:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1895,"nodeType":"ExpressionStatement","src":"3900:57:11"},{"expression":{"arguments":[{"baseExpression":{"id":1897,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"3993:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":1899,"indexExpression":{"id":1898,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"4006:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3993:21:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},{"id":1900,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"4016:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1896,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"3974:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3974:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1887,"id":1902,"nodeType":"Return","src":"3967:59:11"}]},"documentation":{"id":1878,"nodeType":"StructuredDocumentation","src":"3611:169:11","text":" @dev Retrieve the number of votes for `account` at the end of `timepoint`.\n Requirements:\n - `timepoint` must be in the past"},"functionSelector":"3a46b1a8","id":1904,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"3794:12:11","nodeType":"FunctionDefinition","overrides":{"id":1884,"nodeType":"OverrideSpecifier","overrides":[],"src":"3863:8:11"},"parameters":{"id":1883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1880,"mutability":"mutable","name":"account","nameLocation":"3815:7:11","nodeType":"VariableDeclaration","scope":1904,"src":"3807:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1879,"name":"address","nodeType":"ElementaryTypeName","src":"3807:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1882,"mutability":"mutable","name":"timepoint","nameLocation":"3832:9:11","nodeType":"VariableDeclaration","scope":1904,"src":"3824:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1881,"name":"uint256","nodeType":"ElementaryTypeName","src":"3824:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3806:36:11"},"returnParameters":{"id":1887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1904,"src":"3881:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1885,"name":"uint256","nodeType":"ElementaryTypeName","src":"3881:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3880:9:11"},"scope":2466,"src":"3785:248:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[455],"body":{"id":1926,"nodeType":"Block","src":"4389:145:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1914,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"4407:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1915,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"4419:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4419:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4407:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20667574757265206c6f6f6b7570","id":1918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4428:27:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""},"value":"ERC20Votes: future lookup"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""}],"id":1913,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4399:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1920,"nodeType":"ExpressionStatement","src":"4399:57:11"},{"expression":{"arguments":[{"id":1922,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"4492:23:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},{"id":1923,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"4517:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1921,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"4473:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4473:54:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1912,"id":1925,"nodeType":"Return","src":"4466:61:11"}]},"documentation":{"id":1905,"nodeType":"StructuredDocumentation","src":"4039:251:11","text":" @dev Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances.\n It is NOT the sum of all the delegated votes!\n Requirements:\n - `timepoint` must be in the past"},"functionSelector":"8e539e8c","id":1927,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"4304:18:11","nodeType":"FunctionDefinition","overrides":{"id":1909,"nodeType":"OverrideSpecifier","overrides":[],"src":"4362:8:11"},"parameters":{"id":1908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"timepoint","nameLocation":"4331:9:11","nodeType":"VariableDeclaration","scope":1927,"src":"4323:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1906,"name":"uint256","nodeType":"ElementaryTypeName","src":"4323:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4322:19:11"},"returnParameters":{"id":1912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1927,"src":"4380:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1910,"name":"uint256","nodeType":"ElementaryTypeName","src":"4380:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4379:9:11"},"scope":2466,"src":"4295:239:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2033,"nodeType":"Block","src":"4724:1811:11","statements":[{"assignments":[1940],"declarations":[{"constant":false,"id":1940,"mutability":"mutable","name":"length","nameLocation":"5820:6:11","nodeType":"VariableDeclaration","scope":2033,"src":"5812:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1939,"name":"uint256","nodeType":"ElementaryTypeName","src":"5812:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1943,"initialValue":{"expression":{"id":1941,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"5829:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5835:6:11","memberName":"length","nodeType":"MemberAccess","src":"5829:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5812:29:11"},{"assignments":[1945],"declarations":[{"constant":false,"id":1945,"mutability":"mutable","name":"low","nameLocation":"5860:3:11","nodeType":"VariableDeclaration","scope":2033,"src":"5852:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1944,"name":"uint256","nodeType":"ElementaryTypeName","src":"5852:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1947,"initialValue":{"hexValue":"30","id":1946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5866:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5852:15:11"},{"assignments":[1949],"declarations":[{"constant":false,"id":1949,"mutability":"mutable","name":"high","nameLocation":"5885:4:11","nodeType":"VariableDeclaration","scope":2033,"src":"5877:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1948,"name":"uint256","nodeType":"ElementaryTypeName","src":"5877:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1951,"initialValue":{"id":1950,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"5892:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5877:21:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1952,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"5913:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5922:1:11","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"5913:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1985,"nodeType":"IfStatement","src":"5909:253:11","trueBody":{"id":1984,"nodeType":"Block","src":"5925:237:11","statements":[{"assignments":[1956],"declarations":[{"constant":false,"id":1956,"mutability":"mutable","name":"mid","nameLocation":"5947:3:11","nodeType":"VariableDeclaration","scope":1984,"src":"5939:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1955,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1963,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1957,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"5953:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":1960,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"5983:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1958,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"5962:15:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$4774_$","typeString":"type(library MathUpgradeable)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5978:4:11","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":4278,"src":"5962:20:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5962:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5953:37:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:51:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1965,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"6022:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},{"id":1966,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"6029:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1964,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"6008:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1744_storage_ptr_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20VotesUpgradeable.Checkpoint storage pointer)"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6008:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1744_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage pointer"}},"id":1968,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6034:9:11","memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1741,"src":"6008:35:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1969,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"6046:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6008:47:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1982,"nodeType":"Block","src":"6106:46:11","statements":[{"expression":{"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1976,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"6124:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1977,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"6130:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6136:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6130:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6124:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1981,"nodeType":"ExpressionStatement","src":"6124:13:11"}]},"id":1983,"nodeType":"IfStatement","src":"6004:148:11","trueBody":{"id":1975,"nodeType":"Block","src":"6057:43:11","statements":[{"expression":{"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1971,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"6075:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1972,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"6082:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6075:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1974,"nodeType":"ExpressionStatement","src":"6075:10:11"}]}}]}},{"body":{"id":2017,"nodeType":"Block","src":"6191:234:11","statements":[{"assignments":[1990],"declarations":[{"constant":false,"id":1990,"mutability":"mutable","name":"mid","nameLocation":"6213:3:11","nodeType":"VariableDeclaration","scope":2017,"src":"6205:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1989,"name":"uint256","nodeType":"ElementaryTypeName","src":"6205:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1996,"initialValue":{"arguments":[{"id":1993,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"6243:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1994,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"6248:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1991,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"6219:15:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$4774_$","typeString":"type(library MathUpgradeable)"}},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6235:7:11","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3974,"src":"6219:23:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6219:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6205:48:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1998,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"6285:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},{"id":1999,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"6292:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1997,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"6271:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1744_storage_ptr_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20VotesUpgradeable.Checkpoint storage pointer)"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6271:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1744_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage pointer"}},"id":2001,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6297:9:11","memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1741,"src":"6271:35:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2002,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"6309:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6271:47:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2015,"nodeType":"Block","src":"6369:46:11","statements":[{"expression":{"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2009,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"6387:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2010,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"6393:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6399:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6393:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6387:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2014,"nodeType":"ExpressionStatement","src":"6387:13:11"}]},"id":2016,"nodeType":"IfStatement","src":"6267:148:11","trueBody":{"id":2008,"nodeType":"Block","src":"6320:43:11","statements":[{"expression":{"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2004,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"6338:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2005,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"6345:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6338:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2007,"nodeType":"ExpressionStatement","src":"6338:10:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1986,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"6179:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1987,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"6185:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6179:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2018,"nodeType":"WhileStatement","src":"6172:253:11"},{"id":2032,"nodeType":"UncheckedBlock","src":"6435:94:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2019,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"6466:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6474:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6466:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"id":2024,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"6496:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2025,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"6503:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6510:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6503:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2023,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"6482:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1744_storage_ptr_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20VotesUpgradeable.Checkpoint storage pointer)"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6482:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1744_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage pointer"}},"id":2029,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6513:5:11","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1743,"src":"6482:36:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6466:52:11","trueExpression":{"hexValue":"30","id":2022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6478:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1938,"id":2031,"nodeType":"Return","src":"6459:59:11"}]}]},"documentation":{"id":1928,"nodeType":"StructuredDocumentation","src":"4540:73:11","text":" @dev Lookup a value in a list of (sorted) checkpoints."},"id":2034,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpointsLookup","nameLocation":"4627:18:11","nodeType":"FunctionDefinition","parameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1932,"mutability":"mutable","name":"ckpts","nameLocation":"4667:5:11","nodeType":"VariableDeclaration","scope":2034,"src":"4646:26:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"},"typeName":{"baseType":{"id":1930,"nodeType":"UserDefinedTypeName","pathNode":{"id":1929,"name":"Checkpoint","nameLocations":["4646:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1744,"src":"4646:10:11"},"referencedDeclaration":1744,"src":"4646:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1744_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"id":1931,"nodeType":"ArrayTypeName","src":"4646:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"timepoint","nameLocation":"4682:9:11","nodeType":"VariableDeclaration","scope":2034,"src":"4674:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1933,"name":"uint256","nodeType":"ElementaryTypeName","src":"4674:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4645:47:11"},"returnParameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2034,"src":"4715:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1936,"name":"uint256","nodeType":"ElementaryTypeName","src":"4715:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4714:9:11"},"scope":2466,"src":"4618:1917:11","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[469],"body":{"id":2047,"nodeType":"Block","src":"6677:51:11","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2042,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"6697:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6697:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2044,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"6711:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2041,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"6687:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6687:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2046,"nodeType":"ExpressionStatement","src":"6687:34:11"}]},"documentation":{"id":2035,"nodeType":"StructuredDocumentation","src":"6541:70:11","text":" @dev Delegate votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":2048,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"6625:8:11","nodeType":"FunctionDefinition","overrides":{"id":2039,"nodeType":"OverrideSpecifier","overrides":[],"src":"6668:8:11"},"parameters":{"id":2038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2037,"mutability":"mutable","name":"delegatee","nameLocation":"6642:9:11","nodeType":"VariableDeclaration","scope":2048,"src":"6634:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2036,"name":"address","nodeType":"ElementaryTypeName","src":"6634:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6633:19:11"},"returnParameters":{"id":2040,"nodeType":"ParameterList","parameters":[],"src":"6677:0:11"},"scope":2466,"src":"6616:112:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[485],"body":{"id":2107,"nodeType":"Block","src":"6987:403:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2066,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7005:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7011:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"7005:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2068,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"7024:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7005:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a207369676e61747572652065787069726564","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7032:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""},"value":"ERC20Votes: signature expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""}],"id":2065,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6997:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6997:67:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2072,"nodeType":"ExpressionStatement","src":"6997:67:11"},{"assignments":[2074],"declarations":[{"constant":false,"id":2074,"mutability":"mutable","name":"signer","nameLocation":"7082:6:11","nodeType":"VariableDeclaration","scope":2107,"src":"7074:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2073,"name":"address","nodeType":"ElementaryTypeName","src":"7074:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2092,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":2081,"name":"_DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"7167:20:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2082,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"7189:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2083,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"7200:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2084,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"7207:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2079,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7156:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7160:6:11","memberName":"encode","nodeType":"MemberAccess","src":"7156:10:11","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7156:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2078,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7146:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7146:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2077,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"7129:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7129:87:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2088,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"7230:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2089,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"7245:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2090,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"7260:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2075,"name":"ECDSAUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"7091:16:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSAUpgradeable_$3568_$","typeString":"type(library ECDSAUpgradeable)"}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7108:7:11","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3503,"src":"7091:24:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7091:180:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7074:197:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2094,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"7289:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":2096,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"7308:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2095,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"7298:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7298:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7289:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20696e76616c6964206e6f6e6365","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7317:27:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""},"value":"ERC20Votes: invalid nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""}],"id":2093,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7281:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7281:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2101,"nodeType":"ExpressionStatement","src":"7281:64:11"},{"expression":{"arguments":[{"id":2103,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"7365:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2104,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"7373:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2102,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"7355:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7355:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2106,"nodeType":"ExpressionStatement","src":"7355:28:11"}]},"documentation":{"id":2049,"nodeType":"StructuredDocumentation","src":"6734:66:11","text":" @dev Delegates votes from signer to `delegatee`"},"functionSelector":"c3cda520","id":2108,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"6814:13:11","nodeType":"FunctionDefinition","overrides":{"id":2063,"nodeType":"OverrideSpecifier","overrides":[],"src":"6978:8:11"},"parameters":{"id":2062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2051,"mutability":"mutable","name":"delegatee","nameLocation":"6845:9:11","nodeType":"VariableDeclaration","scope":2108,"src":"6837:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2050,"name":"address","nodeType":"ElementaryTypeName","src":"6837:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2053,"mutability":"mutable","name":"nonce","nameLocation":"6872:5:11","nodeType":"VariableDeclaration","scope":2108,"src":"6864:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2052,"name":"uint256","nodeType":"ElementaryTypeName","src":"6864:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2055,"mutability":"mutable","name":"expiry","nameLocation":"6895:6:11","nodeType":"VariableDeclaration","scope":2108,"src":"6887:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2054,"name":"uint256","nodeType":"ElementaryTypeName","src":"6887:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2057,"mutability":"mutable","name":"v","nameLocation":"6917:1:11","nodeType":"VariableDeclaration","scope":2108,"src":"6911:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2056,"name":"uint8","nodeType":"ElementaryTypeName","src":"6911:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2059,"mutability":"mutable","name":"r","nameLocation":"6936:1:11","nodeType":"VariableDeclaration","scope":2108,"src":"6928:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2058,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6928:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2061,"mutability":"mutable","name":"s","nameLocation":"6955:1:11","nodeType":"VariableDeclaration","scope":2108,"src":"6947:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2060,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6827:135:11"},"returnParameters":{"id":2064,"nodeType":"ParameterList","parameters":[],"src":"6987:0:11"},"scope":2466,"src":"6805:585:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2120,"nodeType":"Block","src":"7554:41:11","statements":[{"expression":{"expression":{"arguments":[{"id":2116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7576:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2115,"name":"uint224","nodeType":"ElementaryTypeName","src":"7576:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":2114,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7571:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7571:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7585:3:11","memberName":"max","nodeType":"MemberAccess","src":"7571:17:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2113,"id":2119,"nodeType":"Return","src":"7564:24:11"}]},"documentation":{"id":2109,"nodeType":"StructuredDocumentation","src":"7396:91:11","text":" @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1)."},"id":2121,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"7501:10:11","nodeType":"FunctionDefinition","parameters":{"id":2110,"nodeType":"ParameterList","parameters":[],"src":"7511:2:11"},"returnParameters":{"id":2113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2121,"src":"7545:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":2111,"name":"uint224","nodeType":"ElementaryTypeName","src":"7545:7:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"7544:9:11"},"scope":2466,"src":"7492:103:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1255],"body":{"id":2152,"nodeType":"Block","src":"7758:211:11","statements":[{"expression":{"arguments":[{"id":2133,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"7780:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2134,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"7789:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2130,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7768:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20VotesUpgradeable_$2466_$","typeString":"type(contract super ERC20VotesUpgradeable)"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7774:5:11","memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":1255,"src":"7768:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7768:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2136,"nodeType":"ExpressionStatement","src":"7768:28:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2138,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"7814:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7814:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2140,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"7831:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint224_$","typeString":"function () view returns (uint224)"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7831:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"7814:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f766572666c6f77696e6720766f746573","id":2143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7845:50:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""},"value":"ERC20Votes: total supply risks overflowing votes"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""}],"id":2137,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7806:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7806:90:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2145,"nodeType":"ExpressionStatement","src":"7806:90:11"},{"expression":{"arguments":[{"id":2147,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"7924:23:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},{"id":2148,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"7949:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":2149,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"7955:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2146,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"7907:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7907:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":2151,"nodeType":"ExpressionStatement","src":"7907:55:11"}]},"documentation":{"id":2122,"nodeType":"StructuredDocumentation","src":"7601:78:11","text":" @dev Snapshots the totalSupply after it has been increased."},"id":2153,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7693:5:11","nodeType":"FunctionDefinition","overrides":{"id":2128,"nodeType":"OverrideSpecifier","overrides":[],"src":"7749:8:11"},"parameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2124,"mutability":"mutable","name":"account","nameLocation":"7707:7:11","nodeType":"VariableDeclaration","scope":2153,"src":"7699:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2123,"name":"address","nodeType":"ElementaryTypeName","src":"7699:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2126,"mutability":"mutable","name":"amount","nameLocation":"7724:6:11","nodeType":"VariableDeclaration","scope":2153,"src":"7716:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2125,"name":"uint256","nodeType":"ElementaryTypeName","src":"7716:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7698:33:11"},"returnParameters":{"id":2129,"nodeType":"ParameterList","parameters":[],"src":"7758:0:11"},"scope":2466,"src":"7684:285:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1327],"body":{"id":2175,"nodeType":"Block","src":"8132:116:11","statements":[{"expression":{"arguments":[{"id":2165,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"8154:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2166,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"8163:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2162,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"8142:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20VotesUpgradeable_$2466_$","typeString":"type(contract super ERC20VotesUpgradeable)"}},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8148:5:11","memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":1327,"src":"8142:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8142:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2168,"nodeType":"ExpressionStatement","src":"8142:28:11"},{"expression":{"arguments":[{"id":2170,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"8198:23:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},{"id":2171,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"8223:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":2172,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"8234:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2169,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"8181:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8181:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":2174,"nodeType":"ExpressionStatement","src":"8181:60:11"}]},"documentation":{"id":2154,"nodeType":"StructuredDocumentation","src":"7975:78:11","text":" @dev Snapshots the totalSupply after it has been decreased."},"id":2176,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8067:5:11","nodeType":"FunctionDefinition","overrides":{"id":2160,"nodeType":"OverrideSpecifier","overrides":[],"src":"8123:8:11"},"parameters":{"id":2159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2156,"mutability":"mutable","name":"account","nameLocation":"8081:7:11","nodeType":"VariableDeclaration","scope":2176,"src":"8073:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2155,"name":"address","nodeType":"ElementaryTypeName","src":"8073:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2158,"mutability":"mutable","name":"amount","nameLocation":"8098:6:11","nodeType":"VariableDeclaration","scope":2176,"src":"8090:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2157,"name":"uint256","nodeType":"ElementaryTypeName","src":"8090:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8072:33:11"},"returnParameters":{"id":2161,"nodeType":"ParameterList","parameters":[],"src":"8132:0:11"},"scope":2466,"src":"8058:190:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1437],"body":{"id":2205,"nodeType":"Block","src":"8485:127:11","statements":[{"expression":{"arguments":[{"id":2190,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"8521:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2191,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"8527:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2192,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"8531:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2187,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"8495:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20VotesUpgradeable_$2466_$","typeString":"type(contract super ERC20VotesUpgradeable)"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8501:19:11","memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1437,"src":"8495:25:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8495:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2194,"nodeType":"ExpressionStatement","src":"8495:43:11"},{"expression":{"arguments":[{"arguments":[{"id":2197,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"8576:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2196,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"8566:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8566:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2200,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"8593:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2199,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"8583:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2202,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"8598:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2195,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"8549:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8549:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2204,"nodeType":"ExpressionStatement","src":"8549:56:11"}]},"documentation":{"id":2177,"nodeType":"StructuredDocumentation","src":"8254:129:11","text":" @dev Move voting power when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":2206,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"8397:19:11","nodeType":"FunctionDefinition","overrides":{"id":2185,"nodeType":"OverrideSpecifier","overrides":[],"src":"8476:8:11"},"parameters":{"id":2184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2179,"mutability":"mutable","name":"from","nameLocation":"8425:4:11","nodeType":"VariableDeclaration","scope":2206,"src":"8417:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2178,"name":"address","nodeType":"ElementaryTypeName","src":"8417:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2181,"mutability":"mutable","name":"to","nameLocation":"8439:2:11","nodeType":"VariableDeclaration","scope":2206,"src":"8431:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2180,"name":"address","nodeType":"ElementaryTypeName","src":"8431:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2183,"mutability":"mutable","name":"amount","nameLocation":"8451:6:11","nodeType":"VariableDeclaration","scope":2206,"src":"8443:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2182,"name":"uint256","nodeType":"ElementaryTypeName","src":"8443:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8416:42:11"},"returnParameters":{"id":2186,"nodeType":"ParameterList","parameters":[],"src":"8485:0:11"},"scope":2466,"src":"8388:224:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2244,"nodeType":"Block","src":"8857:306:11","statements":[{"assignments":[2215],"declarations":[{"constant":false,"id":2215,"mutability":"mutable","name":"currentDelegate","nameLocation":"8875:15:11","nodeType":"VariableDeclaration","scope":2244,"src":"8867:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2214,"name":"address","nodeType":"ElementaryTypeName","src":"8867:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2219,"initialValue":{"arguments":[{"id":2217,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"8903:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2216,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"8893:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8893:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8867:46:11"},{"assignments":[2221],"declarations":[{"constant":false,"id":2221,"mutability":"mutable","name":"delegatorBalance","nameLocation":"8931:16:11","nodeType":"VariableDeclaration","scope":2244,"src":"8923:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2220,"name":"uint256","nodeType":"ElementaryTypeName","src":"8923:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2225,"initialValue":{"arguments":[{"id":2223,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"8960:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2222,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"8950:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8950:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8923:47:11"},{"expression":{"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2226,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"8980:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2228,"indexExpression":{"id":2227,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"8991:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8980:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2229,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"9004:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8980:33:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2231,"nodeType":"ExpressionStatement","src":"8980:33:11"},{"eventCall":{"arguments":[{"id":2233,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"9045:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2234,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"9056:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2235,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"9073:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2232,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"9029:15:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9029:54:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2237,"nodeType":"EmitStatement","src":"9024:59:11"},{"expression":{"arguments":[{"id":2239,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"9111:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2240,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"9128:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2241,"name":"delegatorBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"9139:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2238,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"9094:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9094:62:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2243,"nodeType":"ExpressionStatement","src":"9094:62:11"}]},"documentation":{"id":2207,"nodeType":"StructuredDocumentation","src":"8618:160:11","text":" @dev Change delegation for `delegator` to `delegatee`.\n Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}."},"id":2245,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"8792:9:11","nodeType":"FunctionDefinition","parameters":{"id":2212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"delegator","nameLocation":"8810:9:11","nodeType":"VariableDeclaration","scope":2245,"src":"8802:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2208,"name":"address","nodeType":"ElementaryTypeName","src":"8802:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2211,"mutability":"mutable","name":"delegatee","nameLocation":"8829:9:11","nodeType":"VariableDeclaration","scope":2245,"src":"8821:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2210,"name":"address","nodeType":"ElementaryTypeName","src":"8821:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8801:38:11"},"returnParameters":{"id":2213,"nodeType":"ParameterList","parameters":[],"src":"8857:0:11"},"scope":2466,"src":"8783:380:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2315,"nodeType":"Block","src":"9245:521:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2254,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"9259:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2255,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"9266:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9259:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2257,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"9273:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9282:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9273:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9259:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2314,"nodeType":"IfStatement","src":"9255:505:11","trueBody":{"id":2313,"nodeType":"Block","src":"9285:475:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2261,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"9303:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9310:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2262,"name":"address","nodeType":"ElementaryTypeName","src":"9310:7:11","typeDescriptions":{}}},"id":2265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9310:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9303:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2286,"nodeType":"IfStatement","src":"9299:221:11","trueBody":{"id":2285,"nodeType":"Block","src":"9322:198:11","statements":[{"assignments":[2268,2270],"declarations":[{"constant":false,"id":2268,"mutability":"mutable","name":"oldWeight","nameLocation":"9349:9:11","nodeType":"VariableDeclaration","scope":2285,"src":"9341:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2267,"name":"uint256","nodeType":"ElementaryTypeName","src":"9341:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2270,"mutability":"mutable","name":"newWeight","nameLocation":"9368:9:11","nodeType":"VariableDeclaration","scope":2285,"src":"9360:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2269,"name":"uint256","nodeType":"ElementaryTypeName","src":"9360:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2278,"initialValue":{"arguments":[{"baseExpression":{"id":2272,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"9398:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":2274,"indexExpression":{"id":2273,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"9411:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9398:17:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},{"id":2275,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"9417:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":2276,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"9428:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2271,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"9381:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9381:54:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9340:95:11"},{"eventCall":{"arguments":[{"id":2280,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"9479:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2281,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"9484:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2282,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"9495:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2279,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"9458:20:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9458:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2284,"nodeType":"EmitStatement","src":"9453:52:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2287,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"9538:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9553:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9545:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2288,"name":"address","nodeType":"ElementaryTypeName","src":"9545:7:11","typeDescriptions":{}}},"id":2291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9545:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9538:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2312,"nodeType":"IfStatement","src":"9534:216:11","trueBody":{"id":2311,"nodeType":"Block","src":"9557:193:11","statements":[{"assignments":[2294,2296],"declarations":[{"constant":false,"id":2294,"mutability":"mutable","name":"oldWeight","nameLocation":"9584:9:11","nodeType":"VariableDeclaration","scope":2311,"src":"9576:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2293,"name":"uint256","nodeType":"ElementaryTypeName","src":"9576:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2296,"mutability":"mutable","name":"newWeight","nameLocation":"9603:9:11","nodeType":"VariableDeclaration","scope":2311,"src":"9595:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2295,"name":"uint256","nodeType":"ElementaryTypeName","src":"9595:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2304,"initialValue":{"arguments":[{"baseExpression":{"id":2298,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"9633:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref)"}},"id":2300,"indexExpression":{"id":2299,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"9646:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9633:17:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"}},{"id":2301,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"9652:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":2302,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"9658:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2297,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"9616:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9616:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9575:90:11"},{"eventCall":{"arguments":[{"id":2306,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"9709:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2307,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"9714:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2308,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"9725:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2305,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"9688:20:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9688:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2310,"nodeType":"EmitStatement","src":"9683:52:11"}]}}]}}]},"id":2316,"implemented":true,"kind":"function","modifiers":[],"name":"_moveVotingPower","nameLocation":"9178:16:11","nodeType":"FunctionDefinition","parameters":{"id":2252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2247,"mutability":"mutable","name":"src","nameLocation":"9203:3:11","nodeType":"VariableDeclaration","scope":2316,"src":"9195:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2246,"name":"address","nodeType":"ElementaryTypeName","src":"9195:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2249,"mutability":"mutable","name":"dst","nameLocation":"9216:3:11","nodeType":"VariableDeclaration","scope":2316,"src":"9208:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2248,"name":"address","nodeType":"ElementaryTypeName","src":"9208:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2251,"mutability":"mutable","name":"amount","nameLocation":"9229:6:11","nodeType":"VariableDeclaration","scope":2316,"src":"9221:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2250,"name":"uint256","nodeType":"ElementaryTypeName","src":"9221:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9194:42:11"},"returnParameters":{"id":2253,"nodeType":"ParameterList","parameters":[],"src":"9245:0:11"},"scope":2466,"src":"9169:597:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2416,"nodeType":"Block","src":"9980:593:11","statements":[{"assignments":[2340],"declarations":[{"constant":false,"id":2340,"mutability":"mutable","name":"pos","nameLocation":"9998:3:11","nodeType":"VariableDeclaration","scope":2416,"src":"9990:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2339,"name":"uint256","nodeType":"ElementaryTypeName","src":"9990:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2343,"initialValue":{"expression":{"id":2341,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"10004:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10010:6:11","memberName":"length","nodeType":"MemberAccess","src":"10004:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9990:26:11"},{"id":2415,"nodeType":"UncheckedBlock","src":"10027:540:11","statements":[{"assignments":[2346],"declarations":[{"constant":false,"id":2346,"mutability":"mutable","name":"oldCkpt","nameLocation":"10069:7:11","nodeType":"VariableDeclaration","scope":2415,"src":"10051:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1744_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"},"typeName":{"id":2345,"nodeType":"UserDefinedTypeName","pathNode":{"id":2344,"name":"Checkpoint","nameLocations":["10051:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1744,"src":"10051:10:11"},"referencedDeclaration":1744,"src":"10051:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1744_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"visibility":"internal"}],"id":2361,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2347,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"10079:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10086:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10079:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2355,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"10123:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2356,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"10130:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10136:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10130:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2354,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"10109:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1744_storage_ptr_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20VotesUpgradeable.Checkpoint storage pointer)"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10109:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1744_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage pointer"}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10079:59:11","trueExpression":{"arguments":[{"hexValue":"30","id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10104:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2350,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"10090:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$1744_storage_ptr_$","typeString":"type(struct ERC20VotesUpgradeable.Checkpoint storage pointer)"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10090:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1744_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint memory"}},"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1744_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint memory"}},"nodeType":"VariableDeclarationStatement","src":"10051:87:11"},{"expression":{"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2362,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"10153:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2363,"name":"oldCkpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"10165:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1744_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint memory"}},"id":2364,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10173:5:11","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1743,"src":"10165:13:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"10153:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2366,"nodeType":"ExpressionStatement","src":"10153:25:11"},{"expression":{"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2367,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"10192:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2369,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"10207:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2370,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"10218:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2368,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"10204:2:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10204:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10192:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2373,"nodeType":"ExpressionStatement","src":"10192:32:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2374,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"10243:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10249:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10243:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2377,"name":"oldCkpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"10254:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1744_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint memory"}},"id":2378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10262:9:11","memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1741,"src":"10254:17:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2379,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"10275:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10275:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"10254:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10243:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2413,"nodeType":"Block","src":"10401:156:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2403,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"10482:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10482:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":2401,"name":"SafeCastUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"10453:19:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCastUpgradeable_$6315_$","typeString":"type(library SafeCastUpgradeable)"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10473:8:11","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":5477,"src":"10453:28:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10453:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":2408,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"10529:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2406,"name":"SafeCastUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"10499:19:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCastUpgradeable_$6315_$","typeString":"type(library SafeCastUpgradeable)"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10519:9:11","memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":4877,"src":"10499:29:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10499:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":2400,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"10430:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$1744_storage_ptr_$","typeString":"type(struct ERC20VotesUpgradeable.Checkpoint storage pointer)"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["10442:9:11","10492:5:11"],"names":["fromBlock","votes"],"nodeType":"FunctionCall","src":"10430:111:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1744_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint_$1744_memory_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint memory"}],"expression":{"id":2397,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"10419:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10425:4:11","memberName":"push","nodeType":"MemberAccess","src":"10419:10:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$1744_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,struct ERC20VotesUpgradeable.Checkpoint storage ref)"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10419:123:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2412,"nodeType":"ExpressionStatement","src":"10419:123:11"}]},"id":2414,"nodeType":"IfStatement","src":"10239:318:11","trueBody":{"id":2396,"nodeType":"Block","src":"10284:111:11","statements":[{"expression":{"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2384,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"10316:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2385,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"10323:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10329:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10323:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2383,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"10302:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1744_storage_ptr_$","typeString":"function (struct ERC20VotesUpgradeable.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20VotesUpgradeable.Checkpoint storage pointer)"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10302:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1744_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint storage pointer"}},"id":2389,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10332:5:11","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1743,"src":"10302:35:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2392,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"10370:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2390,"name":"SafeCastUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"10340:19:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCastUpgradeable_$6315_$","typeString":"type(library SafeCastUpgradeable)"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10360:9:11","memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":4877,"src":"10340:29:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10340:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"10302:78:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":2395,"nodeType":"ExpressionStatement","src":"10302:78:11"}]}}]}]},"id":2417,"implemented":true,"kind":"function","modifiers":[],"name":"_writeCheckpoint","nameLocation":"9781:16:11","nodeType":"FunctionDefinition","parameters":{"id":2333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"ckpts","nameLocation":"9828:5:11","nodeType":"VariableDeclaration","scope":2417,"src":"9807:26:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"},"typeName":{"baseType":{"id":2318,"nodeType":"UserDefinedTypeName","pathNode":{"id":2317,"name":"Checkpoint","nameLocations":["9807:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1744,"src":"9807:10:11"},"referencedDeclaration":1744,"src":"9807:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1744_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"id":2319,"nodeType":"ArrayTypeName","src":"9807:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":2330,"mutability":"mutable","name":"op","nameLocation":"9893:2:11","nodeType":"VariableDeclaration","scope":2417,"src":"9843:52:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"typeName":{"id":2329,"nodeType":"FunctionTypeName","parameterTypes":{"id":2325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2329,"src":"9852:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2321,"name":"uint256","nodeType":"ElementaryTypeName","src":"9852:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2329,"src":"9861:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2323,"name":"uint256","nodeType":"ElementaryTypeName","src":"9861:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9851:18:11"},"returnParameterTypes":{"id":2328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2329,"src":"9884:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2326,"name":"uint256","nodeType":"ElementaryTypeName","src":"9884:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9883:9:11"},"src":"9843:52:11","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":2332,"mutability":"mutable","name":"delta","nameLocation":"9913:5:11","nodeType":"VariableDeclaration","scope":2417,"src":"9905:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2331,"name":"uint256","nodeType":"ElementaryTypeName","src":"9905:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9797:127:11"},"returnParameters":{"id":2338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2335,"mutability":"mutable","name":"oldWeight","nameLocation":"9950:9:11","nodeType":"VariableDeclaration","scope":2417,"src":"9942:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2334,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2337,"mutability":"mutable","name":"newWeight","nameLocation":"9969:9:11","nodeType":"VariableDeclaration","scope":2417,"src":"9961:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2336,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:38:11"},"scope":2466,"src":"9772:801:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2430,"nodeType":"Block","src":"10646:29:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2426,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"10663:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2427,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"10667:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10663:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2425,"id":2429,"nodeType":"Return","src":"10656:12:11"}]},"id":2431,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"10588:4:11","nodeType":"FunctionDefinition","parameters":{"id":2422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2419,"mutability":"mutable","name":"a","nameLocation":"10601:1:11","nodeType":"VariableDeclaration","scope":2431,"src":"10593:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2418,"name":"uint256","nodeType":"ElementaryTypeName","src":"10593:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2421,"mutability":"mutable","name":"b","nameLocation":"10612:1:11","nodeType":"VariableDeclaration","scope":2431,"src":"10604:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2420,"name":"uint256","nodeType":"ElementaryTypeName","src":"10604:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10592:22:11"},"returnParameters":{"id":2425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2431,"src":"10637:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2423,"name":"uint256","nodeType":"ElementaryTypeName","src":"10637:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10636:9:11"},"scope":2466,"src":"10579:96:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2444,"nodeType":"Block","src":"10753:29:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2440,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"10770:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2441,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"10774:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10770:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2439,"id":2443,"nodeType":"Return","src":"10763:12:11"}]},"id":2445,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"10690:9:11","nodeType":"FunctionDefinition","parameters":{"id":2436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"a","nameLocation":"10708:1:11","nodeType":"VariableDeclaration","scope":2445,"src":"10700:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"10700:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2435,"mutability":"mutable","name":"b","nameLocation":"10719:1:11","nodeType":"VariableDeclaration","scope":2445,"src":"10711:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2434,"name":"uint256","nodeType":"ElementaryTypeName","src":"10711:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10699:22:11"},"returnParameters":{"id":2439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2445,"src":"10744:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2437,"name":"uint256","nodeType":"ElementaryTypeName","src":"10744:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10743:9:11"},"scope":2466,"src":"10681:101:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2459,"nodeType":"Block","src":"11038:126:11","statements":[{"AST":{"nodeType":"YulBlock","src":"11057:101:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11078:1:11","type":"","value":"0"},{"name":"ckpts.slot","nodeType":"YulIdentifier","src":"11081:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11071:6:11"},"nodeType":"YulFunctionCall","src":"11071:21:11"},"nodeType":"YulExpressionStatement","src":"11071:21:11"},{"nodeType":"YulAssignment","src":"11105:43:11","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11134:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11137:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"11124:9:11"},"nodeType":"YulFunctionCall","src":"11124:18:11"},{"name":"pos","nodeType":"YulIdentifier","src":"11144:3:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11120:3:11"},"nodeType":"YulFunctionCall","src":"11120:28:11"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"11105:11:11"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":2450,"isOffset":false,"isSlot":true,"src":"11081:10:11","suffix":"slot","valueSize":1},{"declaration":2452,"isOffset":false,"isSlot":false,"src":"11144:3:11","valueSize":1},{"declaration":2456,"isOffset":false,"isSlot":true,"src":"11105:11:11","suffix":"slot","valueSize":1}],"id":2458,"nodeType":"InlineAssembly","src":"11048:110:11"}]},"documentation":{"id":2446,"nodeType":"StructuredDocumentation","src":"10788:132:11","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":2460,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"10934:13:11","nodeType":"FunctionDefinition","parameters":{"id":2453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2450,"mutability":"mutable","name":"ckpts","nameLocation":"10969:5:11","nodeType":"VariableDeclaration","scope":2460,"src":"10948:26:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"},"typeName":{"baseType":{"id":2448,"nodeType":"UserDefinedTypeName","pathNode":{"id":2447,"name":"Checkpoint","nameLocations":["10948:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1744,"src":"10948:10:11"},"referencedDeclaration":1744,"src":"10948:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1744_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"id":2449,"nodeType":"ArrayTypeName","src":"10948:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1744_storage_$dyn_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":2452,"mutability":"mutable","name":"pos","nameLocation":"10984:3:11","nodeType":"VariableDeclaration","scope":2460,"src":"10976:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2451,"name":"uint256","nodeType":"ElementaryTypeName","src":"10976:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10947:41:11"},"returnParameters":{"id":2457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2456,"mutability":"mutable","name":"result","nameLocation":"11030:6:11","nodeType":"VariableDeclaration","scope":2460,"src":"11011:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1744_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"},"typeName":{"id":2455,"nodeType":"UserDefinedTypeName","pathNode":{"id":2454,"name":"Checkpoint","nameLocations":["11011:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1744,"src":"11011:10:11"},"referencedDeclaration":1744,"src":"11011:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1744_storage_ptr","typeString":"struct ERC20VotesUpgradeable.Checkpoint"}},"visibility":"internal"}],"src":"11010:27:11"},"scope":2466,"src":"10925:239:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"constant":false,"documentation":{"id":2461,"nodeType":"StructuredDocumentation","src":"11170:254:11","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2465,"mutability":"mutable","name":"__gap","nameLocation":"11449:5:11","nodeType":"VariableDeclaration","scope":2466,"src":"11429:25:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$47_storage","typeString":"uint256[47]"},"typeName":{"baseType":{"id":2462,"name":"uint256","nodeType":"ElementaryTypeName","src":"11429:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2464,"length":{"hexValue":"3437","id":2463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11437:2:11","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"nodeType":"ArrayTypeName","src":"11429:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$47_storage_ptr","typeString":"uint256[47]"}},"visibility":"private"}],"scope":2467,"src":"1347:10110:11","usedErrors":[],"usedEvents":[420,429,491,550,1455,1464]}],"src":"121:11337:11"},"id":11},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","exportedSymbols":{"IERC20MetadataUpgradeable":[2491],"IERC20Upgradeable":[1521]},"id":2492,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2468,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:12"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"../IERC20Upgradeable.sol","id":2469,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2492,"sourceUnit":1522,"src":"135:34:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2471,"name":"IERC20Upgradeable","nameLocations":["327:17:12"],"nodeType":"IdentifierPath","referencedDeclaration":1521,"src":"327:17:12"},"id":2472,"nodeType":"InheritanceSpecifier","src":"327:17:12"}],"canonicalName":"IERC20MetadataUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2470,"nodeType":"StructuredDocumentation","src":"171:116:12","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":2491,"linearizedBaseContracts":[2491,1521],"name":"IERC20MetadataUpgradeable","nameLocation":"298:25:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2473,"nodeType":"StructuredDocumentation","src":"351:54:12","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2478,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"419:4:12","nodeType":"FunctionDefinition","parameters":{"id":2474,"nodeType":"ParameterList","parameters":[],"src":"423:2:12"},"returnParameters":{"id":2477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2478,"src":"449:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2475,"name":"string","nodeType":"ElementaryTypeName","src":"449:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"448:15:12"},"scope":2491,"src":"410:54:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2479,"nodeType":"StructuredDocumentation","src":"470:56:12","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2484,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"540:6:12","nodeType":"FunctionDefinition","parameters":{"id":2480,"nodeType":"ParameterList","parameters":[],"src":"546:2:12"},"returnParameters":{"id":2483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2484,"src":"572:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2481,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"571:15:12"},"scope":2491,"src":"531:56:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2485,"nodeType":"StructuredDocumentation","src":"593:65:12","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2490,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"672:8:12","nodeType":"FunctionDefinition","parameters":{"id":2486,"nodeType":"ParameterList","parameters":[],"src":"680:2:12"},"returnParameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2490,"src":"706:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2487,"name":"uint8","nodeType":"ElementaryTypeName","src":"706:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"705:7:12"},"scope":2491,"src":"663:50:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2492,"src":"288:427:12","usedErrors":[],"usedEvents":[1455,1464]}],"src":"110:606:12"},"id":12},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol","exportedSymbols":{"IERC20PermitUpgradeable":[2527]},"id":2528,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2493,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20PermitUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2494,"nodeType":"StructuredDocumentation","src":"148:480:13","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":2527,"linearizedBaseContracts":[2527],"name":"IERC20PermitUpgradeable","nameLocation":"639:23:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2495,"nodeType":"StructuredDocumentation","src":"669:792:13","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":2512,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1475:6:13","nodeType":"FunctionDefinition","parameters":{"id":2510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"owner","nameLocation":"1499:5:13","nodeType":"VariableDeclaration","scope":2512,"src":"1491:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2496,"name":"address","nodeType":"ElementaryTypeName","src":"1491:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2499,"mutability":"mutable","name":"spender","nameLocation":"1522:7:13","nodeType":"VariableDeclaration","scope":2512,"src":"1514:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2498,"name":"address","nodeType":"ElementaryTypeName","src":"1514:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2501,"mutability":"mutable","name":"value","nameLocation":"1547:5:13","nodeType":"VariableDeclaration","scope":2512,"src":"1539:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2500,"name":"uint256","nodeType":"ElementaryTypeName","src":"1539:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2503,"mutability":"mutable","name":"deadline","nameLocation":"1570:8:13","nodeType":"VariableDeclaration","scope":2512,"src":"1562:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2502,"name":"uint256","nodeType":"ElementaryTypeName","src":"1562:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2505,"mutability":"mutable","name":"v","nameLocation":"1594:1:13","nodeType":"VariableDeclaration","scope":2512,"src":"1588:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2504,"name":"uint8","nodeType":"ElementaryTypeName","src":"1588:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2507,"mutability":"mutable","name":"r","nameLocation":"1613:1:13","nodeType":"VariableDeclaration","scope":2512,"src":"1605:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2506,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1605:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2509,"mutability":"mutable","name":"s","nameLocation":"1632:1:13","nodeType":"VariableDeclaration","scope":2512,"src":"1624:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1624:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1481:158:13"},"returnParameters":{"id":2511,"nodeType":"ParameterList","parameters":[],"src":"1648:0:13"},"scope":2527,"src":"1466:183:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2513,"nodeType":"StructuredDocumentation","src":"1655:294:13","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":2520,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1963:6:13","nodeType":"FunctionDefinition","parameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"owner","nameLocation":"1978:5:13","nodeType":"VariableDeclaration","scope":2520,"src":"1970:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2514,"name":"address","nodeType":"ElementaryTypeName","src":"1970:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1969:15:13"},"returnParameters":{"id":2519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2520,"src":"2008:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2517,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2007:9:13"},"scope":2527,"src":"1954:63:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2521,"nodeType":"StructuredDocumentation","src":"2023:128:13","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":2526,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2218:16:13","nodeType":"FunctionDefinition","parameters":{"id":2522,"nodeType":"ParameterList","parameters":[],"src":"2234:2:13"},"returnParameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2526,"src":"2260:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2260:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2259:9:13"},"scope":2527,"src":"2209:60:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2528,"src":"629:1642:13","usedErrors":[],"usedEvents":[]}],"src":"123:2149:13"},"id":13},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2857]},"id":2858,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2529,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2530,"nodeType":"StructuredDocumentation","src":"126:67:14","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2857,"linearizedBaseContracts":[2857],"name":"AddressUpgradeable","nameLocation":"202:18:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2544,"nodeType":"Block","src":"1489:254:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2538,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"1713:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:4:14","memberName":"code","nodeType":"MemberAccess","src":"1713:12:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:14","memberName":"length","nodeType":"MemberAccess","src":"1713:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2537,"id":2543,"nodeType":"Return","src":"1706:30:14"}]},"documentation":{"id":2531,"nodeType":"StructuredDocumentation","src":"227:1191:14","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2545,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:14","nodeType":"FunctionDefinition","parameters":{"id":2534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2533,"mutability":"mutable","name":"account","nameLocation":"1451:7:14","nodeType":"VariableDeclaration","scope":2545,"src":"1443:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2532,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:14"},"returnParameters":{"id":2537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2545,"src":"1483:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2535,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:14"},"scope":2857,"src":"1423:320:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2578,"nodeType":"Block","src":"2729:241:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2556,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$2857","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$2857","typeString":"library AddressUpgradeable"}],"id":2555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2554,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:14","typeDescriptions":{}}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:7:14","memberName":"balance","nodeType":"MemberAccess","src":"2747:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2559,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"2772:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2553,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2739:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:73:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2563,"nodeType":"ExpressionStatement","src":"2739:73:14"},{"assignments":[2565,null],"declarations":[{"constant":false,"id":2565,"mutability":"mutable","name":"success","nameLocation":"2829:7:14","nodeType":"VariableDeclaration","scope":2578,"src":"2824:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2564,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2572,"initialValue":{"arguments":[{"hexValue":"","id":2570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2566,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"2842:9:14","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:4:14","memberName":"call","nodeType":"MemberAccess","src":"2842:14:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2568,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"2864:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:14"},{"expression":{"arguments":[{"id":2574,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"2893:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2573,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2885:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:78:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2577,"nodeType":"ExpressionStatement","src":"2885:78:14"}]},"documentation":{"id":2546,"nodeType":"StructuredDocumentation","src":"1749:904:14","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2579,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:14","nodeType":"FunctionDefinition","parameters":{"id":2551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2548,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:14","nodeType":"VariableDeclaration","scope":2579,"src":"2677:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2547,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2550,"mutability":"mutable","name":"amount","nameLocation":"2712:6:14","nodeType":"VariableDeclaration","scope":2579,"src":"2704:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2549,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:14"},"returnParameters":{"id":2552,"nodeType":"ParameterList","parameters":[],"src":"2729:0:14"},"scope":2857,"src":"2658:312:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2596,"nodeType":"Block","src":"3801:96:14","statements":[{"expression":{"arguments":[{"id":2590,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"3840:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2591,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"3848:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2589,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2637,2681],"referencedDeclaration":2681,"src":"3818:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:72:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2588,"id":2595,"nodeType":"Return","src":"3811:79:14"}]},"documentation":{"id":2580,"nodeType":"StructuredDocumentation","src":"2976:731:14","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2597,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:14","nodeType":"FunctionDefinition","parameters":{"id":2585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"target","nameLocation":"3742:6:14","nodeType":"VariableDeclaration","scope":2597,"src":"3734:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2581,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2584,"mutability":"mutable","name":"data","nameLocation":"3763:4:14","nodeType":"VariableDeclaration","scope":2597,"src":"3750:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2583,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:14"},"returnParameters":{"id":2588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2597,"src":"3787:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2586,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:14"},"scope":2857,"src":"3712:185:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2616,"nodeType":"Block","src":"4266:76:14","statements":[{"expression":{"arguments":[{"id":2610,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"4305:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2611,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"4313:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2613,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"4322:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2609,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2637,2681],"referencedDeclaration":2681,"src":"4283:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2608,"id":2615,"nodeType":"Return","src":"4276:59:14"}]},"documentation":{"id":2598,"nodeType":"StructuredDocumentation","src":"3903:211:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2617,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:14","nodeType":"FunctionDefinition","parameters":{"id":2605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"target","nameLocation":"4158:6:14","nodeType":"VariableDeclaration","scope":2617,"src":"4150:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2599,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2602,"mutability":"mutable","name":"data","nameLocation":"4187:4:14","nodeType":"VariableDeclaration","scope":2617,"src":"4174:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2601,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2604,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:14","nodeType":"VariableDeclaration","scope":2617,"src":"4201:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2603,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:14"},"returnParameters":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2617,"src":"4252:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2606,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:14"},"scope":2857,"src":"4119:223:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2636,"nodeType":"Block","src":"4817:111:14","statements":[{"expression":{"arguments":[{"id":2630,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"4856:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2631,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"4864:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"4870:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2629,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2637,2681],"referencedDeclaration":2681,"src":"4834:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:87:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2628,"id":2635,"nodeType":"Return","src":"4827:94:14"}]},"documentation":{"id":2618,"nodeType":"StructuredDocumentation","src":"4348:351:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2637,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:14","nodeType":"FunctionDefinition","parameters":{"id":2625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2620,"mutability":"mutable","name":"target","nameLocation":"4743:6:14","nodeType":"VariableDeclaration","scope":2637,"src":"4735:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2619,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2622,"mutability":"mutable","name":"data","nameLocation":"4764:4:14","nodeType":"VariableDeclaration","scope":2637,"src":"4751:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2621,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2624,"mutability":"mutable","name":"value","nameLocation":"4778:5:14","nodeType":"VariableDeclaration","scope":2637,"src":"4770:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2623,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:14"},"returnParameters":{"id":2628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2637,"src":"4803:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2626,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:14"},"scope":2857,"src":"4704:224:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2680,"nodeType":"Block","src":"5355:267:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2654,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$2857","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$2857","typeString":"library AddressUpgradeable"}],"id":2653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2652,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:14","typeDescriptions":{}}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5387:7:14","memberName":"balance","nodeType":"MemberAccess","src":"5373:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"5398:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2651,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:81:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2661,"nodeType":"ExpressionStatement","src":"5365:81:14"},{"assignments":[2663,2665],"declarations":[{"constant":false,"id":2663,"mutability":"mutable","name":"success","nameLocation":"5462:7:14","nodeType":"VariableDeclaration","scope":2680,"src":"5457:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2662,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2665,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:14","nodeType":"VariableDeclaration","scope":2680,"src":"5471:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2664,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2672,"initialValue":{"arguments":[{"id":2670,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"5524:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2666,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"5498:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:4:14","memberName":"call","nodeType":"MemberAccess","src":"5498:11:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"5517:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:14"},{"expression":{"arguments":[{"id":2674,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"5573:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2675,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"5581:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2676,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"5590:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2677,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"5602:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2673,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"5546:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2650,"id":2679,"nodeType":"Return","src":"5539:76:14"}]},"documentation":{"id":2638,"nodeType":"StructuredDocumentation","src":"4934:237:14","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2681,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:14","nodeType":"FunctionDefinition","parameters":{"id":2647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2640,"mutability":"mutable","name":"target","nameLocation":"5224:6:14","nodeType":"VariableDeclaration","scope":2681,"src":"5216:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2639,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2642,"mutability":"mutable","name":"data","nameLocation":"5253:4:14","nodeType":"VariableDeclaration","scope":2681,"src":"5240:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2641,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2644,"mutability":"mutable","name":"value","nameLocation":"5275:5:14","nodeType":"VariableDeclaration","scope":2681,"src":"5267:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2643,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2646,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:14","nodeType":"VariableDeclaration","scope":2681,"src":"5290:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2645,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:14"},"returnParameters":{"id":2650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2681,"src":"5341:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2648,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:14"},"scope":2857,"src":"5176:446:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2697,"nodeType":"Block","src":"5899:97:14","statements":[{"expression":{"arguments":[{"id":2692,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"5935:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2693,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"5943:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2691,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2698,2727],"referencedDeclaration":2727,"src":"5916:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:73:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2690,"id":2696,"nodeType":"Return","src":"5909:80:14"}]},"documentation":{"id":2682,"nodeType":"StructuredDocumentation","src":"5628:166:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2698,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:14","nodeType":"FunctionDefinition","parameters":{"id":2687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2684,"mutability":"mutable","name":"target","nameLocation":"5835:6:14","nodeType":"VariableDeclaration","scope":2698,"src":"5827:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2683,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2686,"mutability":"mutable","name":"data","nameLocation":"5856:4:14","nodeType":"VariableDeclaration","scope":2698,"src":"5843:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2685,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:14"},"returnParameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2698,"src":"5885:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2688,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:14"},"scope":2857,"src":"5799:197:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2726,"nodeType":"Block","src":"6338:168:14","statements":[{"assignments":[2711,2713],"declarations":[{"constant":false,"id":2711,"mutability":"mutable","name":"success","nameLocation":"6354:7:14","nodeType":"VariableDeclaration","scope":2726,"src":"6349:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2710,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2713,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:14","nodeType":"VariableDeclaration","scope":2726,"src":"6363:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2712,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2718,"initialValue":{"arguments":[{"id":2716,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"6408:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2714,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"6390:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:10:14","memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:14","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:14"},{"expression":{"arguments":[{"id":2720,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"6457:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2721,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"6465:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2722,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"6474:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2723,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"6486:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2719,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"6430:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2709,"id":2725,"nodeType":"Return","src":"6423:76:14"}]},"documentation":{"id":2699,"nodeType":"StructuredDocumentation","src":"6002:173:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2727,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:14","nodeType":"FunctionDefinition","parameters":{"id":2706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2701,"mutability":"mutable","name":"target","nameLocation":"6225:6:14","nodeType":"VariableDeclaration","scope":2727,"src":"6217:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2700,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2703,"mutability":"mutable","name":"data","nameLocation":"6254:4:14","nodeType":"VariableDeclaration","scope":2727,"src":"6241:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2702,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2705,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:14","nodeType":"VariableDeclaration","scope":2727,"src":"6268:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2704,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:14"},"returnParameters":{"id":2709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2727,"src":"6324:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2707,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:14"},"scope":2857,"src":"6180:326:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2743,"nodeType":"Block","src":"6782:101:14","statements":[{"expression":{"arguments":[{"id":2738,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"6820:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2739,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"6828:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2737,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2744,2773],"referencedDeclaration":2773,"src":"6799:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6799:77:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2736,"id":2742,"nodeType":"Return","src":"6792:84:14"}]},"documentation":{"id":2728,"nodeType":"StructuredDocumentation","src":"6512:168:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2744,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:14","nodeType":"FunctionDefinition","parameters":{"id":2733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"target","nameLocation":"6723:6:14","nodeType":"VariableDeclaration","scope":2744,"src":"6715:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2729,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2732,"mutability":"mutable","name":"data","nameLocation":"6744:4:14","nodeType":"VariableDeclaration","scope":2744,"src":"6731:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2731,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:14"},"returnParameters":{"id":2736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2744,"src":"6768:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2734,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:14"},"scope":2857,"src":"6685:198:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2772,"nodeType":"Block","src":"7224:170:14","statements":[{"assignments":[2757,2759],"declarations":[{"constant":false,"id":2757,"mutability":"mutable","name":"success","nameLocation":"7240:7:14","nodeType":"VariableDeclaration","scope":2772,"src":"7235:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2756,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2759,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:14","nodeType":"VariableDeclaration","scope":2772,"src":"7249:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2758,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2764,"initialValue":{"arguments":[{"id":2762,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"7296:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2760,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"7276:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:14","memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:14","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:14"},{"expression":{"arguments":[{"id":2766,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"7345:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2767,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"7353:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2768,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"7362:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2769,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"7374:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2765,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"7318:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7318:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2755,"id":2771,"nodeType":"Return","src":"7311:76:14"}]},"documentation":{"id":2745,"nodeType":"StructuredDocumentation","src":"6889:175:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2773,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:14","nodeType":"FunctionDefinition","parameters":{"id":2752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2747,"mutability":"mutable","name":"target","nameLocation":"7116:6:14","nodeType":"VariableDeclaration","scope":2773,"src":"7108:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2746,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2749,"mutability":"mutable","name":"data","nameLocation":"7145:4:14","nodeType":"VariableDeclaration","scope":2773,"src":"7132:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2748,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2751,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:14","nodeType":"VariableDeclaration","scope":2773,"src":"7159:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2750,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:14"},"returnParameters":{"id":2755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2773,"src":"7210:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2753,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:14"},"scope":2857,"src":"7069:325:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2811,"nodeType":"Block","src":"7876:434:14","statements":[{"condition":{"id":2787,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"7890:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2809,"nodeType":"Block","src":"8246:58:14","statements":[{"expression":{"arguments":[{"id":2805,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"8268:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2806,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"8280:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2804,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"8260:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8260:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2808,"nodeType":"ExpressionStatement","src":"8260:33:14"}]},"id":2810,"nodeType":"IfStatement","src":"7886:418:14","trueBody":{"id":2803,"nodeType":"Block","src":"7899:341:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2788,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"7917:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:14","memberName":"length","nodeType":"MemberAccess","src":"7917:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2800,"nodeType":"IfStatement","src":"7913:286:14","trueBody":{"id":2799,"nodeType":"Block","src":"7941:258:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":2794,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"8143:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2793,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"8132:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2792,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8124:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2798,"nodeType":"ExpressionStatement","src":"8124:60:14"}]}},{"expression":{"id":2801,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"8219:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2786,"id":2802,"nodeType":"Return","src":"8212:17:14"}]}}]},"documentation":{"id":2774,"nodeType":"StructuredDocumentation","src":"7400:277:14","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2812,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:14","nodeType":"FunctionDefinition","parameters":{"id":2783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2776,"mutability":"mutable","name":"target","nameLocation":"7735:6:14","nodeType":"VariableDeclaration","scope":2812,"src":"7727:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2775,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2778,"mutability":"mutable","name":"success","nameLocation":"7756:7:14","nodeType":"VariableDeclaration","scope":2812,"src":"7751:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2777,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2780,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:14","nodeType":"VariableDeclaration","scope":2812,"src":"7773:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2779,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2782,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:14","nodeType":"VariableDeclaration","scope":2812,"src":"7806:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2781,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:14"},"returnParameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2812,"src":"7862:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2784,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:14"},"scope":2857,"src":"7682:628:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2835,"nodeType":"Block","src":"8691:135:14","statements":[{"condition":{"id":2824,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"8705:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2833,"nodeType":"Block","src":"8762:58:14","statements":[{"expression":{"arguments":[{"id":2829,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"8784:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2830,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"8796:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2828,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"8776:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2832,"nodeType":"ExpressionStatement","src":"8776:33:14"}]},"id":2834,"nodeType":"IfStatement","src":"8701:119:14","trueBody":{"id":2827,"nodeType":"Block","src":"8714:42:14","statements":[{"expression":{"id":2825,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"8735:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2823,"id":2826,"nodeType":"Return","src":"8728:17:14"}]}}]},"documentation":{"id":2813,"nodeType":"StructuredDocumentation","src":"8316:210:14","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2836,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:14","nodeType":"FunctionDefinition","parameters":{"id":2820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2815,"mutability":"mutable","name":"success","nameLocation":"8571:7:14","nodeType":"VariableDeclaration","scope":2836,"src":"8566:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2814,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2817,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:14","nodeType":"VariableDeclaration","scope":2836,"src":"8588:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2816,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2819,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:14","nodeType":"VariableDeclaration","scope":2836,"src":"8621:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2818,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:14"},"returnParameters":{"id":2823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2836,"src":"8677:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2821,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:14"},"scope":2857,"src":"8531:295:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2855,"nodeType":"Block","src":"8915:457:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2843,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"8991:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9002:6:14","memberName":"length","nodeType":"MemberAccess","src":"8991:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2853,"nodeType":"Block","src":"9321:45:14","statements":[{"expression":{"arguments":[{"id":2850,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"9342:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2849,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:14","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2852,"nodeType":"ExpressionStatement","src":"9335:20:14"}]},"id":2854,"nodeType":"IfStatement","src":"8987:379:14","trueBody":{"id":2848,"nodeType":"Block","src":"9014:301:14","statements":[{"AST":{"nodeType":"YulBlock","src":"9172:133:14","statements":[{"nodeType":"YulVariableDeclaration","src":"9190:40:14","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9219:10:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9213:5:14"},"nodeType":"YulFunctionCall","src":"9213:17:14"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9194:15:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9258:2:14","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9262:10:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9254:3:14"},"nodeType":"YulFunctionCall","src":"9254:19:14"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9275:15:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9247:6:14"},"nodeType":"YulFunctionCall","src":"9247:44:14"},"nodeType":"YulExpressionStatement","src":"9247:44:14"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2838,"isOffset":false,"isSlot":false,"src":"9219:10:14","valueSize":1},{"declaration":2838,"isOffset":false,"isSlot":false,"src":"9262:10:14","valueSize":1}],"id":2847,"nodeType":"InlineAssembly","src":"9163:142:14"}]}}]},"id":2856,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:14","nodeType":"FunctionDefinition","parameters":{"id":2841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2838,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:14","nodeType":"VariableDeclaration","scope":2856,"src":"8849:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2837,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2840,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:14","nodeType":"VariableDeclaration","scope":2856,"src":"8874:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2839,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:14"},"returnParameters":{"id":2842,"nodeType":"ParameterList","parameters":[],"src":"8915:0:14"},"scope":2857,"src":"8832:540:14","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2858,"src":"194:9180:14","usedErrors":[],"usedEvents":[]}],"src":"101:9274:14"},"id":14},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2857],"ContextUpgradeable":[2899],"Initializable":[704]},"id":2900,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2859,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:15"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":2860,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2900,"sourceUnit":705,"src":"110:42:15","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2862,"name":"Initializable","nameLocations":["691:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"691:13:15"},"id":2863,"nodeType":"InheritanceSpecifier","src":"691:13:15"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2861,"nodeType":"StructuredDocumentation","src":"154:496:15","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2899,"linearizedBaseContracts":[2899,704],"name":"ContextUpgradeable","nameLocation":"669:18:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":2868,"nodeType":"Block","src":"763:7:15","statements":[]},"id":2869,"implemented":true,"kind":"function","modifiers":[{"id":2866,"kind":"modifierInvocation","modifierName":{"id":2865,"name":"onlyInitializing","nameLocations":["746:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":649,"src":"746:16:15"},"nodeType":"ModifierInvocation","src":"746:16:15"}],"name":"__Context_init","nameLocation":"720:14:15","nodeType":"FunctionDefinition","parameters":{"id":2864,"nodeType":"ParameterList","parameters":[],"src":"734:2:15"},"returnParameters":{"id":2867,"nodeType":"ParameterList","parameters":[],"src":"763:0:15"},"scope":2899,"src":"711:59:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2874,"nodeType":"Block","src":"838:7:15","statements":[]},"id":2875,"implemented":true,"kind":"function","modifiers":[{"id":2872,"kind":"modifierInvocation","modifierName":{"id":2871,"name":"onlyInitializing","nameLocations":["821:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":649,"src":"821:16:15"},"nodeType":"ModifierInvocation","src":"821:16:15"}],"name":"__Context_init_unchained","nameLocation":"785:24:15","nodeType":"FunctionDefinition","parameters":{"id":2870,"nodeType":"ParameterList","parameters":[],"src":"809:2:15"},"returnParameters":{"id":2873,"nodeType":"ParameterList","parameters":[],"src":"838:0:15"},"scope":2899,"src":"776:69:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2883,"nodeType":"Block","src":"912:34:15","statements":[{"expression":{"expression":{"id":2880,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"933:6:15","memberName":"sender","nodeType":"MemberAccess","src":"929:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2879,"id":2882,"nodeType":"Return","src":"922:17:15"}]},"id":2884,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:15","nodeType":"FunctionDefinition","parameters":{"id":2876,"nodeType":"ParameterList","parameters":[],"src":"869:2:15"},"returnParameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2884,"src":"903:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2877,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:15"},"scope":2899,"src":"850:96:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2892,"nodeType":"Block","src":"1019:32:15","statements":[{"expression":{"expression":{"id":2889,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1040:4:15","memberName":"data","nodeType":"MemberAccess","src":"1036:8:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2888,"id":2891,"nodeType":"Return","src":"1029:15:15"}]},"id":2893,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:15","nodeType":"FunctionDefinition","parameters":{"id":2885,"nodeType":"ParameterList","parameters":[],"src":"969:2:15"},"returnParameters":{"id":2888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2893,"src":"1003:14:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2886,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:15"},"scope":2899,"src":"952:99:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":2894,"nodeType":"StructuredDocumentation","src":"1057:254:15","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2898,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:15","nodeType":"VariableDeclaration","scope":2899,"src":"1316:25:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":2895,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2897,"length":{"hexValue":"3530","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:15","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":2900,"src":"651:693:15","usedErrors":[],"usedEvents":[550]}],"src":"86:1259:15"},"id":15},"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","exportedSymbols":{"CountersUpgradeable":[2973]},"id":2974,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2901,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"CountersUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2902,"nodeType":"StructuredDocumentation","src":"112:311:16","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":2973,"linearizedBaseContracts":[2973],"name":"CountersUpgradeable","nameLocation":"432:19:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"CountersUpgradeable.Counter","id":2905,"members":[{"constant":false,"id":2904,"mutability":"mutable","name":"_value","nameLocation":"805:6:16","nodeType":"VariableDeclaration","scope":2905,"src":"797:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2903,"name":"uint256","nodeType":"ElementaryTypeName","src":"797:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"465:7:16","nodeType":"StructDefinition","scope":2973,"src":"458:374:16","visibility":"public"},{"body":{"id":2916,"nodeType":"Block","src":"912:38:16","statements":[{"expression":{"expression":{"id":2913,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"929:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2905_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2914,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"937:6:16","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2904,"src":"929:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2912,"id":2915,"nodeType":"Return","src":"922:21:16"}]},"id":2917,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"847:7:16","nodeType":"FunctionDefinition","parameters":{"id":2909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2908,"mutability":"mutable","name":"counter","nameLocation":"871:7:16","nodeType":"VariableDeclaration","scope":2917,"src":"855:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2905_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":2907,"nodeType":"UserDefinedTypeName","pathNode":{"id":2906,"name":"Counter","nameLocations":["855:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":2905,"src":"855:7:16"},"referencedDeclaration":2905,"src":"855:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2905_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"854:25:16"},"returnParameters":{"id":2912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2917,"src":"903:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2910,"name":"uint256","nodeType":"ElementaryTypeName","src":"903:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"902:9:16"},"scope":2973,"src":"838:112:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2930,"nodeType":"Block","src":"1009:70:16","statements":[{"id":2929,"nodeType":"UncheckedBlock","src":"1019:54:16","statements":[{"expression":{"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2923,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"1043:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2905_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2925,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1051:6:16","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2904,"src":"1043:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1061:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1043:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2928,"nodeType":"ExpressionStatement","src":"1043:19:16"}]}]},"id":2931,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"965:9:16","nodeType":"FunctionDefinition","parameters":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2920,"mutability":"mutable","name":"counter","nameLocation":"991:7:16","nodeType":"VariableDeclaration","scope":2931,"src":"975:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2905_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":2919,"nodeType":"UserDefinedTypeName","pathNode":{"id":2918,"name":"Counter","nameLocations":["975:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":2905,"src":"975:7:16"},"referencedDeclaration":2905,"src":"975:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2905_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"974:25:16"},"returnParameters":{"id":2922,"nodeType":"ParameterList","parameters":[],"src":"1009:0:16"},"scope":2973,"src":"956:123:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2958,"nodeType":"Block","src":"1138:176:16","statements":[{"assignments":[2938],"declarations":[{"constant":false,"id":2938,"mutability":"mutable","name":"value","nameLocation":"1156:5:16","nodeType":"VariableDeclaration","scope":2958,"src":"1148:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2937,"name":"uint256","nodeType":"ElementaryTypeName","src":"1148:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2941,"initialValue":{"expression":{"id":2939,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"1164:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2905_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1172:6:16","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2904,"src":"1164:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1148:30:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"1196:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1204:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1196:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1207:29:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":2942,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1188:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1188:49:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2948,"nodeType":"ExpressionStatement","src":"1188:49:16"},{"id":2957,"nodeType":"UncheckedBlock","src":"1247:61:16","statements":[{"expression":{"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2949,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"1271:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2905_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2951,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1279:6:16","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2904,"src":"1271:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"1288:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1296:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1288:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1271:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2956,"nodeType":"ExpressionStatement","src":"1271:26:16"}]}]},"id":2959,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1094:9:16","nodeType":"FunctionDefinition","parameters":{"id":2935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2934,"mutability":"mutable","name":"counter","nameLocation":"1120:7:16","nodeType":"VariableDeclaration","scope":2959,"src":"1104:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2905_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":2933,"nodeType":"UserDefinedTypeName","pathNode":{"id":2932,"name":"Counter","nameLocations":["1104:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":2905,"src":"1104:7:16"},"referencedDeclaration":2905,"src":"1104:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2905_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"1103:25:16"},"returnParameters":{"id":2936,"nodeType":"ParameterList","parameters":[],"src":"1138:0:16"},"scope":2973,"src":"1085:229:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2971,"nodeType":"Block","src":"1369:35:16","statements":[{"expression":{"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2965,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"1379:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2905_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2967,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1387:6:16","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2904,"src":"1379:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1396:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1379:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2970,"nodeType":"ExpressionStatement","src":"1379:18:16"}]},"id":2972,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1329:5:16","nodeType":"FunctionDefinition","parameters":{"id":2963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2962,"mutability":"mutable","name":"counter","nameLocation":"1351:7:16","nodeType":"VariableDeclaration","scope":2972,"src":"1335:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2905_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":2961,"nodeType":"UserDefinedTypeName","pathNode":{"id":2960,"name":"Counter","nameLocations":["1335:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":2905,"src":"1335:7:16"},"referencedDeclaration":2905,"src":"1335:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2905_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"1334:25:16"},"returnParameters":{"id":2964,"nodeType":"ParameterList","parameters":[],"src":"1369:0:16"},"scope":2973,"src":"1320:84:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2974,"src":"424:982:16","usedErrors":[],"usedEvents":[]}],"src":"87:1320:16"},"id":16},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","exportedSymbols":{"MathUpgradeable":[4774],"SignedMathUpgradeable":[6420],"StringsUpgradeable":[3202]},"id":3203,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2975,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:17"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","file":"./math/MathUpgradeable.sol","id":2976,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3203,"sourceUnit":4775,"src":"126:36:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol","file":"./math/SignedMathUpgradeable.sol","id":2977,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3203,"sourceUnit":6421,"src":"163:42:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"StringsUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2978,"nodeType":"StructuredDocumentation","src":"207:34:17","text":" @dev String operations."},"fullyImplemented":true,"id":3202,"linearizedBaseContracts":[3202],"name":"StringsUpgradeable","nameLocation":"250:18:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2981,"mutability":"constant","name":"_SYMBOLS","nameLocation":"300:8:17","nodeType":"VariableDeclaration","scope":3202,"src":"275:54:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2979,"name":"bytes16","nodeType":"ElementaryTypeName","src":"275:7:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2984,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"358:15:17","nodeType":"VariableDeclaration","scope":3202,"src":"335:43:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2982,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"376:2:17","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":3031,"nodeType":"Block","src":"551:636:17","statements":[{"id":3030,"nodeType":"UncheckedBlock","src":"561:620:17","statements":[{"assignments":[2993],"declarations":[{"constant":false,"id":2993,"mutability":"mutable","name":"length","nameLocation":"593:6:17","nodeType":"VariableDeclaration","scope":3030,"src":"585:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2992,"name":"uint256","nodeType":"ElementaryTypeName","src":"585:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3000,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"624:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2994,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"602:15:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$4774_$","typeString":"type(library MathUpgradeable)"}},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"618:5:17","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4611,"src":"602:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"602:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"633:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"602:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"585:49:17"},{"assignments":[3002],"declarations":[{"constant":false,"id":3002,"mutability":"mutable","name":"buffer","nameLocation":"662:6:17","nodeType":"VariableDeclaration","scope":3030,"src":"648:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3001,"name":"string","nodeType":"ElementaryTypeName","src":"648:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3007,"initialValue":{"arguments":[{"id":3005,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"682:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"671:10:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3003,"name":"string","nodeType":"ElementaryTypeName","src":"675:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"671:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"648:41:17"},{"assignments":[3009],"declarations":[{"constant":false,"id":3009,"mutability":"mutable","name":"ptr","nameLocation":"711:3:17","nodeType":"VariableDeclaration","scope":3030,"src":"703:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3008,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3010,"nodeType":"VariableDeclarationStatement","src":"703:11:17"},{"AST":{"nodeType":"YulBlock","src":"784:67:17","statements":[{"nodeType":"YulAssignment","src":"802:35:17","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"813:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"825:2:17","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"829:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"821:3:17"},"nodeType":"YulFunctionCall","src":"821:15:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"809:3:17"},"nodeType":"YulFunctionCall","src":"809:28:17"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"802:3:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":3002,"isOffset":false,"isSlot":false,"src":"813:6:17","valueSize":1},{"declaration":2993,"isOffset":false,"isSlot":false,"src":"829:6:17","valueSize":1},{"declaration":3009,"isOffset":false,"isSlot":false,"src":"802:3:17","valueSize":1}],"id":3011,"nodeType":"InlineAssembly","src":"775:76:17"},{"body":{"id":3026,"nodeType":"Block","src":"877:267:17","statements":[{"expression":{"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"895:5:17","subExpression":{"id":3013,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"895:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3015,"nodeType":"ExpressionStatement","src":"895:5:17"},{"AST":{"nodeType":"YulBlock","src":"978:84:17","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1008:3:17"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1022:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1029:2:17","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1018:3:17"},"nodeType":"YulFunctionCall","src":"1018:14:17"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"1034:8:17"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1013:4:17"},"nodeType":"YulFunctionCall","src":"1013:30:17"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1000:7:17"},"nodeType":"YulFunctionCall","src":"1000:44:17"},"nodeType":"YulExpressionStatement","src":"1000:44:17"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2981,"isOffset":false,"isSlot":false,"src":"1034:8:17","valueSize":1},{"declaration":3009,"isOffset":false,"isSlot":false,"src":"1008:3:17","valueSize":1},{"declaration":2987,"isOffset":false,"isSlot":false,"src":"1022:5:17","valueSize":1}],"id":3016,"nodeType":"InlineAssembly","src":"969:93:17"},{"expression":{"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"1079:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1079:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3020,"nodeType":"ExpressionStatement","src":"1079:11:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"1112:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1121:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1112:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3025,"nodeType":"IfStatement","src":"1108:21:17","trueBody":{"id":3024,"nodeType":"Break","src":"1124:5:17"}}]},"condition":{"hexValue":"74727565","id":3012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"871:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3027,"nodeType":"WhileStatement","src":"864:280:17"},{"expression":{"id":3028,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"1164:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2991,"id":3029,"nodeType":"Return","src":"1157:13:17"}]}]},"documentation":{"id":2985,"nodeType":"StructuredDocumentation","src":"385:90:17","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3032,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"489:8:17","nodeType":"FunctionDefinition","parameters":{"id":2988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2987,"mutability":"mutable","name":"value","nameLocation":"506:5:17","nodeType":"VariableDeclaration","scope":3032,"src":"498:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2986,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"497:15:17"},"returnParameters":{"id":2991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3032,"src":"536:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2989,"name":"string","nodeType":"ElementaryTypeName","src":"536:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"535:15:17"},"scope":3202,"src":"480:707:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3059,"nodeType":"Block","src":"1357:114:17","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"1398:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1406:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1398:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1416:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1398:20:17","trueExpression":{"hexValue":"2d","id":3047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1410:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"1455:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3051,"name":"SignedMathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6420,"src":"1429:21:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMathUpgradeable_$6420_$","typeString":"type(library SignedMathUpgradeable)"}},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:3:17","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6419,"src":"1429:25:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1429:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3050,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[3032,3060],"referencedDeclaration":3032,"src":"1420:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1420:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3042,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1381:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1385:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"1381:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1381:82:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1374:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3040,"name":"string","nodeType":"ElementaryTypeName","src":"1374:6:17","typeDescriptions":{}}},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1374:90:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3039,"id":3058,"nodeType":"Return","src":"1367:97:17"}]},"documentation":{"id":3033,"nodeType":"StructuredDocumentation","src":"1193:89:17","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3060,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1296:8:17","nodeType":"FunctionDefinition","parameters":{"id":3036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3035,"mutability":"mutable","name":"value","nameLocation":"1312:5:17","nodeType":"VariableDeclaration","scope":3060,"src":"1305:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3034,"name":"int256","nodeType":"ElementaryTypeName","src":"1305:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1304:14:17"},"returnParameters":{"id":3039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3060,"src":"1342:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3037,"name":"string","nodeType":"ElementaryTypeName","src":"1342:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1341:15:17"},"scope":3202,"src":"1287:184:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3079,"nodeType":"Block","src":"1650:111:17","statements":[{"id":3078,"nodeType":"UncheckedBlock","src":"1660:95:17","statements":[{"expression":{"arguments":[{"id":3069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"1703:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"1733:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3070,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"1710:15:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$4774_$","typeString":"type(library MathUpgradeable)"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:17","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4734,"src":"1710:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1710:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1742:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1710:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3068,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3080,3156,3176],"referencedDeclaration":3156,"src":"1691:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1691:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3067,"id":3077,"nodeType":"Return","src":"1684:60:17"}]}]},"documentation":{"id":3061,"nodeType":"StructuredDocumentation","src":"1477:94:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3080,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1585:11:17","nodeType":"FunctionDefinition","parameters":{"id":3064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3063,"mutability":"mutable","name":"value","nameLocation":"1605:5:17","nodeType":"VariableDeclaration","scope":3080,"src":"1597:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3062,"name":"uint256","nodeType":"ElementaryTypeName","src":"1597:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1596:15:17"},"returnParameters":{"id":3067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3080,"src":"1635:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3065,"name":"string","nodeType":"ElementaryTypeName","src":"1635:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1634:15:17"},"scope":3202,"src":"1576:185:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3155,"nodeType":"Block","src":"1974:347:17","statements":[{"assignments":[3091],"declarations":[{"constant":false,"id":3091,"mutability":"mutable","name":"buffer","nameLocation":"1997:6:17","nodeType":"VariableDeclaration","scope":3155,"src":"1984:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3090,"name":"bytes","nodeType":"ElementaryTypeName","src":"1984:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3100,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3095,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"2020:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2016:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2029:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2016:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2006:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3092,"name":"bytes","nodeType":"ElementaryTypeName","src":"2010:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2006:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1984:47:17"},{"expression":{"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3101,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"2041:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3103,"indexExpression":{"hexValue":"30","id":3102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2041:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2053:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2041:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3106,"nodeType":"ExpressionStatement","src":"2041:15:17"},{"expression":{"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3107,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"2066:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3109,"indexExpression":{"hexValue":"31","id":3108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2073:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2066:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2078:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2066:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3112,"nodeType":"ExpressionStatement","src":"2066:15:17"},{"body":{"id":3141,"nodeType":"Block","src":"2136:83:17","statements":[{"expression":{"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3127,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"2150:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3129,"indexExpression":{"id":3128,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"2157:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2150:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3130,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"2162:8:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3134,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"2171:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:3:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2171:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2162:21:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2150:33:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3136,"nodeType":"ExpressionStatement","src":"2150:33:17"},{"expression":{"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"2197:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2207:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2197:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3140,"nodeType":"ExpressionStatement","src":"2197:11:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3121,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"2124:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2128:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2124:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3142,"initializationExpression":{"assignments":[3114],"declarations":[{"constant":false,"id":3114,"mutability":"mutable","name":"i","nameLocation":"2104:1:17","nodeType":"VariableDeclaration","scope":3142,"src":"2096:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3113,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3120,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2108:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3116,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"2112:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2108:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2121:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2108:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2096:26:17"},"loopExpression":{"expression":{"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2131:3:17","subExpression":{"id":3124,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"2133:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3126,"nodeType":"ExpressionStatement","src":"2131:3:17"},"nodeType":"ForStatement","src":"2091:128:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"2236:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2245:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2248:34:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":3143,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2228:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2228:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3149,"nodeType":"ExpressionStatement","src":"2228:55:17"},{"expression":{"arguments":[{"id":3152,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"2307:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2300:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3150,"name":"string","nodeType":"ElementaryTypeName","src":"2300:6:17","typeDescriptions":{}}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3089,"id":3154,"nodeType":"Return","src":"2293:21:17"}]},"documentation":{"id":3081,"nodeType":"StructuredDocumentation","src":"1767:112:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3156,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1893:11:17","nodeType":"FunctionDefinition","parameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3083,"mutability":"mutable","name":"value","nameLocation":"1913:5:17","nodeType":"VariableDeclaration","scope":3156,"src":"1905:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3082,"name":"uint256","nodeType":"ElementaryTypeName","src":"1905:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3085,"mutability":"mutable","name":"length","nameLocation":"1928:6:17","nodeType":"VariableDeclaration","scope":3156,"src":"1920:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3084,"name":"uint256","nodeType":"ElementaryTypeName","src":"1920:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1904:31:17"},"returnParameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3156,"src":"1959:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3087,"name":"string","nodeType":"ElementaryTypeName","src":"1959:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1958:15:17"},"scope":3202,"src":"1884:437:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3175,"nodeType":"Block","src":"2546:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3169,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"2591:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2583:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3167,"name":"uint160","nodeType":"ElementaryTypeName","src":"2583:7:17","typeDescriptions":{}}},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2583:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2575:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3165,"name":"uint256","nodeType":"ElementaryTypeName","src":"2575:7:17","typeDescriptions":{}}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2575:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3172,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"2599:15:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3164,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3080,3156,3176],"referencedDeclaration":3156,"src":"2563:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2563:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3163,"id":3174,"nodeType":"Return","src":"2556:59:17"}]},"documentation":{"id":3157,"nodeType":"StructuredDocumentation","src":"2327:141:17","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":3176,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2482:11:17","nodeType":"FunctionDefinition","parameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3159,"mutability":"mutable","name":"addr","nameLocation":"2502:4:17","nodeType":"VariableDeclaration","scope":3176,"src":"2494:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3158,"name":"address","nodeType":"ElementaryTypeName","src":"2494:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2493:14:17"},"returnParameters":{"id":3163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3176,"src":"2531:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3161,"name":"string","nodeType":"ElementaryTypeName","src":"2531:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2530:15:17"},"scope":3202,"src":"2473:149:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3200,"nodeType":"Block","src":"2777:66:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3189,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"2810:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2804:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3187,"name":"bytes","nodeType":"ElementaryTypeName","src":"2804:5:17","typeDescriptions":{}}},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2804:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3186,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2794:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2794:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3195,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"2833:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2827:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3193,"name":"bytes","nodeType":"ElementaryTypeName","src":"2827:5:17","typeDescriptions":{}}},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2827:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3192,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2817:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2817:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2794:42:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3185,"id":3199,"nodeType":"Return","src":"2787:49:17"}]},"documentation":{"id":3177,"nodeType":"StructuredDocumentation","src":"2628:66:17","text":" @dev Returns true if the two strings are equal."},"id":3201,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2708:5:17","nodeType":"FunctionDefinition","parameters":{"id":3182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3179,"mutability":"mutable","name":"a","nameLocation":"2728:1:17","nodeType":"VariableDeclaration","scope":3201,"src":"2714:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3178,"name":"string","nodeType":"ElementaryTypeName","src":"2714:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3181,"mutability":"mutable","name":"b","nameLocation":"2745:1:17","nodeType":"VariableDeclaration","scope":3201,"src":"2731:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3180,"name":"string","nodeType":"ElementaryTypeName","src":"2731:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2713:34:17"},"returnParameters":{"id":3185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3201,"src":"2771:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3183,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:17"},"scope":3202,"src":"2699:144:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3203,"src":"242:2603:17","usedErrors":[],"usedEvents":[]}],"src":"101:2745:17"},"id":17},"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","exportedSymbols":{"ECDSAUpgradeable":[3568],"MathUpgradeable":[4774],"SignedMathUpgradeable":[6420],"StringsUpgradeable":[3202]},"id":3569,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3204,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:18"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","file":"../StringsUpgradeable.sol","id":3205,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3569,"sourceUnit":3203,"src":"137:35:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSAUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3206,"nodeType":"StructuredDocumentation","src":"174:205:18","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3568,"linearizedBaseContracts":[3568],"name":"ECDSAUpgradeable","nameLocation":"388:16:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSAUpgradeable.RecoverError","id":3212,"members":[{"id":3207,"name":"NoError","nameLocation":"439:7:18","nodeType":"EnumValue","src":"439:7:18"},{"id":3208,"name":"InvalidSignature","nameLocation":"456:16:18","nodeType":"EnumValue","src":"456:16:18"},{"id":3209,"name":"InvalidSignatureLength","nameLocation":"482:22:18","nodeType":"EnumValue","src":"482:22:18"},{"id":3210,"name":"InvalidSignatureS","nameLocation":"514:17:18","nodeType":"EnumValue","src":"514:17:18"},{"id":3211,"name":"InvalidSignatureV","nameLocation":"541:17:18","nodeType":"EnumValue","src":"541:17:18"}],"name":"RecoverError","nameLocation":"416:12:18","nodeType":"EnumDefinition","src":"411:175:18"},{"body":{"id":3255,"nodeType":"Block","src":"646:457:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3218,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"660:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3219,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"669:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3212_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"682:7:18","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3207,"src":"669:20:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"660:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3224,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"756:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3225,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"765:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3212_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"778:16:18","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3208,"src":"765:29:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"756:38:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3233,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"865:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3234,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"874:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3212_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"887:22:18","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3209,"src":"874:35:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"865:44:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3242,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"987:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3243,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"996:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3212_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1009:17:18","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3210,"src":"996:30:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"987:39:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3251,"nodeType":"IfStatement","src":"983:114:18","trueBody":{"id":3250,"nodeType":"Block","src":"1028:69:18","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":3247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1049:36:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":3246,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1042:6:18","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1042:44:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3249,"nodeType":"ExpressionStatement","src":"1042:44:18"}]}},"id":3252,"nodeType":"IfStatement","src":"861:236:18","trueBody":{"id":3241,"nodeType":"Block","src":"911:66:18","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"932:33:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":3237,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"925:6:18","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"925:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3240,"nodeType":"ExpressionStatement","src":"925:41:18"}]}},"id":3253,"nodeType":"IfStatement","src":"752:345:18","trueBody":{"id":3232,"nodeType":"Block","src":"796:59:18","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"817:26:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":3228,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"810:6:18","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"810:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3231,"nodeType":"ExpressionStatement","src":"810:34:18"}]}},"id":3254,"nodeType":"IfStatement","src":"656:441:18","trueBody":{"id":3223,"nodeType":"Block","src":"691:55:18","statements":[{"functionReturnParameters":3217,"id":3222,"nodeType":"Return","src":"705:7:18"}]}}]},"id":3256,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"601:11:18","nodeType":"FunctionDefinition","parameters":{"id":3216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3215,"mutability":"mutable","name":"error","nameLocation":"626:5:18","nodeType":"VariableDeclaration","scope":3256,"src":"613:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3214,"nodeType":"UserDefinedTypeName","pathNode":{"id":3213,"name":"RecoverError","nameLocations":["613:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3212,"src":"613:12:18"},"referencedDeclaration":3212,"src":"613:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"612:20:18"},"returnParameters":{"id":3217,"nodeType":"ParameterList","parameters":[],"src":"646:0:18"},"scope":3568,"src":"592:511:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3301,"nodeType":"Block","src":"2271:626:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3269,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"2285:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2295:6:18","memberName":"length","nodeType":"MemberAccess","src":"2285:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2305:2:18","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2285:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3299,"nodeType":"Block","src":"2810:81:18","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2840:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2832:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3291,"name":"address","nodeType":"ElementaryTypeName","src":"2832:7:18","typeDescriptions":{}}},"id":3294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2832:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3295,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"2844:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3212_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2857:22:18","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3209,"src":"2844:35:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":3297,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2831:49:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3212_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3268,"id":3298,"nodeType":"Return","src":"2824:56:18"}]},"id":3300,"nodeType":"IfStatement","src":"2281:610:18","trueBody":{"id":3290,"nodeType":"Block","src":"2309:495:18","statements":[{"assignments":[3274],"declarations":[{"constant":false,"id":3274,"mutability":"mutable","name":"r","nameLocation":"2331:1:18","nodeType":"VariableDeclaration","scope":3290,"src":"2323:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3273,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2323:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3275,"nodeType":"VariableDeclarationStatement","src":"2323:9:18"},{"assignments":[3277],"declarations":[{"constant":false,"id":3277,"mutability":"mutable","name":"s","nameLocation":"2354:1:18","nodeType":"VariableDeclaration","scope":3290,"src":"2346:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3276,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2346:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3278,"nodeType":"VariableDeclarationStatement","src":"2346:9:18"},{"assignments":[3280],"declarations":[{"constant":false,"id":3280,"mutability":"mutable","name":"v","nameLocation":"2375:1:18","nodeType":"VariableDeclaration","scope":3290,"src":"2369:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3279,"name":"uint8","nodeType":"ElementaryTypeName","src":"2369:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3281,"nodeType":"VariableDeclarationStatement","src":"2369:7:18"},{"AST":{"nodeType":"YulBlock","src":"2577:171:18","statements":[{"nodeType":"YulAssignment","src":"2595:32:18","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2610:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2621:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2606:3:18"},"nodeType":"YulFunctionCall","src":"2606:20:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2600:5:18"},"nodeType":"YulFunctionCall","src":"2600:27:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2595:1:18"}]},{"nodeType":"YulAssignment","src":"2644:32:18","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2659:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2670:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2655:3:18"},"nodeType":"YulFunctionCall","src":"2655:20:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2649:5:18"},"nodeType":"YulFunctionCall","src":"2649:27:18"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2644:1:18"}]},{"nodeType":"YulAssignment","src":"2693:41:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2703:1:18","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2716:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2727:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:18"},"nodeType":"YulFunctionCall","src":"2712:20:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2706:5:18"},"nodeType":"YulFunctionCall","src":"2706:27:18"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2698:4:18"},"nodeType":"YulFunctionCall","src":"2698:36:18"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2693:1:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":3274,"isOffset":false,"isSlot":false,"src":"2595:1:18","valueSize":1},{"declaration":3277,"isOffset":false,"isSlot":false,"src":"2644:1:18","valueSize":1},{"declaration":3261,"isOffset":false,"isSlot":false,"src":"2610:9:18","valueSize":1},{"declaration":3261,"isOffset":false,"isSlot":false,"src":"2659:9:18","valueSize":1},{"declaration":3261,"isOffset":false,"isSlot":false,"src":"2716:9:18","valueSize":1},{"declaration":3280,"isOffset":false,"isSlot":false,"src":"2693:1:18","valueSize":1}],"id":3282,"nodeType":"InlineAssembly","src":"2568:180:18"},{"expression":{"arguments":[{"id":3284,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"2779:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3285,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"2785:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3286,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"2788:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3287,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"2791:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3283,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3302,3376,3470],"referencedDeclaration":3470,"src":"2768:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3212_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3212_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3268,"id":3289,"nodeType":"Return","src":"2761:32:18"}]}}]},"documentation":{"id":3257,"nodeType":"StructuredDocumentation","src":"1109:1053:18","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":3302,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2176:10:18","nodeType":"FunctionDefinition","parameters":{"id":3262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3259,"mutability":"mutable","name":"hash","nameLocation":"2195:4:18","nodeType":"VariableDeclaration","scope":3302,"src":"2187:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3261,"mutability":"mutable","name":"signature","nameLocation":"2214:9:18","nodeType":"VariableDeclaration","scope":3302,"src":"2201:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3260,"name":"bytes","nodeType":"ElementaryTypeName","src":"2201:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2186:38:18"},"returnParameters":{"id":3268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3302,"src":"2248:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3263,"name":"address","nodeType":"ElementaryTypeName","src":"2248:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3302,"src":"2257:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3266,"nodeType":"UserDefinedTypeName","pathNode":{"id":3265,"name":"RecoverError","nameLocations":["2257:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3212,"src":"2257:12:18"},"referencedDeclaration":3212,"src":"2257:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"2247:23:18"},"scope":3568,"src":"2167:730:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3328,"nodeType":"Block","src":"3770:140:18","statements":[{"assignments":[3313,3316],"declarations":[{"constant":false,"id":3313,"mutability":"mutable","name":"recovered","nameLocation":"3789:9:18","nodeType":"VariableDeclaration","scope":3328,"src":"3781:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3312,"name":"address","nodeType":"ElementaryTypeName","src":"3781:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3316,"mutability":"mutable","name":"error","nameLocation":"3813:5:18","nodeType":"VariableDeclaration","scope":3328,"src":"3800:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3315,"nodeType":"UserDefinedTypeName","pathNode":{"id":3314,"name":"RecoverError","nameLocations":["3800:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3212,"src":"3800:12:18"},"referencedDeclaration":3212,"src":"3800:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"id":3321,"initialValue":{"arguments":[{"id":3318,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"3833:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3319,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"3839:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3317,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3302,3376,3470],"referencedDeclaration":3302,"src":"3822:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3212_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3822:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3212_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3780:69:18"},{"expression":{"arguments":[{"id":3323,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"3871:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"}],"id":3322,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"3859:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3212_$returns$__$","typeString":"function (enum ECDSAUpgradeable.RecoverError) pure"}},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3325,"nodeType":"ExpressionStatement","src":"3859:18:18"},{"expression":{"id":3326,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"3894:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3311,"id":3327,"nodeType":"Return","src":"3887:16:18"}]},"documentation":{"id":3303,"nodeType":"StructuredDocumentation","src":"2903:775:18","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":3329,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3692:7:18","nodeType":"FunctionDefinition","parameters":{"id":3308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3305,"mutability":"mutable","name":"hash","nameLocation":"3708:4:18","nodeType":"VariableDeclaration","scope":3329,"src":"3700:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3304,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3700:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3307,"mutability":"mutable","name":"signature","nameLocation":"3727:9:18","nodeType":"VariableDeclaration","scope":3329,"src":"3714:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3306,"name":"bytes","nodeType":"ElementaryTypeName","src":"3714:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3699:38:18"},"returnParameters":{"id":3311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3329,"src":"3761:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3309,"name":"address","nodeType":"ElementaryTypeName","src":"3761:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3760:9:18"},"scope":3568,"src":"3683:227:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3375,"nodeType":"Block","src":"4267:203:18","statements":[{"assignments":[3345],"declarations":[{"constant":false,"id":3345,"mutability":"mutable","name":"s","nameLocation":"4285:1:18","nodeType":"VariableDeclaration","scope":3375,"src":"4277:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4277:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3352,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3346,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"4289:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4302:66:18","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4294:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4294:7:18","typeDescriptions":{}}},"id":3350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4294:75:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4289:80:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4277:92:18"},{"assignments":[3354],"declarations":[{"constant":false,"id":3354,"mutability":"mutable","name":"v","nameLocation":"4385:1:18","nodeType":"VariableDeclaration","scope":3375,"src":"4379:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3353,"name":"uint8","nodeType":"ElementaryTypeName","src":"4379:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3367,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3359,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"4404:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4396:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3357,"name":"uint256","nodeType":"ElementaryTypeName","src":"4396:7:18","typeDescriptions":{}}},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4396:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4411:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4396:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3363,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4395:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4418:2:18","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4395:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4389:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3355,"name":"uint8","nodeType":"ElementaryTypeName","src":"4389:5:18","typeDescriptions":{}}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4389:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4379:42:18"},{"expression":{"arguments":[{"id":3369,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"4449:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3370,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"4455:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3371,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"4458:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3372,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"4461:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3368,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3302,3376,3470],"referencedDeclaration":3470,"src":"4438:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3212_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3212_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3343,"id":3374,"nodeType":"Return","src":"4431:32:18"}]},"documentation":{"id":3330,"nodeType":"StructuredDocumentation","src":"3916:243:18","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":3376,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4173:10:18","nodeType":"FunctionDefinition","parameters":{"id":3337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3332,"mutability":"mutable","name":"hash","nameLocation":"4192:4:18","nodeType":"VariableDeclaration","scope":3376,"src":"4184:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4184:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3334,"mutability":"mutable","name":"r","nameLocation":"4206:1:18","nodeType":"VariableDeclaration","scope":3376,"src":"4198:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3333,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4198:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3336,"mutability":"mutable","name":"vs","nameLocation":"4217:2:18","nodeType":"VariableDeclaration","scope":3376,"src":"4209:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3335,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4209:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4183:37:18"},"returnParameters":{"id":3343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3376,"src":"4244:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3338,"name":"address","nodeType":"ElementaryTypeName","src":"4244:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3376,"src":"4253:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3341,"nodeType":"UserDefinedTypeName","pathNode":{"id":3340,"name":"RecoverError","nameLocations":["4253:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3212,"src":"4253:12:18"},"referencedDeclaration":3212,"src":"4253:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"4243:23:18"},"scope":3568,"src":"4164:306:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3405,"nodeType":"Block","src":"4721:136:18","statements":[{"assignments":[3389,3392],"declarations":[{"constant":false,"id":3389,"mutability":"mutable","name":"recovered","nameLocation":"4740:9:18","nodeType":"VariableDeclaration","scope":3405,"src":"4732:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3388,"name":"address","nodeType":"ElementaryTypeName","src":"4732:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3392,"mutability":"mutable","name":"error","nameLocation":"4764:5:18","nodeType":"VariableDeclaration","scope":3405,"src":"4751:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3391,"nodeType":"UserDefinedTypeName","pathNode":{"id":3390,"name":"RecoverError","nameLocations":["4751:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3212,"src":"4751:12:18"},"referencedDeclaration":3212,"src":"4751:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"id":3398,"initialValue":{"arguments":[{"id":3394,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"4784:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3395,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"4790:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3396,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"4793:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3393,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3302,3376,3470],"referencedDeclaration":3376,"src":"4773:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3212_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4773:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3212_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4731:65:18"},{"expression":{"arguments":[{"id":3400,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"4818:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"}],"id":3399,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"4806:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3212_$returns$__$","typeString":"function (enum ECDSAUpgradeable.RecoverError) pure"}},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4806:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3402,"nodeType":"ExpressionStatement","src":"4806:18:18"},{"expression":{"id":3403,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"4841:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3387,"id":3404,"nodeType":"Return","src":"4834:16:18"}]},"documentation":{"id":3377,"nodeType":"StructuredDocumentation","src":"4476:154:18","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":3406,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4644:7:18","nodeType":"FunctionDefinition","parameters":{"id":3384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3379,"mutability":"mutable","name":"hash","nameLocation":"4660:4:18","nodeType":"VariableDeclaration","scope":3406,"src":"4652:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4652:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3381,"mutability":"mutable","name":"r","nameLocation":"4674:1:18","nodeType":"VariableDeclaration","scope":3406,"src":"4666:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4666:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3383,"mutability":"mutable","name":"vs","nameLocation":"4685:2:18","nodeType":"VariableDeclaration","scope":3406,"src":"4677:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3382,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4677:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4651:37:18"},"returnParameters":{"id":3387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3406,"src":"4712:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3385,"name":"address","nodeType":"ElementaryTypeName","src":"4712:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4711:9:18"},"scope":3568,"src":"4635:222:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3469,"nodeType":"Block","src":"5142:1345:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3425,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"6038:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6030:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3423,"name":"uint256","nodeType":"ElementaryTypeName","src":"6030:7:18","typeDescriptions":{}}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6030:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6043:66:18","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6030:79:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3438,"nodeType":"IfStatement","src":"6026:161:18","trueBody":{"id":3437,"nodeType":"Block","src":"6111:76:18","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6141:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3429,"name":"address","nodeType":"ElementaryTypeName","src":"6133:7:18","typeDescriptions":{}}},"id":3432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6133:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3433,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"6145:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3212_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6158:17:18","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3210,"src":"6145:30:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":3435,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6132:44:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3212_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3422,"id":3436,"nodeType":"Return","src":"6125:51:18"}]}},{"assignments":[3440],"declarations":[{"constant":false,"id":3440,"mutability":"mutable","name":"signer","nameLocation":"6289:6:18","nodeType":"VariableDeclaration","scope":3469,"src":"6281:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3439,"name":"address","nodeType":"ElementaryTypeName","src":"6281:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3447,"initialValue":{"arguments":[{"id":3442,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"6308:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3443,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"6314:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3444,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"6317:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3445,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"6320:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3441,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6298:9:18","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6281:41:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3448,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"6336:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6354:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6346:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3449,"name":"address","nodeType":"ElementaryTypeName","src":"6346:7:18","typeDescriptions":{}}},"id":3452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6336:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3463,"nodeType":"IfStatement","src":"6332:101:18","trueBody":{"id":3462,"nodeType":"Block","src":"6358:75:18","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6388:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6380:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3454,"name":"address","nodeType":"ElementaryTypeName","src":"6380:7:18","typeDescriptions":{}}},"id":3457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6380:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3458,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"6392:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3212_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6405:16:18","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3208,"src":"6392:29:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":3460,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6379:43:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3212_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3422,"id":3461,"nodeType":"Return","src":"6372:50:18"}]}},{"expression":{"components":[{"id":3464,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"6451:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3465,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"6459:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3212_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":3466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6472:7:18","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3207,"src":"6459:20:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":3467,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6450:30:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3212_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":3422,"id":3468,"nodeType":"Return","src":"6443:37:18"}]},"documentation":{"id":3407,"nodeType":"StructuredDocumentation","src":"4863:163:18","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":3470,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5040:10:18","nodeType":"FunctionDefinition","parameters":{"id":3416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3409,"mutability":"mutable","name":"hash","nameLocation":"5059:4:18","nodeType":"VariableDeclaration","scope":3470,"src":"5051:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3408,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5051:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3411,"mutability":"mutable","name":"v","nameLocation":"5071:1:18","nodeType":"VariableDeclaration","scope":3470,"src":"5065:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3410,"name":"uint8","nodeType":"ElementaryTypeName","src":"5065:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3413,"mutability":"mutable","name":"r","nameLocation":"5082:1:18","nodeType":"VariableDeclaration","scope":3470,"src":"5074:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3412,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5074:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3415,"mutability":"mutable","name":"s","nameLocation":"5093:1:18","nodeType":"VariableDeclaration","scope":3470,"src":"5085:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3414,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5085:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5050:45:18"},"returnParameters":{"id":3422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3470,"src":"5119:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3417,"name":"address","nodeType":"ElementaryTypeName","src":"5119:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3470,"src":"5128:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3420,"nodeType":"UserDefinedTypeName","pathNode":{"id":3419,"name":"RecoverError","nameLocations":["5128:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3212,"src":"5128:12:18"},"referencedDeclaration":3212,"src":"5128:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"5118:23:18"},"scope":3568,"src":"5031:1456:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3502,"nodeType":"Block","src":"6714:138:18","statements":[{"assignments":[3485,3488],"declarations":[{"constant":false,"id":3485,"mutability":"mutable","name":"recovered","nameLocation":"6733:9:18","nodeType":"VariableDeclaration","scope":3502,"src":"6725:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3484,"name":"address","nodeType":"ElementaryTypeName","src":"6725:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3488,"mutability":"mutable","name":"error","nameLocation":"6757:5:18","nodeType":"VariableDeclaration","scope":3502,"src":"6744:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":3487,"nodeType":"UserDefinedTypeName","pathNode":{"id":3486,"name":"RecoverError","nameLocations":["6744:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3212,"src":"6744:12:18"},"referencedDeclaration":3212,"src":"6744:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"id":3495,"initialValue":{"arguments":[{"id":3490,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"6777:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3491,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"6783:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3492,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"6786:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3493,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"6789:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3489,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3302,3376,3470],"referencedDeclaration":3470,"src":"6766:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3212_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6766:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3212_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6724:67:18"},{"expression":{"arguments":[{"id":3497,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"6813:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3212","typeString":"enum ECDSAUpgradeable.RecoverError"}],"id":3496,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"6801:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3212_$returns$__$","typeString":"function (enum ECDSAUpgradeable.RecoverError) pure"}},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6801:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3499,"nodeType":"ExpressionStatement","src":"6801:18:18"},{"expression":{"id":3500,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"6836:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3483,"id":3501,"nodeType":"Return","src":"6829:16:18"}]},"documentation":{"id":3471,"nodeType":"StructuredDocumentation","src":"6493:122:18","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3503,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6629:7:18","nodeType":"FunctionDefinition","parameters":{"id":3480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3473,"mutability":"mutable","name":"hash","nameLocation":"6645:4:18","nodeType":"VariableDeclaration","scope":3503,"src":"6637:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6637:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3475,"mutability":"mutable","name":"v","nameLocation":"6657:1:18","nodeType":"VariableDeclaration","scope":3503,"src":"6651:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3474,"name":"uint8","nodeType":"ElementaryTypeName","src":"6651:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3477,"mutability":"mutable","name":"r","nameLocation":"6668:1:18","nodeType":"VariableDeclaration","scope":3503,"src":"6660:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6660:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3479,"mutability":"mutable","name":"s","nameLocation":"6679:1:18","nodeType":"VariableDeclaration","scope":3503,"src":"6671:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3478,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6671:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6636:45:18"},"returnParameters":{"id":3483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3503,"src":"6705:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3481,"name":"address","nodeType":"ElementaryTypeName","src":"6705:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6704:9:18"},"scope":3568,"src":"6620:232:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3512,"nodeType":"Block","src":"7228:310:18","statements":[{"AST":{"nodeType":"YulBlock","src":"7384:148:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7405:4:18","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"7411:34:18","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7398:6:18"},"nodeType":"YulFunctionCall","src":"7398:48:18"},"nodeType":"YulExpressionStatement","src":"7398:48:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7466:4:18","type":"","value":"0x1c"},{"name":"hash","nodeType":"YulIdentifier","src":"7472:4:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7459:6:18"},"nodeType":"YulFunctionCall","src":"7459:18:18"},"nodeType":"YulExpressionStatement","src":"7459:18:18"},{"nodeType":"YulAssignment","src":"7490:32:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7511:4:18","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"7517:4:18","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7501:9:18"},"nodeType":"YulFunctionCall","src":"7501:21:18"},"variableNames":[{"name":"message","nodeType":"YulIdentifier","src":"7490:7:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":3506,"isOffset":false,"isSlot":false,"src":"7472:4:18","valueSize":1},{"declaration":3509,"isOffset":false,"isSlot":false,"src":"7490:7:18","valueSize":1}],"id":3511,"nodeType":"InlineAssembly","src":"7375:157:18"}]},"documentation":{"id":3504,"nodeType":"StructuredDocumentation","src":"6858:279:18","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":3513,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7151:22:18","nodeType":"FunctionDefinition","parameters":{"id":3507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3506,"mutability":"mutable","name":"hash","nameLocation":"7182:4:18","nodeType":"VariableDeclaration","scope":3513,"src":"7174:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3505,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7174:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7173:14:18"},"returnParameters":{"id":3510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3509,"mutability":"mutable","name":"message","nameLocation":"7219:7:18","nodeType":"VariableDeclaration","scope":3513,"src":"7211:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7211:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7210:17:18"},"scope":3568,"src":"7142:396:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3534,"nodeType":"Block","src":"7903:127:18","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7947:32:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":3527,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"8009:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8011:6:18","memberName":"length","nodeType":"MemberAccess","src":"8009:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3525,"name":"StringsUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"7981:18:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringsUpgradeable_$3202_$","typeString":"type(library StringsUpgradeable)"}},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8000:8:18","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3032,"src":"7981:27:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7981:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3530,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"8020:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3522,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7930:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7934:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"7930:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7930:92:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3521,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7920:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7920:103:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3520,"id":3533,"nodeType":"Return","src":"7913:110:18"}]},"documentation":{"id":3514,"nodeType":"StructuredDocumentation","src":"7544:274:18","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":3535,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7832:22:18","nodeType":"FunctionDefinition","parameters":{"id":3517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3516,"mutability":"mutable","name":"s","nameLocation":"7868:1:18","nodeType":"VariableDeclaration","scope":3535,"src":"7855:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3515,"name":"bytes","nodeType":"ElementaryTypeName","src":"7855:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7854:16:18"},"returnParameters":{"id":3520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3535,"src":"7894:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3518,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7894:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7893:9:18"},"scope":3568,"src":"7823:207:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3546,"nodeType":"Block","src":"8476:290:18","statements":[{"AST":{"nodeType":"YulBlock","src":"8538:222:18","statements":[{"nodeType":"YulVariableDeclaration","src":"8552:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8569:4:18","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8563:5:18"},"nodeType":"YulFunctionCall","src":"8563:11:18"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8556:3:18","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8594:3:18"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"8599:10:18","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8587:6:18"},"nodeType":"YulFunctionCall","src":"8587:23:18"},"nodeType":"YulExpressionStatement","src":"8587:23:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8634:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8639:4:18","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8630:3:18"},"nodeType":"YulFunctionCall","src":"8630:14:18"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"8646:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8623:6:18"},"nodeType":"YulFunctionCall","src":"8623:39:18"},"nodeType":"YulExpressionStatement","src":"8623:39:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8686:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8691:4:18","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8682:3:18"},"nodeType":"YulFunctionCall","src":"8682:14:18"},{"name":"structHash","nodeType":"YulIdentifier","src":"8698:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8675:6:18"},"nodeType":"YulFunctionCall","src":"8675:34:18"},"nodeType":"YulExpressionStatement","src":"8675:34:18"},{"nodeType":"YulAssignment","src":"8722:28:18","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8740:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8745:4:18","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8730:9:18"},"nodeType":"YulFunctionCall","src":"8730:20:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8722:4:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":3543,"isOffset":false,"isSlot":false,"src":"8722:4:18","valueSize":1},{"declaration":3538,"isOffset":false,"isSlot":false,"src":"8646:15:18","valueSize":1},{"declaration":3540,"isOffset":false,"isSlot":false,"src":"8698:10:18","valueSize":1}],"id":3545,"nodeType":"InlineAssembly","src":"8529:231:18"}]},"documentation":{"id":3536,"nodeType":"StructuredDocumentation","src":"8036:328:18","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":3547,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8378:15:18","nodeType":"FunctionDefinition","parameters":{"id":3541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3538,"mutability":"mutable","name":"domainSeparator","nameLocation":"8402:15:18","nodeType":"VariableDeclaration","scope":3547,"src":"8394:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8394:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3540,"mutability":"mutable","name":"structHash","nameLocation":"8427:10:18","nodeType":"VariableDeclaration","scope":3547,"src":"8419:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3539,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8419:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8393:45:18"},"returnParameters":{"id":3544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3543,"mutability":"mutable","name":"data","nameLocation":"8470:4:18","nodeType":"VariableDeclaration","scope":3547,"src":"8462:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8462:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8461:14:18"},"scope":3568,"src":"8369:397:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3566,"nodeType":"Block","src":"9081:80:18","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9125:10:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3561,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"9137:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3562,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"9148:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3558,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9108:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9112:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"9108:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9108:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3557,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9098:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9098:56:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3556,"id":3565,"nodeType":"Return","src":"9091:63:18"}]},"documentation":{"id":3548,"nodeType":"StructuredDocumentation","src":"8772:193:18","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":3567,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8979:31:18","nodeType":"FunctionDefinition","parameters":{"id":3553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3550,"mutability":"mutable","name":"validator","nameLocation":"9019:9:18","nodeType":"VariableDeclaration","scope":3567,"src":"9011:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3549,"name":"address","nodeType":"ElementaryTypeName","src":"9011:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3552,"mutability":"mutable","name":"data","nameLocation":"9043:4:18","nodeType":"VariableDeclaration","scope":3567,"src":"9030:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3551,"name":"bytes","nodeType":"ElementaryTypeName","src":"9030:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9010:38:18"},"returnParameters":{"id":3556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3567,"src":"9072:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3554,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9072:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9071:9:18"},"scope":3568,"src":"8970:191:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3569,"src":"380:8783:18","usedErrors":[],"usedEvents":[]}],"src":"112:9052:18"},"id":18},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2857],"ECDSAUpgradeable":[3568],"EIP712Upgradeable":[3852],"IERC5267Upgradeable":[511],"Initializable":[704],"MathUpgradeable":[4774],"SignedMathUpgradeable":[6420],"StringsUpgradeable":[3202]},"id":3853,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3570,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"113:23:19"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","file":"./ECDSAUpgradeable.sol","id":3571,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3853,"sourceUnit":3569,"src":"138:32:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol","file":"../../interfaces/IERC5267Upgradeable.sol","id":3572,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3853,"sourceUnit":512,"src":"171:50:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":3573,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3853,"sourceUnit":705,"src":"222:45:19","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3575,"name":"Initializable","nameLocations":["1826:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"1826:13:19"},"id":3576,"nodeType":"InheritanceSpecifier","src":"1826:13:19"},{"baseName":{"id":3577,"name":"IERC5267Upgradeable","nameLocations":["1841:19:19"],"nodeType":"IdentifierPath","referencedDeclaration":511,"src":"1841:19:19"},"id":3578,"nodeType":"InheritanceSpecifier","src":"1841:19:19"}],"canonicalName":"EIP712Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3574,"nodeType":"StructuredDocumentation","src":"269:1517:19","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n _Available since v3.4._\n @custom:storage-size 52"},"fullyImplemented":true,"id":3852,"linearizedBaseContracts":[3852,511,704],"name":"EIP712Upgradeable","nameLocation":"1805:17:19","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3583,"mutability":"constant","name":"_TYPE_HASH","nameLocation":"1892:10:19","nodeType":"VariableDeclaration","scope":3852,"src":"1867:141:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1867:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1923:84:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3580,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1913:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1913:95:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"documentation":{"id":3584,"nodeType":"StructuredDocumentation","src":"2015:40:19","text":"@custom:oz-renamed-from _HASHED_NAME"},"id":3586,"mutability":"mutable","name":"_hashedName","nameLocation":"2076:11:19","nodeType":"VariableDeclaration","scope":3852,"src":"2060:27:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3585,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2060:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"documentation":{"id":3587,"nodeType":"StructuredDocumentation","src":"2093:43:19","text":"@custom:oz-renamed-from _HASHED_VERSION"},"id":3589,"mutability":"mutable","name":"_hashedVersion","nameLocation":"2157:14:19","nodeType":"VariableDeclaration","scope":3852,"src":"2141:30:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3588,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2141:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3591,"mutability":"mutable","name":"_name","nameLocation":"2193:5:19","nodeType":"VariableDeclaration","scope":3852,"src":"2178:20:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3590,"name":"string","nodeType":"ElementaryTypeName","src":"2178:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3593,"mutability":"mutable","name":"_version","nameLocation":"2219:8:19","nodeType":"VariableDeclaration","scope":3852,"src":"2204:23:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3592,"name":"string","nodeType":"ElementaryTypeName","src":"2204:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3608,"nodeType":"Block","src":"2890:55:19","statements":[{"expression":{"arguments":[{"id":3604,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"2924:4:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3605,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"2930:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3603,"name":"__EIP712_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"2900:23:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2900:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3607,"nodeType":"ExpressionStatement","src":"2900:38:19"}]},"documentation":{"id":3594,"nodeType":"StructuredDocumentation","src":"2234:559:19","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3609,"implemented":true,"kind":"function","modifiers":[{"id":3601,"kind":"modifierInvocation","modifierName":{"id":3600,"name":"onlyInitializing","nameLocations":["2873:16:19"],"nodeType":"IdentifierPath","referencedDeclaration":649,"src":"2873:16:19"},"nodeType":"ModifierInvocation","src":"2873:16:19"}],"name":"__EIP712_init","nameLocation":"2807:13:19","nodeType":"FunctionDefinition","parameters":{"id":3599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3596,"mutability":"mutable","name":"name","nameLocation":"2835:4:19","nodeType":"VariableDeclaration","scope":3609,"src":"2821:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3595,"name":"string","nodeType":"ElementaryTypeName","src":"2821:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3598,"mutability":"mutable","name":"version","nameLocation":"2855:7:19","nodeType":"VariableDeclaration","scope":3609,"src":"2841:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3597,"name":"string","nodeType":"ElementaryTypeName","src":"2841:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2820:43:19"},"returnParameters":{"id":3602,"nodeType":"ParameterList","parameters":[],"src":"2890:0:19"},"scope":3852,"src":"2798:147:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3634,"nodeType":"Block","src":"3053:165:19","statements":[{"expression":{"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3618,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"3063:5:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3619,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"3071:4:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3063:12:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3621,"nodeType":"ExpressionStatement","src":"3063:12:19"},{"expression":{"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3622,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"3085:8:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3623,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"3096:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3085:18:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3625,"nodeType":"ExpressionStatement","src":"3085:18:19"},{"expression":{"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3626,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"3168:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3182:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3168:15:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3629,"nodeType":"ExpressionStatement","src":"3168:15:19"},{"expression":{"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3630,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"3193:14:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3210:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3193:18:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3633,"nodeType":"ExpressionStatement","src":"3193:18:19"}]},"id":3635,"implemented":true,"kind":"function","modifiers":[{"id":3616,"kind":"modifierInvocation","modifierName":{"id":3615,"name":"onlyInitializing","nameLocations":["3036:16:19"],"nodeType":"IdentifierPath","referencedDeclaration":649,"src":"3036:16:19"},"nodeType":"ModifierInvocation","src":"3036:16:19"}],"name":"__EIP712_init_unchained","nameLocation":"2960:23:19","nodeType":"FunctionDefinition","parameters":{"id":3614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3611,"mutability":"mutable","name":"name","nameLocation":"2998:4:19","nodeType":"VariableDeclaration","scope":3635,"src":"2984:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3610,"name":"string","nodeType":"ElementaryTypeName","src":"2984:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3613,"mutability":"mutable","name":"version","nameLocation":"3018:7:19","nodeType":"VariableDeclaration","scope":3635,"src":"3004:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3612,"name":"string","nodeType":"ElementaryTypeName","src":"3004:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2983:43:19"},"returnParameters":{"id":3617,"nodeType":"ParameterList","parameters":[],"src":"3053:0:19"},"scope":3852,"src":"2951:267:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3644,"nodeType":"Block","src":"3366:47:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3641,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"3383:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3383:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3640,"id":3643,"nodeType":"Return","src":"3376:30:19"}]},"documentation":{"id":3636,"nodeType":"StructuredDocumentation","src":"3224:75:19","text":" @dev Returns the domain separator for the current chain."},"id":3645,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3313:18:19","nodeType":"FunctionDefinition","parameters":{"id":3637,"nodeType":"ParameterList","parameters":[],"src":"3331:2:19"},"returnParameters":{"id":3640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3645,"src":"3357:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3638,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3357:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3356:9:19"},"scope":3852,"src":"3304:109:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3667,"nodeType":"Block","src":"3483:128:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3653,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"3521:10:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3654,"name":"_EIP712NameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"3533:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3533:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3656,"name":"_EIP712VersionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"3552:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3658,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3574:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3580:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"3574:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3662,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3597:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712Upgradeable_$3852","typeString":"contract EIP712Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712Upgradeable_$3852","typeString":"contract EIP712Upgradeable"}],"id":3661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3589:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3660,"name":"address","nodeType":"ElementaryTypeName","src":"3589:7:19","typeDescriptions":{}}},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3589:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3651,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3510:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3514:6:19","memberName":"encode","nodeType":"MemberAccess","src":"3510:10:19","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:93:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3650,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3500:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3500:104:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3649,"id":3666,"nodeType":"Return","src":"3493:111:19"}]},"id":3668,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3428:21:19","nodeType":"FunctionDefinition","parameters":{"id":3646,"nodeType":"ParameterList","parameters":[],"src":"3449:2:19"},"returnParameters":{"id":3649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3668,"src":"3474:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3647,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3474:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3473:9:19"},"scope":3852,"src":"3419:192:19","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3683,"nodeType":"Block","src":"4322:90:19","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3678,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"4372:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4372:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3680,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"4394:10:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3676,"name":"ECDSAUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"4339:16:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSAUpgradeable_$3568_$","typeString":"type(library ECDSAUpgradeable)"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4356:15:19","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3547,"src":"4339:32:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4339:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3675,"id":3682,"nodeType":"Return","src":"4332:73:19"}]},"documentation":{"id":3669,"nodeType":"StructuredDocumentation","src":"3617:614:19","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3684,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4245:16:19","nodeType":"FunctionDefinition","parameters":{"id":3672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3671,"mutability":"mutable","name":"structHash","nameLocation":"4270:10:19","nodeType":"VariableDeclaration","scope":3684,"src":"4262:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3670,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4262:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4261:20:19"},"returnParameters":{"id":3675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3684,"src":"4313:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3673,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4313:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4312:9:19"},"scope":3852,"src":"4236:176:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[510],"body":{"id":3737,"nodeType":"Block","src":"4845:516:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3705,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"5066:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5081:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5066:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3708,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"5086:14:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5104:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5086:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5066:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4549503731323a20556e696e697469616c697a6564","id":3712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5107:23:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","typeString":"literal_string \"EIP712: Uninitialized\""},"value":"EIP712: Uninitialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","typeString":"literal_string \"EIP712: Uninitialized\""}],"id":3704,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5058:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5058:73:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3714,"nodeType":"ExpressionStatement","src":"5058:73:19"},{"expression":{"components":[{"hexValue":"0f","id":3715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5163:7:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3716,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"5193:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5193:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3718,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"5220:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5220:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3720,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5250:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5256:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"5250:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3724,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5285:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712Upgradeable_$3852","typeString":"contract EIP712Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712Upgradeable_$3852","typeString":"contract EIP712Upgradeable"}],"id":3723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5277:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3722,"name":"address","nodeType":"ElementaryTypeName","src":"5277:7:19","typeDescriptions":{}}},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5277:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5312:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5304:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3726,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5304:7:19","typeDescriptions":{}}},"id":3729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5304:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5342:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5328:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3730,"name":"uint256","nodeType":"ElementaryTypeName","src":"5332:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3731,"nodeType":"ArrayTypeName","src":"5332:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5328:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3735,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5149:205:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3703,"id":3736,"nodeType":"Return","src":"5142:212:19"}]},"documentation":{"id":3685,"nodeType":"StructuredDocumentation","src":"4418:77:19","text":" @dev See {EIP-5267}.\n _Available since v4.9._"},"functionSelector":"84b0196e","id":3738,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"4509:12:19","nodeType":"FunctionDefinition","overrides":{"id":3687,"nodeType":"OverrideSpecifier","overrides":[],"src":"4576:8:19"},"parameters":{"id":3686,"nodeType":"ParameterList","parameters":[],"src":"4521:2:19"},"returnParameters":{"id":3703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3689,"mutability":"mutable","name":"fields","nameLocation":"4622:6:19","nodeType":"VariableDeclaration","scope":3738,"src":"4615:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3688,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4615:6:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3691,"mutability":"mutable","name":"name","nameLocation":"4656:4:19","nodeType":"VariableDeclaration","scope":3738,"src":"4642:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3690,"name":"string","nodeType":"ElementaryTypeName","src":"4642:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3693,"mutability":"mutable","name":"version","nameLocation":"4688:7:19","nodeType":"VariableDeclaration","scope":3738,"src":"4674:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3692,"name":"string","nodeType":"ElementaryTypeName","src":"4674:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3695,"mutability":"mutable","name":"chainId","nameLocation":"4717:7:19","nodeType":"VariableDeclaration","scope":3738,"src":"4709:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3694,"name":"uint256","nodeType":"ElementaryTypeName","src":"4709:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3697,"mutability":"mutable","name":"verifyingContract","nameLocation":"4746:17:19","nodeType":"VariableDeclaration","scope":3738,"src":"4738:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3696,"name":"address","nodeType":"ElementaryTypeName","src":"4738:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3699,"mutability":"mutable","name":"salt","nameLocation":"4785:4:19","nodeType":"VariableDeclaration","scope":3738,"src":"4777:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3698,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4777:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3702,"mutability":"mutable","name":"extensions","nameLocation":"4820:10:19","nodeType":"VariableDeclaration","scope":3738,"src":"4803:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3700,"name":"uint256","nodeType":"ElementaryTypeName","src":"4803:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3701,"nodeType":"ArrayTypeName","src":"4803:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4601:239:19"},"scope":3852,"src":"4500:861:19","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3746,"nodeType":"Block","src":"5654:29:19","statements":[{"expression":{"id":3744,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"5671:5:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":3743,"id":3745,"nodeType":"Return","src":"5664:12:19"}]},"documentation":{"id":3739,"nodeType":"StructuredDocumentation","src":"5367:213:19","text":" @dev The name parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":3747,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"5594:11:19","nodeType":"FunctionDefinition","parameters":{"id":3740,"nodeType":"ParameterList","parameters":[],"src":"5605:2:19"},"returnParameters":{"id":3743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3747,"src":"5639:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3741,"name":"string","nodeType":"ElementaryTypeName","src":"5639:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5638:15:19"},"scope":3852,"src":"5585:98:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3755,"nodeType":"Block","src":"5982:32:19","statements":[{"expression":{"id":3753,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"5999:8:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":3752,"id":3754,"nodeType":"Return","src":"5992:15:19"}]},"documentation":{"id":3748,"nodeType":"StructuredDocumentation","src":"5689:216:19","text":" @dev The version parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":3756,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"5919:14:19","nodeType":"FunctionDefinition","parameters":{"id":3749,"nodeType":"ParameterList","parameters":[],"src":"5933:2:19"},"returnParameters":{"id":3752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3756,"src":"5967:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3750,"name":"string","nodeType":"ElementaryTypeName","src":"5967:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5966:15:19"},"scope":3852,"src":"5910:104:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3800,"nodeType":"Block","src":"6288:571:19","statements":[{"assignments":[3763],"declarations":[{"constant":false,"id":3763,"mutability":"mutable","name":"name","nameLocation":"6312:4:19","nodeType":"VariableDeclaration","scope":3800,"src":"6298:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3762,"name":"string","nodeType":"ElementaryTypeName","src":"6298:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3766,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3764,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"6319:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6319:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"6298:34:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3769,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"6352:4:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6346:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3767,"name":"bytes","nodeType":"ElementaryTypeName","src":"6346:5:19","typeDescriptions":{}}},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:19","memberName":"length","nodeType":"MemberAccess","src":"6346:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6367:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6346:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3798,"nodeType":"Block","src":"6430:423:19","statements":[{"assignments":[3783],"declarations":[{"constant":false,"id":3783,"mutability":"mutable","name":"hashedName","nameLocation":"6675:10:19","nodeType":"VariableDeclaration","scope":3798,"src":"6667:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3782,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6667:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3785,"initialValue":{"id":3784,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"6688:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6667:32:19"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3786,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"6717:10:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6731:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6717:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3796,"nodeType":"Block","src":"6790:53:19","statements":[{"expression":{"arguments":[{"hexValue":"","id":3793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6825:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":3792,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6815:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6815:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3761,"id":3795,"nodeType":"Return","src":"6808:20:19"}]},"id":3797,"nodeType":"IfStatement","src":"6713:130:19","trueBody":{"id":3791,"nodeType":"Block","src":"6734:50:19","statements":[{"expression":{"id":3789,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"6759:10:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3761,"id":3790,"nodeType":"Return","src":"6752:17:19"}]}}]},"id":3799,"nodeType":"IfStatement","src":"6342:511:19","trueBody":{"id":3781,"nodeType":"Block","src":"6370:54:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3777,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"6407:4:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6401:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3775,"name":"bytes","nodeType":"ElementaryTypeName","src":"6401:5:19","typeDescriptions":{}}},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6401:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3774,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6391:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6391:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3761,"id":3780,"nodeType":"Return","src":"6384:29:19"}]}}]},"documentation":{"id":3757,"nodeType":"StructuredDocumentation","src":"6020:204:19","text":" @dev The hash of the name parameter for the EIP712 domain.\n NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Name` instead."},"id":3801,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712NameHash","nameLocation":"6238:15:19","nodeType":"FunctionDefinition","parameters":{"id":3758,"nodeType":"ParameterList","parameters":[],"src":"6253:2:19"},"returnParameters":{"id":3761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3801,"src":"6279:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3759,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6279:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6278:9:19"},"scope":3852,"src":"6229:630:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3845,"nodeType":"Block","src":"7142:604:19","statements":[{"assignments":[3808],"declarations":[{"constant":false,"id":3808,"mutability":"mutable","name":"version","nameLocation":"7166:7:19","nodeType":"VariableDeclaration","scope":3845,"src":"7152:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3807,"name":"string","nodeType":"ElementaryTypeName","src":"7152:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3811,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3809,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"7176:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7176:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"7152:40:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3814,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"7212:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7206:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3812,"name":"bytes","nodeType":"ElementaryTypeName","src":"7206:5:19","typeDescriptions":{}}},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7206:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7221:6:19","memberName":"length","nodeType":"MemberAccess","src":"7206:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7230:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7206:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3843,"nodeType":"Block","src":"7296:444:19","statements":[{"assignments":[3828],"declarations":[{"constant":false,"id":3828,"mutability":"mutable","name":"hashedVersion","nameLocation":"7550:13:19","nodeType":"VariableDeclaration","scope":3843,"src":"7542:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3827,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7542:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3830,"initialValue":{"id":3829,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"7566:14:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7542:38:19"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3831,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"7598:13:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7598:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3841,"nodeType":"Block","src":"7677:53:19","statements":[{"expression":{"arguments":[{"hexValue":"","id":3838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7712:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":3837,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7702:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7702:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3806,"id":3840,"nodeType":"Return","src":"7695:20:19"}]},"id":3842,"nodeType":"IfStatement","src":"7594:136:19","trueBody":{"id":3836,"nodeType":"Block","src":"7618:53:19","statements":[{"expression":{"id":3834,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"7643:13:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3806,"id":3835,"nodeType":"Return","src":"7636:20:19"}]}}]},"id":3844,"nodeType":"IfStatement","src":"7202:538:19","trueBody":{"id":3826,"nodeType":"Block","src":"7233:57:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3822,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"7270:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7264:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3820,"name":"bytes","nodeType":"ElementaryTypeName","src":"7264:5:19","typeDescriptions":{}}},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7264:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3819,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7254:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7254:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3806,"id":3825,"nodeType":"Return","src":"7247:32:19"}]}}]},"documentation":{"id":3802,"nodeType":"StructuredDocumentation","src":"6865:210:19","text":" @dev The hash of the version parameter for the EIP712 domain.\n NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Version` instead."},"id":3846,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712VersionHash","nameLocation":"7089:18:19","nodeType":"FunctionDefinition","parameters":{"id":3803,"nodeType":"ParameterList","parameters":[],"src":"7107:2:19"},"returnParameters":{"id":3806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3846,"src":"7133:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3804,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7133:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7132:9:19"},"scope":3852,"src":"7080:666:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":3847,"nodeType":"StructuredDocumentation","src":"7752:254:19","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":3851,"mutability":"mutable","name":"__gap","nameLocation":"8031:5:19","nodeType":"VariableDeclaration","scope":3852,"src":"8011:25:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$48_storage","typeString":"uint256[48]"},"typeName":{"baseType":{"id":3848,"name":"uint256","nodeType":"ElementaryTypeName","src":"8011:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3850,"length":{"hexValue":"3438","id":3849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8019:2:19","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"ArrayTypeName","src":"8011:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$48_storage_ptr","typeString":"uint256[48]"}},"visibility":"private"}],"scope":3853,"src":"1787:6252:19","usedErrors":[],"usedEvents":[491,550]}],"src":"113:7927:19"},"id":19},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2857],"ERC165Upgradeable":[3896],"IERC165Upgradeable":[3908],"Initializable":[704]},"id":3897,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3854,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:20"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","file":"./IERC165Upgradeable.sol","id":3855,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3897,"sourceUnit":3909,"src":"124:34:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":3856,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3897,"sourceUnit":705,"src":"159:45:20","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3858,"name":"Initializable","nameLocations":["822:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":704,"src":"822:13:20"},"id":3859,"nodeType":"InheritanceSpecifier","src":"822:13:20"},{"baseName":{"id":3860,"name":"IERC165Upgradeable","nameLocations":["837:18:20"],"nodeType":"IdentifierPath","referencedDeclaration":3908,"src":"837:18:20"},"id":3861,"nodeType":"InheritanceSpecifier","src":"837:18:20"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3857,"nodeType":"StructuredDocumentation","src":"206:576:20","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":3896,"linearizedBaseContracts":[3896,3908,704],"name":"ERC165Upgradeable","nameLocation":"801:17:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":3866,"nodeType":"Block","src":"913:7:20","statements":[]},"id":3867,"implemented":true,"kind":"function","modifiers":[{"id":3864,"kind":"modifierInvocation","modifierName":{"id":3863,"name":"onlyInitializing","nameLocations":["896:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":649,"src":"896:16:20"},"nodeType":"ModifierInvocation","src":"896:16:20"}],"name":"__ERC165_init","nameLocation":"871:13:20","nodeType":"FunctionDefinition","parameters":{"id":3862,"nodeType":"ParameterList","parameters":[],"src":"884:2:20"},"returnParameters":{"id":3865,"nodeType":"ParameterList","parameters":[],"src":"913:0:20"},"scope":3896,"src":"862:58:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3872,"nodeType":"Block","src":"987:7:20","statements":[]},"id":3873,"implemented":true,"kind":"function","modifiers":[{"id":3870,"kind":"modifierInvocation","modifierName":{"id":3869,"name":"onlyInitializing","nameLocations":["970:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":649,"src":"970:16:20"},"nodeType":"ModifierInvocation","src":"970:16:20"}],"name":"__ERC165_init_unchained","nameLocation":"935:23:20","nodeType":"FunctionDefinition","parameters":{"id":3868,"nodeType":"ParameterList","parameters":[],"src":"958:2:20"},"returnParameters":{"id":3871,"nodeType":"ParameterList","parameters":[],"src":"987:0:20"},"scope":3896,"src":"926:68:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3907],"body":{"id":3889,"nodeType":"Block","src":"1151:75:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3882,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"1168:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3884,"name":"IERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"1188:18:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165Upgradeable_$3908_$","typeString":"type(contract IERC165Upgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165Upgradeable_$3908_$","typeString":"type(contract IERC165Upgradeable)"}],"id":3883,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1183:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1183:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165Upgradeable_$3908","typeString":"type(contract IERC165Upgradeable)"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1208:11:20","memberName":"interfaceId","nodeType":"MemberAccess","src":"1183:36:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1168:51:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3881,"id":3888,"nodeType":"Return","src":"1161:58:20"}]},"documentation":{"id":3874,"nodeType":"StructuredDocumentation","src":"999:56:20","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3890,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1069:17:20","nodeType":"FunctionDefinition","overrides":{"id":3878,"nodeType":"OverrideSpecifier","overrides":[],"src":"1127:8:20"},"parameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3876,"mutability":"mutable","name":"interfaceId","nameLocation":"1094:11:20","nodeType":"VariableDeclaration","scope":3890,"src":"1087:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3875,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1087:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1086:20:20"},"returnParameters":{"id":3881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3890,"src":"1145:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3879,"name":"bool","nodeType":"ElementaryTypeName","src":"1145:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1144:6:20"},"scope":3896,"src":"1060:166:20","stateMutability":"view","virtual":true,"visibility":"public"},{"constant":false,"documentation":{"id":3891,"nodeType":"StructuredDocumentation","src":"1232:254:20","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":3895,"mutability":"mutable","name":"__gap","nameLocation":"1511:5:20","nodeType":"VariableDeclaration","scope":3896,"src":"1491:25:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":3892,"name":"uint256","nodeType":"ElementaryTypeName","src":"1491:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3894,"length":{"hexValue":"3530","id":3893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1499:2:20","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1491:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":3897,"src":"783:736:20","usedErrors":[],"usedEvents":[550]}],"src":"99:1421:20"},"id":20},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","exportedSymbols":{"IERC165Upgradeable":[3908]},"id":3909,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3898,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:21"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":3899,"nodeType":"StructuredDocumentation","src":"125:279:21","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3908,"linearizedBaseContracts":[3908],"name":"IERC165Upgradeable","nameLocation":"415:18:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3900,"nodeType":"StructuredDocumentation","src":"440:340:21","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3907,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"794:17:21","nodeType":"FunctionDefinition","parameters":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3902,"mutability":"mutable","name":"interfaceId","nameLocation":"819:11:21","nodeType":"VariableDeclaration","scope":3907,"src":"812:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3901,"name":"bytes4","nodeType":"ElementaryTypeName","src":"812:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"811:20:21"},"returnParameters":{"id":3906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3907,"src":"855:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3904,"name":"bool","nodeType":"ElementaryTypeName","src":"855:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"854:6:21"},"scope":3908,"src":"785:76:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3909,"src":"405:458:21","usedErrors":[],"usedEvents":[]}],"src":"100:764:21"},"id":21},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","exportedSymbols":{"MathUpgradeable":[4774]},"id":4775,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3910,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:22"},{"abstract":false,"baseContracts":[],"canonicalName":"MathUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3911,"nodeType":"StructuredDocumentation","src":"128:73:22","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4774,"linearizedBaseContracts":[4774],"name":"MathUpgradeable","nameLocation":"210:15:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"MathUpgradeable.Rounding","id":3915,"members":[{"id":3912,"name":"Down","nameLocation":"256:4:22","nodeType":"EnumValue","src":"256:4:22"},{"id":3913,"name":"Up","nameLocation":"298:2:22","nodeType":"EnumValue","src":"298:2:22"},{"id":3914,"name":"Zero","nameLocation":"329:4:22","nodeType":"EnumValue","src":"329:4:22"}],"name":"Rounding","nameLocation":"237:8:22","nodeType":"EnumDefinition","src":"232:122:22"},{"body":{"id":3932,"nodeType":"Block","src":"491:37:22","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3925,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"508:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3926,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"512:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"508:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3929,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"520:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"508:13:22","trueExpression":{"id":3928,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"516:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3924,"id":3931,"nodeType":"Return","src":"501:20:22"}]},"documentation":{"id":3916,"nodeType":"StructuredDocumentation","src":"360:59:22","text":" @dev Returns the largest of two numbers."},"id":3933,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"433:3:22","nodeType":"FunctionDefinition","parameters":{"id":3921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3918,"mutability":"mutable","name":"a","nameLocation":"445:1:22","nodeType":"VariableDeclaration","scope":3933,"src":"437:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3917,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3920,"mutability":"mutable","name":"b","nameLocation":"456:1:22","nodeType":"VariableDeclaration","scope":3933,"src":"448:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3919,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"436:22:22"},"returnParameters":{"id":3924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3933,"src":"482:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3922,"name":"uint256","nodeType":"ElementaryTypeName","src":"482:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"481:9:22"},"scope":4774,"src":"424:104:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3950,"nodeType":"Block","src":"666:37:22","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3943,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"683:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3944,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"687:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"683:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3947,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"695:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"683:13:22","trueExpression":{"id":3946,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"691:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3942,"id":3949,"nodeType":"Return","src":"676:20:22"}]},"documentation":{"id":3934,"nodeType":"StructuredDocumentation","src":"534:60:22","text":" @dev Returns the smallest of two numbers."},"id":3951,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"608:3:22","nodeType":"FunctionDefinition","parameters":{"id":3939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3936,"mutability":"mutable","name":"a","nameLocation":"620:1:22","nodeType":"VariableDeclaration","scope":3951,"src":"612:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3935,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3938,"mutability":"mutable","name":"b","nameLocation":"631:1:22","nodeType":"VariableDeclaration","scope":3951,"src":"623:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3937,"name":"uint256","nodeType":"ElementaryTypeName","src":"623:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"611:22:22"},"returnParameters":{"id":3942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3951,"src":"657:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3940,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:9:22"},"scope":4774,"src":"599:104:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3973,"nodeType":"Block","src":"887:82:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3961,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"942:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3962,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3956,"src":"946:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"942:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3964,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"941:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3965,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"952:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3966,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3956,"src":"956:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"952:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3968,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"951:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"961:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"951:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3960,"id":3972,"nodeType":"Return","src":"934:28:22"}]},"documentation":{"id":3952,"nodeType":"StructuredDocumentation","src":"709:102:22","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3974,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"825:7:22","nodeType":"FunctionDefinition","parameters":{"id":3957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3954,"mutability":"mutable","name":"a","nameLocation":"841:1:22","nodeType":"VariableDeclaration","scope":3974,"src":"833:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3953,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3956,"mutability":"mutable","name":"b","nameLocation":"852:1:22","nodeType":"VariableDeclaration","scope":3974,"src":"844:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3955,"name":"uint256","nodeType":"ElementaryTypeName","src":"844:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:22:22"},"returnParameters":{"id":3960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3974,"src":"878:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3958,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"877:9:22"},"scope":4774,"src":"816:153:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3998,"nodeType":"Block","src":"1239:123:22","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3984,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"1327:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1332:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1327:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3988,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"1341:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1345:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1341:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3991,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1340:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3992,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"1350:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1340:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1354:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1340:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1327:28:22","trueExpression":{"hexValue":"30","id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1336:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3983,"id":3997,"nodeType":"Return","src":"1320:35:22"}]},"documentation":{"id":3975,"nodeType":"StructuredDocumentation","src":"975:188:22","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":3999,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1177:7:22","nodeType":"FunctionDefinition","parameters":{"id":3980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3977,"mutability":"mutable","name":"a","nameLocation":"1193:1:22","nodeType":"VariableDeclaration","scope":3999,"src":"1185:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3976,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3979,"mutability":"mutable","name":"b","nameLocation":"1204:1:22","nodeType":"VariableDeclaration","scope":3999,"src":"1196:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3978,"name":"uint256","nodeType":"ElementaryTypeName","src":"1196:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1184:22:22"},"returnParameters":{"id":3983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3999,"src":"1230:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3981,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1229:9:22"},"scope":4774,"src":"1168:194:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4121,"nodeType":"Block","src":"1776:4115:22","statements":[{"id":4120,"nodeType":"UncheckedBlock","src":"1786:4099:22","statements":[{"assignments":[4012],"declarations":[{"constant":false,"id":4012,"mutability":"mutable","name":"prod0","nameLocation":"2115:5:22","nodeType":"VariableDeclaration","scope":4120,"src":"2107:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4011,"name":"uint256","nodeType":"ElementaryTypeName","src":"2107:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4013,"nodeType":"VariableDeclarationStatement","src":"2107:13:22"},{"assignments":[4015],"declarations":[{"constant":false,"id":4015,"mutability":"mutable","name":"prod1","nameLocation":"2187:5:22","nodeType":"VariableDeclaration","scope":4120,"src":"2179:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4014,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4016,"nodeType":"VariableDeclarationStatement","src":"2179:13:22"},{"AST":{"nodeType":"YulBlock","src":"2259:157:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2277:30:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2294:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"2297:1:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2304:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2300:3:22"},"nodeType":"YulFunctionCall","src":"2300:6:22"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2287:6:22"},"nodeType":"YulFunctionCall","src":"2287:20:22"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2281:2:22","type":""}]},{"nodeType":"YulAssignment","src":"2324:18:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2337:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"2340:1:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2333:3:22"},"nodeType":"YulFunctionCall","src":"2333:9:22"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2324:5:22"}]},{"nodeType":"YulAssignment","src":"2359:43:22","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2376:2:22"},{"name":"prod0","nodeType":"YulIdentifier","src":"2380:5:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2372:3:22"},"nodeType":"YulFunctionCall","src":"2372:14:22"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2391:2:22"},{"name":"prod0","nodeType":"YulIdentifier","src":"2395:5:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2388:2:22"},"nodeType":"YulFunctionCall","src":"2388:13:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2368:3:22"},"nodeType":"YulFunctionCall","src":"2368:34:22"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2359:5:22"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":4012,"isOffset":false,"isSlot":false,"src":"2324:5:22","valueSize":1},{"declaration":4012,"isOffset":false,"isSlot":false,"src":"2380:5:22","valueSize":1},{"declaration":4012,"isOffset":false,"isSlot":false,"src":"2395:5:22","valueSize":1},{"declaration":4015,"isOffset":false,"isSlot":false,"src":"2359:5:22","valueSize":1},{"declaration":4002,"isOffset":false,"isSlot":false,"src":"2294:1:22","valueSize":1},{"declaration":4002,"isOffset":false,"isSlot":false,"src":"2337:1:22","valueSize":1},{"declaration":4004,"isOffset":false,"isSlot":false,"src":"2297:1:22","valueSize":1},{"declaration":4004,"isOffset":false,"isSlot":false,"src":"2340:1:22","valueSize":1}],"id":4017,"nodeType":"InlineAssembly","src":"2250:166:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4018,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"2497:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2506:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2497:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4026,"nodeType":"IfStatement","src":"2493:368:22","trueBody":{"id":4025,"nodeType":"Block","src":"2509:352:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4021,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"2827:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4022,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"2835:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2827:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4010,"id":4024,"nodeType":"Return","src":"2820:26:22"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4028,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"2971:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4029,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"2985:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2971:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":4031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2992:23:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":4027,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2963:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2963:53:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4033,"nodeType":"ExpressionStatement","src":"2963:53:22"},{"assignments":[4035],"declarations":[{"constant":false,"id":4035,"mutability":"mutable","name":"remainder","nameLocation":"3280:9:22","nodeType":"VariableDeclaration","scope":4120,"src":"3272:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4034,"name":"uint256","nodeType":"ElementaryTypeName","src":"3272:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4036,"nodeType":"VariableDeclarationStatement","src":"3272:17:22"},{"AST":{"nodeType":"YulBlock","src":"3312:291:22","statements":[{"nodeType":"YulAssignment","src":"3381:38:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3401:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"3404:1:22"},{"name":"denominator","nodeType":"YulIdentifier","src":"3407:11:22"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3394:6:22"},"nodeType":"YulFunctionCall","src":"3394:25:22"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3381:9:22"}]},{"nodeType":"YulAssignment","src":"3501:41:22","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3514:5:22"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3524:9:22"},{"name":"prod0","nodeType":"YulIdentifier","src":"3535:5:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3521:2:22"},"nodeType":"YulFunctionCall","src":"3521:20:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3510:3:22"},"nodeType":"YulFunctionCall","src":"3510:32:22"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3501:5:22"}]},{"nodeType":"YulAssignment","src":"3559:30:22","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3572:5:22"},{"name":"remainder","nodeType":"YulIdentifier","src":"3579:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3568:3:22"},"nodeType":"YulFunctionCall","src":"3568:21:22"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3559:5:22"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":4006,"isOffset":false,"isSlot":false,"src":"3407:11:22","valueSize":1},{"declaration":4012,"isOffset":false,"isSlot":false,"src":"3535:5:22","valueSize":1},{"declaration":4012,"isOffset":false,"isSlot":false,"src":"3559:5:22","valueSize":1},{"declaration":4012,"isOffset":false,"isSlot":false,"src":"3572:5:22","valueSize":1},{"declaration":4015,"isOffset":false,"isSlot":false,"src":"3501:5:22","valueSize":1},{"declaration":4015,"isOffset":false,"isSlot":false,"src":"3514:5:22","valueSize":1},{"declaration":4035,"isOffset":false,"isSlot":false,"src":"3381:9:22","valueSize":1},{"declaration":4035,"isOffset":false,"isSlot":false,"src":"3524:9:22","valueSize":1},{"declaration":4035,"isOffset":false,"isSlot":false,"src":"3579:9:22","valueSize":1},{"declaration":4002,"isOffset":false,"isSlot":false,"src":"3401:1:22","valueSize":1},{"declaration":4004,"isOffset":false,"isSlot":false,"src":"3404:1:22","valueSize":1}],"id":4037,"nodeType":"InlineAssembly","src":"3303:300:22"},{"assignments":[4039],"declarations":[{"constant":false,"id":4039,"mutability":"mutable","name":"twos","nameLocation":"3918:4:22","nodeType":"VariableDeclaration","scope":4120,"src":"3910:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4038,"name":"uint256","nodeType":"ElementaryTypeName","src":"3910:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4047,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4040,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"3925:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3940:12:22","subExpression":{"id":4041,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"3941:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3955:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3940:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4045,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3939:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3925:32:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3910:47:22"},{"AST":{"nodeType":"YulBlock","src":"3980:362:22","statements":[{"nodeType":"YulAssignment","src":"4045:37:22","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4064:11:22"},{"name":"twos","nodeType":"YulIdentifier","src":"4077:4:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4060:3:22"},"nodeType":"YulFunctionCall","src":"4060:22:22"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4045:11:22"}]},{"nodeType":"YulAssignment","src":"4149:25:22","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4162:5:22"},{"name":"twos","nodeType":"YulIdentifier","src":"4169:4:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4158:3:22"},"nodeType":"YulFunctionCall","src":"4158:16:22"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4149:5:22"}]},{"nodeType":"YulAssignment","src":"4289:39:22","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4309:1:22","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4312:4:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4305:3:22"},"nodeType":"YulFunctionCall","src":"4305:12:22"},{"name":"twos","nodeType":"YulIdentifier","src":"4319:4:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4301:3:22"},"nodeType":"YulFunctionCall","src":"4301:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"4326:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4297:3:22"},"nodeType":"YulFunctionCall","src":"4297:31:22"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4289:4:22"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":4006,"isOffset":false,"isSlot":false,"src":"4045:11:22","valueSize":1},{"declaration":4006,"isOffset":false,"isSlot":false,"src":"4064:11:22","valueSize":1},{"declaration":4012,"isOffset":false,"isSlot":false,"src":"4149:5:22","valueSize":1},{"declaration":4012,"isOffset":false,"isSlot":false,"src":"4162:5:22","valueSize":1},{"declaration":4039,"isOffset":false,"isSlot":false,"src":"4077:4:22","valueSize":1},{"declaration":4039,"isOffset":false,"isSlot":false,"src":"4169:4:22","valueSize":1},{"declaration":4039,"isOffset":false,"isSlot":false,"src":"4289:4:22","valueSize":1},{"declaration":4039,"isOffset":false,"isSlot":false,"src":"4312:4:22","valueSize":1},{"declaration":4039,"isOffset":false,"isSlot":false,"src":"4319:4:22","valueSize":1}],"id":4048,"nodeType":"InlineAssembly","src":"3971:371:22"},{"expression":{"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4049,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"4408:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4050,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"4417:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4051,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"4425:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4417:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4408:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4054,"nodeType":"ExpressionStatement","src":"4408:21:22"},{"assignments":[4056],"declarations":[{"constant":false,"id":4056,"mutability":"mutable","name":"inverse","nameLocation":"4755:7:22","nodeType":"VariableDeclaration","scope":4120,"src":"4747:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4055,"name":"uint256","nodeType":"ElementaryTypeName","src":"4747:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4063,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4766:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4058,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"4770:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4766:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4060,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4765:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4785:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4765:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4747:39:22"},{"expression":{"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4064,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"5003:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5014:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4066,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"5018:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4067,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"5032:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5018:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5014:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4071,"nodeType":"ExpressionStatement","src":"5003:36:22"},{"expression":{"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4072,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"5072:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5083:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4074,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"5087:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4075,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"5101:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5087:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5083:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4079,"nodeType":"ExpressionStatement","src":"5072:36:22"},{"expression":{"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4080,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"5142:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5153:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4082,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"5157:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4083,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"5171:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5153:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4087,"nodeType":"ExpressionStatement","src":"5142:36:22"},{"expression":{"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4088,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"5212:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5223:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4090,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"5227:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4091,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"5241:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5227:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5223:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4095,"nodeType":"ExpressionStatement","src":"5212:36:22"},{"expression":{"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4096,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"5282:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5293:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4098,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"5297:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4099,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"5311:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5297:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5293:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4103,"nodeType":"ExpressionStatement","src":"5282:36:22"},{"expression":{"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4104,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"5353:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5364:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4106,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"5368:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4107,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"5382:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5368:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5364:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4111,"nodeType":"ExpressionStatement","src":"5353:36:22"},{"expression":{"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4112,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"5823:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4113,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"5832:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4114,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"5840:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5832:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5823:24:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4117,"nodeType":"ExpressionStatement","src":"5823:24:22"},{"expression":{"id":4118,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"5868:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4010,"id":4119,"nodeType":"Return","src":"5861:13:22"}]}]},"documentation":{"id":4000,"nodeType":"StructuredDocumentation","src":"1368:305:22","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":4122,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1687:6:22","nodeType":"FunctionDefinition","parameters":{"id":4007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4002,"mutability":"mutable","name":"x","nameLocation":"1702:1:22","nodeType":"VariableDeclaration","scope":4122,"src":"1694:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4001,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4004,"mutability":"mutable","name":"y","nameLocation":"1713:1:22","nodeType":"VariableDeclaration","scope":4122,"src":"1705:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4003,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4006,"mutability":"mutable","name":"denominator","nameLocation":"1724:11:22","nodeType":"VariableDeclaration","scope":4122,"src":"1716:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4005,"name":"uint256","nodeType":"ElementaryTypeName","src":"1716:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1693:43:22"},"returnParameters":{"id":4010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4009,"mutability":"mutable","name":"result","nameLocation":"1768:6:22","nodeType":"VariableDeclaration","scope":4122,"src":"1760:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4008,"name":"uint256","nodeType":"ElementaryTypeName","src":"1760:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1759:16:22"},"scope":4774,"src":"1678:4213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4165,"nodeType":"Block","src":"6133:189:22","statements":[{"assignments":[4138],"declarations":[{"constant":false,"id":4138,"mutability":"mutable","name":"result","nameLocation":"6151:6:22","nodeType":"VariableDeclaration","scope":4165,"src":"6143:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4137,"name":"uint256","nodeType":"ElementaryTypeName","src":"6143:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4144,"initialValue":{"arguments":[{"id":4140,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"6167:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4141,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"6170:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4142,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4129,"src":"6173:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4139,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4122,4166],"referencedDeclaration":4122,"src":"6160:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6160:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6143:42:22"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3915","typeString":"enum MathUpgradeable.Rounding"},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4145,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"6199:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3915","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4146,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"6211:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3915_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":4147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6220:2:22","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3913,"src":"6211:11:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3915","typeString":"enum MathUpgradeable.Rounding"}},"src":"6199:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4150,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"6233:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4151,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"6236:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4152,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4129,"src":"6239:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4149,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6226:6:22","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6226:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6254:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6226:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6199:56:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4162,"nodeType":"IfStatement","src":"6195:98:22","trueBody":{"id":4161,"nodeType":"Block","src":"6257:36:22","statements":[{"expression":{"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4157,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"6271:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6281:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6271:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4160,"nodeType":"ExpressionStatement","src":"6271:11:22"}]}},{"expression":{"id":4163,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"6309:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4136,"id":4164,"nodeType":"Return","src":"6302:13:22"}]},"documentation":{"id":4123,"nodeType":"StructuredDocumentation","src":"5897:121:22","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4166,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6032:6:22","nodeType":"FunctionDefinition","parameters":{"id":4133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4125,"mutability":"mutable","name":"x","nameLocation":"6047:1:22","nodeType":"VariableDeclaration","scope":4166,"src":"6039:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4124,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4127,"mutability":"mutable","name":"y","nameLocation":"6058:1:22","nodeType":"VariableDeclaration","scope":4166,"src":"6050:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4126,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4129,"mutability":"mutable","name":"denominator","nameLocation":"6069:11:22","nodeType":"VariableDeclaration","scope":4166,"src":"6061:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4128,"name":"uint256","nodeType":"ElementaryTypeName","src":"6061:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4132,"mutability":"mutable","name":"rounding","nameLocation":"6091:8:22","nodeType":"VariableDeclaration","scope":4166,"src":"6082:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3915","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":4131,"nodeType":"UserDefinedTypeName","pathNode":{"id":4130,"name":"Rounding","nameLocations":["6082:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3915,"src":"6082:8:22"},"referencedDeclaration":3915,"src":"6082:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3915","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"6038:62:22"},"returnParameters":{"id":4136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4166,"src":"6124:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4134,"name":"uint256","nodeType":"ElementaryTypeName","src":"6124:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6123:9:22"},"scope":4774,"src":"6023:299:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4277,"nodeType":"Block","src":"6598:1585:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4174,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"6612:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6617:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6612:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4180,"nodeType":"IfStatement","src":"6608:45:22","trueBody":{"id":4179,"nodeType":"Block","src":"6620:33:22","statements":[{"expression":{"hexValue":"30","id":4177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6641:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4173,"id":4178,"nodeType":"Return","src":"6634:8:22"}]}},{"assignments":[4182],"declarations":[{"constant":false,"id":4182,"mutability":"mutable","name":"result","nameLocation":"7340:6:22","nodeType":"VariableDeclaration","scope":4277,"src":"7332:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4181,"name":"uint256","nodeType":"ElementaryTypeName","src":"7332:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4191,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7349:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4185,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"7360:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4184,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4446,4482],"referencedDeclaration":4446,"src":"7355:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7355:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7366:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7355:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4189,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7354:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7349:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7332:36:22"},{"id":4276,"nodeType":"UncheckedBlock","src":"7769:408:22","statements":[{"expression":{"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4192,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"7793:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4193,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"7803:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4194,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"7812:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4195,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"7816:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7812:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7803:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4198,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7802:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7827:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7802:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7793:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4202,"nodeType":"ExpressionStatement","src":"7793:35:22"},{"expression":{"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4203,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"7842:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4204,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"7852:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4205,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"7861:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4206,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"7865:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7861:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7852:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4209,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7851:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7876:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7851:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7842:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4213,"nodeType":"ExpressionStatement","src":"7842:35:22"},{"expression":{"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4214,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"7891:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4215,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"7901:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4216,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"7910:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4217,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"7914:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7910:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7901:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4220,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7900:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7925:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7900:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7891:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4224,"nodeType":"ExpressionStatement","src":"7891:35:22"},{"expression":{"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4225,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"7940:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4226,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"7950:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4227,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"7959:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4228,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"7963:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7959:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7950:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4231,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7949:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7974:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7949:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7940:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4235,"nodeType":"ExpressionStatement","src":"7940:35:22"},{"expression":{"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4236,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"7989:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4237,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"7999:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4238,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"8008:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4239,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"8012:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8008:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7999:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4242,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7998:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8023:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7998:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7989:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4246,"nodeType":"ExpressionStatement","src":"7989:35:22"},{"expression":{"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4247,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"8038:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4248,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"8048:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4249,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"8057:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4250,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"8061:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8057:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8048:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4253,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8047:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8072:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8047:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8038:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4257,"nodeType":"ExpressionStatement","src":"8038:35:22"},{"expression":{"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4258,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"8087:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4259,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"8097:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4260,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"8106:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4261,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"8110:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8106:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8097:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4264,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8096:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8121:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8096:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8087:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4268,"nodeType":"ExpressionStatement","src":"8087:35:22"},{"expression":{"arguments":[{"id":4270,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"8147:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4271,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"8155:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4272,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"8159:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8155:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4269,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"8143:3:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8143:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4173,"id":4275,"nodeType":"Return","src":"8136:30:22"}]}]},"documentation":{"id":4167,"nodeType":"StructuredDocumentation","src":"6328:208:22","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":4278,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6550:4:22","nodeType":"FunctionDefinition","parameters":{"id":4170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4169,"mutability":"mutable","name":"a","nameLocation":"6563:1:22","nodeType":"VariableDeclaration","scope":4278,"src":"6555:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4168,"name":"uint256","nodeType":"ElementaryTypeName","src":"6555:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6554:11:22"},"returnParameters":{"id":4173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4278,"src":"6589:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4171,"name":"uint256","nodeType":"ElementaryTypeName","src":"6589:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6588:9:22"},"scope":4774,"src":"6541:1642:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4313,"nodeType":"Block","src":"8359:161:22","statements":[{"id":4312,"nodeType":"UncheckedBlock","src":"8369:145:22","statements":[{"assignments":[4290],"declarations":[{"constant":false,"id":4290,"mutability":"mutable","name":"result","nameLocation":"8401:6:22","nodeType":"VariableDeclaration","scope":4312,"src":"8393:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4289,"name":"uint256","nodeType":"ElementaryTypeName","src":"8393:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4294,"initialValue":{"arguments":[{"id":4292,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"8415:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4291,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4278,4314],"referencedDeclaration":4278,"src":"8410:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8410:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8393:24:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4295,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"8438:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3915","typeString":"enum MathUpgradeable.Rounding"},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4296,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"8448:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3915","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4297,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"8460:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3915_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":4298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8469:2:22","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3913,"src":"8460:11:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3915","typeString":"enum MathUpgradeable.Rounding"}},"src":"8448:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4300,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"8475:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4301,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"8484:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8475:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4303,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"8493:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8475:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8448:46:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8501:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8448:54:22","trueExpression":{"hexValue":"31","id":4306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8497:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4309,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8447:56:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8438:65:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4288,"id":4311,"nodeType":"Return","src":"8431:72:22"}]}]},"documentation":{"id":4279,"nodeType":"StructuredDocumentation","src":"8189:89:22","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":4314,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8292:4:22","nodeType":"FunctionDefinition","parameters":{"id":4285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4281,"mutability":"mutable","name":"a","nameLocation":"8305:1:22","nodeType":"VariableDeclaration","scope":4314,"src":"8297:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4280,"name":"uint256","nodeType":"ElementaryTypeName","src":"8297:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4284,"mutability":"mutable","name":"rounding","nameLocation":"8317:8:22","nodeType":"VariableDeclaration","scope":4314,"src":"8308:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3915","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":4283,"nodeType":"UserDefinedTypeName","pathNode":{"id":4282,"name":"Rounding","nameLocations":["8308:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3915,"src":"8308:8:22"},"referencedDeclaration":3915,"src":"8308:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3915","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"8296:30:22"},"returnParameters":{"id":4288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4314,"src":"8350:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4286,"name":"uint256","nodeType":"ElementaryTypeName","src":"8350:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8349:9:22"},"scope":4774,"src":"8283:237:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4445,"nodeType":"Block","src":"8705:922:22","statements":[{"assignments":[4323],"declarations":[{"constant":false,"id":4323,"mutability":"mutable","name":"result","nameLocation":"8723:6:22","nodeType":"VariableDeclaration","scope":4445,"src":"8715:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4322,"name":"uint256","nodeType":"ElementaryTypeName","src":"8715:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4325,"initialValue":{"hexValue":"30","id":4324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8732:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8715:18:22"},{"id":4442,"nodeType":"UncheckedBlock","src":"8743:855:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"8771:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8780:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8771:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8786:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8771:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4340,"nodeType":"IfStatement","src":"8767:99:22","trueBody":{"id":4339,"nodeType":"Block","src":"8789:77:22","statements":[{"expression":{"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"8807:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8817:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8807:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4334,"nodeType":"ExpressionStatement","src":"8807:13:22"},{"expression":{"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4335,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"8838:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":4336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8848:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8838:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4338,"nodeType":"ExpressionStatement","src":"8838:13:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"8883:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8892:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8883:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8897:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8883:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4355,"nodeType":"IfStatement","src":"8879:96:22","trueBody":{"id":4354,"nodeType":"Block","src":"8900:75:22","statements":[{"expression":{"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"8918:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8928:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8918:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4349,"nodeType":"ExpressionStatement","src":"8918:12:22"},{"expression":{"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4350,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"8948:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8948:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4353,"nodeType":"ExpressionStatement","src":"8948:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"8992:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9001:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8992:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9006:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8992:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4370,"nodeType":"IfStatement","src":"8988:96:22","trueBody":{"id":4369,"nodeType":"Block","src":"9009:75:22","statements":[{"expression":{"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"9027:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9037:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9027:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4364,"nodeType":"ExpressionStatement","src":"9027:12:22"},{"expression":{"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4365,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"9057:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9067:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9057:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4368,"nodeType":"ExpressionStatement","src":"9057:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"9101:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9101:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9115:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9101:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4385,"nodeType":"IfStatement","src":"9097:96:22","trueBody":{"id":4384,"nodeType":"Block","src":"9118:75:22","statements":[{"expression":{"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"9136:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9146:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9136:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4379,"nodeType":"ExpressionStatement","src":"9136:12:22"},{"expression":{"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4380,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"9166:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9176:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9166:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4383,"nodeType":"ExpressionStatement","src":"9166:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"9210:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9219:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9210:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9223:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9210:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4400,"nodeType":"IfStatement","src":"9206:93:22","trueBody":{"id":4399,"nodeType":"Block","src":"9226:73:22","statements":[{"expression":{"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"9244:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9254:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9244:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4394,"nodeType":"ExpressionStatement","src":"9244:11:22"},{"expression":{"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4395,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"9273:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9283:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9273:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4398,"nodeType":"ExpressionStatement","src":"9273:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"9316:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":4402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9325:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9316:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9329:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9316:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4415,"nodeType":"IfStatement","src":"9312:93:22","trueBody":{"id":4414,"nodeType":"Block","src":"9332:73:22","statements":[{"expression":{"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"9350:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9360:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9350:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4409,"nodeType":"ExpressionStatement","src":"9350:11:22"},{"expression":{"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4410,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"9379:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9389:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9379:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4413,"nodeType":"ExpressionStatement","src":"9379:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"9422:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9431:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9422:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9435:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9422:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4430,"nodeType":"IfStatement","src":"9418:93:22","trueBody":{"id":4429,"nodeType":"Block","src":"9438:73:22","statements":[{"expression":{"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"9456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":4422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9466:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9456:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4424,"nodeType":"ExpressionStatement","src":"9456:11:22"},{"expression":{"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4425,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"9485:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9495:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9485:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4428,"nodeType":"ExpressionStatement","src":"9485:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"9528:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9537:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9528:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9541:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9528:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4441,"nodeType":"IfStatement","src":"9524:64:22","trueBody":{"id":4440,"nodeType":"Block","src":"9544:44:22","statements":[{"expression":{"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4436,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"9562:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9572:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9562:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4439,"nodeType":"ExpressionStatement","src":"9562:11:22"}]}}]},{"expression":{"id":4443,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"9614:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4321,"id":4444,"nodeType":"Return","src":"9607:13:22"}]},"documentation":{"id":4315,"nodeType":"StructuredDocumentation","src":"8526:113:22","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":4446,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8653:4:22","nodeType":"FunctionDefinition","parameters":{"id":4318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4317,"mutability":"mutable","name":"value","nameLocation":"8666:5:22","nodeType":"VariableDeclaration","scope":4446,"src":"8658:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4316,"name":"uint256","nodeType":"ElementaryTypeName","src":"8658:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8657:15:22"},"returnParameters":{"id":4321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4446,"src":"8696:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4319,"name":"uint256","nodeType":"ElementaryTypeName","src":"8696:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8695:9:22"},"scope":4774,"src":"8644:983:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4481,"nodeType":"Block","src":"9860:165:22","statements":[{"id":4480,"nodeType":"UncheckedBlock","src":"9870:149:22","statements":[{"assignments":[4458],"declarations":[{"constant":false,"id":4458,"mutability":"mutable","name":"result","nameLocation":"9902:6:22","nodeType":"VariableDeclaration","scope":4480,"src":"9894:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4457,"name":"uint256","nodeType":"ElementaryTypeName","src":"9894:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4462,"initialValue":{"arguments":[{"id":4460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"9916:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4459,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4446,4482],"referencedDeclaration":4446,"src":"9911:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9911:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9894:28:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4463,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"9943:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3915","typeString":"enum MathUpgradeable.Rounding"},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4464,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"9953:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3915","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4465,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"9965:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3915_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":4466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9974:2:22","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3913,"src":"9965:11:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3915","typeString":"enum MathUpgradeable.Rounding"}},"src":"9953:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9980:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4469,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"9985:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9980:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"9994:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9980:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9953:46:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10006:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9953:54:22","trueExpression":{"hexValue":"31","id":4474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10002:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4477,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9952:56:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9943:65:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4456,"id":4479,"nodeType":"Return","src":"9936:72:22"}]}]},"documentation":{"id":4447,"nodeType":"StructuredDocumentation","src":"9633:142:22","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4482,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9789:4:22","nodeType":"FunctionDefinition","parameters":{"id":4453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4449,"mutability":"mutable","name":"value","nameLocation":"9802:5:22","nodeType":"VariableDeclaration","scope":4482,"src":"9794:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4448,"name":"uint256","nodeType":"ElementaryTypeName","src":"9794:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4452,"mutability":"mutable","name":"rounding","nameLocation":"9818:8:22","nodeType":"VariableDeclaration","scope":4482,"src":"9809:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3915","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":4451,"nodeType":"UserDefinedTypeName","pathNode":{"id":4450,"name":"Rounding","nameLocations":["9809:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3915,"src":"9809:8:22"},"referencedDeclaration":3915,"src":"9809:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3915","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"9793:34:22"},"returnParameters":{"id":4456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4482,"src":"9851:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4454,"name":"uint256","nodeType":"ElementaryTypeName","src":"9851:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9850:9:22"},"scope":4774,"src":"9780:245:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4610,"nodeType":"Block","src":"10212:854:22","statements":[{"assignments":[4491],"declarations":[{"constant":false,"id":4491,"mutability":"mutable","name":"result","nameLocation":"10230:6:22","nodeType":"VariableDeclaration","scope":4610,"src":"10222:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4490,"name":"uint256","nodeType":"ElementaryTypeName","src":"10222:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4493,"initialValue":{"hexValue":"30","id":4492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10239:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10222:18:22"},{"id":4607,"nodeType":"UncheckedBlock","src":"10250:787:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"10278:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10287:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10293:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10287:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10278:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4510,"nodeType":"IfStatement","src":"10274:103:22","trueBody":{"id":4509,"nodeType":"Block","src":"10297:80:22","statements":[{"expression":{"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"10315:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10324:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10330:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10324:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10315:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4504,"nodeType":"ExpressionStatement","src":"10315:17:22"},{"expression":{"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4505,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"10350:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10360:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10350:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4508,"nodeType":"ExpressionStatement","src":"10350:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"10394:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10403:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10409:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10403:8:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10394:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4527,"nodeType":"IfStatement","src":"10390:103:22","trueBody":{"id":4526,"nodeType":"Block","src":"10413:80:22","statements":[{"expression":{"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"10431:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10440:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10446:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10440:8:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10431:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4521,"nodeType":"ExpressionStatement","src":"10431:17:22"},{"expression":{"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4522,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"10466:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10466:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4525,"nodeType":"ExpressionStatement","src":"10466:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"10510:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10519:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10525:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10519:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10510:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4544,"nodeType":"IfStatement","src":"10506:103:22","trueBody":{"id":4543,"nodeType":"Block","src":"10529:80:22","statements":[{"expression":{"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"10547:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10556:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10562:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10556:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10547:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4538,"nodeType":"ExpressionStatement","src":"10547:17:22"},{"expression":{"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4539,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"10582:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10592:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10582:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4542,"nodeType":"ExpressionStatement","src":"10582:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"10626:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10635:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10641:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10635:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10626:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4561,"nodeType":"IfStatement","src":"10622:100:22","trueBody":{"id":4560,"nodeType":"Block","src":"10644:78:22","statements":[{"expression":{"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"10662:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10671:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10677:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10671:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10662:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4555,"nodeType":"ExpressionStatement","src":"10662:16:22"},{"expression":{"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4556,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"10696:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10706:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10696:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4559,"nodeType":"ExpressionStatement","src":"10696:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"10739:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10748:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10754:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10748:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10739:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4578,"nodeType":"IfStatement","src":"10735:100:22","trueBody":{"id":4577,"nodeType":"Block","src":"10757:78:22","statements":[{"expression":{"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"10775:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10784:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10790:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10784:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10775:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4572,"nodeType":"ExpressionStatement","src":"10775:16:22"},{"expression":{"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4573,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"10809:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10819:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10809:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4576,"nodeType":"ExpressionStatement","src":"10809:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"10852:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10861:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10861:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10852:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4595,"nodeType":"IfStatement","src":"10848:100:22","trueBody":{"id":4594,"nodeType":"Block","src":"10870:78:22","statements":[{"expression":{"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"10888:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10897:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10897:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10888:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4589,"nodeType":"ExpressionStatement","src":"10888:16:22"},{"expression":{"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4590,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"10922:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10932:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10922:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4593,"nodeType":"ExpressionStatement","src":"10922:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"10965:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10974:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10980:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10974:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10965:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4606,"nodeType":"IfStatement","src":"10961:66:22","trueBody":{"id":4605,"nodeType":"Block","src":"10983:44:22","statements":[{"expression":{"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4601,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"11001:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11001:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4604,"nodeType":"ExpressionStatement","src":"11001:11:22"}]}}]},{"expression":{"id":4608,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"11053:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4489,"id":4609,"nodeType":"Return","src":"11046:13:22"}]},"documentation":{"id":4483,"nodeType":"StructuredDocumentation","src":"10031:114:22","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":4611,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10159:5:22","nodeType":"FunctionDefinition","parameters":{"id":4486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4485,"mutability":"mutable","name":"value","nameLocation":"10173:5:22","nodeType":"VariableDeclaration","scope":4611,"src":"10165:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4484,"name":"uint256","nodeType":"ElementaryTypeName","src":"10165:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10164:15:22"},"returnParameters":{"id":4489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4611,"src":"10203:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4487,"name":"uint256","nodeType":"ElementaryTypeName","src":"10203:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10202:9:22"},"scope":4774,"src":"10150:916:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4646,"nodeType":"Block","src":"11301:167:22","statements":[{"id":4645,"nodeType":"UncheckedBlock","src":"11311:151:22","statements":[{"assignments":[4623],"declarations":[{"constant":false,"id":4623,"mutability":"mutable","name":"result","nameLocation":"11343:6:22","nodeType":"VariableDeclaration","scope":4645,"src":"11335:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4622,"name":"uint256","nodeType":"ElementaryTypeName","src":"11335:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4627,"initialValue":{"arguments":[{"id":4625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"11358:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4624,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4611,4647],"referencedDeclaration":4611,"src":"11352:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11352:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11335:29:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4628,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"11385:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3915","typeString":"enum MathUpgradeable.Rounding"},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4629,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4617,"src":"11395:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3915","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4630,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"11407:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3915_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":4631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11416:2:22","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3913,"src":"11407:11:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3915","typeString":"enum MathUpgradeable.Rounding"}},"src":"11395:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11422:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4634,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"11428:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11422:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"11437:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11422:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11395:47:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11449:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11395:55:22","trueExpression":{"hexValue":"31","id":4639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11445:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4642,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11394:57:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11385:66:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4621,"id":4644,"nodeType":"Return","src":"11378:73:22"}]}]},"documentation":{"id":4612,"nodeType":"StructuredDocumentation","src":"11072:143:22","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4647,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11229:5:22","nodeType":"FunctionDefinition","parameters":{"id":4618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4614,"mutability":"mutable","name":"value","nameLocation":"11243:5:22","nodeType":"VariableDeclaration","scope":4647,"src":"11235:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4613,"name":"uint256","nodeType":"ElementaryTypeName","src":"11235:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4617,"mutability":"mutable","name":"rounding","nameLocation":"11259:8:22","nodeType":"VariableDeclaration","scope":4647,"src":"11250:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3915","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":4616,"nodeType":"UserDefinedTypeName","pathNode":{"id":4615,"name":"Rounding","nameLocations":["11250:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3915,"src":"11250:8:22"},"referencedDeclaration":3915,"src":"11250:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3915","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"11234:34:22"},"returnParameters":{"id":4621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4647,"src":"11292:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4619,"name":"uint256","nodeType":"ElementaryTypeName","src":"11292:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11291:9:22"},"scope":4774,"src":"11220:248:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4733,"nodeType":"Block","src":"11782:600:22","statements":[{"assignments":[4656],"declarations":[{"constant":false,"id":4656,"mutability":"mutable","name":"result","nameLocation":"11800:6:22","nodeType":"VariableDeclaration","scope":4733,"src":"11792:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4655,"name":"uint256","nodeType":"ElementaryTypeName","src":"11792:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4658,"initialValue":{"hexValue":"30","id":4657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11809:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11792:18:22"},{"id":4730,"nodeType":"UncheckedBlock","src":"11820:533:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"11848:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11848:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11863:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11848:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4673,"nodeType":"IfStatement","src":"11844:98:22","trueBody":{"id":4672,"nodeType":"Block","src":"11866:76:22","statements":[{"expression":{"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"11884:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11894:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11884:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4667,"nodeType":"ExpressionStatement","src":"11884:13:22"},{"expression":{"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4668,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4656,"src":"11915:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11925:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11915:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4671,"nodeType":"ExpressionStatement","src":"11915:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"11959:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11968:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11959:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11973:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11959:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4688,"nodeType":"IfStatement","src":"11955:95:22","trueBody":{"id":4687,"nodeType":"Block","src":"11976:74:22","statements":[{"expression":{"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"11994:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12004:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11994:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4682,"nodeType":"ExpressionStatement","src":"11994:12:22"},{"expression":{"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4683,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4656,"src":"12024:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12034:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12024:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4686,"nodeType":"ExpressionStatement","src":"12024:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"12067:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12076:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12067:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12081:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12067:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4703,"nodeType":"IfStatement","src":"12063:95:22","trueBody":{"id":4702,"nodeType":"Block","src":"12084:74:22","statements":[{"expression":{"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"12102:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12112:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12102:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4697,"nodeType":"ExpressionStatement","src":"12102:12:22"},{"expression":{"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4698,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4656,"src":"12132:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12142:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12132:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4701,"nodeType":"ExpressionStatement","src":"12132:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"12175:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12184:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12175:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12189:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12175:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4718,"nodeType":"IfStatement","src":"12171:95:22","trueBody":{"id":4717,"nodeType":"Block","src":"12192:74:22","statements":[{"expression":{"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"12210:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12220:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12210:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4712,"nodeType":"ExpressionStatement","src":"12210:12:22"},{"expression":{"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4713,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4656,"src":"12240:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12250:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12240:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4716,"nodeType":"ExpressionStatement","src":"12240:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"12283:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12292:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12283:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12296:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12283:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4729,"nodeType":"IfStatement","src":"12279:64:22","trueBody":{"id":4728,"nodeType":"Block","src":"12299:44:22","statements":[{"expression":{"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4724,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4656,"src":"12317:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12327:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12317:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4727,"nodeType":"ExpressionStatement","src":"12317:11:22"}]}}]},{"expression":{"id":4731,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4656,"src":"12369:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4654,"id":4732,"nodeType":"Return","src":"12362:13:22"}]},"documentation":{"id":4648,"nodeType":"StructuredDocumentation","src":"11474:240:22","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4734,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11728:6:22","nodeType":"FunctionDefinition","parameters":{"id":4651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4650,"mutability":"mutable","name":"value","nameLocation":"11743:5:22","nodeType":"VariableDeclaration","scope":4734,"src":"11735:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4649,"name":"uint256","nodeType":"ElementaryTypeName","src":"11735:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11734:15:22"},"returnParameters":{"id":4654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4734,"src":"11773:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4652,"name":"uint256","nodeType":"ElementaryTypeName","src":"11773:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11772:9:22"},"scope":4774,"src":"11719:663:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4772,"nodeType":"Block","src":"12619:174:22","statements":[{"id":4771,"nodeType":"UncheckedBlock","src":"12629:158:22","statements":[{"assignments":[4746],"declarations":[{"constant":false,"id":4746,"mutability":"mutable","name":"result","nameLocation":"12661:6:22","nodeType":"VariableDeclaration","scope":4771,"src":"12653:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4745,"name":"uint256","nodeType":"ElementaryTypeName","src":"12653:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4750,"initialValue":{"arguments":[{"id":4748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"12677:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4747,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4734,4773],"referencedDeclaration":4734,"src":"12670:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12670:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12653:30:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4751,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"12704:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3915","typeString":"enum MathUpgradeable.Rounding"},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4752,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4740,"src":"12714:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3915","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4753,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"12726:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3915_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":4754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12735:2:22","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3913,"src":"12726:11:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3915","typeString":"enum MathUpgradeable.Rounding"}},"src":"12714:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4757,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"12747:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12747:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4760,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12746:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12741:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"12762:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12741:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12714:53:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12774:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12714:61:22","trueExpression":{"hexValue":"31","id":4765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4768,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12713:63:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12704:72:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4744,"id":4770,"nodeType":"Return","src":"12697:79:22"}]}]},"documentation":{"id":4735,"nodeType":"StructuredDocumentation","src":"12388:144:22","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4773,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12546:6:22","nodeType":"FunctionDefinition","parameters":{"id":4741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4737,"mutability":"mutable","name":"value","nameLocation":"12561:5:22","nodeType":"VariableDeclaration","scope":4773,"src":"12553:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4736,"name":"uint256","nodeType":"ElementaryTypeName","src":"12553:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4740,"mutability":"mutable","name":"rounding","nameLocation":"12577:8:22","nodeType":"VariableDeclaration","scope":4773,"src":"12568:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3915","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":4739,"nodeType":"UserDefinedTypeName","pathNode":{"id":4738,"name":"Rounding","nameLocations":["12568:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3915,"src":"12568:8:22"},"referencedDeclaration":3915,"src":"12568:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3915","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"12552:34:22"},"returnParameters":{"id":4744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4773,"src":"12610:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4742,"name":"uint256","nodeType":"ElementaryTypeName","src":"12610:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12609:9:22"},"scope":4774,"src":"12537:256:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4775,"src":"202:12593:22","usedErrors":[],"usedEvents":[]}],"src":"103:12693:22"},"id":22},"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol","exportedSymbols":{"SafeCastUpgradeable":[6315]},"id":6316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4776,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"192:23:23"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCastUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":4777,"nodeType":"StructuredDocumentation","src":"217:709:23","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":6315,"linearizedBaseContracts":[6315],"name":"SafeCastUpgradeable","nameLocation":"935:19:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":4801,"nodeType":"Block","src":"1350:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"1368:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1382:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4788,"name":"uint248","nodeType":"ElementaryTypeName","src":"1382:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4787,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1377:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1377:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1391:3:23","memberName":"max","nodeType":"MemberAccess","src":"1377:17:23","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1368:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1396:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":4785,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1360:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1360:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4795,"nodeType":"ExpressionStatement","src":"1360:78:23"},{"expression":{"arguments":[{"id":4798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"1463:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4796,"name":"uint248","nodeType":"ElementaryTypeName","src":"1455:7:23","typeDescriptions":{}}},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4784,"id":4800,"nodeType":"Return","src":"1448:21:23"}]},"documentation":{"id":4778,"nodeType":"StructuredDocumentation","src":"961:318:23","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":4802,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1293:9:23","nodeType":"FunctionDefinition","parameters":{"id":4781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4780,"mutability":"mutable","name":"value","nameLocation":"1311:5:23","nodeType":"VariableDeclaration","scope":4802,"src":"1303:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4779,"name":"uint256","nodeType":"ElementaryTypeName","src":"1303:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1302:15:23"},"returnParameters":{"id":4784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4802,"src":"1341:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4782,"name":"uint248","nodeType":"ElementaryTypeName","src":"1341:7:23","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1340:9:23"},"scope":6315,"src":"1284:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4826,"nodeType":"Block","src":"1871:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"1889:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1903:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4813,"name":"uint240","nodeType":"ElementaryTypeName","src":"1903:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4812,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1898:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1898:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1912:3:23","memberName":"max","nodeType":"MemberAccess","src":"1898:17:23","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"1889:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":4818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1917:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":4810,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1881:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1881:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4820,"nodeType":"ExpressionStatement","src":"1881:78:23"},{"expression":{"arguments":[{"id":4823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"1984:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1976:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4821,"name":"uint240","nodeType":"ElementaryTypeName","src":"1976:7:23","typeDescriptions":{}}},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1976:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4809,"id":4825,"nodeType":"Return","src":"1969:21:23"}]},"documentation":{"id":4803,"nodeType":"StructuredDocumentation","src":"1482:318:23","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":4827,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"1814:9:23","nodeType":"FunctionDefinition","parameters":{"id":4806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4805,"mutability":"mutable","name":"value","nameLocation":"1832:5:23","nodeType":"VariableDeclaration","scope":4827,"src":"1824:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4804,"name":"uint256","nodeType":"ElementaryTypeName","src":"1824:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1823:15:23"},"returnParameters":{"id":4809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4827,"src":"1862:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4807,"name":"uint240","nodeType":"ElementaryTypeName","src":"1862:7:23","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"1861:9:23"},"scope":6315,"src":"1805:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4851,"nodeType":"Block","src":"2392:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"2410:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2424:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4838,"name":"uint232","nodeType":"ElementaryTypeName","src":"2424:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4837,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2419:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2419:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2433:3:23","memberName":"max","nodeType":"MemberAccess","src":"2419:17:23","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2410:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":4843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2438:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":4835,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2402:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2402:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4845,"nodeType":"ExpressionStatement","src":"2402:78:23"},{"expression":{"arguments":[{"id":4848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"2505:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2497:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4846,"name":"uint232","nodeType":"ElementaryTypeName","src":"2497:7:23","typeDescriptions":{}}},"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4834,"id":4850,"nodeType":"Return","src":"2490:21:23"}]},"documentation":{"id":4828,"nodeType":"StructuredDocumentation","src":"2003:318:23","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":4852,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2335:9:23","nodeType":"FunctionDefinition","parameters":{"id":4831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4830,"mutability":"mutable","name":"value","nameLocation":"2353:5:23","nodeType":"VariableDeclaration","scope":4852,"src":"2345:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4829,"name":"uint256","nodeType":"ElementaryTypeName","src":"2345:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2344:15:23"},"returnParameters":{"id":4834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4852,"src":"2383:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4832,"name":"uint232","nodeType":"ElementaryTypeName","src":"2383:7:23","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2382:9:23"},"scope":6315,"src":"2326:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4876,"nodeType":"Block","src":"2913:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"2931:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2945:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4863,"name":"uint224","nodeType":"ElementaryTypeName","src":"2945:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4862,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2940:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2940:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2954:3:23","memberName":"max","nodeType":"MemberAccess","src":"2940:17:23","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"2931:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":4868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2959:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":4860,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2923:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2923:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4870,"nodeType":"ExpressionStatement","src":"2923:78:23"},{"expression":{"arguments":[{"id":4873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"3026:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3018:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4871,"name":"uint224","nodeType":"ElementaryTypeName","src":"3018:7:23","typeDescriptions":{}}},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3018:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4859,"id":4875,"nodeType":"Return","src":"3011:21:23"}]},"documentation":{"id":4853,"nodeType":"StructuredDocumentation","src":"2524:318:23","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.2._"},"id":4877,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"2856:9:23","nodeType":"FunctionDefinition","parameters":{"id":4856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4855,"mutability":"mutable","name":"value","nameLocation":"2874:5:23","nodeType":"VariableDeclaration","scope":4877,"src":"2866:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4854,"name":"uint256","nodeType":"ElementaryTypeName","src":"2866:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2865:15:23"},"returnParameters":{"id":4859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4877,"src":"2904:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4857,"name":"uint224","nodeType":"ElementaryTypeName","src":"2904:7:23","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2903:9:23"},"scope":6315,"src":"2847:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4901,"nodeType":"Block","src":"3434:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"3452:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3466:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4888,"name":"uint216","nodeType":"ElementaryTypeName","src":"3466:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4887,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3461:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3461:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3475:3:23","memberName":"max","nodeType":"MemberAccess","src":"3461:17:23","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3452:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":4893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3480:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":4885,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3444:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3444:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4895,"nodeType":"ExpressionStatement","src":"3444:78:23"},{"expression":{"arguments":[{"id":4898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"3547:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3539:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4896,"name":"uint216","nodeType":"ElementaryTypeName","src":"3539:7:23","typeDescriptions":{}}},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3539:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4884,"id":4900,"nodeType":"Return","src":"3532:21:23"}]},"documentation":{"id":4878,"nodeType":"StructuredDocumentation","src":"3045:318:23","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":4902,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3377:9:23","nodeType":"FunctionDefinition","parameters":{"id":4881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4880,"mutability":"mutable","name":"value","nameLocation":"3395:5:23","nodeType":"VariableDeclaration","scope":4902,"src":"3387:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4879,"name":"uint256","nodeType":"ElementaryTypeName","src":"3387:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3386:15:23"},"returnParameters":{"id":4884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4902,"src":"3425:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4882,"name":"uint216","nodeType":"ElementaryTypeName","src":"3425:7:23","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3424:9:23"},"scope":6315,"src":"3368:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4926,"nodeType":"Block","src":"3955:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4905,"src":"3973:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3987:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4913,"name":"uint208","nodeType":"ElementaryTypeName","src":"3987:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4912,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3982:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3982:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3996:3:23","memberName":"max","nodeType":"MemberAccess","src":"3982:17:23","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"3973:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":4918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4001:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":4910,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3965:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3965:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4920,"nodeType":"ExpressionStatement","src":"3965:78:23"},{"expression":{"arguments":[{"id":4923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4905,"src":"4068:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4060:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4921,"name":"uint208","nodeType":"ElementaryTypeName","src":"4060:7:23","typeDescriptions":{}}},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4060:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4909,"id":4925,"nodeType":"Return","src":"4053:21:23"}]},"documentation":{"id":4903,"nodeType":"StructuredDocumentation","src":"3566:318:23","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":4927,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"3898:9:23","nodeType":"FunctionDefinition","parameters":{"id":4906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4905,"mutability":"mutable","name":"value","nameLocation":"3916:5:23","nodeType":"VariableDeclaration","scope":4927,"src":"3908:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4904,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:15:23"},"returnParameters":{"id":4909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4927,"src":"3946:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4907,"name":"uint208","nodeType":"ElementaryTypeName","src":"3946:7:23","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"3945:9:23"},"scope":6315,"src":"3889:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4951,"nodeType":"Block","src":"4476:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4930,"src":"4494:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4508:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4938,"name":"uint200","nodeType":"ElementaryTypeName","src":"4508:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4937,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4503:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4503:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4517:3:23","memberName":"max","nodeType":"MemberAccess","src":"4503:17:23","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4494:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":4943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4522:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":4935,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4486:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4486:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4945,"nodeType":"ExpressionStatement","src":"4486:78:23"},{"expression":{"arguments":[{"id":4948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4930,"src":"4589:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4581:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4946,"name":"uint200","nodeType":"ElementaryTypeName","src":"4581:7:23","typeDescriptions":{}}},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4581:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4934,"id":4950,"nodeType":"Return","src":"4574:21:23"}]},"documentation":{"id":4928,"nodeType":"StructuredDocumentation","src":"4087:318:23","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":4952,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4419:9:23","nodeType":"FunctionDefinition","parameters":{"id":4931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4930,"mutability":"mutable","name":"value","nameLocation":"4437:5:23","nodeType":"VariableDeclaration","scope":4952,"src":"4429:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4929,"name":"uint256","nodeType":"ElementaryTypeName","src":"4429:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4428:15:23"},"returnParameters":{"id":4934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4952,"src":"4467:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4932,"name":"uint200","nodeType":"ElementaryTypeName","src":"4467:7:23","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4466:9:23"},"scope":6315,"src":"4410:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4976,"nodeType":"Block","src":"4997:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"5015:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5029:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4963,"name":"uint192","nodeType":"ElementaryTypeName","src":"5029:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4962,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5024:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5024:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5038:3:23","memberName":"max","nodeType":"MemberAccess","src":"5024:17:23","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5015:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":4968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5043:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":4960,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5007:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5007:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4970,"nodeType":"ExpressionStatement","src":"5007:78:23"},{"expression":{"arguments":[{"id":4973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"5110:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5102:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4971,"name":"uint192","nodeType":"ElementaryTypeName","src":"5102:7:23","typeDescriptions":{}}},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5102:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4959,"id":4975,"nodeType":"Return","src":"5095:21:23"}]},"documentation":{"id":4953,"nodeType":"StructuredDocumentation","src":"4608:318:23","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":4977,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"4940:9:23","nodeType":"FunctionDefinition","parameters":{"id":4956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4955,"mutability":"mutable","name":"value","nameLocation":"4958:5:23","nodeType":"VariableDeclaration","scope":4977,"src":"4950:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4954,"name":"uint256","nodeType":"ElementaryTypeName","src":"4950:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4949:15:23"},"returnParameters":{"id":4959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4977,"src":"4988:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4957,"name":"uint192","nodeType":"ElementaryTypeName","src":"4988:7:23","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4987:9:23"},"scope":6315,"src":"4931:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5001,"nodeType":"Block","src":"5518:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"5536:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5550:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4988,"name":"uint184","nodeType":"ElementaryTypeName","src":"5550:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4987,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5545:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5545:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5559:3:23","memberName":"max","nodeType":"MemberAccess","src":"5545:17:23","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5536:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":4993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5564:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":4985,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5528:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5528:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4995,"nodeType":"ExpressionStatement","src":"5528:78:23"},{"expression":{"arguments":[{"id":4998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"5631:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5623:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4996,"name":"uint184","nodeType":"ElementaryTypeName","src":"5623:7:23","typeDescriptions":{}}},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5623:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4984,"id":5000,"nodeType":"Return","src":"5616:21:23"}]},"documentation":{"id":4978,"nodeType":"StructuredDocumentation","src":"5129:318:23","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":5002,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5461:9:23","nodeType":"FunctionDefinition","parameters":{"id":4981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4980,"mutability":"mutable","name":"value","nameLocation":"5479:5:23","nodeType":"VariableDeclaration","scope":5002,"src":"5471:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4979,"name":"uint256","nodeType":"ElementaryTypeName","src":"5471:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5470:15:23"},"returnParameters":{"id":4984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5002,"src":"5509:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4982,"name":"uint184","nodeType":"ElementaryTypeName","src":"5509:7:23","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5508:9:23"},"scope":6315,"src":"5452:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5026,"nodeType":"Block","src":"6039:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"6057:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6071:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5013,"name":"uint176","nodeType":"ElementaryTypeName","src":"6071:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5012,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6066:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6066:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6080:3:23","memberName":"max","nodeType":"MemberAccess","src":"6066:17:23","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6057:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":5018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6085:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":5010,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6049:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6049:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5020,"nodeType":"ExpressionStatement","src":"6049:78:23"},{"expression":{"arguments":[{"id":5023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"6152:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6144:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5021,"name":"uint176","nodeType":"ElementaryTypeName","src":"6144:7:23","typeDescriptions":{}}},"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6144:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5009,"id":5025,"nodeType":"Return","src":"6137:21:23"}]},"documentation":{"id":5003,"nodeType":"StructuredDocumentation","src":"5650:318:23","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":5027,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"5982:9:23","nodeType":"FunctionDefinition","parameters":{"id":5006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5005,"mutability":"mutable","name":"value","nameLocation":"6000:5:23","nodeType":"VariableDeclaration","scope":5027,"src":"5992:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5004,"name":"uint256","nodeType":"ElementaryTypeName","src":"5992:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5991:15:23"},"returnParameters":{"id":5009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5027,"src":"6030:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5007,"name":"uint176","nodeType":"ElementaryTypeName","src":"6030:7:23","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6029:9:23"},"scope":6315,"src":"5973:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5051,"nodeType":"Block","src":"6560:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"6578:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6592:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5038,"name":"uint168","nodeType":"ElementaryTypeName","src":"6592:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5037,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6587:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6587:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6601:3:23","memberName":"max","nodeType":"MemberAccess","src":"6587:17:23","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6578:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":5043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6606:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":5035,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6570:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6570:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5045,"nodeType":"ExpressionStatement","src":"6570:78:23"},{"expression":{"arguments":[{"id":5048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"6673:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6665:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5046,"name":"uint168","nodeType":"ElementaryTypeName","src":"6665:7:23","typeDescriptions":{}}},"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6665:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5034,"id":5050,"nodeType":"Return","src":"6658:21:23"}]},"documentation":{"id":5028,"nodeType":"StructuredDocumentation","src":"6171:318:23","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":5052,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6503:9:23","nodeType":"FunctionDefinition","parameters":{"id":5031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5030,"mutability":"mutable","name":"value","nameLocation":"6521:5:23","nodeType":"VariableDeclaration","scope":5052,"src":"6513:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5029,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6512:15:23"},"returnParameters":{"id":5034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5052,"src":"6551:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5032,"name":"uint168","nodeType":"ElementaryTypeName","src":"6551:7:23","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6550:9:23"},"scope":6315,"src":"6494:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5076,"nodeType":"Block","src":"7081:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"7099:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7113:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5063,"name":"uint160","nodeType":"ElementaryTypeName","src":"7113:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5062,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7108:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7108:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7122:3:23","memberName":"max","nodeType":"MemberAccess","src":"7108:17:23","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7099:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":5068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7127:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":5060,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7091:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7091:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5070,"nodeType":"ExpressionStatement","src":"7091:78:23"},{"expression":{"arguments":[{"id":5073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"7194:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7186:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5071,"name":"uint160","nodeType":"ElementaryTypeName","src":"7186:7:23","typeDescriptions":{}}},"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7186:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5059,"id":5075,"nodeType":"Return","src":"7179:21:23"}]},"documentation":{"id":5053,"nodeType":"StructuredDocumentation","src":"6692:318:23","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":5077,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7024:9:23","nodeType":"FunctionDefinition","parameters":{"id":5056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5055,"mutability":"mutable","name":"value","nameLocation":"7042:5:23","nodeType":"VariableDeclaration","scope":5077,"src":"7034:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5054,"name":"uint256","nodeType":"ElementaryTypeName","src":"7034:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7033:15:23"},"returnParameters":{"id":5059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5077,"src":"7072:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5057,"name":"uint160","nodeType":"ElementaryTypeName","src":"7072:7:23","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7071:9:23"},"scope":6315,"src":"7015:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5101,"nodeType":"Block","src":"7602:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"7620:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7634:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5088,"name":"uint152","nodeType":"ElementaryTypeName","src":"7634:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5087,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7629:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7629:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7643:3:23","memberName":"max","nodeType":"MemberAccess","src":"7629:17:23","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7620:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":5093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":5085,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7612:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7612:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5095,"nodeType":"ExpressionStatement","src":"7612:78:23"},{"expression":{"arguments":[{"id":5098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"7715:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7707:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5096,"name":"uint152","nodeType":"ElementaryTypeName","src":"7707:7:23","typeDescriptions":{}}},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7707:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5084,"id":5100,"nodeType":"Return","src":"7700:21:23"}]},"documentation":{"id":5078,"nodeType":"StructuredDocumentation","src":"7213:318:23","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":5102,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7545:9:23","nodeType":"FunctionDefinition","parameters":{"id":5081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5080,"mutability":"mutable","name":"value","nameLocation":"7563:5:23","nodeType":"VariableDeclaration","scope":5102,"src":"7555:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5079,"name":"uint256","nodeType":"ElementaryTypeName","src":"7555:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7554:15:23"},"returnParameters":{"id":5084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5102,"src":"7593:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5082,"name":"uint152","nodeType":"ElementaryTypeName","src":"7593:7:23","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7592:9:23"},"scope":6315,"src":"7536:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5126,"nodeType":"Block","src":"8123:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"8141:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8155:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5113,"name":"uint144","nodeType":"ElementaryTypeName","src":"8155:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5112,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8150:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8150:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8164:3:23","memberName":"max","nodeType":"MemberAccess","src":"8150:17:23","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8141:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":5118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8169:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":5110,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8133:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8133:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5120,"nodeType":"ExpressionStatement","src":"8133:78:23"},{"expression":{"arguments":[{"id":5123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"8236:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8228:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5121,"name":"uint144","nodeType":"ElementaryTypeName","src":"8228:7:23","typeDescriptions":{}}},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8228:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5109,"id":5125,"nodeType":"Return","src":"8221:21:23"}]},"documentation":{"id":5103,"nodeType":"StructuredDocumentation","src":"7734:318:23","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":5127,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8066:9:23","nodeType":"FunctionDefinition","parameters":{"id":5106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5105,"mutability":"mutable","name":"value","nameLocation":"8084:5:23","nodeType":"VariableDeclaration","scope":5127,"src":"8076:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5104,"name":"uint256","nodeType":"ElementaryTypeName","src":"8076:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8075:15:23"},"returnParameters":{"id":5109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5127,"src":"8114:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5107,"name":"uint144","nodeType":"ElementaryTypeName","src":"8114:7:23","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8113:9:23"},"scope":6315,"src":"8057:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5151,"nodeType":"Block","src":"8644:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5130,"src":"8662:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8676:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5138,"name":"uint136","nodeType":"ElementaryTypeName","src":"8676:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5137,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8671:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8671:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8685:3:23","memberName":"max","nodeType":"MemberAccess","src":"8671:17:23","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8662:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":5143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8690:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":5135,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8654:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8654:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5145,"nodeType":"ExpressionStatement","src":"8654:78:23"},{"expression":{"arguments":[{"id":5148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5130,"src":"8757:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8749:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5146,"name":"uint136","nodeType":"ElementaryTypeName","src":"8749:7:23","typeDescriptions":{}}},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8749:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5134,"id":5150,"nodeType":"Return","src":"8742:21:23"}]},"documentation":{"id":5128,"nodeType":"StructuredDocumentation","src":"8255:318:23","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":5152,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8587:9:23","nodeType":"FunctionDefinition","parameters":{"id":5131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5130,"mutability":"mutable","name":"value","nameLocation":"8605:5:23","nodeType":"VariableDeclaration","scope":5152,"src":"8597:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5129,"name":"uint256","nodeType":"ElementaryTypeName","src":"8597:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8596:15:23"},"returnParameters":{"id":5134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5152,"src":"8635:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5132,"name":"uint136","nodeType":"ElementaryTypeName","src":"8635:7:23","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8634:9:23"},"scope":6315,"src":"8578:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5176,"nodeType":"Block","src":"9165:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"9183:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9197:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5163,"name":"uint128","nodeType":"ElementaryTypeName","src":"9197:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5162,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9192:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9192:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9206:3:23","memberName":"max","nodeType":"MemberAccess","src":"9192:17:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9183:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":5168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9211:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":5160,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9175:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9175:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5170,"nodeType":"ExpressionStatement","src":"9175:78:23"},{"expression":{"arguments":[{"id":5173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"9278:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9270:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5171,"name":"uint128","nodeType":"ElementaryTypeName","src":"9270:7:23","typeDescriptions":{}}},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9270:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5159,"id":5175,"nodeType":"Return","src":"9263:21:23"}]},"documentation":{"id":5153,"nodeType":"StructuredDocumentation","src":"8776:318:23","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v2.5._"},"id":5177,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9108:9:23","nodeType":"FunctionDefinition","parameters":{"id":5156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5155,"mutability":"mutable","name":"value","nameLocation":"9126:5:23","nodeType":"VariableDeclaration","scope":5177,"src":"9118:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5154,"name":"uint256","nodeType":"ElementaryTypeName","src":"9118:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9117:15:23"},"returnParameters":{"id":5159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5177,"src":"9156:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5157,"name":"uint128","nodeType":"ElementaryTypeName","src":"9156:7:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9155:9:23"},"scope":6315,"src":"9099:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5201,"nodeType":"Block","src":"9686:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5180,"src":"9704:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9718:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5188,"name":"uint120","nodeType":"ElementaryTypeName","src":"9718:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5187,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9713:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9713:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9727:3:23","memberName":"max","nodeType":"MemberAccess","src":"9713:17:23","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9704:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":5193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9732:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":5185,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9696:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9696:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5195,"nodeType":"ExpressionStatement","src":"9696:78:23"},{"expression":{"arguments":[{"id":5198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5180,"src":"9799:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9791:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5196,"name":"uint120","nodeType":"ElementaryTypeName","src":"9791:7:23","typeDescriptions":{}}},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9791:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5184,"id":5200,"nodeType":"Return","src":"9784:21:23"}]},"documentation":{"id":5178,"nodeType":"StructuredDocumentation","src":"9297:318:23","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":5202,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9629:9:23","nodeType":"FunctionDefinition","parameters":{"id":5181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5180,"mutability":"mutable","name":"value","nameLocation":"9647:5:23","nodeType":"VariableDeclaration","scope":5202,"src":"9639:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5179,"name":"uint256","nodeType":"ElementaryTypeName","src":"9639:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9638:15:23"},"returnParameters":{"id":5184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5202,"src":"9677:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5182,"name":"uint120","nodeType":"ElementaryTypeName","src":"9677:7:23","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9676:9:23"},"scope":6315,"src":"9620:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5226,"nodeType":"Block","src":"10207:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"10225:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10239:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5213,"name":"uint112","nodeType":"ElementaryTypeName","src":"10239:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5212,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10234:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10234:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10248:3:23","memberName":"max","nodeType":"MemberAccess","src":"10234:17:23","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10225:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":5218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10253:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":5210,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10217:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10217:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5220,"nodeType":"ExpressionStatement","src":"10217:78:23"},{"expression":{"arguments":[{"id":5223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"10320:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10312:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5221,"name":"uint112","nodeType":"ElementaryTypeName","src":"10312:7:23","typeDescriptions":{}}},"id":5224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10312:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5209,"id":5225,"nodeType":"Return","src":"10305:21:23"}]},"documentation":{"id":5203,"nodeType":"StructuredDocumentation","src":"9818:318:23","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":5227,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10150:9:23","nodeType":"FunctionDefinition","parameters":{"id":5206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5205,"mutability":"mutable","name":"value","nameLocation":"10168:5:23","nodeType":"VariableDeclaration","scope":5227,"src":"10160:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5204,"name":"uint256","nodeType":"ElementaryTypeName","src":"10160:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10159:15:23"},"returnParameters":{"id":5209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5227,"src":"10198:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5207,"name":"uint112","nodeType":"ElementaryTypeName","src":"10198:7:23","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10197:9:23"},"scope":6315,"src":"10141:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5251,"nodeType":"Block","src":"10728:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"10746:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10760:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5238,"name":"uint104","nodeType":"ElementaryTypeName","src":"10760:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5237,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10755:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10755:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10769:3:23","memberName":"max","nodeType":"MemberAccess","src":"10755:17:23","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10746:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":5243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10774:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":5235,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10738:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10738:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5245,"nodeType":"ExpressionStatement","src":"10738:78:23"},{"expression":{"arguments":[{"id":5248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"10841:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10833:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5246,"name":"uint104","nodeType":"ElementaryTypeName","src":"10833:7:23","typeDescriptions":{}}},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10833:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5234,"id":5250,"nodeType":"Return","src":"10826:21:23"}]},"documentation":{"id":5228,"nodeType":"StructuredDocumentation","src":"10339:318:23","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":5252,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10671:9:23","nodeType":"FunctionDefinition","parameters":{"id":5231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5230,"mutability":"mutable","name":"value","nameLocation":"10689:5:23","nodeType":"VariableDeclaration","scope":5252,"src":"10681:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5229,"name":"uint256","nodeType":"ElementaryTypeName","src":"10681:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10680:15:23"},"returnParameters":{"id":5234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5252,"src":"10719:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5232,"name":"uint104","nodeType":"ElementaryTypeName","src":"10719:7:23","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10718:9:23"},"scope":6315,"src":"10662:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5276,"nodeType":"Block","src":"11243:123:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"11261:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11275:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5263,"name":"uint96","nodeType":"ElementaryTypeName","src":"11275:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5262,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11270:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11270:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11283:3:23","memberName":"max","nodeType":"MemberAccess","src":"11270:16:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11261:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":5268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11288:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":5260,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11253:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11253:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5270,"nodeType":"ExpressionStatement","src":"11253:76:23"},{"expression":{"arguments":[{"id":5273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"11353:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11346:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5271,"name":"uint96","nodeType":"ElementaryTypeName","src":"11346:6:23","typeDescriptions":{}}},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11346:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5259,"id":5275,"nodeType":"Return","src":"11339:20:23"}]},"documentation":{"id":5253,"nodeType":"StructuredDocumentation","src":"10860:314:23","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.2._"},"id":5277,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11188:8:23","nodeType":"FunctionDefinition","parameters":{"id":5256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5255,"mutability":"mutable","name":"value","nameLocation":"11205:5:23","nodeType":"VariableDeclaration","scope":5277,"src":"11197:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5254,"name":"uint256","nodeType":"ElementaryTypeName","src":"11197:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11196:15:23"},"returnParameters":{"id":5259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5277,"src":"11235:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5257,"name":"uint96","nodeType":"ElementaryTypeName","src":"11235:6:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11234:8:23"},"scope":6315,"src":"11179:187:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5301,"nodeType":"Block","src":"11755:123:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"11773:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11787:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5288,"name":"uint88","nodeType":"ElementaryTypeName","src":"11787:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5287,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11782:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11782:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11795:3:23","memberName":"max","nodeType":"MemberAccess","src":"11782:16:23","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11773:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":5293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11800:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":5285,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11765:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11765:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5295,"nodeType":"ExpressionStatement","src":"11765:76:23"},{"expression":{"arguments":[{"id":5298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"11865:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11858:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5296,"name":"uint88","nodeType":"ElementaryTypeName","src":"11858:6:23","typeDescriptions":{}}},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11858:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5284,"id":5300,"nodeType":"Return","src":"11851:20:23"}]},"documentation":{"id":5278,"nodeType":"StructuredDocumentation","src":"11372:314:23","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":5302,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11700:8:23","nodeType":"FunctionDefinition","parameters":{"id":5281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5280,"mutability":"mutable","name":"value","nameLocation":"11717:5:23","nodeType":"VariableDeclaration","scope":5302,"src":"11709:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5279,"name":"uint256","nodeType":"ElementaryTypeName","src":"11709:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11708:15:23"},"returnParameters":{"id":5284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5302,"src":"11747:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5282,"name":"uint88","nodeType":"ElementaryTypeName","src":"11747:6:23","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11746:8:23"},"scope":6315,"src":"11691:187:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5326,"nodeType":"Block","src":"12267:123:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5305,"src":"12285:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12299:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5313,"name":"uint80","nodeType":"ElementaryTypeName","src":"12299:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5312,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12294:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12294:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12307:3:23","memberName":"max","nodeType":"MemberAccess","src":"12294:16:23","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12285:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":5318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12312:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":5310,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12277:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12277:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5320,"nodeType":"ExpressionStatement","src":"12277:76:23"},{"expression":{"arguments":[{"id":5323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5305,"src":"12377:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12370:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5321,"name":"uint80","nodeType":"ElementaryTypeName","src":"12370:6:23","typeDescriptions":{}}},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12370:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5309,"id":5325,"nodeType":"Return","src":"12363:20:23"}]},"documentation":{"id":5303,"nodeType":"StructuredDocumentation","src":"11884:314:23","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":5327,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12212:8:23","nodeType":"FunctionDefinition","parameters":{"id":5306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5305,"mutability":"mutable","name":"value","nameLocation":"12229:5:23","nodeType":"VariableDeclaration","scope":5327,"src":"12221:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5304,"name":"uint256","nodeType":"ElementaryTypeName","src":"12221:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12220:15:23"},"returnParameters":{"id":5309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5327,"src":"12259:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5307,"name":"uint80","nodeType":"ElementaryTypeName","src":"12259:6:23","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12258:8:23"},"scope":6315,"src":"12203:187:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5351,"nodeType":"Block","src":"12779:123:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"12797:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12811:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5338,"name":"uint72","nodeType":"ElementaryTypeName","src":"12811:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5337,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12806:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12806:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12819:3:23","memberName":"max","nodeType":"MemberAccess","src":"12806:16:23","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12797:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":5343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12824:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":5335,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12789:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12789:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5345,"nodeType":"ExpressionStatement","src":"12789:76:23"},{"expression":{"arguments":[{"id":5348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"12889:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12882:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5346,"name":"uint72","nodeType":"ElementaryTypeName","src":"12882:6:23","typeDescriptions":{}}},"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5334,"id":5350,"nodeType":"Return","src":"12875:20:23"}]},"documentation":{"id":5328,"nodeType":"StructuredDocumentation","src":"12396:314:23","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":5352,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12724:8:23","nodeType":"FunctionDefinition","parameters":{"id":5331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5330,"mutability":"mutable","name":"value","nameLocation":"12741:5:23","nodeType":"VariableDeclaration","scope":5352,"src":"12733:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5329,"name":"uint256","nodeType":"ElementaryTypeName","src":"12733:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12732:15:23"},"returnParameters":{"id":5334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5352,"src":"12771:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5332,"name":"uint72","nodeType":"ElementaryTypeName","src":"12771:6:23","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12770:8:23"},"scope":6315,"src":"12715:187:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5376,"nodeType":"Block","src":"13291:123:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"13309:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13323:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5363,"name":"uint64","nodeType":"ElementaryTypeName","src":"13323:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5362,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13318:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13318:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13331:3:23","memberName":"max","nodeType":"MemberAccess","src":"13318:16:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13309:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":5368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13336:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":5360,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13301:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5370,"nodeType":"ExpressionStatement","src":"13301:76:23"},{"expression":{"arguments":[{"id":5373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"13401:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13394:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5371,"name":"uint64","nodeType":"ElementaryTypeName","src":"13394:6:23","typeDescriptions":{}}},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13394:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5359,"id":5375,"nodeType":"Return","src":"13387:20:23"}]},"documentation":{"id":5353,"nodeType":"StructuredDocumentation","src":"12908:314:23","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v2.5._"},"id":5377,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13236:8:23","nodeType":"FunctionDefinition","parameters":{"id":5356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5355,"mutability":"mutable","name":"value","nameLocation":"13253:5:23","nodeType":"VariableDeclaration","scope":5377,"src":"13245:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5354,"name":"uint256","nodeType":"ElementaryTypeName","src":"13245:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13244:15:23"},"returnParameters":{"id":5359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5377,"src":"13283:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5357,"name":"uint64","nodeType":"ElementaryTypeName","src":"13283:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13282:8:23"},"scope":6315,"src":"13227:187:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5401,"nodeType":"Block","src":"13803:123:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"13821:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13835:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5388,"name":"uint56","nodeType":"ElementaryTypeName","src":"13835:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5387,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13830:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13830:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13843:3:23","memberName":"max","nodeType":"MemberAccess","src":"13830:16:23","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13821:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":5393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13848:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":5385,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13813:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13813:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5395,"nodeType":"ExpressionStatement","src":"13813:76:23"},{"expression":{"arguments":[{"id":5398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"13913:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13906:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5396,"name":"uint56","nodeType":"ElementaryTypeName","src":"13906:6:23","typeDescriptions":{}}},"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13906:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5384,"id":5400,"nodeType":"Return","src":"13899:20:23"}]},"documentation":{"id":5378,"nodeType":"StructuredDocumentation","src":"13420:314:23","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":5402,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13748:8:23","nodeType":"FunctionDefinition","parameters":{"id":5381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5380,"mutability":"mutable","name":"value","nameLocation":"13765:5:23","nodeType":"VariableDeclaration","scope":5402,"src":"13757:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5379,"name":"uint256","nodeType":"ElementaryTypeName","src":"13757:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13756:15:23"},"returnParameters":{"id":5384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5402,"src":"13795:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5382,"name":"uint56","nodeType":"ElementaryTypeName","src":"13795:6:23","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13794:8:23"},"scope":6315,"src":"13739:187:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5426,"nodeType":"Block","src":"14315:123:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"14333:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14347:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5413,"name":"uint48","nodeType":"ElementaryTypeName","src":"14347:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5412,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14342:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14342:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14355:3:23","memberName":"max","nodeType":"MemberAccess","src":"14342:16:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14333:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":5418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14360:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":5410,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14325:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14325:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5420,"nodeType":"ExpressionStatement","src":"14325:76:23"},{"expression":{"arguments":[{"id":5423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"14425:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14418:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5421,"name":"uint48","nodeType":"ElementaryTypeName","src":"14418:6:23","typeDescriptions":{}}},"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14418:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5409,"id":5425,"nodeType":"Return","src":"14411:20:23"}]},"documentation":{"id":5403,"nodeType":"StructuredDocumentation","src":"13932:314:23","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":5427,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14260:8:23","nodeType":"FunctionDefinition","parameters":{"id":5406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5405,"mutability":"mutable","name":"value","nameLocation":"14277:5:23","nodeType":"VariableDeclaration","scope":5427,"src":"14269:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5404,"name":"uint256","nodeType":"ElementaryTypeName","src":"14269:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14268:15:23"},"returnParameters":{"id":5409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5427,"src":"14307:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5407,"name":"uint48","nodeType":"ElementaryTypeName","src":"14307:6:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14306:8:23"},"scope":6315,"src":"14251:187:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5451,"nodeType":"Block","src":"14827:123:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"14845:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14859:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5438,"name":"uint40","nodeType":"ElementaryTypeName","src":"14859:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5437,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14854:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14854:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14867:3:23","memberName":"max","nodeType":"MemberAccess","src":"14854:16:23","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14845:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":5443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14872:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":5435,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14837:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14837:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5445,"nodeType":"ExpressionStatement","src":"14837:76:23"},{"expression":{"arguments":[{"id":5448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"14937:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14930:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5446,"name":"uint40","nodeType":"ElementaryTypeName","src":"14930:6:23","typeDescriptions":{}}},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14930:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5434,"id":5450,"nodeType":"Return","src":"14923:20:23"}]},"documentation":{"id":5428,"nodeType":"StructuredDocumentation","src":"14444:314:23","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":5452,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14772:8:23","nodeType":"FunctionDefinition","parameters":{"id":5431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5430,"mutability":"mutable","name":"value","nameLocation":"14789:5:23","nodeType":"VariableDeclaration","scope":5452,"src":"14781:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5429,"name":"uint256","nodeType":"ElementaryTypeName","src":"14781:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14780:15:23"},"returnParameters":{"id":5434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5452,"src":"14819:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5432,"name":"uint40","nodeType":"ElementaryTypeName","src":"14819:6:23","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14818:8:23"},"scope":6315,"src":"14763:187:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5476,"nodeType":"Block","src":"15339:123:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"15357:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15371:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5463,"name":"uint32","nodeType":"ElementaryTypeName","src":"15371:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5462,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15366:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15366:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15379:3:23","memberName":"max","nodeType":"MemberAccess","src":"15366:16:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15357:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":5468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15384:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":5460,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15349:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15349:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5470,"nodeType":"ExpressionStatement","src":"15349:76:23"},{"expression":{"arguments":[{"id":5473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"15449:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15442:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5471,"name":"uint32","nodeType":"ElementaryTypeName","src":"15442:6:23","typeDescriptions":{}}},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15442:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5459,"id":5475,"nodeType":"Return","src":"15435:20:23"}]},"documentation":{"id":5453,"nodeType":"StructuredDocumentation","src":"14956:314:23","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v2.5._"},"id":5477,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15284:8:23","nodeType":"FunctionDefinition","parameters":{"id":5456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5455,"mutability":"mutable","name":"value","nameLocation":"15301:5:23","nodeType":"VariableDeclaration","scope":5477,"src":"15293:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5454,"name":"uint256","nodeType":"ElementaryTypeName","src":"15293:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15292:15:23"},"returnParameters":{"id":5459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5477,"src":"15331:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5457,"name":"uint32","nodeType":"ElementaryTypeName","src":"15331:6:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15330:8:23"},"scope":6315,"src":"15275:187:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5501,"nodeType":"Block","src":"15851:123:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5480,"src":"15869:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15883:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5488,"name":"uint24","nodeType":"ElementaryTypeName","src":"15883:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5487,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15878:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15878:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15891:3:23","memberName":"max","nodeType":"MemberAccess","src":"15878:16:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15869:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":5493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15896:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":5485,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15861:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15861:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5495,"nodeType":"ExpressionStatement","src":"15861:76:23"},{"expression":{"arguments":[{"id":5498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5480,"src":"15961:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15954:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5496,"name":"uint24","nodeType":"ElementaryTypeName","src":"15954:6:23","typeDescriptions":{}}},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15954:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5484,"id":5500,"nodeType":"Return","src":"15947:20:23"}]},"documentation":{"id":5478,"nodeType":"StructuredDocumentation","src":"15468:314:23","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":5502,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15796:8:23","nodeType":"FunctionDefinition","parameters":{"id":5481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5480,"mutability":"mutable","name":"value","nameLocation":"15813:5:23","nodeType":"VariableDeclaration","scope":5502,"src":"15805:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5479,"name":"uint256","nodeType":"ElementaryTypeName","src":"15805:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15804:15:23"},"returnParameters":{"id":5484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5502,"src":"15843:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5482,"name":"uint24","nodeType":"ElementaryTypeName","src":"15843:6:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15842:8:23"},"scope":6315,"src":"15787:187:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5526,"nodeType":"Block","src":"16363:123:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"16381:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16395:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5513,"name":"uint16","nodeType":"ElementaryTypeName","src":"16395:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5512,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16390:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16390:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16403:3:23","memberName":"max","nodeType":"MemberAccess","src":"16390:16:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16381:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":5518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16408:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":5510,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16373:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16373:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5520,"nodeType":"ExpressionStatement","src":"16373:76:23"},{"expression":{"arguments":[{"id":5523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"16473:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16466:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5521,"name":"uint16","nodeType":"ElementaryTypeName","src":"16466:6:23","typeDescriptions":{}}},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16466:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5509,"id":5525,"nodeType":"Return","src":"16459:20:23"}]},"documentation":{"id":5503,"nodeType":"StructuredDocumentation","src":"15980:314:23","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v2.5._"},"id":5527,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16308:8:23","nodeType":"FunctionDefinition","parameters":{"id":5506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5505,"mutability":"mutable","name":"value","nameLocation":"16325:5:23","nodeType":"VariableDeclaration","scope":5527,"src":"16317:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5504,"name":"uint256","nodeType":"ElementaryTypeName","src":"16317:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16316:15:23"},"returnParameters":{"id":5509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5527,"src":"16355:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5507,"name":"uint16","nodeType":"ElementaryTypeName","src":"16355:6:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16354:8:23"},"scope":6315,"src":"16299:187:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5551,"nodeType":"Block","src":"16869:120:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5530,"src":"16887:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16901:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5538,"name":"uint8","nodeType":"ElementaryTypeName","src":"16901:5:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5537,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16896:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16896:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16908:3:23","memberName":"max","nodeType":"MemberAccess","src":"16896:15:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16887:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":5543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16913:39:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":5535,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16879:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16879:74:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5545,"nodeType":"ExpressionStatement","src":"16879:74:23"},{"expression":{"arguments":[{"id":5548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5530,"src":"16976:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16970:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5546,"name":"uint8","nodeType":"ElementaryTypeName","src":"16970:5:23","typeDescriptions":{}}},"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16970:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5534,"id":5550,"nodeType":"Return","src":"16963:19:23"}]},"documentation":{"id":5528,"nodeType":"StructuredDocumentation","src":"16492:310:23","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v2.5._"},"id":5552,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16816:7:23","nodeType":"FunctionDefinition","parameters":{"id":5531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5530,"mutability":"mutable","name":"value","nameLocation":"16832:5:23","nodeType":"VariableDeclaration","scope":5552,"src":"16824:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5529,"name":"uint256","nodeType":"ElementaryTypeName","src":"16824:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16823:15:23"},"returnParameters":{"id":5534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5552,"src":"16862:5:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5532,"name":"uint8","nodeType":"ElementaryTypeName","src":"16862:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16861:7:23"},"scope":6315,"src":"16807:182:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5572,"nodeType":"Block","src":"17263:103:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"17281:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":5562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17290:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17281:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":5564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17293:34:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":5560,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17273:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17273:55:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5566,"nodeType":"ExpressionStatement","src":"17273:55:23"},{"expression":{"arguments":[{"id":5569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"17353:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17345:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5567,"name":"uint256","nodeType":"ElementaryTypeName","src":"17345:7:23","typeDescriptions":{}}},"id":5570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17345:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5559,"id":5571,"nodeType":"Return","src":"17338:21:23"}]},"documentation":{"id":5553,"nodeType":"StructuredDocumentation","src":"16995:198:23","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0.\n _Available since v3.0._"},"id":5573,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17207:9:23","nodeType":"FunctionDefinition","parameters":{"id":5556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5555,"mutability":"mutable","name":"value","nameLocation":"17224:5:23","nodeType":"VariableDeclaration","scope":5573,"src":"17217:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5554,"name":"int256","nodeType":"ElementaryTypeName","src":"17217:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17216:14:23"},"returnParameters":{"id":5559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5573,"src":"17254:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5557,"name":"uint256","nodeType":"ElementaryTypeName","src":"17254:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17253:9:23"},"scope":6315,"src":"17198:168:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5595,"nodeType":"Block","src":"17801:124:23","statements":[{"expression":{"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5581,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"17811:10:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"17831:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17824:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5582,"name":"int248","nodeType":"ElementaryTypeName","src":"17824:6:23","typeDescriptions":{}}},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17824:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17811:26:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5587,"nodeType":"ExpressionStatement","src":"17811:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5589,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"17855:10:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"17869:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17855:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":5592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17876:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":5588,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17847:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17847:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5594,"nodeType":"ExpressionStatement","src":"17847:71:23"}]},"documentation":{"id":5574,"nodeType":"StructuredDocumentation","src":"17372:350:23","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":5596,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17736:8:23","nodeType":"FunctionDefinition","parameters":{"id":5577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5576,"mutability":"mutable","name":"value","nameLocation":"17752:5:23","nodeType":"VariableDeclaration","scope":5596,"src":"17745:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5575,"name":"int256","nodeType":"ElementaryTypeName","src":"17745:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17744:14:23"},"returnParameters":{"id":5580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5579,"mutability":"mutable","name":"downcasted","nameLocation":"17789:10:23","nodeType":"VariableDeclaration","scope":5596,"src":"17782:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5578,"name":"int248","nodeType":"ElementaryTypeName","src":"17782:6:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17781:19:23"},"scope":6315,"src":"17727:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5618,"nodeType":"Block","src":"18360:124:23","statements":[{"expression":{"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5604,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"18370:10:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"18390:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18383:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5605,"name":"int240","nodeType":"ElementaryTypeName","src":"18383:6:23","typeDescriptions":{}}},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18383:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18370:26:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5610,"nodeType":"ExpressionStatement","src":"18370:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5612,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"18414:10:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"18428:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18414:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":5615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18435:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":5611,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18406:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18406:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5617,"nodeType":"ExpressionStatement","src":"18406:71:23"}]},"documentation":{"id":5597,"nodeType":"StructuredDocumentation","src":"17931:350:23","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":5619,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18295:8:23","nodeType":"FunctionDefinition","parameters":{"id":5600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5599,"mutability":"mutable","name":"value","nameLocation":"18311:5:23","nodeType":"VariableDeclaration","scope":5619,"src":"18304:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5598,"name":"int256","nodeType":"ElementaryTypeName","src":"18304:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18303:14:23"},"returnParameters":{"id":5603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5602,"mutability":"mutable","name":"downcasted","nameLocation":"18348:10:23","nodeType":"VariableDeclaration","scope":5619,"src":"18341:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5601,"name":"int240","nodeType":"ElementaryTypeName","src":"18341:6:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18340:19:23"},"scope":6315,"src":"18286:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5641,"nodeType":"Block","src":"18919:124:23","statements":[{"expression":{"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5627,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"18929:10:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"18949:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18942:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5628,"name":"int232","nodeType":"ElementaryTypeName","src":"18942:6:23","typeDescriptions":{}}},"id":5631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18942:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18929:26:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5633,"nodeType":"ExpressionStatement","src":"18929:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5635,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"18973:10:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"18987:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18973:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":5638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18994:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":5634,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18965:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18965:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5640,"nodeType":"ExpressionStatement","src":"18965:71:23"}]},"documentation":{"id":5620,"nodeType":"StructuredDocumentation","src":"18490:350:23","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":5642,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18854:8:23","nodeType":"FunctionDefinition","parameters":{"id":5623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5622,"mutability":"mutable","name":"value","nameLocation":"18870:5:23","nodeType":"VariableDeclaration","scope":5642,"src":"18863:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5621,"name":"int256","nodeType":"ElementaryTypeName","src":"18863:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18862:14:23"},"returnParameters":{"id":5626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5625,"mutability":"mutable","name":"downcasted","nameLocation":"18907:10:23","nodeType":"VariableDeclaration","scope":5642,"src":"18900:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5624,"name":"int232","nodeType":"ElementaryTypeName","src":"18900:6:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18899:19:23"},"scope":6315,"src":"18845:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5664,"nodeType":"Block","src":"19478:124:23","statements":[{"expression":{"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5650,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"19488:10:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"19508:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19501:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5651,"name":"int224","nodeType":"ElementaryTypeName","src":"19501:6:23","typeDescriptions":{}}},"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19501:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19488:26:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5656,"nodeType":"ExpressionStatement","src":"19488:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5658,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"19532:10:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"19546:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19532:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":5661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19553:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":5657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19524:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19524:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5663,"nodeType":"ExpressionStatement","src":"19524:71:23"}]},"documentation":{"id":5643,"nodeType":"StructuredDocumentation","src":"19049:350:23","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.7._"},"id":5665,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19413:8:23","nodeType":"FunctionDefinition","parameters":{"id":5646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5645,"mutability":"mutable","name":"value","nameLocation":"19429:5:23","nodeType":"VariableDeclaration","scope":5665,"src":"19422:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5644,"name":"int256","nodeType":"ElementaryTypeName","src":"19422:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19421:14:23"},"returnParameters":{"id":5649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5648,"mutability":"mutable","name":"downcasted","nameLocation":"19466:10:23","nodeType":"VariableDeclaration","scope":5665,"src":"19459:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5647,"name":"int224","nodeType":"ElementaryTypeName","src":"19459:6:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19458:19:23"},"scope":6315,"src":"19404:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5687,"nodeType":"Block","src":"20037:124:23","statements":[{"expression":{"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5673,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"20047:10:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"20067:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20060:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5674,"name":"int216","nodeType":"ElementaryTypeName","src":"20060:6:23","typeDescriptions":{}}},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20060:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20047:26:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5679,"nodeType":"ExpressionStatement","src":"20047:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5681,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"20091:10:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"20105:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20091:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":5684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20112:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":5680,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20083:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20083:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5686,"nodeType":"ExpressionStatement","src":"20083:71:23"}]},"documentation":{"id":5666,"nodeType":"StructuredDocumentation","src":"19608:350:23","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":5688,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19972:8:23","nodeType":"FunctionDefinition","parameters":{"id":5669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5668,"mutability":"mutable","name":"value","nameLocation":"19988:5:23","nodeType":"VariableDeclaration","scope":5688,"src":"19981:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5667,"name":"int256","nodeType":"ElementaryTypeName","src":"19981:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19980:14:23"},"returnParameters":{"id":5672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5671,"mutability":"mutable","name":"downcasted","nameLocation":"20025:10:23","nodeType":"VariableDeclaration","scope":5688,"src":"20018:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5670,"name":"int216","nodeType":"ElementaryTypeName","src":"20018:6:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"20017:19:23"},"scope":6315,"src":"19963:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5710,"nodeType":"Block","src":"20596:124:23","statements":[{"expression":{"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5696,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"20606:10:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"20626:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20619:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5697,"name":"int208","nodeType":"ElementaryTypeName","src":"20619:6:23","typeDescriptions":{}}},"id":5700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20619:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20606:26:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5702,"nodeType":"ExpressionStatement","src":"20606:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5704,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"20650:10:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"20664:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20650:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":5707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20671:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":5703,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20642:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20642:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5709,"nodeType":"ExpressionStatement","src":"20642:71:23"}]},"documentation":{"id":5689,"nodeType":"StructuredDocumentation","src":"20167:350:23","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":5711,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20531:8:23","nodeType":"FunctionDefinition","parameters":{"id":5692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5691,"mutability":"mutable","name":"value","nameLocation":"20547:5:23","nodeType":"VariableDeclaration","scope":5711,"src":"20540:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5690,"name":"int256","nodeType":"ElementaryTypeName","src":"20540:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20539:14:23"},"returnParameters":{"id":5695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5694,"mutability":"mutable","name":"downcasted","nameLocation":"20584:10:23","nodeType":"VariableDeclaration","scope":5711,"src":"20577:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5693,"name":"int208","nodeType":"ElementaryTypeName","src":"20577:6:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20576:19:23"},"scope":6315,"src":"20522:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5733,"nodeType":"Block","src":"21155:124:23","statements":[{"expression":{"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5719,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5717,"src":"21165:10:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"21185:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21178:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5720,"name":"int200","nodeType":"ElementaryTypeName","src":"21178:6:23","typeDescriptions":{}}},"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21178:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21165:26:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5725,"nodeType":"ExpressionStatement","src":"21165:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5727,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5717,"src":"21209:10:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"21223:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21209:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":5730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21230:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":5726,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21201:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21201:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5732,"nodeType":"ExpressionStatement","src":"21201:71:23"}]},"documentation":{"id":5712,"nodeType":"StructuredDocumentation","src":"20726:350:23","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":5734,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21090:8:23","nodeType":"FunctionDefinition","parameters":{"id":5715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5714,"mutability":"mutable","name":"value","nameLocation":"21106:5:23","nodeType":"VariableDeclaration","scope":5734,"src":"21099:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5713,"name":"int256","nodeType":"ElementaryTypeName","src":"21099:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21098:14:23"},"returnParameters":{"id":5718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5717,"mutability":"mutable","name":"downcasted","nameLocation":"21143:10:23","nodeType":"VariableDeclaration","scope":5734,"src":"21136:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5716,"name":"int200","nodeType":"ElementaryTypeName","src":"21136:6:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21135:19:23"},"scope":6315,"src":"21081:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5756,"nodeType":"Block","src":"21714:124:23","statements":[{"expression":{"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5742,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"21724:10:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"21744:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21737:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5743,"name":"int192","nodeType":"ElementaryTypeName","src":"21737:6:23","typeDescriptions":{}}},"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21737:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21724:26:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5748,"nodeType":"ExpressionStatement","src":"21724:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5750,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"21768:10:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"21782:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21768:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":5753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21789:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":5749,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21760:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21760:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5755,"nodeType":"ExpressionStatement","src":"21760:71:23"}]},"documentation":{"id":5735,"nodeType":"StructuredDocumentation","src":"21285:350:23","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":5757,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21649:8:23","nodeType":"FunctionDefinition","parameters":{"id":5738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5737,"mutability":"mutable","name":"value","nameLocation":"21665:5:23","nodeType":"VariableDeclaration","scope":5757,"src":"21658:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5736,"name":"int256","nodeType":"ElementaryTypeName","src":"21658:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21657:14:23"},"returnParameters":{"id":5741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5740,"mutability":"mutable","name":"downcasted","nameLocation":"21702:10:23","nodeType":"VariableDeclaration","scope":5757,"src":"21695:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5739,"name":"int192","nodeType":"ElementaryTypeName","src":"21695:6:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21694:19:23"},"scope":6315,"src":"21640:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5779,"nodeType":"Block","src":"22273:124:23","statements":[{"expression":{"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5765,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"22283:10:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"22303:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22296:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5766,"name":"int184","nodeType":"ElementaryTypeName","src":"22296:6:23","typeDescriptions":{}}},"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22296:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22283:26:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5771,"nodeType":"ExpressionStatement","src":"22283:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5773,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"22327:10:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"22341:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22327:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":5776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22348:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":5772,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22319:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22319:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5778,"nodeType":"ExpressionStatement","src":"22319:71:23"}]},"documentation":{"id":5758,"nodeType":"StructuredDocumentation","src":"21844:350:23","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":5780,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22208:8:23","nodeType":"FunctionDefinition","parameters":{"id":5761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5760,"mutability":"mutable","name":"value","nameLocation":"22224:5:23","nodeType":"VariableDeclaration","scope":5780,"src":"22217:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5759,"name":"int256","nodeType":"ElementaryTypeName","src":"22217:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22216:14:23"},"returnParameters":{"id":5764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5763,"mutability":"mutable","name":"downcasted","nameLocation":"22261:10:23","nodeType":"VariableDeclaration","scope":5780,"src":"22254:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5762,"name":"int184","nodeType":"ElementaryTypeName","src":"22254:6:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22253:19:23"},"scope":6315,"src":"22199:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5802,"nodeType":"Block","src":"22832:124:23","statements":[{"expression":{"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5788,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"22842:10:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"22862:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22855:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5789,"name":"int176","nodeType":"ElementaryTypeName","src":"22855:6:23","typeDescriptions":{}}},"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22855:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22842:26:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5794,"nodeType":"ExpressionStatement","src":"22842:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5796,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"22886:10:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"22900:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22886:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":5799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22907:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":5795,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22878:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22878:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5801,"nodeType":"ExpressionStatement","src":"22878:71:23"}]},"documentation":{"id":5781,"nodeType":"StructuredDocumentation","src":"22403:350:23","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":5803,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22767:8:23","nodeType":"FunctionDefinition","parameters":{"id":5784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5783,"mutability":"mutable","name":"value","nameLocation":"22783:5:23","nodeType":"VariableDeclaration","scope":5803,"src":"22776:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5782,"name":"int256","nodeType":"ElementaryTypeName","src":"22776:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22775:14:23"},"returnParameters":{"id":5787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5786,"mutability":"mutable","name":"downcasted","nameLocation":"22820:10:23","nodeType":"VariableDeclaration","scope":5803,"src":"22813:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5785,"name":"int176","nodeType":"ElementaryTypeName","src":"22813:6:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22812:19:23"},"scope":6315,"src":"22758:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5825,"nodeType":"Block","src":"23391:124:23","statements":[{"expression":{"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5811,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5809,"src":"23401:10:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"23421:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23414:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5812,"name":"int168","nodeType":"ElementaryTypeName","src":"23414:6:23","typeDescriptions":{}}},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23414:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23401:26:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5817,"nodeType":"ExpressionStatement","src":"23401:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5819,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5809,"src":"23445:10:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"23459:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23445:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":5822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23466:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":5818,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23437:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23437:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5824,"nodeType":"ExpressionStatement","src":"23437:71:23"}]},"documentation":{"id":5804,"nodeType":"StructuredDocumentation","src":"22962:350:23","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":5826,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23326:8:23","nodeType":"FunctionDefinition","parameters":{"id":5807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5806,"mutability":"mutable","name":"value","nameLocation":"23342:5:23","nodeType":"VariableDeclaration","scope":5826,"src":"23335:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5805,"name":"int256","nodeType":"ElementaryTypeName","src":"23335:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23334:14:23"},"returnParameters":{"id":5810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5809,"mutability":"mutable","name":"downcasted","nameLocation":"23379:10:23","nodeType":"VariableDeclaration","scope":5826,"src":"23372:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5808,"name":"int168","nodeType":"ElementaryTypeName","src":"23372:6:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23371:19:23"},"scope":6315,"src":"23317:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5848,"nodeType":"Block","src":"23950:124:23","statements":[{"expression":{"id":5839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5834,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"23960:10:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"23980:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23973:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5835,"name":"int160","nodeType":"ElementaryTypeName","src":"23973:6:23","typeDescriptions":{}}},"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23973:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23960:26:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5840,"nodeType":"ExpressionStatement","src":"23960:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5842,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"24004:10:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"24018:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24004:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":5845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24025:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":5841,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23996:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23996:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5847,"nodeType":"ExpressionStatement","src":"23996:71:23"}]},"documentation":{"id":5827,"nodeType":"StructuredDocumentation","src":"23521:350:23","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":5849,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23885:8:23","nodeType":"FunctionDefinition","parameters":{"id":5830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5829,"mutability":"mutable","name":"value","nameLocation":"23901:5:23","nodeType":"VariableDeclaration","scope":5849,"src":"23894:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5828,"name":"int256","nodeType":"ElementaryTypeName","src":"23894:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23893:14:23"},"returnParameters":{"id":5833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5832,"mutability":"mutable","name":"downcasted","nameLocation":"23938:10:23","nodeType":"VariableDeclaration","scope":5849,"src":"23931:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5831,"name":"int160","nodeType":"ElementaryTypeName","src":"23931:6:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23930:19:23"},"scope":6315,"src":"23876:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5871,"nodeType":"Block","src":"24509:124:23","statements":[{"expression":{"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5857,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"24519:10:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"24539:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24532:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5858,"name":"int152","nodeType":"ElementaryTypeName","src":"24532:6:23","typeDescriptions":{}}},"id":5861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24532:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24519:26:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5863,"nodeType":"ExpressionStatement","src":"24519:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5865,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"24563:10:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"24577:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24563:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":5868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24584:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":5864,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24555:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24555:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5870,"nodeType":"ExpressionStatement","src":"24555:71:23"}]},"documentation":{"id":5850,"nodeType":"StructuredDocumentation","src":"24080:350:23","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":5872,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24444:8:23","nodeType":"FunctionDefinition","parameters":{"id":5853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5852,"mutability":"mutable","name":"value","nameLocation":"24460:5:23","nodeType":"VariableDeclaration","scope":5872,"src":"24453:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5851,"name":"int256","nodeType":"ElementaryTypeName","src":"24453:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24452:14:23"},"returnParameters":{"id":5856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5855,"mutability":"mutable","name":"downcasted","nameLocation":"24497:10:23","nodeType":"VariableDeclaration","scope":5872,"src":"24490:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5854,"name":"int152","nodeType":"ElementaryTypeName","src":"24490:6:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24489:19:23"},"scope":6315,"src":"24435:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5894,"nodeType":"Block","src":"25068:124:23","statements":[{"expression":{"id":5885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5880,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"25078:10:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5875,"src":"25098:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25091:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5881,"name":"int144","nodeType":"ElementaryTypeName","src":"25091:6:23","typeDescriptions":{}}},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25091:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25078:26:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5886,"nodeType":"ExpressionStatement","src":"25078:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5888,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"25122:10:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5875,"src":"25136:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25122:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":5891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25143:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":5887,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25114:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25114:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5893,"nodeType":"ExpressionStatement","src":"25114:71:23"}]},"documentation":{"id":5873,"nodeType":"StructuredDocumentation","src":"24639:350:23","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":5895,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"25003:8:23","nodeType":"FunctionDefinition","parameters":{"id":5876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5875,"mutability":"mutable","name":"value","nameLocation":"25019:5:23","nodeType":"VariableDeclaration","scope":5895,"src":"25012:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5874,"name":"int256","nodeType":"ElementaryTypeName","src":"25012:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25011:14:23"},"returnParameters":{"id":5879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5878,"mutability":"mutable","name":"downcasted","nameLocation":"25056:10:23","nodeType":"VariableDeclaration","scope":5895,"src":"25049:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5877,"name":"int144","nodeType":"ElementaryTypeName","src":"25049:6:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25048:19:23"},"scope":6315,"src":"24994:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5917,"nodeType":"Block","src":"25627:124:23","statements":[{"expression":{"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5903,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"25637:10:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"25657:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25650:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5904,"name":"int136","nodeType":"ElementaryTypeName","src":"25650:6:23","typeDescriptions":{}}},"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25650:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25637:26:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5909,"nodeType":"ExpressionStatement","src":"25637:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5911,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"25681:10:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"25695:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25681:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":5914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25702:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":5910,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25673:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25673:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5916,"nodeType":"ExpressionStatement","src":"25673:71:23"}]},"documentation":{"id":5896,"nodeType":"StructuredDocumentation","src":"25198:350:23","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":5918,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25562:8:23","nodeType":"FunctionDefinition","parameters":{"id":5899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5898,"mutability":"mutable","name":"value","nameLocation":"25578:5:23","nodeType":"VariableDeclaration","scope":5918,"src":"25571:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5897,"name":"int256","nodeType":"ElementaryTypeName","src":"25571:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25570:14:23"},"returnParameters":{"id":5902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5901,"mutability":"mutable","name":"downcasted","nameLocation":"25615:10:23","nodeType":"VariableDeclaration","scope":5918,"src":"25608:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5900,"name":"int136","nodeType":"ElementaryTypeName","src":"25608:6:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25607:19:23"},"scope":6315,"src":"25553:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5940,"nodeType":"Block","src":"26186:124:23","statements":[{"expression":{"id":5931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5926,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"26196:10:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"26216:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26209:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5927,"name":"int128","nodeType":"ElementaryTypeName","src":"26209:6:23","typeDescriptions":{}}},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26209:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26196:26:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5932,"nodeType":"ExpressionStatement","src":"26196:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5934,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"26240:10:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"26254:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26240:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":5937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26261:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":5933,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26232:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26232:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5939,"nodeType":"ExpressionStatement","src":"26232:71:23"}]},"documentation":{"id":5919,"nodeType":"StructuredDocumentation","src":"25757:350:23","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":5941,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26121:8:23","nodeType":"FunctionDefinition","parameters":{"id":5922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5921,"mutability":"mutable","name":"value","nameLocation":"26137:5:23","nodeType":"VariableDeclaration","scope":5941,"src":"26130:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5920,"name":"int256","nodeType":"ElementaryTypeName","src":"26130:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26129:14:23"},"returnParameters":{"id":5925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5924,"mutability":"mutable","name":"downcasted","nameLocation":"26174:10:23","nodeType":"VariableDeclaration","scope":5941,"src":"26167:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5923,"name":"int128","nodeType":"ElementaryTypeName","src":"26167:6:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26166:19:23"},"scope":6315,"src":"26112:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5963,"nodeType":"Block","src":"26745:124:23","statements":[{"expression":{"id":5954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5949,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"26755:10:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"26775:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26768:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5950,"name":"int120","nodeType":"ElementaryTypeName","src":"26768:6:23","typeDescriptions":{}}},"id":5953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26768:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26755:26:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5955,"nodeType":"ExpressionStatement","src":"26755:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5957,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"26799:10:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"26813:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26799:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":5960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26820:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":5956,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26791:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26791:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5962,"nodeType":"ExpressionStatement","src":"26791:71:23"}]},"documentation":{"id":5942,"nodeType":"StructuredDocumentation","src":"26316:350:23","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":5964,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26680:8:23","nodeType":"FunctionDefinition","parameters":{"id":5945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5944,"mutability":"mutable","name":"value","nameLocation":"26696:5:23","nodeType":"VariableDeclaration","scope":5964,"src":"26689:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5943,"name":"int256","nodeType":"ElementaryTypeName","src":"26689:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26688:14:23"},"returnParameters":{"id":5948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5947,"mutability":"mutable","name":"downcasted","nameLocation":"26733:10:23","nodeType":"VariableDeclaration","scope":5964,"src":"26726:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5946,"name":"int120","nodeType":"ElementaryTypeName","src":"26726:6:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26725:19:23"},"scope":6315,"src":"26671:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5986,"nodeType":"Block","src":"27304:124:23","statements":[{"expression":{"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5972,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"27314:10:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"27334:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27327:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5973,"name":"int112","nodeType":"ElementaryTypeName","src":"27327:6:23","typeDescriptions":{}}},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27327:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27314:26:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5978,"nodeType":"ExpressionStatement","src":"27314:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5980,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"27358:10:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"27372:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27358:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":5983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27379:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":5979,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27350:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27350:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5985,"nodeType":"ExpressionStatement","src":"27350:71:23"}]},"documentation":{"id":5965,"nodeType":"StructuredDocumentation","src":"26875:350:23","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":5987,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27239:8:23","nodeType":"FunctionDefinition","parameters":{"id":5968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5967,"mutability":"mutable","name":"value","nameLocation":"27255:5:23","nodeType":"VariableDeclaration","scope":5987,"src":"27248:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5966,"name":"int256","nodeType":"ElementaryTypeName","src":"27248:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27247:14:23"},"returnParameters":{"id":5971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5970,"mutability":"mutable","name":"downcasted","nameLocation":"27292:10:23","nodeType":"VariableDeclaration","scope":5987,"src":"27285:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5969,"name":"int112","nodeType":"ElementaryTypeName","src":"27285:6:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27284:19:23"},"scope":6315,"src":"27230:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6009,"nodeType":"Block","src":"27863:124:23","statements":[{"expression":{"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5995,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"27873:10:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"27893:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27886:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5996,"name":"int104","nodeType":"ElementaryTypeName","src":"27886:6:23","typeDescriptions":{}}},"id":5999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27886:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27873:26:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6001,"nodeType":"ExpressionStatement","src":"27873:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6003,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"27917:10:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"27931:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27917:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":6006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27938:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":6002,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27909:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27909:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6008,"nodeType":"ExpressionStatement","src":"27909:71:23"}]},"documentation":{"id":5988,"nodeType":"StructuredDocumentation","src":"27434:350:23","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":6010,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27798:8:23","nodeType":"FunctionDefinition","parameters":{"id":5991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5990,"mutability":"mutable","name":"value","nameLocation":"27814:5:23","nodeType":"VariableDeclaration","scope":6010,"src":"27807:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5989,"name":"int256","nodeType":"ElementaryTypeName","src":"27807:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27806:14:23"},"returnParameters":{"id":5994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5993,"mutability":"mutable","name":"downcasted","nameLocation":"27851:10:23","nodeType":"VariableDeclaration","scope":6010,"src":"27844:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5992,"name":"int104","nodeType":"ElementaryTypeName","src":"27844:6:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27843:19:23"},"scope":6315,"src":"27789:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6032,"nodeType":"Block","src":"28415:122:23","statements":[{"expression":{"id":6023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6018,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6016,"src":"28425:10:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"28444:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28438:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6019,"name":"int96","nodeType":"ElementaryTypeName","src":"28438:5:23","typeDescriptions":{}}},"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28438:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28425:25:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6024,"nodeType":"ExpressionStatement","src":"28425:25:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6026,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6016,"src":"28468:10:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"28482:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28468:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":6029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28489:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":6025,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28460:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28460:70:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6031,"nodeType":"ExpressionStatement","src":"28460:70:23"}]},"documentation":{"id":6011,"nodeType":"StructuredDocumentation","src":"27993:345:23","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.7._"},"id":6033,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28352:7:23","nodeType":"FunctionDefinition","parameters":{"id":6014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6013,"mutability":"mutable","name":"value","nameLocation":"28367:5:23","nodeType":"VariableDeclaration","scope":6033,"src":"28360:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6012,"name":"int256","nodeType":"ElementaryTypeName","src":"28360:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28359:14:23"},"returnParameters":{"id":6017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6016,"mutability":"mutable","name":"downcasted","nameLocation":"28403:10:23","nodeType":"VariableDeclaration","scope":6033,"src":"28397:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6015,"name":"int96","nodeType":"ElementaryTypeName","src":"28397:5:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28396:18:23"},"scope":6315,"src":"28343:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6055,"nodeType":"Block","src":"28965:122:23","statements":[{"expression":{"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6041,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6039,"src":"28975:10:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"28994:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28988:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6042,"name":"int88","nodeType":"ElementaryTypeName","src":"28988:5:23","typeDescriptions":{}}},"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28988:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28975:25:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6047,"nodeType":"ExpressionStatement","src":"28975:25:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6049,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6039,"src":"29018:10:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"29032:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29018:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":6052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29039:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":6048,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29010:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29010:70:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6054,"nodeType":"ExpressionStatement","src":"29010:70:23"}]},"documentation":{"id":6034,"nodeType":"StructuredDocumentation","src":"28543:345:23","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":6056,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28902:7:23","nodeType":"FunctionDefinition","parameters":{"id":6037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6036,"mutability":"mutable","name":"value","nameLocation":"28917:5:23","nodeType":"VariableDeclaration","scope":6056,"src":"28910:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6035,"name":"int256","nodeType":"ElementaryTypeName","src":"28910:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28909:14:23"},"returnParameters":{"id":6040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6039,"mutability":"mutable","name":"downcasted","nameLocation":"28953:10:23","nodeType":"VariableDeclaration","scope":6056,"src":"28947:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6038,"name":"int88","nodeType":"ElementaryTypeName","src":"28947:5:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28946:18:23"},"scope":6315,"src":"28893:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6078,"nodeType":"Block","src":"29515:122:23","statements":[{"expression":{"id":6069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6064,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"29525:10:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"29544:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29538:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6065,"name":"int80","nodeType":"ElementaryTypeName","src":"29538:5:23","typeDescriptions":{}}},"id":6068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29538:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29525:25:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6070,"nodeType":"ExpressionStatement","src":"29525:25:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6072,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"29568:10:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"29582:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29568:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":6075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29589:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":6071,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29560:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29560:70:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6077,"nodeType":"ExpressionStatement","src":"29560:70:23"}]},"documentation":{"id":6057,"nodeType":"StructuredDocumentation","src":"29093:345:23","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":6079,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29452:7:23","nodeType":"FunctionDefinition","parameters":{"id":6060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6059,"mutability":"mutable","name":"value","nameLocation":"29467:5:23","nodeType":"VariableDeclaration","scope":6079,"src":"29460:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6058,"name":"int256","nodeType":"ElementaryTypeName","src":"29460:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29459:14:23"},"returnParameters":{"id":6063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6062,"mutability":"mutable","name":"downcasted","nameLocation":"29503:10:23","nodeType":"VariableDeclaration","scope":6079,"src":"29497:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6061,"name":"int80","nodeType":"ElementaryTypeName","src":"29497:5:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29496:18:23"},"scope":6315,"src":"29443:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6101,"nodeType":"Block","src":"30065:122:23","statements":[{"expression":{"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6087,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"30075:10:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6082,"src":"30094:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30088:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6088,"name":"int72","nodeType":"ElementaryTypeName","src":"30088:5:23","typeDescriptions":{}}},"id":6091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30088:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30075:25:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6093,"nodeType":"ExpressionStatement","src":"30075:25:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6095,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"30118:10:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6082,"src":"30132:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30118:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":6098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30139:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":6094,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30110:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30110:70:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6100,"nodeType":"ExpressionStatement","src":"30110:70:23"}]},"documentation":{"id":6080,"nodeType":"StructuredDocumentation","src":"29643:345:23","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":6102,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"30002:7:23","nodeType":"FunctionDefinition","parameters":{"id":6083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6082,"mutability":"mutable","name":"value","nameLocation":"30017:5:23","nodeType":"VariableDeclaration","scope":6102,"src":"30010:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6081,"name":"int256","nodeType":"ElementaryTypeName","src":"30010:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30009:14:23"},"returnParameters":{"id":6086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6085,"mutability":"mutable","name":"downcasted","nameLocation":"30053:10:23","nodeType":"VariableDeclaration","scope":6102,"src":"30047:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6084,"name":"int72","nodeType":"ElementaryTypeName","src":"30047:5:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30046:18:23"},"scope":6315,"src":"29993:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6124,"nodeType":"Block","src":"30615:122:23","statements":[{"expression":{"id":6115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6110,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"30625:10:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6105,"src":"30644:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30638:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6111,"name":"int64","nodeType":"ElementaryTypeName","src":"30638:5:23","typeDescriptions":{}}},"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30638:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30625:25:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6116,"nodeType":"ExpressionStatement","src":"30625:25:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6118,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"30668:10:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6105,"src":"30682:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30668:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":6121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30689:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":6117,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30660:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30660:70:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6123,"nodeType":"ExpressionStatement","src":"30660:70:23"}]},"documentation":{"id":6103,"nodeType":"StructuredDocumentation","src":"30193:345:23","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":6125,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30552:7:23","nodeType":"FunctionDefinition","parameters":{"id":6106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6105,"mutability":"mutable","name":"value","nameLocation":"30567:5:23","nodeType":"VariableDeclaration","scope":6125,"src":"30560:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6104,"name":"int256","nodeType":"ElementaryTypeName","src":"30560:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30559:14:23"},"returnParameters":{"id":6109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6108,"mutability":"mutable","name":"downcasted","nameLocation":"30603:10:23","nodeType":"VariableDeclaration","scope":6125,"src":"30597:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6107,"name":"int64","nodeType":"ElementaryTypeName","src":"30597:5:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30596:18:23"},"scope":6315,"src":"30543:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6147,"nodeType":"Block","src":"31165:122:23","statements":[{"expression":{"id":6138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6133,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"31175:10:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6128,"src":"31194:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31188:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6134,"name":"int56","nodeType":"ElementaryTypeName","src":"31188:5:23","typeDescriptions":{}}},"id":6137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31188:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31175:25:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6139,"nodeType":"ExpressionStatement","src":"31175:25:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6141,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"31218:10:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6128,"src":"31232:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31218:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":6144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31239:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":6140,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31210:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31210:70:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6146,"nodeType":"ExpressionStatement","src":"31210:70:23"}]},"documentation":{"id":6126,"nodeType":"StructuredDocumentation","src":"30743:345:23","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":6148,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31102:7:23","nodeType":"FunctionDefinition","parameters":{"id":6129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6128,"mutability":"mutable","name":"value","nameLocation":"31117:5:23","nodeType":"VariableDeclaration","scope":6148,"src":"31110:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6127,"name":"int256","nodeType":"ElementaryTypeName","src":"31110:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31109:14:23"},"returnParameters":{"id":6132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6131,"mutability":"mutable","name":"downcasted","nameLocation":"31153:10:23","nodeType":"VariableDeclaration","scope":6148,"src":"31147:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6130,"name":"int56","nodeType":"ElementaryTypeName","src":"31147:5:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31146:18:23"},"scope":6315,"src":"31093:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6170,"nodeType":"Block","src":"31715:122:23","statements":[{"expression":{"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6156,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6154,"src":"31725:10:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6151,"src":"31744:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31738:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6157,"name":"int48","nodeType":"ElementaryTypeName","src":"31738:5:23","typeDescriptions":{}}},"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31738:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31725:25:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6162,"nodeType":"ExpressionStatement","src":"31725:25:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6164,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6154,"src":"31768:10:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6151,"src":"31782:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31768:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":6167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31789:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":6163,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31760:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31760:70:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6169,"nodeType":"ExpressionStatement","src":"31760:70:23"}]},"documentation":{"id":6149,"nodeType":"StructuredDocumentation","src":"31293:345:23","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":6171,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31652:7:23","nodeType":"FunctionDefinition","parameters":{"id":6152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6151,"mutability":"mutable","name":"value","nameLocation":"31667:5:23","nodeType":"VariableDeclaration","scope":6171,"src":"31660:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6150,"name":"int256","nodeType":"ElementaryTypeName","src":"31660:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31659:14:23"},"returnParameters":{"id":6155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6154,"mutability":"mutable","name":"downcasted","nameLocation":"31703:10:23","nodeType":"VariableDeclaration","scope":6171,"src":"31697:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6153,"name":"int48","nodeType":"ElementaryTypeName","src":"31697:5:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31696:18:23"},"scope":6315,"src":"31643:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6193,"nodeType":"Block","src":"32265:122:23","statements":[{"expression":{"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6179,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6177,"src":"32275:10:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"32294:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32288:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6180,"name":"int40","nodeType":"ElementaryTypeName","src":"32288:5:23","typeDescriptions":{}}},"id":6183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32288:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32275:25:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6185,"nodeType":"ExpressionStatement","src":"32275:25:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6187,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6177,"src":"32318:10:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"32332:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32318:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":6190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32339:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":6186,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32310:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32310:70:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6192,"nodeType":"ExpressionStatement","src":"32310:70:23"}]},"documentation":{"id":6172,"nodeType":"StructuredDocumentation","src":"31843:345:23","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":6194,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32202:7:23","nodeType":"FunctionDefinition","parameters":{"id":6175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6174,"mutability":"mutable","name":"value","nameLocation":"32217:5:23","nodeType":"VariableDeclaration","scope":6194,"src":"32210:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6173,"name":"int256","nodeType":"ElementaryTypeName","src":"32210:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32209:14:23"},"returnParameters":{"id":6178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6177,"mutability":"mutable","name":"downcasted","nameLocation":"32253:10:23","nodeType":"VariableDeclaration","scope":6194,"src":"32247:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6176,"name":"int40","nodeType":"ElementaryTypeName","src":"32247:5:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32246:18:23"},"scope":6315,"src":"32193:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6216,"nodeType":"Block","src":"32815:122:23","statements":[{"expression":{"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6202,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"32825:10:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"32844:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32838:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6203,"name":"int32","nodeType":"ElementaryTypeName","src":"32838:5:23","typeDescriptions":{}}},"id":6206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32838:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32825:25:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6208,"nodeType":"ExpressionStatement","src":"32825:25:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6210,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"32868:10:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"32882:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32868:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":6213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32889:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":6209,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32860:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32860:70:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6215,"nodeType":"ExpressionStatement","src":"32860:70:23"}]},"documentation":{"id":6195,"nodeType":"StructuredDocumentation","src":"32393:345:23","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":6217,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32752:7:23","nodeType":"FunctionDefinition","parameters":{"id":6198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6197,"mutability":"mutable","name":"value","nameLocation":"32767:5:23","nodeType":"VariableDeclaration","scope":6217,"src":"32760:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6196,"name":"int256","nodeType":"ElementaryTypeName","src":"32760:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32759:14:23"},"returnParameters":{"id":6201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6200,"mutability":"mutable","name":"downcasted","nameLocation":"32803:10:23","nodeType":"VariableDeclaration","scope":6217,"src":"32797:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6199,"name":"int32","nodeType":"ElementaryTypeName","src":"32797:5:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32796:18:23"},"scope":6315,"src":"32743:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6239,"nodeType":"Block","src":"33365:122:23","statements":[{"expression":{"id":6230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6225,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"33375:10:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"33394:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33388:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6226,"name":"int24","nodeType":"ElementaryTypeName","src":"33388:5:23","typeDescriptions":{}}},"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33388:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33375:25:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6231,"nodeType":"ExpressionStatement","src":"33375:25:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6233,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"33418:10:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"33432:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33418:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":6236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33439:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":6232,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33410:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33410:70:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6238,"nodeType":"ExpressionStatement","src":"33410:70:23"}]},"documentation":{"id":6218,"nodeType":"StructuredDocumentation","src":"32943:345:23","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":6240,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"33302:7:23","nodeType":"FunctionDefinition","parameters":{"id":6221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6220,"mutability":"mutable","name":"value","nameLocation":"33317:5:23","nodeType":"VariableDeclaration","scope":6240,"src":"33310:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6219,"name":"int256","nodeType":"ElementaryTypeName","src":"33310:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33309:14:23"},"returnParameters":{"id":6224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6223,"mutability":"mutable","name":"downcasted","nameLocation":"33353:10:23","nodeType":"VariableDeclaration","scope":6240,"src":"33347:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6222,"name":"int24","nodeType":"ElementaryTypeName","src":"33347:5:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"33346:18:23"},"scope":6315,"src":"33293:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6262,"nodeType":"Block","src":"33915:122:23","statements":[{"expression":{"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6248,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6246,"src":"33925:10:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"33944:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33938:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6249,"name":"int16","nodeType":"ElementaryTypeName","src":"33938:5:23","typeDescriptions":{}}},"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33938:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33925:25:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6254,"nodeType":"ExpressionStatement","src":"33925:25:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6256,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6246,"src":"33968:10:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"33982:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33968:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":6259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33989:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":6255,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33960:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33960:70:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6261,"nodeType":"ExpressionStatement","src":"33960:70:23"}]},"documentation":{"id":6241,"nodeType":"StructuredDocumentation","src":"33493:345:23","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":6263,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33852:7:23","nodeType":"FunctionDefinition","parameters":{"id":6244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6243,"mutability":"mutable","name":"value","nameLocation":"33867:5:23","nodeType":"VariableDeclaration","scope":6263,"src":"33860:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6242,"name":"int256","nodeType":"ElementaryTypeName","src":"33860:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33859:14:23"},"returnParameters":{"id":6247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6246,"mutability":"mutable","name":"downcasted","nameLocation":"33903:10:23","nodeType":"VariableDeclaration","scope":6263,"src":"33897:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6245,"name":"int16","nodeType":"ElementaryTypeName","src":"33897:5:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33896:18:23"},"scope":6315,"src":"33843:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6285,"nodeType":"Block","src":"34458:120:23","statements":[{"expression":{"id":6276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6271,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6269,"src":"34468:10:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"34486:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34481:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6272,"name":"int8","nodeType":"ElementaryTypeName","src":"34481:4:23","typeDescriptions":{}}},"id":6275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34481:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34468:24:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6277,"nodeType":"ExpressionStatement","src":"34468:24:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6279,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6269,"src":"34510:10:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"34524:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34510:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":6282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34531:39:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":6278,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34502:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34502:69:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6284,"nodeType":"ExpressionStatement","src":"34502:69:23"}]},"documentation":{"id":6264,"nodeType":"StructuredDocumentation","src":"34043:340:23","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v3.1._"},"id":6286,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"34397:6:23","nodeType":"FunctionDefinition","parameters":{"id":6267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6266,"mutability":"mutable","name":"value","nameLocation":"34411:5:23","nodeType":"VariableDeclaration","scope":6286,"src":"34404:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6265,"name":"int256","nodeType":"ElementaryTypeName","src":"34404:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34403:14:23"},"returnParameters":{"id":6270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6269,"mutability":"mutable","name":"downcasted","nameLocation":"34446:10:23","nodeType":"VariableDeclaration","scope":6286,"src":"34441:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6268,"name":"int8","nodeType":"ElementaryTypeName","src":"34441:4:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34440:17:23"},"scope":6315,"src":"34388:190:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6313,"nodeType":"Block","src":"34856:233:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"34973:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34995:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6299,"name":"int256","nodeType":"ElementaryTypeName","src":"34995:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6298,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34990:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34990:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"35003:3:23","memberName":"max","nodeType":"MemberAccess","src":"34990:16:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34982:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6296,"name":"uint256","nodeType":"ElementaryTypeName","src":"34982:7:23","typeDescriptions":{}}},"id":6303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34982:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34973:34:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":6305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"35009:42:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":6294,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34965:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34965:87:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6307,"nodeType":"ExpressionStatement","src":"34965:87:23"},{"expression":{"arguments":[{"id":6310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"35076:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35069:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6308,"name":"int256","nodeType":"ElementaryTypeName","src":"35069:6:23","typeDescriptions":{}}},"id":6311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35069:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6293,"id":6312,"nodeType":"Return","src":"35062:20:23"}]},"documentation":{"id":6287,"nodeType":"StructuredDocumentation","src":"34584:203:23","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256.\n _Available since v3.0._"},"id":6314,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34801:8:23","nodeType":"FunctionDefinition","parameters":{"id":6290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6289,"mutability":"mutable","name":"value","nameLocation":"34818:5:23","nodeType":"VariableDeclaration","scope":6314,"src":"34810:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6288,"name":"uint256","nodeType":"ElementaryTypeName","src":"34810:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34809:15:23"},"returnParameters":{"id":6293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6314,"src":"34848:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6291,"name":"int256","nodeType":"ElementaryTypeName","src":"34848:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34847:8:23"},"scope":6315,"src":"34792:297:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6316,"src":"927:34164:23","usedErrors":[],"usedEvents":[]}],"src":"192:34900:23"},"id":23},"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol","exportedSymbols":{"SignedMathUpgradeable":[6420]},"id":6421,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6317,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:24"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMathUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":6318,"nodeType":"StructuredDocumentation","src":"134:80:24","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6420,"linearizedBaseContracts":[6420],"name":"SignedMathUpgradeable","nameLocation":"223:21:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":6335,"nodeType":"Block","src":"386:37:24","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6328,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"403:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6329,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"407:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"403:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6332,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"415:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"403:13:24","trueExpression":{"id":6331,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"411:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6327,"id":6334,"nodeType":"Return","src":"396:20:24"}]},"documentation":{"id":6319,"nodeType":"StructuredDocumentation","src":"251:66:24","text":" @dev Returns the largest of two signed numbers."},"id":6336,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"331:3:24","nodeType":"FunctionDefinition","parameters":{"id":6324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6321,"mutability":"mutable","name":"a","nameLocation":"342:1:24","nodeType":"VariableDeclaration","scope":6336,"src":"335:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6320,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6323,"mutability":"mutable","name":"b","nameLocation":"352:1:24","nodeType":"VariableDeclaration","scope":6336,"src":"345:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6322,"name":"int256","nodeType":"ElementaryTypeName","src":"345:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"334:20:24"},"returnParameters":{"id":6327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6336,"src":"378:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6325,"name":"int256","nodeType":"ElementaryTypeName","src":"378:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"377:8:24"},"scope":6420,"src":"322:101:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6353,"nodeType":"Block","src":"565:37:24","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6346,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6339,"src":"582:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6347,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"586:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"582:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6350,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"594:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"582:13:24","trueExpression":{"id":6349,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6339,"src":"590:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6345,"id":6352,"nodeType":"Return","src":"575:20:24"}]},"documentation":{"id":6337,"nodeType":"StructuredDocumentation","src":"429:67:24","text":" @dev Returns the smallest of two signed numbers."},"id":6354,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"510:3:24","nodeType":"FunctionDefinition","parameters":{"id":6342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6339,"mutability":"mutable","name":"a","nameLocation":"521:1:24","nodeType":"VariableDeclaration","scope":6354,"src":"514:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6338,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6341,"mutability":"mutable","name":"b","nameLocation":"531:1:24","nodeType":"VariableDeclaration","scope":6354,"src":"524:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6340,"name":"int256","nodeType":"ElementaryTypeName","src":"524:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"513:20:24"},"returnParameters":{"id":6345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6354,"src":"557:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6343,"name":"int256","nodeType":"ElementaryTypeName","src":"557:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"556:8:24"},"scope":6420,"src":"501:101:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6397,"nodeType":"Block","src":"807:162:24","statements":[{"assignments":[6365],"declarations":[{"constant":false,"id":6365,"mutability":"mutable","name":"x","nameLocation":"876:1:24","nodeType":"VariableDeclaration","scope":6397,"src":"869:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6364,"name":"int256","nodeType":"ElementaryTypeName","src":"869:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6378,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6366,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"881:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6367,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"885:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6370,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"892:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6371,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"896:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"892:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6373,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"891:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"902:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"891:12:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"890:14:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"880:24:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"869:35:24"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6379,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6365,"src":"921:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6384,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6365,"src":"941:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"933:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6382,"name":"uint256","nodeType":"ElementaryTypeName","src":"933:7:24","typeDescriptions":{}}},"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"933:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"947:3:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"933:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"926:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6380,"name":"int256","nodeType":"ElementaryTypeName","src":"926:6:24","typeDescriptions":{}}},"id":6388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"926:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6389,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"955:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6390,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"959:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"955:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6392,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"954:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"926:35:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6394,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"925:37:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"921:41:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6363,"id":6396,"nodeType":"Return","src":"914:48:24"}]},"documentation":{"id":6355,"nodeType":"StructuredDocumentation","src":"608:126:24","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6398,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"748:7:24","nodeType":"FunctionDefinition","parameters":{"id":6360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6357,"mutability":"mutable","name":"a","nameLocation":"763:1:24","nodeType":"VariableDeclaration","scope":6398,"src":"756:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6356,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6359,"mutability":"mutable","name":"b","nameLocation":"773:1:24","nodeType":"VariableDeclaration","scope":6398,"src":"766:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6358,"name":"int256","nodeType":"ElementaryTypeName","src":"766:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"755:20:24"},"returnParameters":{"id":6363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6398,"src":"799:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6361,"name":"int256","nodeType":"ElementaryTypeName","src":"799:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"798:8:24"},"scope":6420,"src":"739:230:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6418,"nodeType":"Block","src":"1113:158:24","statements":[{"id":6417,"nodeType":"UncheckedBlock","src":"1123:142:24","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6408,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"1238:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":6409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1243:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1238:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1251:2:24","subExpression":{"id":6412,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"1252:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1238:15:24","trueExpression":{"id":6411,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"1247:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1230:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6406,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:24","typeDescriptions":{}}},"id":6415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1230:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6405,"id":6416,"nodeType":"Return","src":"1223:31:24"}]}]},"documentation":{"id":6399,"nodeType":"StructuredDocumentation","src":"975:78:24","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6419,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1067:3:24","nodeType":"FunctionDefinition","parameters":{"id":6402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6401,"mutability":"mutable","name":"n","nameLocation":"1078:1:24","nodeType":"VariableDeclaration","scope":6419,"src":"1071:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6400,"name":"int256","nodeType":"ElementaryTypeName","src":"1071:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1070:10:24"},"returnParameters":{"id":6405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6419,"src":"1104:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6403,"name":"uint256","nodeType":"ElementaryTypeName","src":"1104:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1103:9:24"},"scope":6420,"src":"1058:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6421,"src":"215:1058:24","usedErrors":[],"usedEvents":[]}],"src":"109:1165:24"},"id":24},"contracts/MindplexUpgradeableToken.sol":{"ast":{"absolutePath":"contracts/MindplexUpgradeableToken.sol","exportedSymbols":{"AccessControlUpgradeable":[335],"AddressUpgradeable":[2857],"ContextUpgradeable":[2899],"CountersUpgradeable":[2973],"ECDSAUpgradeable":[3568],"EIP712Upgradeable":[3852],"ERC165Upgradeable":[3896],"ERC20PermitUpgradeable":[1712],"ERC20Upgradeable":[1443],"ERC20VotesUpgradeable":[2466],"IAccessControlUpgradeable":[408],"IERC165Upgradeable":[3908],"IERC20MetadataUpgradeable":[2491],"IERC20PermitUpgradeable":[2527],"IERC20Upgradeable":[1521],"IERC5267Upgradeable":[511],"IERC5805Upgradeable":[520],"IERC6372Upgradeable":[535],"IVotesUpgradeable":[486],"Initializable":[704],"MathUpgradeable":[4774],"MindplexUpgradeableToken":[7089],"PausableUpgradeable":[831],"SafeCastUpgradeable":[6315],"SignedMathUpgradeable":[6420],"StringsUpgradeable":[3202],"c_553d27b8":[6428],"c_false553d27b8":[6448],"c_true553d27b8":[6438]},"id":7090,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6422,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:25"},{"body":{"id":6427,"nodeType":"Block","src":"102:2:25","statements":[]},"id":6428,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"c_553d27b8","nameLocation":"66:10:25","nodeType":"FunctionDefinition","parameters":{"id":6425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6424,"mutability":"mutable","name":"c__553d27b8","nameLocation":"84:11:25","nodeType":"VariableDeclaration","scope":6428,"src":"77:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":6423,"name":"bytes8","nodeType":"ElementaryTypeName","src":"77:6:25","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"}],"src":"76:20:25"},"returnParameters":{"id":6426,"nodeType":"ParameterList","parameters":[],"src":"102:0:25"},"scope":7090,"src":"57:47:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6437,"nodeType":"Block","src":"168:16:25","statements":[{"expression":{"hexValue":"74727565","id":6435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"177:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6434,"id":6436,"nodeType":"Return","src":"170:11:25"}]},"id":6438,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"c_true553d27b8","nameLocation":"114:14:25","nodeType":"FunctionDefinition","parameters":{"id":6431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6430,"mutability":"mutable","name":"c__553d27b8","nameLocation":"136:11:25","nodeType":"VariableDeclaration","scope":6438,"src":"129:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":6429,"name":"bytes8","nodeType":"ElementaryTypeName","src":"129:6:25","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"}],"src":"128:20:25"},"returnParameters":{"id":6434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6438,"src":"163:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6432,"name":"bool","nodeType":"ElementaryTypeName","src":"163:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"162:6:25"},"scope":7090,"src":"105:79:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6447,"nodeType":"Block","src":"249:17:25","statements":[{"expression":{"hexValue":"66616c7365","id":6445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"258:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6444,"id":6446,"nodeType":"Return","src":"251:12:25"}]},"id":6448,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"c_false553d27b8","nameLocation":"194:15:25","nodeType":"FunctionDefinition","parameters":{"id":6441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6440,"mutability":"mutable","name":"c__553d27b8","nameLocation":"217:11:25","nodeType":"VariableDeclaration","scope":6448,"src":"210:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":6439,"name":"bytes8","nodeType":"ElementaryTypeName","src":"210:6:25","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"}],"src":"209:20:25"},"returnParameters":{"id":6444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6448,"src":"244:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6442,"name":"bool","nodeType":"ElementaryTypeName","src":"244:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"243:6:25"},"scope":7090,"src":"185:81:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":6449,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7090,"sourceUnit":1444,"src":"268:78:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","id":6450,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7090,"sourceUnit":832,"src":"347:78:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol","id":6451,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7090,"sourceUnit":2467,"src":"426:94:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","id":6452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7090,"sourceUnit":336,"src":"521:81:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6454,"name":"AccessControlUpgradeable","nameLocations":["990:24:25"],"nodeType":"IdentifierPath","referencedDeclaration":335,"src":"990:24:25"},"id":6455,"nodeType":"InheritanceSpecifier","src":"990:24:25"},{"baseName":{"id":6456,"name":"ERC20Upgradeable","nameLocations":["1020:16:25"],"nodeType":"IdentifierPath","referencedDeclaration":1443,"src":"1020:16:25"},"id":6457,"nodeType":"InheritanceSpecifier","src":"1020:16:25"},{"baseName":{"id":6458,"name":"ERC20VotesUpgradeable","nameLocations":["1042:21:25"],"nodeType":"IdentifierPath","referencedDeclaration":2466,"src":"1042:21:25"},"id":6459,"nodeType":"InheritanceSpecifier","src":"1042:21:25"},{"baseName":{"id":6460,"name":"PausableUpgradeable","nameLocations":["1069:19:25"],"nodeType":"IdentifierPath","referencedDeclaration":831,"src":"1069:19:25"},"id":6461,"nodeType":"InheritanceSpecifier","src":"1069:19:25"}],"canonicalName":"MindplexUpgradeableToken","contractDependencies":[],"contractKind":"contract","documentation":{"id":6453,"nodeType":"StructuredDocumentation","src":"604:343:25","text":"  @title MindplexUpgradeableToken\n  @notice This contract represents an {ERC20} utility token\n  @dev This contract is a fixed supply of {ERC20} token including functionalities:\n  - To pause and unpause the contract\n  - To burn and mint tokens\n  - To restrict functionality access for only specific roles\n  - To be upgraded"},"fullyImplemented":true,"id":7089,"internalFunctionIDs":{"2431":1,"2445":2},"linearizedBaseContracts":[7089,831,2466,520,486,535,1712,3852,511,2527,1443,2491,1521,335,3896,3908,408,2899,704],"name":"MindplexUpgradeableToken","nameLocation":"957:24:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":6466,"nodeType":"Block","src":"1145:2:25","statements":[]},"id":6467,"implemented":true,"kind":"function","modifiers":[],"name":"c_e1ac8b9c","nameLocation":"1100:10:25","nodeType":"FunctionDefinition","parameters":{"id":6464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6463,"mutability":"mutable","name":"c__e1ac8b9c","nameLocation":"1118:11:25","nodeType":"VariableDeclaration","scope":6467,"src":"1111:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":6462,"name":"bytes8","nodeType":"ElementaryTypeName","src":"1111:6:25","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"}],"src":"1110:20:25"},"returnParameters":{"id":6465,"nodeType":"ParameterList","parameters":[],"src":"1145:0:25"},"scope":7089,"src":"1091:56:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6476,"nodeType":"Block","src":"1220:16:25","statements":[{"expression":{"hexValue":"74727565","id":6474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1229:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6473,"id":6475,"nodeType":"Return","src":"1222:11:25"}]},"id":6477,"implemented":true,"kind":"function","modifiers":[],"name":"c_truee1ac8b9c","nameLocation":"1157:14:25","nodeType":"FunctionDefinition","parameters":{"id":6470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6469,"mutability":"mutable","name":"c__e1ac8b9c","nameLocation":"1179:11:25","nodeType":"VariableDeclaration","scope":6477,"src":"1172:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":6468,"name":"bytes8","nodeType":"ElementaryTypeName","src":"1172:6:25","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"}],"src":"1171:20:25"},"returnParameters":{"id":6473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6477,"src":"1215:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6471,"name":"bool","nodeType":"ElementaryTypeName","src":"1215:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1214:6:25"},"scope":7089,"src":"1148:88:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6486,"nodeType":"Block","src":"1310:17:25","statements":[{"expression":{"hexValue":"66616c7365","id":6484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1319:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6483,"id":6485,"nodeType":"Return","src":"1312:12:25"}]},"id":6487,"implemented":true,"kind":"function","modifiers":[],"name":"c_falsee1ac8b9c","nameLocation":"1246:15:25","nodeType":"FunctionDefinition","parameters":{"id":6480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6479,"mutability":"mutable","name":"c__e1ac8b9c","nameLocation":"1269:11:25","nodeType":"VariableDeclaration","scope":6487,"src":"1262:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":6478,"name":"bytes8","nodeType":"ElementaryTypeName","src":"1262:6:25","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"}],"src":"1261:20:25"},"returnParameters":{"id":6483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6487,"src":"1305:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6481,"name":"bool","nodeType":"ElementaryTypeName","src":"1305:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1304:6:25"},"scope":7089,"src":"1237:90:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6494,"nodeType":"Block","src":"1350:60:25","statements":[{"expression":{"arguments":[{"hexValue":"307836326666336431393466623130336563","id":6490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1363:18:25","typeDescriptions":{"typeIdentifier":"t_rational_7133487513698632684_by_1","typeString":"int_const 7133487513698632684"},"value":"0x62ff3d194fb103ec"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_7133487513698632684_by_1","typeString":"int_const 7133487513698632684"}],"id":6489,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"1352:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1352:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6492,"nodeType":"ExpressionStatement","src":"1352:30:25"},{"id":6493,"nodeType":"PlaceholderStatement","src":"1406:1:25"}]},"id":6495,"name":"c_mod939d7b80","nameLocation":"1337:13:25","nodeType":"ModifierDefinition","parameters":{"id":6488,"nodeType":"ParameterList","parameters":[],"src":"1350:0:25"},"src":"1328:82:25","virtual":false,"visibility":"internal"},{"body":{"id":6502,"nodeType":"Block","src":"1433:59:25","statements":[{"expression":{"arguments":[{"hexValue":"307834343463633039623631323361303234","id":6498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1446:18:25","typeDescriptions":{"typeIdentifier":"t_rational_4921520266391298084_by_1","typeString":"int_const 4921520266391298084"},"value":"0x444cc09b6123a024"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_4921520266391298084_by_1","typeString":"int_const 4921520266391298084"}],"id":6497,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"1435:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6500,"nodeType":"ExpressionStatement","src":"1435:30:25"},{"id":6501,"nodeType":"PlaceholderStatement","src":"1488:1:25"}]},"id":6503,"name":"c_modfb804101","nameLocation":"1420:13:25","nodeType":"ModifierDefinition","parameters":{"id":6496,"nodeType":"ParameterList","parameters":[],"src":"1433:0:25"},"src":"1411:81:25","virtual":false,"visibility":"internal"},{"body":{"id":6510,"nodeType":"Block","src":"1515:60:25","statements":[{"expression":{"arguments":[{"hexValue":"307861626539313033303030306431616330","id":6506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1528:18:25","typeDescriptions":{"typeIdentifier":"t_rational_12387450048404593344_by_1","typeString":"int_const 12387450048404593344"},"value":"0xabe91030000d1ac0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_12387450048404593344_by_1","typeString":"int_const 12387450048404593344"}],"id":6505,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"1517:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1517:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6508,"nodeType":"ExpressionStatement","src":"1517:30:25"},{"id":6509,"nodeType":"PlaceholderStatement","src":"1571:1:25"}]},"id":6511,"name":"c_mod131d9412","nameLocation":"1502:13:25","nodeType":"ModifierDefinition","parameters":{"id":6504,"nodeType":"ParameterList","parameters":[],"src":"1515:0:25"},"src":"1493:82:25","virtual":false,"visibility":"internal"},{"body":{"id":6518,"nodeType":"Block","src":"1598:59:25","statements":[{"expression":{"arguments":[{"hexValue":"307836303939393966303262336433326435","id":6514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1611:18:25","typeDescriptions":{"typeIdentifier":"t_rational_6960763955874443989_by_1","typeString":"int_const 6960763955874443989"},"value":"0x609999f02b3d32d5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_6960763955874443989_by_1","typeString":"int_const 6960763955874443989"}],"id":6513,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"1600:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1600:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6516,"nodeType":"ExpressionStatement","src":"1600:30:25"},{"id":6517,"nodeType":"PlaceholderStatement","src":"1653:1:25"}]},"id":6519,"name":"c_mod4f8c6f6e","nameLocation":"1585:13:25","nodeType":"ModifierDefinition","parameters":{"id":6512,"nodeType":"ParameterList","parameters":[],"src":"1598:0:25"},"src":"1576:81:25","virtual":false,"visibility":"internal"},{"body":{"id":6526,"nodeType":"Block","src":"1680:60:25","statements":[{"expression":{"arguments":[{"hexValue":"307830303861646164346465316333303461","id":6522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1693:18:25","typeDescriptions":{"typeIdentifier":"t_rational_39084154580381770_by_1","typeString":"int_const 39084154580381770"},"value":"0x008adad4de1c304a"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_39084154580381770_by_1","typeString":"int_const 39084154580381770"}],"id":6521,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"1682:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1682:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6524,"nodeType":"ExpressionStatement","src":"1682:30:25"},{"id":6525,"nodeType":"PlaceholderStatement","src":"1736:1:25"}]},"id":6527,"name":"c_modfbf231e7","nameLocation":"1667:13:25","nodeType":"ModifierDefinition","parameters":{"id":6520,"nodeType":"ParameterList","parameters":[],"src":"1680:0:25"},"src":"1658:82:25","virtual":false,"visibility":"internal"},{"body":{"id":6534,"nodeType":"Block","src":"1763:59:25","statements":[{"expression":{"arguments":[{"hexValue":"307865626231363535313734383731333666","id":6530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1776:18:25","typeDescriptions":{"typeIdentifier":"t_rational_16983467070312616815_by_1","typeString":"int_const 16983467070312616815"},"value":"0xebb165517487136f"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16983467070312616815_by_1","typeString":"int_const 16983467070312616815"}],"id":6529,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"1765:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1765:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6532,"nodeType":"ExpressionStatement","src":"1765:30:25"},{"id":6533,"nodeType":"PlaceholderStatement","src":"1818:1:25"}]},"id":6535,"name":"c_mod591f10d0","nameLocation":"1750:13:25","nodeType":"ModifierDefinition","parameters":{"id":6528,"nodeType":"ParameterList","parameters":[],"src":"1763:0:25"},"src":"1741:81:25","virtual":false,"visibility":"internal"},{"body":{"id":6542,"nodeType":"Block","src":"1845:60:25","statements":[{"expression":{"arguments":[{"hexValue":"307865303032663461376631313338616538","id":6538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1858:18:25","typeDescriptions":{"typeIdentifier":"t_rational_16141733016590584552_by_1","typeString":"int_const 16141733016590584552"},"value":"0xe002f4a7f1138ae8"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16141733016590584552_by_1","typeString":"int_const 16141733016590584552"}],"id":6537,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"1847:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1847:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6540,"nodeType":"ExpressionStatement","src":"1847:30:25"},{"id":6541,"nodeType":"PlaceholderStatement","src":"1901:1:25"}]},"id":6543,"name":"c_modcb635b8c","nameLocation":"1832:13:25","nodeType":"ModifierDefinition","parameters":{"id":6536,"nodeType":"ParameterList","parameters":[],"src":"1845:0:25"},"src":"1823:82:25","virtual":false,"visibility":"internal"},{"body":{"id":6550,"nodeType":"Block","src":"1928:59:25","statements":[{"expression":{"arguments":[{"hexValue":"307837653134346131303234653236373638","id":6546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1941:18:25","typeDescriptions":{"typeIdentifier":"t_rational_9084967781511882600_by_1","typeString":"int_const 9084967781511882600"},"value":"0x7e144a1024e26768"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_9084967781511882600_by_1","typeString":"int_const 9084967781511882600"}],"id":6545,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"1930:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1930:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6548,"nodeType":"ExpressionStatement","src":"1930:30:25"},{"id":6549,"nodeType":"PlaceholderStatement","src":"1983:1:25"}]},"id":6551,"name":"c_modd085a7e0","nameLocation":"1915:13:25","nodeType":"ModifierDefinition","parameters":{"id":6544,"nodeType":"ParameterList","parameters":[],"src":"1928:0:25"},"src":"1906:81:25","virtual":false,"visibility":"internal"},{"body":{"id":6558,"nodeType":"Block","src":"2010:60:25","statements":[{"expression":{"arguments":[{"hexValue":"307838303761356661616232363764623365","id":6554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2023:18:25","typeDescriptions":{"typeIdentifier":"t_rational_9257817170755705662_by_1","typeString":"int_const 9257817170755705662"},"value":"0x807a5faab267db3e"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_9257817170755705662_by_1","typeString":"int_const 9257817170755705662"}],"id":6553,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"2012:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2012:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6556,"nodeType":"ExpressionStatement","src":"2012:30:25"},{"id":6557,"nodeType":"PlaceholderStatement","src":"2066:1:25"}]},"id":6559,"name":"c_mod7cdc1fe2","nameLocation":"1997:13:25","nodeType":"ModifierDefinition","parameters":{"id":6552,"nodeType":"ParameterList","parameters":[],"src":"2010:0:25"},"src":"1988:82:25","virtual":false,"visibility":"internal"},{"body":{"id":6566,"nodeType":"Block","src":"2093:59:25","statements":[{"expression":{"arguments":[{"hexValue":"307837643133353362303137626432616362","id":6562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2106:18:25","typeDescriptions":{"typeIdentifier":"t_rational_9012639295076117195_by_1","typeString":"int_const 9012639295076117195"},"value":"0x7d1353b017bd2acb"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_9012639295076117195_by_1","typeString":"int_const 9012639295076117195"}],"id":6561,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"2095:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2095:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6564,"nodeType":"ExpressionStatement","src":"2095:30:25"},{"id":6565,"nodeType":"PlaceholderStatement","src":"2148:1:25"}]},"id":6567,"name":"c_modc7f3a650","nameLocation":"2080:13:25","nodeType":"ModifierDefinition","parameters":{"id":6560,"nodeType":"ParameterList","parameters":[],"src":"2093:0:25"},"src":"2071:81:25","virtual":false,"visibility":"internal"},{"constant":true,"functionSelector":"e63ab1e9","id":6572,"mutability":"constant","name":"PAUSER_ROLE","nameLocation":"2249:11:25","nodeType":"VariableDeclaration","scope":7089,"src":"2225:62:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6568,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5041555345525f524f4c45","id":6570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2273:13:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""},"value":"PAUSER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""}],"id":6569,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"d5391393","id":6577,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"2382:11:25","nodeType":"VariableDeclaration","scope":7089,"src":"2358:62:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2358:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":6575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2406:13:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":6574,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2396:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2396:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"32cb6b0c","id":6587,"mutability":"constant","name":"MAX_SUPPLY","nameLocation":"2481:10:25","nodeType":"VariableDeclaration","scope":7089,"src":"2457:61:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6578,"name":"uint256","nodeType":"ElementaryTypeName","src":"2457:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31303030303030303030","id":6579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2494:10:25","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1000000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2507:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"hexValue":"36","id":6583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2516:1:25","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"}],"id":6582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2511:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6581,"name":"uint","nodeType":"ElementaryTypeName","src":"2511:4:25","typeDescriptions":{}}},"id":6584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2511:7:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2507:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2494:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":6708,"nodeType":"Block","src":"3031:1118:25","statements":[{"expression":{"arguments":[{"hexValue":"307831623837656336316362326166386664","id":6602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3043:18:25","typeDescriptions":{"typeIdentifier":"t_rational_1983814065644566781_by_1","typeString":"int_const 1983814065644566781"},"value":"0x1b87ec61cb2af8fd"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1983814065644566781_by_1","typeString":"int_const 1983814065644566781"}],"id":6601,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"3032:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3032:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6604,"nodeType":"ExpressionStatement","src":"3032:30:25"},{"expression":{"arguments":[{"hexValue":"307837356662306666666538356435626130","id":6606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3092:18:25","typeDescriptions":{"typeIdentifier":"t_rational_8501406313381452704_by_1","typeString":"int_const 8501406313381452704"},"value":"0x75fb0fffe85d5ba0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8501406313381452704_by_1","typeString":"int_const 8501406313381452704"}],"id":6605,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"3081:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3081:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6608,"nodeType":"ExpressionStatement","src":"3081:30:25"},{"expression":{"arguments":[{"hexValue":"307836653932383731343266613262663564","id":6610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3144:18:25","typeDescriptions":{"typeIdentifier":"t_rational_7967579211540119389_by_1","typeString":"int_const 7967579211540119389"},"value":"0x6e9287142fa2bf5d"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_7967579211540119389_by_1","typeString":"int_const 7967579211540119389"}],"id":6609,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"3133:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3133:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6612,"nodeType":"ExpressionStatement","src":"3133:30:25"},{"expression":{"arguments":[{"id":6614,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6590,"src":"3195:4:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6615,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"3201:6:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6613,"name":"__ERC20_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"3182:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":6616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3182:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6617,"nodeType":"ExpressionStatement","src":"3182:26:25"},{"expression":{"arguments":[{"hexValue":"307835333632653839363230643132366464","id":6619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3221:18:25","typeDescriptions":{"typeIdentifier":"t_rational_6008620584358979293_by_1","typeString":"int_const 6008620584358979293"},"value":"0x5362e89620d126dd"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_6008620584358979293_by_1","typeString":"int_const 6008620584358979293"}],"id":6618,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"3210:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3210:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6621,"nodeType":"ExpressionStatement","src":"3210:30:25"},{"expression":{"arguments":[{"hexValue":"307864633330383163336230356438653238","id":6623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3273:18:25","typeDescriptions":{"typeIdentifier":"t_rational_15866324164703784488_by_1","typeString":"int_const 15866324164703784488"},"value":"0xdc3081c3b05d8e28"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_15866324164703784488_by_1","typeString":"int_const 15866324164703784488"}],"id":6622,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"3262:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3262:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6625,"nodeType":"ExpressionStatement","src":"3262:30:25"},{"expression":{"arguments":[{"id":6627,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6590,"src":"3330:4:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6626,"name":"__ERC20Permit_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"3311:18:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":6628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3311:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6629,"nodeType":"ExpressionStatement","src":"3311:24:25"},{"expression":{"arguments":[{"hexValue":"307835333535383564376231633764346263","id":6631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3348:18:25","typeDescriptions":{"typeIdentifier":"t_rational_6004852839615550652_by_1","typeString":"int_const 6004852839615550652"},"value":"0x535585d7b1c7d4bc"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_6004852839615550652_by_1","typeString":"int_const 6004852839615550652"}],"id":6630,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"3337:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3337:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6633,"nodeType":"ExpressionStatement","src":"3337:30:25"},{"expression":{"arguments":[{"hexValue":"307834623135376161326533623732666261","id":6635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3400:18:25","typeDescriptions":{"typeIdentifier":"t_rational_5410365367379242938_by_1","typeString":"int_const 5410365367379242938"},"value":"0x4b157aa2e3b72fba"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5410365367379242938_by_1","typeString":"int_const 5410365367379242938"}],"id":6634,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"3389:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3389:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6637,"nodeType":"ExpressionStatement","src":"3389:30:25"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6638,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"3438:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6640,"nodeType":"ExpressionStatement","src":"3438:17:25"},{"expression":{"arguments":[{"hexValue":"307830653761373134313136316265653432","id":6642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3468:18:25","typeDescriptions":{"typeIdentifier":"t_rational_1043270788047433282_by_1","typeString":"int_const 1043270788047433282"},"value":"0x0e7a7141161bee42"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1043270788047433282_by_1","typeString":"int_const 1043270788047433282"}],"id":6641,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"3457:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3457:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6644,"nodeType":"ExpressionStatement","src":"3457:30:25"},{"expression":{"arguments":[{"hexValue":"307835346165656235613264356363383134","id":6646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3520:18:25","typeDescriptions":{"typeIdentifier":"t_rational_6102073317674240020_by_1","typeString":"int_const 6102073317674240020"},"value":"0x54aeeb5a2d5cc814"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_6102073317674240020_by_1","typeString":"int_const 6102073317674240020"}],"id":6645,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"3509:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3509:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6648,"nodeType":"ExpressionStatement","src":"3509:30:25"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6649,"name":"__AccessControl_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"3558:20:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3558:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6651,"nodeType":"ExpressionStatement","src":"3558:22:25"},{"expression":{"arguments":[{"hexValue":"307863376566323631633662353265383430","id":6653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3593:18:25","typeDescriptions":{"typeIdentifier":"t_rational_14406775636483041344_by_1","typeString":"int_const 14406775636483041344"},"value":"0xc7ef261c6b52e840"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_14406775636483041344_by_1","typeString":"int_const 14406775636483041344"}],"id":6652,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"3582:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6655,"nodeType":"ExpressionStatement","src":"3582:30:25"},{"expression":{"arguments":[{"hexValue":"307865643862663864386161303966356138","id":6657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3645:18:25","typeDescriptions":{"typeIdentifier":"t_rational_17117048418201105832_by_1","typeString":"int_const 17117048418201105832"},"value":"0xed8bf8d8aa09f5a8"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_17117048418201105832_by_1","typeString":"int_const 17117048418201105832"}],"id":6656,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"3634:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3634:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6659,"nodeType":"ExpressionStatement","src":"3634:30:25"},{"expression":{"arguments":[{"id":6661,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42,"src":"3694:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6662,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"3714:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3714:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6660,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"3683:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":6664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3683:44:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6665,"nodeType":"ExpressionStatement","src":"3683:44:25"},{"expression":{"arguments":[{"hexValue":"307839666566363130333534393334633336","id":6667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:18:25","typeDescriptions":{"typeIdentifier":"t_rational_11524536638396124214_by_1","typeString":"int_const 11524536638396124214"},"value":"0x9fef610354934c36"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_11524536638396124214_by_1","typeString":"int_const 11524536638396124214"}],"id":6666,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"3729:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3729:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6669,"nodeType":"ExpressionStatement","src":"3729:30:25"},{"expression":{"arguments":[{"hexValue":"307835363432333636636164316466386239","id":6671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3792:18:25","typeDescriptions":{"typeIdentifier":"t_rational_6215590276113496249_by_1","typeString":"int_const 6215590276113496249"},"value":"0x5642366cad1df8b9"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_6215590276113496249_by_1","typeString":"int_const 6215590276113496249"}],"id":6670,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"3781:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3781:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6673,"nodeType":"ExpressionStatement","src":"3781:30:25"},{"expression":{"arguments":[{"id":6675,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"3841:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6676,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"3854:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3854:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6674,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"3830:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":6678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3830:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6679,"nodeType":"ExpressionStatement","src":"3830:37:25"},{"expression":{"arguments":[{"hexValue":"307836333164356133373462636566346463","id":6681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3880:18:25","typeDescriptions":{"typeIdentifier":"t_rational_7141963777621030108_by_1","typeString":"int_const 7141963777621030108"},"value":"0x631d5a374bcef4dc"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_7141963777621030108_by_1","typeString":"int_const 7141963777621030108"}],"id":6680,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"3869:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3869:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6683,"nodeType":"ExpressionStatement","src":"3869:30:25"},{"expression":{"arguments":[{"hexValue":"307832353038633530396533626331656136","id":6685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3932:18:25","typeDescriptions":{"typeIdentifier":"t_rational_2668599425483153062_by_1","typeString":"int_const 2668599425483153062"},"value":"0x2508c509e3bc1ea6"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2668599425483153062_by_1","typeString":"int_const 2668599425483153062"}],"id":6684,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"3921:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6687,"nodeType":"ExpressionStatement","src":"3921:30:25"},{"expression":{"arguments":[{"id":6689,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6577,"src":"3981:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6690,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"3994:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3994:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6688,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"3970:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":6692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3970:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6693,"nodeType":"ExpressionStatement","src":"3970:37:25"},{"expression":{"arguments":[{"hexValue":"307862326534303364373337346436356161","id":6695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4021:18:25","typeDescriptions":{"typeIdentifier":"t_rational_12890432256321873322_by_1","typeString":"int_const 12890432256321873322"},"value":"0xb2e403d7374d65aa"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_12890432256321873322_by_1","typeString":"int_const 12890432256321873322"}],"id":6694,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"4010:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4010:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6697,"nodeType":"ExpressionStatement","src":"4010:30:25"},{"expression":{"arguments":[{"hexValue":"307831333064303534633734663732333066","id":6699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:18:25","typeDescriptions":{"typeIdentifier":"t_rational_1372759287355876111_by_1","typeString":"int_const 1372759287355876111"},"value":"0x130d054c74f7230f"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1372759287355876111_by_1","typeString":"int_const 1372759287355876111"}],"id":6698,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"4062:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4062:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6701,"nodeType":"ExpressionStatement","src":"4062:30:25"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":6703,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"4117:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4117:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6705,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"4131:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6702,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[7016],"referencedDeclaration":7016,"src":"4111:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4111:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6707,"nodeType":"ExpressionStatement","src":"4111:31:25"}]},"documentation":{"id":6588,"nodeType":"StructuredDocumentation","src":"2612:258:25","text":" @dev Initializes name and symbol of the token contract\n Grants `DEFAULT_ADMIN_ROLE`, `PAUSER_ROLE` and `MINTER_ROLE` to the\n account that deploys the contract.\n Mints the `MAX_SUPPLY` of `MPX` Token on contract deployment."},"functionSelector":"4cd88b76","id":6709,"implemented":true,"kind":"function","modifiers":[{"id":6595,"kind":"modifierInvocation","modifierName":{"id":6594,"name":"c_modc7f3a650","nameLocations":["2969:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6567,"src":"2969:13:25"},"nodeType":"ModifierInvocation","src":"2969:13:25"},{"id":6597,"kind":"modifierInvocation","modifierName":{"id":6596,"name":"initializer","nameLocations":["2983:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":606,"src":"2983:11:25"},"nodeType":"ModifierInvocation","src":"2983:11:25"},{"id":6599,"kind":"modifierInvocation","modifierName":{"id":6598,"name":"c_mod7cdc1fe2","nameLocations":["2995:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6559,"src":"2995:13:25"},"nodeType":"ModifierInvocation","src":"2995:13:25"}],"name":"initialize","nameLocation":"2884:10:25","nodeType":"FunctionDefinition","parameters":{"id":6593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6590,"mutability":"mutable","name":"name","nameLocation":"2918:4:25","nodeType":"VariableDeclaration","scope":6709,"src":"2904:18:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6589,"name":"string","nodeType":"ElementaryTypeName","src":"2904:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6592,"mutability":"mutable","name":"symbol","nameLocation":"2946:6:25","nodeType":"VariableDeclaration","scope":6709,"src":"2932:20:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6591,"name":"string","nodeType":"ElementaryTypeName","src":"2932:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2894:64:25"},"returnParameters":{"id":6600,"nodeType":"ParameterList","parameters":[],"src":"3031:0:25"},"scope":7089,"src":"2875:1274:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6766,"nodeType":"Block","src":"4385:510:25","statements":[{"expression":{"arguments":[{"hexValue":"307836333363333464383164396332653761","id":6724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4397:18:25","typeDescriptions":{"typeIdentifier":"t_rational_7150648411171860090_by_1","typeString":"int_const 7150648411171860090"},"value":"0x633c34d81d9c2e7a"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_7150648411171860090_by_1","typeString":"int_const 7150648411171860090"}],"id":6723,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"4386:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4386:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6726,"nodeType":"ExpressionStatement","src":"4386:30:25"},{"expression":{"arguments":[{"hexValue":"307863356632643132323862633064363064","id":6728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4446:18:25","typeDescriptions":{"typeIdentifier":"t_rational_14263692916139546125_by_1","typeString":"int_const 14263692916139546125"},"value":"0xc5f2d1228bc0d60d"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_14263692916139546125_by_1","typeString":"int_const 14263692916139546125"}],"id":6727,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"4435:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4435:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6730,"nodeType":"ExpressionStatement","src":"4435:30:25"},{"expression":{"arguments":[{"hexValue":"307865663937386662366461306664383035","id":6732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4498:18:25","typeDescriptions":{"typeIdentifier":"t_rational_17264425712053377029_by_1","typeString":"int_const 17264425712053377029"},"value":"0xef978fb6da0fd805"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_17264425712053377029_by_1","typeString":"int_const 17264425712053377029"}],"id":6731,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"4487:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4487:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6734,"nodeType":"ExpressionStatement","src":"4487:30:25"},{"expression":{"arguments":[{"hexValue":"307834666461666134623063646464346433","id":6736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4548:18:25","typeDescriptions":{"typeIdentifier":"t_rational_5754186674164585683_by_1","typeString":"int_const 5754186674164585683"},"value":"0x4fdafa4b0cddd4d3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5754186674164585683_by_1","typeString":"int_const 5754186674164585683"}],"id":6735,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"4537:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4537:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6738,"nodeType":"ExpressionStatement","src":"4537:30:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6740,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"4607:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6742,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6713,"src":"4623:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4607:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6744,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"4633:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4607:36:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20746f206265206d696e7465642073686f756c64206e6f7420657863656564204d617820737570706c79","id":6746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4657:49:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614","typeString":"literal_string \"Token to be minted should not exceed Max supply\""},"value":"Token to be minted should not exceed Max supply"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614","typeString":"literal_string \"Token to be minted should not exceed Max supply\""}],"id":6739,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4586:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:130:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6748,"nodeType":"ExpressionStatement","src":"4586:130:25"},{"expression":{"arguments":[{"hexValue":"307864353363373263616434363765376261","id":6750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4728:18:25","typeDescriptions":{"typeIdentifier":"t_rational_15365282244153829306_by_1","typeString":"int_const 15365282244153829306"},"value":"0xd53c72cad467e7ba"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_15365282244153829306_by_1","typeString":"int_const 15365282244153829306"}],"id":6749,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"4717:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6752,"nodeType":"ExpressionStatement","src":"4717:30:25"},{"expression":{"arguments":[{"hexValue":"307833343465643739326536666432613134","id":6754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4781:18:25","typeDescriptions":{"typeIdentifier":"t_rational_3769186964096231956_by_1","typeString":"int_const 3769186964096231956"},"value":"0x344ed792e6fd2a14"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3769186964096231956_by_1","typeString":"int_const 3769186964096231956"}],"id":6753,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"4770:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4770:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6756,"nodeType":"ExpressionStatement","src":"4770:30:25"},{"expression":{"arguments":[{"hexValue":"307836393031393234333864633830333631","id":6758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4833:18:25","typeDescriptions":{"typeIdentifier":"t_rational_7566489667798303585_by_1","typeString":"int_const 7566489667798303585"},"value":"0x690192438dc80361"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_7566489667798303585_by_1","typeString":"int_const 7566489667798303585"}],"id":6757,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"4822:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4822:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6760,"nodeType":"ExpressionStatement","src":"4822:30:25"},{"expression":{"arguments":[{"id":6762,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"4877:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6763,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6713,"src":"4881:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6761,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[7016],"referencedDeclaration":7016,"src":"4871:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4871:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6765,"nodeType":"ExpressionStatement","src":"4871:17:25"}]},"functionSelector":"40c10f19","id":6767,"implemented":true,"kind":"function","modifiers":[{"id":6716,"kind":"modifierInvocation","modifierName":{"id":6715,"name":"c_modd085a7e0","nameLocations":["4329:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6551,"src":"4329:13:25"},"nodeType":"ModifierInvocation","src":"4329:13:25"},{"arguments":[{"id":6718,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6577,"src":"4352:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6719,"kind":"modifierInvocation","modifierName":{"id":6717,"name":"onlyRole","nameLocations":["4343:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":53,"src":"4343:8:25"},"nodeType":"ModifierInvocation","src":"4343:21:25"},{"id":6721,"kind":"modifierInvocation","modifierName":{"id":6720,"name":"c_modcb635b8c","nameLocations":["4365:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6543,"src":"4365:13:25"},"nodeType":"ModifierInvocation","src":"4365:13:25"}],"name":"mint","nameLocation":"4245:4:25","nodeType":"FunctionDefinition","parameters":{"id":6714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6711,"mutability":"mutable","name":"to","nameLocation":"4267:2:25","nodeType":"VariableDeclaration","scope":6767,"src":"4259:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6710,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6713,"mutability":"mutable","name":"amount","nameLocation":"4288:6:25","nodeType":"VariableDeclaration","scope":6767,"src":"4280:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6712,"name":"uint256","nodeType":"ElementaryTypeName","src":"4280:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4249:51:25"},"returnParameters":{"id":6722,"nodeType":"ParameterList","parameters":[],"src":"4385:0:25"},"scope":7089,"src":"4236:659:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6790,"nodeType":"Block","src":"4966:185:25","statements":[{"expression":{"arguments":[{"hexValue":"307837376533373030633133356536633465","id":6773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4978:18:25","typeDescriptions":{"typeIdentifier":"t_rational_8638871707393616974_by_1","typeString":"int_const 8638871707393616974"},"value":"0x77e3700c135e6c4e"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8638871707393616974_by_1","typeString":"int_const 8638871707393616974"}],"id":6772,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"4967:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4967:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6775,"nodeType":"ExpressionStatement","src":"4967:30:25"},{"expression":{"arguments":[{"hexValue":"307864616264313163636133643235343464","id":6777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5027:18:25","typeDescriptions":{"typeIdentifier":"t_rational_15761773841486074957_by_1","typeString":"int_const 15761773841486074957"},"value":"0xdabd11cca3d2544d"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_15761773841486074957_by_1","typeString":"int_const 15761773841486074957"}],"id":6776,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"5016:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5016:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6779,"nodeType":"ExpressionStatement","src":"5016:30:25"},{"expression":{"arguments":[{"hexValue":"307863376638616230613563303636356434","id":6781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5079:18:25","typeDescriptions":{"typeIdentifier":"t_rational_14409455068753847764_by_1","typeString":"int_const 14409455068753847764"},"value":"0xc7f8ab0a5c0665d4"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_14409455068753847764_by_1","typeString":"int_const 14409455068753847764"}],"id":6780,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"5068:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5068:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6783,"nodeType":"ExpressionStatement","src":"5068:30:25"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":6785,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"5123:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5123:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6787,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"5137:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6784,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[6985],"referencedDeclaration":6985,"src":"5117:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5117:27:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6789,"nodeType":"ExpressionStatement","src":"5117:27:25"}]},"functionSelector":"42966c68","id":6791,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"4914:4:25","nodeType":"FunctionDefinition","parameters":{"id":6770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6769,"mutability":"mutable","name":"amount","nameLocation":"4936:6:25","nodeType":"VariableDeclaration","scope":6791,"src":"4928:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6768,"name":"uint256","nodeType":"ElementaryTypeName","src":"4928:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4918:30:25"},"returnParameters":{"id":6771,"nodeType":"ParameterList","parameters":[],"src":"4966:0:25"},"scope":7089,"src":"4905:246:25","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"body":{"id":6877,"nodeType":"Block","src":"5516:860:25","statements":[{"expression":{"arguments":[{"hexValue":"307836303734343266393035343532646161","id":6800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5528:18:25","typeDescriptions":{"typeIdentifier":"t_rational_6950253762242227626_by_1","typeString":"int_const 6950253762242227626"},"value":"0x607442f905452daa"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_6950253762242227626_by_1","typeString":"int_const 6950253762242227626"}],"id":6799,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"5517:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6802,"nodeType":"ExpressionStatement","src":"5517:30:25"},{"expression":{"arguments":[{"hexValue":"307831333935663638353433616132376634","id":6804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5577:18:25","typeDescriptions":{"typeIdentifier":"t_rational_1411305110476826612_by_1","typeString":"int_const 1411305110476826612"},"value":"0x1395f68543aa27f4"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1411305110476826612_by_1","typeString":"int_const 1411305110476826612"}],"id":6803,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"5566:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5566:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6806,"nodeType":"ExpressionStatement","src":"5566:30:25"},{"expression":{"arguments":[{"hexValue":"307830383237303437643662313336383165","id":6808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5629:18:25","typeDescriptions":{"typeIdentifier":"t_rational_587443213108996126_by_1","typeString":"int_const 587443213108996126"},"value":"0x0827047d6b13681e"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_587443213108996126_by_1","typeString":"int_const 587443213108996126"}],"id":6807,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"5618:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5618:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6810,"nodeType":"ExpressionStatement","src":"5618:30:25"},{"assignments":[6812],"declarations":[{"constant":false,"id":6812,"mutability":"mutable","name":"currentAllowance","nameLocation":"5675:16:25","nodeType":"VariableDeclaration","scope":6877,"src":"5667:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6811,"name":"uint256","nodeType":"ElementaryTypeName","src":"5667:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6818,"initialValue":{"arguments":[{"id":6814,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"5704:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6815,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"5713:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5713:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6813,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"5694:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":6817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5694:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5667:59:25"},{"expression":{"arguments":[{"hexValue":"307834346633343739656331373965663035","id":6820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5739:18:25","typeDescriptions":{"typeIdentifier":"t_rational_4968393561096187653_by_1","typeString":"int_const 4968393561096187653"},"value":"0x44f3479ec179ef05"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_4968393561096187653_by_1","typeString":"int_const 4968393561096187653"}],"id":6819,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"5728:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5728:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6822,"nodeType":"ExpressionStatement","src":"5728:30:25"},{"expression":{"arguments":[{"hexValue":"307862633438316564333763333133386230","id":6824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5791:18:25","typeDescriptions":{"typeIdentifier":"t_rational_13567127771124152496_by_1","typeString":"int_const 13567127771124152496"},"value":"0xbc481ed37c3138b0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_13567127771124152496_by_1","typeString":"int_const 13567127771124152496"}],"id":6823,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"5780:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6826,"nodeType":"ExpressionStatement","src":"5780:30:25"},{"expression":{"arguments":[{"hexValue":"307834383666633634393462366339373838","id":6828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5841:18:25","typeDescriptions":{"typeIdentifier":"t_rational_5219608511246014344_by_1","typeString":"int_const 5219608511246014344"},"value":"0x486fc6494b6c9788"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5219608511246014344_by_1","typeString":"int_const 5219608511246014344"}],"id":6827,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"5830:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5830:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6830,"nodeType":"ExpressionStatement","src":"5830:30:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6832,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"5887:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6833,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6796,"src":"5907:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5887:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365","id":6835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5915:38:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db","typeString":"literal_string \"ERC20: burn amount exceeds allowance\""},"value":"ERC20: burn amount exceeds allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db","typeString":"literal_string \"ERC20: burn amount exceeds allowance\""}],"id":6831,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5879:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5879:75:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6837,"nodeType":"ExpressionStatement","src":"5879:75:25"},{"expression":{"arguments":[{"hexValue":"307838653664653931343462643464646637","id":6839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5966:18:25","typeDescriptions":{"typeIdentifier":"t_rational_10263115399228087799_by_1","typeString":"int_const 10263115399228087799"},"value":"0x8e6de9144bd4ddf7"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10263115399228087799_by_1","typeString":"int_const 10263115399228087799"}],"id":6838,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"5955:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5955:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6841,"nodeType":"ExpressionStatement","src":"5955:30:25"},{"expression":{"arguments":[{"hexValue":"307836653637633236303935343333396130","id":6843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6018:18:25","typeDescriptions":{"typeIdentifier":"t_rational_7955540986850130336_by_1","typeString":"int_const 7955540986850130336"},"value":"0x6e67c260954339a0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_7955540986850130336_by_1","typeString":"int_const 7955540986850130336"}],"id":6842,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"6007:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6007:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6845,"nodeType":"ExpressionStatement","src":"6007:30:25"},{"id":6863,"nodeType":"UncheckedBlock","src":"6059:186:25","statements":[{"expression":{"arguments":[{"hexValue":"307832653763353131313666626665303666","id":6847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6082:18:25","typeDescriptions":{"typeIdentifier":"t_rational_3349641358187946095_by_1","typeString":"int_const 3349641358187946095"},"value":"0x2e7c51116fbfe06f"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3349641358187946095_by_1","typeString":"int_const 3349641358187946095"}],"id":6846,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"6071:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6071:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6849,"nodeType":"ExpressionStatement","src":"6071:30:25"},{"expression":{"arguments":[{"hexValue":"307832666137343430303566313733663633","id":6851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6138:18:25","typeDescriptions":{"typeIdentifier":"t_rational_3433788009279340387_by_1","typeString":"int_const 3433788009279340387"},"value":"0x2fa744005f173f63"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3433788009279340387_by_1","typeString":"int_const 3433788009279340387"}],"id":6850,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"6127:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6127:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6853,"nodeType":"ExpressionStatement","src":"6127:30:25"},{"expression":{"arguments":[{"id":6855,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"6185:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6856,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"6194:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6194:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6858,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"6208:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6859,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6796,"src":"6227:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6208:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6854,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"6176:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6176:58:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6862,"nodeType":"ExpressionStatement","src":"6176:58:25"}]},{"expression":{"arguments":[{"hexValue":"307831616636656135336565313863333366","id":6865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6257:18:25","typeDescriptions":{"typeIdentifier":"t_rational_1942997935454733119_by_1","typeString":"int_const 1942997935454733119"},"value":"0x1af6ea53ee18c33f"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1942997935454733119_by_1","typeString":"int_const 1942997935454733119"}],"id":6864,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"6246:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6246:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6867,"nodeType":"ExpressionStatement","src":"6246:30:25"},{"expression":{"arguments":[{"hexValue":"307837393036336636316464303734363534","id":6869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6309:18:25","typeDescriptions":{"typeIdentifier":"t_rational_8720727418002163284_by_1","typeString":"int_const 8720727418002163284"},"value":"0x79063f61dd074654"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8720727418002163284_by_1","typeString":"int_const 8720727418002163284"}],"id":6868,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"6298:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6871,"nodeType":"ExpressionStatement","src":"6298:30:25"},{"expression":{"arguments":[{"id":6873,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"6353:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6874,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6796,"src":"6362:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6872,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[6985],"referencedDeclaration":6985,"src":"6347:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6876,"nodeType":"ExpressionStatement","src":"6347:22:25"}]},"documentation":{"id":6792,"nodeType":"StructuredDocumentation","src":"5157:294:25","text":" @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."},"functionSelector":"79cc6790","id":6878,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"5465:8:25","nodeType":"FunctionDefinition","parameters":{"id":6797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6794,"mutability":"mutable","name":"account","nameLocation":"5482:7:25","nodeType":"VariableDeclaration","scope":6878,"src":"5474:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6793,"name":"address","nodeType":"ElementaryTypeName","src":"5474:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6796,"mutability":"mutable","name":"amount","nameLocation":"5499:6:25","nodeType":"VariableDeclaration","scope":6878,"src":"5491:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6795,"name":"uint256","nodeType":"ElementaryTypeName","src":"5491:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5473:33:25"},"returnParameters":{"id":6798,"nodeType":"ParameterList","parameters":[],"src":"5516:0:25"},"scope":7089,"src":"5456:920:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6904,"nodeType":"Block","src":"6687:166:25","statements":[{"expression":{"arguments":[{"hexValue":"307835663731396361666433656436633933","id":6890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6699:18:25","typeDescriptions":{"typeIdentifier":"t_rational_6877450384960220307_by_1","typeString":"int_const 6877450384960220307"},"value":"0x5f719cafd3ed6c93"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_6877450384960220307_by_1","typeString":"int_const 6877450384960220307"}],"id":6889,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"6688:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6688:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6892,"nodeType":"ExpressionStatement","src":"6688:30:25"},{"expression":{"arguments":[{"hexValue":"307833636261636136313538376361613066","id":6894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6748:18:25","typeDescriptions":{"typeIdentifier":"t_rational_4376032507389061647_by_1","typeString":"int_const 4376032507389061647"},"value":"0x3cbaca61587caa0f"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_4376032507389061647_by_1","typeString":"int_const 4376032507389061647"}],"id":6893,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"6737:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6737:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6896,"nodeType":"ExpressionStatement","src":"6737:30:25"},{"expression":{"arguments":[{"hexValue":"307830666530656134656439316532643263","id":6898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6800:18:25","typeDescriptions":{"typeIdentifier":"t_rational_1144171929723088172_by_1","typeString":"int_const 1144171929723088172"},"value":"0x0fe0ea4ed91e2d2c"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1144171929723088172_by_1","typeString":"int_const 1144171929723088172"}],"id":6897,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"6789:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6789:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6900,"nodeType":"ExpressionStatement","src":"6789:30:25"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6901,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"6838:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6838:8:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6903,"nodeType":"ExpressionStatement","src":"6838:8:25"}]},"documentation":{"id":6879,"nodeType":"StructuredDocumentation","src":"6382:222:25","text":" @dev Pauses all token transfers.\n See {Pausable-_pause}.\n Requirements:\n - The caller must have the `PAUSER_ROLE`.\n - The contract must not be in paused state "},"functionSelector":"8456cb59","id":6905,"implemented":true,"kind":"function","modifiers":[{"id":6882,"kind":"modifierInvocation","modifierName":{"id":6881,"name":"c_mod591f10d0","nameLocations":["6636:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6535,"src":"6636:13:25"},"nodeType":"ModifierInvocation","src":"6636:13:25"},{"arguments":[{"id":6884,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"6659:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6885,"kind":"modifierInvocation","modifierName":{"id":6883,"name":"onlyRole","nameLocations":["6650:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":53,"src":"6650:8:25"},"nodeType":"ModifierInvocation","src":"6650:21:25"},{"id":6887,"kind":"modifierInvocation","modifierName":{"id":6886,"name":"c_modfbf231e7","nameLocations":["6672:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6527,"src":"6672:13:25"},"nodeType":"ModifierInvocation","src":"6672:13:25"}],"name":"pause","nameLocation":"6618:5:25","nodeType":"FunctionDefinition","parameters":{"id":6880,"nodeType":"ParameterList","parameters":[],"src":"6623:2:25"},"returnParameters":{"id":6888,"nodeType":"ParameterList","parameters":[],"src":"6687:0:25"},"scope":7089,"src":"6609:244:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6931,"nodeType":"Block","src":"7166:168:25","statements":[{"expression":{"arguments":[{"hexValue":"307863353966653736383231646439323761","id":6917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7178:18:25","typeDescriptions":{"typeIdentifier":"t_rational_14240354981199581818_by_1","typeString":"int_const 14240354981199581818"},"value":"0xc59fe76821dd927a"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_14240354981199581818_by_1","typeString":"int_const 14240354981199581818"}],"id":6916,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"7167:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7167:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6919,"nodeType":"ExpressionStatement","src":"7167:30:25"},{"expression":{"arguments":[{"hexValue":"307862633164656536666166616339336462","id":6921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7227:18:25","typeDescriptions":{"typeIdentifier":"t_rational_13555252616911164379_by_1","typeString":"int_const 13555252616911164379"},"value":"0xbc1dee6fafac93db"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_13555252616911164379_by_1","typeString":"int_const 13555252616911164379"}],"id":6920,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"7216:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7216:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6923,"nodeType":"ExpressionStatement","src":"7216:30:25"},{"expression":{"arguments":[{"hexValue":"307831353938393335333463386465376530","id":6925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7279:18:25","typeDescriptions":{"typeIdentifier":"t_rational_1556155657232443360_by_1","typeString":"int_const 1556155657232443360"},"value":"0x159893534c8de7e0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1556155657232443360_by_1","typeString":"int_const 1556155657232443360"}],"id":6924,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"7268:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7268:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6927,"nodeType":"ExpressionStatement","src":"7268:30:25"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6928,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"7317:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7317:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6930,"nodeType":"ExpressionStatement","src":"7317:10:25"}]},"documentation":{"id":6906,"nodeType":"StructuredDocumentation","src":"6859:222:25","text":" @dev Unpauses all token transfers.\n See {Pausable-_unpause}.\n Requirements:\n - The caller must have the `PAUSER_ROLE`.\n - The contract must be in paused state "},"functionSelector":"3f4ba83a","id":6932,"implemented":true,"kind":"function","modifiers":[{"id":6909,"kind":"modifierInvocation","modifierName":{"id":6908,"name":"c_mod4f8c6f6e","nameLocations":["7115:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6519,"src":"7115:13:25"},"nodeType":"ModifierInvocation","src":"7115:13:25"},{"arguments":[{"id":6911,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"7138:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6912,"kind":"modifierInvocation","modifierName":{"id":6910,"name":"onlyRole","nameLocations":["7129:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":53,"src":"7129:8:25"},"nodeType":"ModifierInvocation","src":"7129:21:25"},{"id":6914,"kind":"modifierInvocation","modifierName":{"id":6913,"name":"c_mod131d9412","nameLocations":["7151:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6511,"src":"7151:13:25"},"nodeType":"ModifierInvocation","src":"7151:13:25"}],"name":"unpause","nameLocation":"7095:7:25","nodeType":"FunctionDefinition","parameters":{"id":6907,"nodeType":"ParameterList","parameters":[],"src":"7102:2:25"},"returnParameters":{"id":6915,"nodeType":"ParameterList","parameters":[],"src":"7166:0:25"},"scope":7089,"src":"7086:248:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[926],"body":{"id":6953,"nodeType":"Block","src":"7600:166:25","statements":[{"expression":{"arguments":[{"hexValue":"307836636566666230306635623866343234","id":6940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7612:18:25","typeDescriptions":{"typeIdentifier":"t_rational_7849768657071174692_by_1","typeString":"int_const 7849768657071174692"},"value":"0x6ceffb00f5b8f424"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_7849768657071174692_by_1","typeString":"int_const 7849768657071174692"}],"id":6939,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"7601:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7601:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6942,"nodeType":"ExpressionStatement","src":"7601:30:25"},{"expression":{"arguments":[{"hexValue":"307836663138316134633135366232386466","id":6944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7661:18:25","typeDescriptions":{"typeIdentifier":"t_rational_8005177251730237663_by_1","typeString":"int_const 8005177251730237663"},"value":"0x6f181a4c156b28df"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8005177251730237663_by_1","typeString":"int_const 8005177251730237663"}],"id":6943,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"7650:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7650:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6946,"nodeType":"ExpressionStatement","src":"7650:30:25"},{"expression":{"arguments":[{"hexValue":"307832666434623330363733386365323939","id":6948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:18:25","typeDescriptions":{"typeIdentifier":"t_rational_3446576455135060633_by_1","typeString":"int_const 3446576455135060633"},"value":"0x2fd4b306738ce299"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3446576455135060633_by_1","typeString":"int_const 3446576455135060633"}],"id":6947,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"7702:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7702:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6950,"nodeType":"ExpressionStatement","src":"7702:30:25"},{"expression":{"hexValue":"36","id":6951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7758:1:25","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"functionReturnParameters":6938,"id":6952,"nodeType":"Return","src":"7751:8:25"}]},"documentation":{"id":6933,"nodeType":"StructuredDocumentation","src":"7418:120:25","text":" @dev Returns the number of decimals `6` used to get its user representation.\n See {ERC20-decimals}"},"functionSelector":"313ce567","id":6954,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"7552:8:25","nodeType":"FunctionDefinition","overrides":{"id":6935,"nodeType":"OverrideSpecifier","overrides":[],"src":"7575:8:25"},"parameters":{"id":6934,"nodeType":"ParameterList","parameters":[],"src":"7560:2:25"},"returnParameters":{"id":6938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6954,"src":"7593:5:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6936,"name":"uint8","nodeType":"ElementaryTypeName","src":"7593:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"7592:7:25"},"scope":7089,"src":"7543:223:25","stateMutability":"pure","virtual":false,"visibility":"public"},{"baseFunctions":[1327,2176],"body":{"id":6984,"nodeType":"Block","src":"8082:186:25","statements":[{"expression":{"arguments":[{"hexValue":"307835663061636638306565313430383865","id":6966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:18:25","typeDescriptions":{"typeIdentifier":"t_rational_6848514336027314318_by_1","typeString":"int_const 6848514336027314318"},"value":"0x5f0acf80ee14088e"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_6848514336027314318_by_1","typeString":"int_const 6848514336027314318"}],"id":6965,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"8083:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8083:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6968,"nodeType":"ExpressionStatement","src":"8083:30:25"},{"expression":{"arguments":[{"hexValue":"307836353763316364643764643365656630","id":6970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8143:18:25","typeDescriptions":{"typeIdentifier":"t_rational_7312751632567234288_by_1","typeString":"int_const 7312751632567234288"},"value":"0x657c1cdd7dd3eef0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_7312751632567234288_by_1","typeString":"int_const 7312751632567234288"}],"id":6969,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"8132:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6972,"nodeType":"ExpressionStatement","src":"8132:30:25"},{"expression":{"arguments":[{"hexValue":"307861326165363162636630333261613431","id":6974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8195:18:25","typeDescriptions":{"typeIdentifier":"t_rational_11722414344203577921_by_1","typeString":"int_const 11722414344203577921"},"value":"0xa2ae61bcf032aa41"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_11722414344203577921_by_1","typeString":"int_const 11722414344203577921"}],"id":6973,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"8184:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8184:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6976,"nodeType":"ExpressionStatement","src":"8184:30:25"},{"expression":{"arguments":[{"id":6980,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6957,"src":"8245:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6981,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"8254:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6977,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"8233:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MindplexUpgradeableToken_$7089_$","typeString":"type(contract super MindplexUpgradeableToken)"}},"id":6979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8239:5:25","memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":2176,"src":"8233:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8233:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6983,"nodeType":"ExpressionStatement","src":"8233:28:25"}]},"documentation":{"id":6955,"nodeType":"StructuredDocumentation","src":"7853:97:25","text":" @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."},"id":6985,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7964:5:25","nodeType":"FunctionDefinition","overrides":{"id":6963,"nodeType":"OverrideSpecifier","overrides":[{"id":6961,"name":"ERC20Upgradeable","nameLocations":["8037:16:25"],"nodeType":"IdentifierPath","referencedDeclaration":1443,"src":"8037:16:25"},{"id":6962,"name":"ERC20VotesUpgradeable","nameLocations":["8055:21:25"],"nodeType":"IdentifierPath","referencedDeclaration":2466,"src":"8055:21:25"}],"src":"8028:49:25"},"parameters":{"id":6960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6957,"mutability":"mutable","name":"account","nameLocation":"7978:7:25","nodeType":"VariableDeclaration","scope":6985,"src":"7970:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6956,"name":"address","nodeType":"ElementaryTypeName","src":"7970:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6959,"mutability":"mutable","name":"amount","nameLocation":"7995:6:25","nodeType":"VariableDeclaration","scope":6985,"src":"7987:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6958,"name":"uint256","nodeType":"ElementaryTypeName","src":"7987:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7969:33:25"},"returnParameters":{"id":6964,"nodeType":"ParameterList","parameters":[],"src":"8082:0:25"},"scope":7089,"src":"7955:313:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1255,2153],"body":{"id":7015,"nodeType":"Block","src":"8692:181:25","statements":[{"expression":{"arguments":[{"hexValue":"307831353036303536383235343832336130","id":6997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8704:18:25","typeDescriptions":{"typeIdentifier":"t_rational_1514904269516972960_by_1","typeString":"int_const 1514904269516972960"},"value":"0x15060568254823a0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1514904269516972960_by_1","typeString":"int_const 1514904269516972960"}],"id":6996,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"8693:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8693:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6999,"nodeType":"ExpressionStatement","src":"8693:30:25"},{"expression":{"arguments":[{"hexValue":"307838633663333539626261313033656465","id":7001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8753:18:25","typeDescriptions":{"typeIdentifier":"t_rational_10118521405752491742_by_1","typeString":"int_const 10118521405752491742"},"value":"0x8c6c359bba103ede"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10118521405752491742_by_1","typeString":"int_const 10118521405752491742"}],"id":7000,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"8742:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":7002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8742:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7003,"nodeType":"ExpressionStatement","src":"8742:30:25"},{"expression":{"arguments":[{"hexValue":"307834316562336263656530383037383561","id":7005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8805:18:25","typeDescriptions":{"typeIdentifier":"t_rational_4749955991708137562_by_1","typeString":"int_const 4749955991708137562"},"value":"0x41eb3bcee080785a"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_4749955991708137562_by_1","typeString":"int_const 4749955991708137562"}],"id":7004,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"8794:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":7006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8794:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7007,"nodeType":"ExpressionStatement","src":"8794:30:25"},{"expression":{"arguments":[{"id":7011,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"8855:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7012,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6990,"src":"8859:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7008,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"8843:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MindplexUpgradeableToken_$7089_$","typeString":"type(contract super MindplexUpgradeableToken)"}},"id":7010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8849:5:25","memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":2153,"src":"8843:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7014,"nodeType":"ExpressionStatement","src":"8843:23:25"}]},"documentation":{"id":6986,"nodeType":"StructuredDocumentation","src":"8274:256:25","text":" @dev Creates `amount` of new tokens and assigns them to an address `to`.\n See {ERC20-_mint}.\n Requirements:\n - The caller must have the `MINTER_ROLE`.\n - The total supply should not exceed MAX_SUPPLY "},"id":7016,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8544:5:25","nodeType":"FunctionDefinition","overrides":{"id":6994,"nodeType":"OverrideSpecifier","overrides":[{"id":6992,"name":"ERC20Upgradeable","nameLocations":["8625:16:25"],"nodeType":"IdentifierPath","referencedDeclaration":1443,"src":"8625:16:25"},{"id":6993,"name":"ERC20VotesUpgradeable","nameLocations":["8656:21:25"],"nodeType":"IdentifierPath","referencedDeclaration":2466,"src":"8656:21:25"}],"src":"8603:84:25"},"parameters":{"id":6991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6988,"mutability":"mutable","name":"to","nameLocation":"8558:2:25","nodeType":"VariableDeclaration","scope":7016,"src":"8550:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6987,"name":"address","nodeType":"ElementaryTypeName","src":"8550:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6990,"mutability":"mutable","name":"amount","nameLocation":"8570:6:25","nodeType":"VariableDeclaration","scope":7016,"src":"8562:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6989,"name":"uint256","nodeType":"ElementaryTypeName","src":"8562:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8549:28:25"},"returnParameters":{"id":6995,"nodeType":"ParameterList","parameters":[],"src":"8692:0:25"},"scope":7089,"src":"8535:338:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1426],"body":{"id":7053,"nodeType":"Block","src":"9186:202:25","statements":[{"expression":{"arguments":[{"hexValue":"307839333861393064393432363439363864","id":7034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9198:18:25","typeDescriptions":{"typeIdentifier":"t_rational_10631469133157668493_by_1","typeString":"int_const 10631469133157668493"},"value":"0x938a90d94264968d"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10631469133157668493_by_1","typeString":"int_const 10631469133157668493"}],"id":7033,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"9187:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":7035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9187:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7036,"nodeType":"ExpressionStatement","src":"9187:30:25"},{"expression":{"arguments":[{"hexValue":"307864346231396532626433646463336561","id":7038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9247:18:25","typeDescriptions":{"typeIdentifier":"t_rational_15326204917993817066_by_1","typeString":"int_const 15326204917993817066"},"value":"0xd4b19e2bd3ddc3ea"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_15326204917993817066_by_1","typeString":"int_const 15326204917993817066"}],"id":7037,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"9236:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":7039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9236:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7040,"nodeType":"ExpressionStatement","src":"9236:30:25"},{"expression":{"arguments":[{"hexValue":"307833346537343132333961396637363063","id":7042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9299:18:25","typeDescriptions":{"typeIdentifier":"t_rational_3812087230766216716_by_1","typeString":"int_const 3812087230766216716"},"value":"0x34e741239a9f760c"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3812087230766216716_by_1","typeString":"int_const 3812087230766216716"}],"id":7041,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"9288:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":7043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9288:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7044,"nodeType":"ExpressionStatement","src":"9288:30:25"},{"expression":{"arguments":[{"id":7048,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"9364:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7049,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"9370:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7050,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"9374:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7045,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"9337:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MindplexUpgradeableToken_$7089_$","typeString":"type(contract super MindplexUpgradeableToken)"}},"id":7047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9343:20:25","memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1426,"src":"9337:26:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9337:44:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7052,"nodeType":"ExpressionStatement","src":"9337:44:25"}]},"documentation":{"id":7017,"nodeType":"StructuredDocumentation","src":"8879:108:25","text":"@dev Hook to be called after before token transfer\n See {ERC20-_beforeTokenTransfer}."},"id":7054,"implemented":true,"kind":"function","modifiers":[{"id":7026,"kind":"modifierInvocation","modifierName":{"id":7025,"name":"c_modfb804101","nameLocations":["9122:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6503,"src":"9122:13:25"},"nodeType":"ModifierInvocation","src":"9122:13:25"},{"id":7028,"kind":"modifierInvocation","modifierName":{"id":7027,"name":"whenNotPaused","nameLocations":["9136:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":753,"src":"9136:13:25"},"nodeType":"ModifierInvocation","src":"9136:13:25"},{"id":7030,"kind":"modifierInvocation","modifierName":{"id":7029,"name":"c_mod939d7b80","nameLocations":["9150:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":6495,"src":"9150:13:25"},"nodeType":"ModifierInvocation","src":"9150:13:25"}],"name":"_beforeTokenTransfer","nameLocation":"9001:20:25","nodeType":"FunctionDefinition","overrides":{"id":7031,"nodeType":"OverrideSpecifier","overrides":[],"src":"9173:8:25"},"parameters":{"id":7024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7019,"mutability":"mutable","name":"from","nameLocation":"9039:4:25","nodeType":"VariableDeclaration","scope":7054,"src":"9031:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7018,"name":"address","nodeType":"ElementaryTypeName","src":"9031:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7021,"mutability":"mutable","name":"to","nameLocation":"9062:2:25","nodeType":"VariableDeclaration","scope":7054,"src":"9054:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7020,"name":"address","nodeType":"ElementaryTypeName","src":"9054:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7023,"mutability":"mutable","name":"amount","nameLocation":"9083:6:25","nodeType":"VariableDeclaration","scope":7054,"src":"9075:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7022,"name":"uint256","nodeType":"ElementaryTypeName","src":"9075:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9021:74:25"},"returnParameters":{"id":7032,"nodeType":"ParameterList","parameters":[],"src":"9186:0:25"},"scope":7089,"src":"8992:396:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1437,2206],"body":{"id":7087,"nodeType":"Block","src":"9741:201:25","statements":[{"expression":{"arguments":[{"hexValue":"307862626565653936646534623535636637","id":7068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9753:18:25","typeDescriptions":{"typeIdentifier":"t_rational_13542017787747458295_by_1","typeString":"int_const 13542017787747458295"},"value":"0xbbeee96de4b55cf7"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_13542017787747458295_by_1","typeString":"int_const 13542017787747458295"}],"id":7067,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"9742:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":7069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9742:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7070,"nodeType":"ExpressionStatement","src":"9742:30:25"},{"expression":{"arguments":[{"hexValue":"307839376538383963663038643564313964","id":7072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9802:18:25","typeDescriptions":{"typeIdentifier":"t_rational_10946150416623456669_by_1","typeString":"int_const 10946150416623456669"},"value":"0x97e889cf08d5d19d"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10946150416623456669_by_1","typeString":"int_const 10946150416623456669"}],"id":7071,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"9791:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":7073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9791:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7074,"nodeType":"ExpressionStatement","src":"9791:30:25"},{"expression":{"arguments":[{"hexValue":"307838316635336637396235373331326433","id":7076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9854:18:25","typeDescriptions":{"typeIdentifier":"t_rational_9364460792154624723_by_1","typeString":"int_const 9364460792154624723"},"value":"0x81f53f79b57312d3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_9364460792154624723_by_1","typeString":"int_const 9364460792154624723"}],"id":7075,"name":"c_e1ac8b9c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"9843:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9843:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7078,"nodeType":"ExpressionStatement","src":"9843:30:25"},{"expression":{"arguments":[{"id":7082,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"9918:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7083,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"9924:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7084,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"9928:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7079,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"9892:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MindplexUpgradeableToken_$7089_$","typeString":"type(contract super MindplexUpgradeableToken)"}},"id":7081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9898:19:25","memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":2206,"src":"9892:25:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9892:43:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7086,"nodeType":"ExpressionStatement","src":"9892:43:25"}]},"documentation":{"id":7055,"nodeType":"StructuredDocumentation","src":"9394:107:25","text":" @dev Hook to be called after every token transfer\n See {ERC20-_afterTokenTransfer}."},"id":7088,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"9515:19:25","nodeType":"FunctionDefinition","overrides":{"id":7065,"nodeType":"OverrideSpecifier","overrides":[{"id":7063,"name":"ERC20Upgradeable","nameLocations":["9673:16:25"],"nodeType":"IdentifierPath","referencedDeclaration":1443,"src":"9673:16:25"},{"id":7064,"name":"ERC20VotesUpgradeable","nameLocations":["9705:21:25"],"nodeType":"IdentifierPath","referencedDeclaration":2466,"src":"9705:21:25"}],"src":"9651:85:25"},"parameters":{"id":7062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7057,"mutability":"mutable","name":"from","nameLocation":"9552:4:25","nodeType":"VariableDeclaration","scope":7088,"src":"9544:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7056,"name":"address","nodeType":"ElementaryTypeName","src":"9544:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7059,"mutability":"mutable","name":"to","nameLocation":"9574:2:25","nodeType":"VariableDeclaration","scope":7088,"src":"9566:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7058,"name":"address","nodeType":"ElementaryTypeName","src":"9566:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7061,"mutability":"mutable","name":"amount","nameLocation":"9594:6:25","nodeType":"VariableDeclaration","scope":7088,"src":"9586:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7060,"name":"uint256","nodeType":"ElementaryTypeName","src":"9586:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9534:72:25"},"returnParameters":{"id":7066,"nodeType":"ParameterList","parameters":[],"src":"9741:0:25"},"scope":7089,"src":"9506:436:25","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":7090,"src":"948:8997:25","usedErrors":[],"usedEvents":[347,356,365,420,429,491,550,718,723,1455,1464]}],"src":"32:9915:25"},"id":25}},"contracts":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"AccessControlUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709\",\"dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":542,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":545,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2898,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":3895,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":39,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"_roles","offset":0,"slot":"101","type":"t_mapping(t_bytes32,t_struct(RoleData)34_storage)"},{"astId":334,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)34_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)34_storage"},"t_struct(RoleData)34_storage":{"encoding":"inplace","label":"struct AccessControlUpgradeable.RoleData","members":[{"astId":31,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":33,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol":{"IAccessControlUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":\"IAccessControlUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol":{"IVotesUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts. _Available since v4.5._\",\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol\":\"IVotesUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol\":{\"keccak256\":\"0x2d600bbef9320309cd2a86c1d087eb9d6dbcc00430713ee54bbc5c5a2a11ba31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52a5380b861d676adef15f33f8f643e236a1acb2d9456beb4065307eaa22bc2a\",\"dweb:/ipfs/QmdwSfxrafQubVvCoQCU5T7bbPR8JDWU1WotSDXSiUdm33\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol":{"IERC5267Upgradeable":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol\":\"IERC5267Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol\":{\"keccak256\":\"0xe562dab443278837fa50faddb76743399e942181881db8dccaea3bd1712994db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79ebe0e661396045cefe94f4256398cf632756d779a6871319db374c9eb128c9\",\"dweb:/ipfs/QmfCTCivb9fFhyCX8hzushzcKunvKL2N9RDsnRNdvbd11M\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/interfaces/IERC5805Upgradeable.sol":{"IERC5805Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC5805Upgradeable.sol\":\"IERC5805Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol\":{\"keccak256\":\"0x2d600bbef9320309cd2a86c1d087eb9d6dbcc00430713ee54bbc5c5a2a11ba31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52a5380b861d676adef15f33f8f643e236a1acb2d9456beb4065307eaa22bc2a\",\"dweb:/ipfs/QmdwSfxrafQubVvCoQCU5T7bbPR8JDWU1WotSDXSiUdm33\"]},\"@openzeppelin/contracts-upgradeable/interfaces/IERC5805Upgradeable.sol\":{\"keccak256\":\"0x19848eec9045c8b91f1ab6b1853966443e3e36bcbc307593ed37a9f0df179d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a07972c1330ee99a5d051b393260e01412ac4c14c7bc4d75d80b7cce291a6412\",\"dweb:/ipfs/QmQx1ZiAo4AbSobN41c1xUEtyX1QejydWCmY7Sj3H5aDNv\"]},\"@openzeppelin/contracts-upgradeable/interfaces/IERC6372Upgradeable.sol\":{\"keccak256\":\"0x3026befd6d69d1b46960bdc35a2ad37c0e1352f26983ee3728dd61fd32aa308a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2001b7209fd4920ec7674f194db7fe163dfea7a7af2dd25fe6c0e5a94dc595c\",\"dweb:/ipfs/QmXX2zTFyiNWoDxivV3trKcKWifAENMqNAB34NgjWq5feX\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/interfaces/IERC6372Upgradeable.sol":{"IERC6372Upgradeable":{"abi":[{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC6372Upgradeable.sol\":\"IERC6372Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC6372Upgradeable.sol\":{\"keccak256\":\"0x3026befd6d69d1b46960bdc35a2ad37c0e1352f26983ee3728dd61fd32aa308a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2001b7209fd4920ec7674f194db7fe163dfea7a7af2dd25fe6c0e5a94dc595c\",\"dweb:/ipfs/QmXX2zTFyiNWoDxivV3trKcKWifAENMqNAB34NgjWq5feX\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":542,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":545,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":542,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":545,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2898,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":725,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_paused","offset":0,"slot":"51","type":"t_bool"},{"astId":830,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561000f575f80fd5b506111c78061001d5f395ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c8063395093511161006f578063395093511461016557806370a082311461019557806395d89b41146101c5578063a457c2d7146101e3578063a9059cbb14610213578063dd62ed3e14610243576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f80fd5b6100b3610273565b6040516100c09190610ae1565b60405180910390f35b6100e360048036038101906100de9190610b92565b610303565b6040516100f09190610bea565b60405180910390f35b610101610325565b60405161010e9190610c12565b60405180910390f35b610131600480360381019061012c9190610c2b565b61032e565b60405161013e9190610bea565b60405180910390f35b61014f61035c565b60405161015c9190610c96565b60405180910390f35b61017f600480360381019061017a9190610b92565b610364565b60405161018c9190610bea565b60405180910390f35b6101af60048036038101906101aa9190610caf565b61039a565b6040516101bc9190610c12565b60405180910390f35b6101cd6103e0565b6040516101da9190610ae1565b60405180910390f35b6101fd60048036038101906101f89190610b92565b610470565b60405161020a9190610bea565b60405180910390f35b61022d60048036038101906102289190610b92565b6104e5565b60405161023a9190610bea565b60405180910390f35b61025d60048036038101906102589190610cda565b610507565b60405161026a9190610c12565b60405180910390f35b60606036805461028290610d45565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610d45565b80156102f95780601f106102d0576101008083540402835291602001916102f9565b820191905f5260205f20905b8154815290600101906020018083116102dc57829003601f168201915b5050505050905090565b5f8061030d610589565b905061031a818585610590565b600191505092915050565b5f603554905090565b5f80610338610589565b9050610345858285610753565b6103508585856107de565b60019150509392505050565b5f6012905090565b5f8061036e610589565b905061038f8185856103808589610507565b61038a9190610da2565b610590565b600191505092915050565b5f60335f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060603780546103ef90610d45565b80601f016020809104026020016040519081016040528092919081815260200182805461041b90610d45565b80156104665780601f1061043d57610100808354040283529160200191610466565b820191905f5260205f20905b81548152906001019060200180831161044957829003601f168201915b5050505050905090565b5f8061047a610589565b90505f6104878286610507565b9050838110156104cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c390610e45565b60405180910390fd5b6104d98286868403610590565b60019250505092915050565b5f806104ef610589565b90506104fc8185856107de565b600191505092915050565b5f60345f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f590610ed3565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361066c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066390610f61565b60405180910390fd5b8060345f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107469190610c12565b60405180910390a3505050565b5f61075e8484610507565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107d857818110156107ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c190610fc9565b60405180910390fd5b6107d78484848403610590565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084390611057565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b1906110e5565b60405180910390fd5b6108c5838383610a4d565b5f60335f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610949576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094090611173565b60405180910390fd5b81810360335f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508160335f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a349190610c12565b60405180910390a3610a47848484610a52565b50505050565b505050565b505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610a8e578082015181840152602081019050610a73565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610ab382610a57565b610abd8185610a61565b9350610acd818560208601610a71565b610ad681610a99565b840191505092915050565b5f6020820190508181035f830152610af98184610aa9565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b2e82610b05565b9050919050565b610b3e81610b24565b8114610b48575f80fd5b50565b5f81359050610b5981610b35565b92915050565b5f819050919050565b610b7181610b5f565b8114610b7b575f80fd5b50565b5f81359050610b8c81610b68565b92915050565b5f8060408385031215610ba857610ba7610b01565b5b5f610bb585828601610b4b565b9250506020610bc685828601610b7e565b9150509250929050565b5f8115159050919050565b610be481610bd0565b82525050565b5f602082019050610bfd5f830184610bdb565b92915050565b610c0c81610b5f565b82525050565b5f602082019050610c255f830184610c03565b92915050565b5f805f60608486031215610c4257610c41610b01565b5b5f610c4f86828701610b4b565b9350506020610c6086828701610b4b565b9250506040610c7186828701610b7e565b9150509250925092565b5f60ff82169050919050565b610c9081610c7b565b82525050565b5f602082019050610ca95f830184610c87565b92915050565b5f60208284031215610cc457610cc3610b01565b5b5f610cd184828501610b4b565b91505092915050565b5f8060408385031215610cf057610cef610b01565b5b5f610cfd85828601610b4b565b9250506020610d0e85828601610b4b565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610d5c57607f821691505b602082108103610d6f57610d6e610d18565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610dac82610b5f565b9150610db783610b5f565b9250828201905080821115610dcf57610dce610d75565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f610e2f602583610a61565b9150610e3a82610dd5565b604082019050919050565b5f6020820190508181035f830152610e5c81610e23565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f610ebd602483610a61565b9150610ec882610e63565b604082019050919050565b5f6020820190508181035f830152610eea81610eb1565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f610f4b602283610a61565b9150610f5682610ef1565b604082019050919050565b5f6020820190508181035f830152610f7881610f3f565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f610fb3601d83610a61565b9150610fbe82610f7f565b602082019050919050565b5f6020820190508181035f830152610fe081610fa7565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f611041602583610a61565b915061104c82610fe7565b604082019050919050565b5f6020820190508181035f83015261106e81611035565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f6110cf602383610a61565b91506110da82611075565b604082019050919050565b5f6020820190508181035f8301526110fc816110c3565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f61115d602683610a61565b915061116882611103565b604082019050919050565b5f6020820190508181035f83015261118a81611151565b905091905056fea2646970667358221220451729fc3d679c79b138e8016c6afaaa85eeb229c8160a5e8a1fd09bf7c2d33464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11C7 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x243 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x147 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x325 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xC96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xCAF JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CD PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x258 SWAP2 SWAP1 PUSH2 0xCDA JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x282 SWAP1 PUSH2 0xD45 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AE SWAP1 PUSH2 0xD45 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x30D PUSH2 0x589 JUMP JUMPDEST SWAP1 POP PUSH2 0x31A DUP2 DUP6 DUP6 PUSH2 0x590 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x338 PUSH2 0x589 JUMP JUMPDEST SWAP1 POP PUSH2 0x345 DUP6 DUP3 DUP6 PUSH2 0x753 JUMP JUMPDEST PUSH2 0x350 DUP6 DUP6 DUP6 PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x36E PUSH2 0x589 JUMP JUMPDEST SWAP1 POP PUSH2 0x38F DUP2 DUP6 DUP6 PUSH2 0x380 DUP6 DUP10 PUSH2 0x507 JUMP JUMPDEST PUSH2 0x38A SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH2 0x590 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x33 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x3EF SWAP1 PUSH2 0xD45 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x41B SWAP1 PUSH2 0xD45 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x466 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x43D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x466 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x449 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x47A PUSH2 0x589 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x487 DUP3 DUP7 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C3 SWAP1 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4D9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x590 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4EF PUSH2 0x589 JUMP JUMPDEST SWAP1 POP PUSH2 0x4FC DUP2 DUP6 DUP6 PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x34 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F5 SWAP1 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x663 SWAP1 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x746 SWAP2 SWAP1 PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x75E DUP5 DUP5 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7D8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C1 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x590 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x84C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x843 SWAP1 PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B1 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C5 DUP4 DUP4 DUP4 PUSH2 0xA4D JUMP JUMPDEST PUSH0 PUSH1 0x33 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x949 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x940 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA34 SWAP2 SWAP1 PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA47 DUP5 DUP5 DUP5 PUSH2 0xA52 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA8E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA73 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAB3 DUP3 PUSH2 0xA57 JUMP JUMPDEST PUSH2 0xABD DUP2 DUP6 PUSH2 0xA61 JUMP JUMPDEST SWAP4 POP PUSH2 0xACD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA71 JUMP JUMPDEST PUSH2 0xAD6 DUP2 PUSH2 0xA99 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAF9 DUP2 DUP5 PUSH2 0xAA9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB2E DUP3 PUSH2 0xB05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3E DUP2 PUSH2 0xB24 JUMP JUMPDEST DUP2 EQ PUSH2 0xB48 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB59 DUP2 PUSH2 0xB35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB71 DUP2 PUSH2 0xB5F JUMP JUMPDEST DUP2 EQ PUSH2 0xB7B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8C DUP2 PUSH2 0xB68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBA8 JUMPI PUSH2 0xBA7 PUSH2 0xB01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBB5 DUP6 DUP3 DUP7 ADD PUSH2 0xB4B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBC6 DUP6 DUP3 DUP7 ADD PUSH2 0xB7E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBE4 DUP2 PUSH2 0xBD0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBFD PUSH0 DUP4 ADD DUP5 PUSH2 0xBDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC0C DUP2 PUSH2 0xB5F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC25 PUSH0 DUP4 ADD DUP5 PUSH2 0xC03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC42 JUMPI PUSH2 0xC41 PUSH2 0xB01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC4F DUP7 DUP3 DUP8 ADD PUSH2 0xB4B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC60 DUP7 DUP3 DUP8 ADD PUSH2 0xB4B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC71 DUP7 DUP3 DUP8 ADD PUSH2 0xB7E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC90 DUP2 PUSH2 0xC7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCA9 PUSH0 DUP4 ADD DUP5 PUSH2 0xC87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC4 JUMPI PUSH2 0xCC3 PUSH2 0xB01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCD1 DUP5 DUP3 DUP6 ADD PUSH2 0xB4B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCF0 JUMPI PUSH2 0xCEF PUSH2 0xB01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCFD DUP6 DUP3 DUP7 ADD PUSH2 0xB4B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD0E DUP6 DUP3 DUP7 ADD PUSH2 0xB4B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD5C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD6F JUMPI PUSH2 0xD6E PUSH2 0xD18 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xDAC DUP3 PUSH2 0xB5F JUMP JUMPDEST SWAP2 POP PUSH2 0xDB7 DUP4 PUSH2 0xB5F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDCF JUMPI PUSH2 0xDCE PUSH2 0xD75 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE2F PUSH1 0x25 DUP4 PUSH2 0xA61 JUMP JUMPDEST SWAP2 POP PUSH2 0xE3A DUP3 PUSH2 0xDD5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE5C DUP2 PUSH2 0xE23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEBD PUSH1 0x24 DUP4 PUSH2 0xA61 JUMP JUMPDEST SWAP2 POP PUSH2 0xEC8 DUP3 PUSH2 0xE63 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEEA DUP2 PUSH2 0xEB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF4B PUSH1 0x22 DUP4 PUSH2 0xA61 JUMP JUMPDEST SWAP2 POP PUSH2 0xF56 DUP3 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF78 DUP2 PUSH2 0xF3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFB3 PUSH1 0x1D DUP4 PUSH2 0xA61 JUMP JUMPDEST SWAP2 POP PUSH2 0xFBE DUP3 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFE0 DUP2 PUSH2 0xFA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1041 PUSH1 0x25 DUP4 PUSH2 0xA61 JUMP JUMPDEST SWAP2 POP PUSH2 0x104C DUP3 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x106E DUP2 PUSH2 0x1035 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10CF PUSH1 0x23 DUP4 PUSH2 0xA61 JUMP JUMPDEST SWAP2 POP PUSH2 0x10DA DUP3 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10FC DUP2 PUSH2 0x10C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x115D PUSH1 0x26 DUP4 PUSH2 0xA61 JUMP JUMPDEST SWAP2 POP PUSH2 0x1168 DUP3 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x118A DUP2 PUSH2 0x1151 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT OR 0x29 0xFC RETURNDATASIZE PUSH8 0x9C79B138E8016C6A STATICCALL 0xAA DUP6 0xEE 0xB2 0x29 0xC8 AND EXP 0x5E DUP11 0x1F 0xD0 SWAP12 0xF7 0xC2 0xD3 CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1611:11861:8:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1437":{"entryPoint":2642,"id":1437,"parameterSlots":3,"returnSlots":0},"@_approve_1372":{"entryPoint":1424,"id":1372,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1426":{"entryPoint":2637,"id":1426,"parameterSlots":3,"returnSlots":0},"@_msgSender_2884":{"entryPoint":1417,"id":2884,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1415":{"entryPoint":1875,"id":1415,"parameterSlots":3,"returnSlots":0},"@_transfer_1198":{"entryPoint":2014,"id":1198,"parameterSlots":3,"returnSlots":0},"@allowance_993":{"entryPoint":1287,"id":993,"parameterSlots":2,"returnSlots":1},"@approve_1018":{"entryPoint":771,"id":1018,"parameterSlots":2,"returnSlots":1},"@balanceOf_950":{"entryPoint":922,"id":950,"parameterSlots":1,"returnSlots":1},"@decimals_926":{"entryPoint":860,"id":926,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_1121":{"entryPoint":1136,"id":1121,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_1080":{"entryPoint":868,"id":1080,"parameterSlots":2,"returnSlots":1},"@name_906":{"entryPoint":627,"id":906,"parameterSlots":0,"returnSlots":1},"@symbol_916":{"entryPoint":992,"id":916,"parameterSlots":0,"returnSlots":1},"@totalSupply_936":{"entryPoint":805,"id":936,"parameterSlots":0,"returnSlots":1},"@transferFrom_1051":{"entryPoint":814,"id":1051,"parameterSlots":3,"returnSlots":1},"@transfer_975":{"entryPoint":1253,"id":975,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2891,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2942,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3247,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3290,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3115,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2962,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3035,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2729,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4291,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":3903,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4007,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4433,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4149,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3761,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3619,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3075,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3207,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3050,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2785,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4325,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3937,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4041,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4467,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4183,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3795,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3653,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3090,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3222,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2647,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2657,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3490,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2852,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3024,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2821,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2911,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3195,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2673,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3397,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3445,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3352,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2817,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2713,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4213,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3825,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":3967,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4355,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4071,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3683,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3541,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2869,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2920,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13699:26","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:26","statements":[{"nodeType":"YulAssignment","src":"77:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:26"},"nodeType":"YulFunctionCall","src":"87:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:26","type":""}],"src":"7:99:26"},{"body":{"nodeType":"YulBlock","src":"208:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:26"},"nodeType":"YulFunctionCall","src":"218:19:26"},"nodeType":"YulExpressionStatement","src":"218:19:26"},{"nodeType":"YulAssignment","src":"246:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:26"},"nodeType":"YulFunctionCall","src":"261:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:26","type":""}],"src":"112:169:26"},{"body":{"nodeType":"YulBlock","src":"349:184:26","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:26"},"nodeType":"YulFunctionCall","src":"449:11:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:26"},"nodeType":"YulFunctionCall","src":"468:11:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:26"},"nodeType":"YulFunctionCall","src":"462:18:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:26"},"nodeType":"YulFunctionCall","src":"442:39:26"},"nodeType":"YulExpressionStatement","src":"442:39:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:26"},"nodeType":"YulFunctionCall","src":"386:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:26","statements":[{"nodeType":"YulAssignment","src":"402:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:26"},"nodeType":"YulFunctionCall","src":"407:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:26","statements":[]},"src":"378:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:26"},"nodeType":"YulFunctionCall","src":"507:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:26"},"nodeType":"YulFunctionCall","src":"500:27:26"},"nodeType":"YulExpressionStatement","src":"500:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:26","type":""}],"src":"287:246:26"},{"body":{"nodeType":"YulBlock","src":"587:54:26","statements":[{"nodeType":"YulAssignment","src":"597:38:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:26"},"nodeType":"YulFunctionCall","src":"611:14:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:26"},"nodeType":"YulFunctionCall","src":"627:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:26"},"nodeType":"YulFunctionCall","src":"607:28:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:26"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:26","type":""}],"src":"539:102:26"},{"body":{"nodeType":"YulBlock","src":"739:285:26","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:26"},"nodeType":"YulFunctionCall","src":"763:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:26","type":""}]},{"nodeType":"YulAssignment","src":"811:78:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:26"},"nodeType":"YulFunctionCall","src":"818:71:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:26"},"nodeType":"YulFunctionCall","src":"933:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:26"},"nodeType":"YulFunctionCall","src":"898:65:26"},"nodeType":"YulExpressionStatement","src":"898:65:26"},{"nodeType":"YulAssignment","src":"972:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:26"},"nodeType":"YulFunctionCall","src":"988:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:26"},"nodeType":"YulFunctionCall","src":"979:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:26","type":""}],"src":"647:377:26"},{"body":{"nodeType":"YulBlock","src":"1148:195:26","statements":[{"nodeType":"YulAssignment","src":"1158:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:26"},"nodeType":"YulFunctionCall","src":"1166:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:26"},"nodeType":"YulFunctionCall","src":"1201:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:26"},"nodeType":"YulFunctionCall","src":"1220:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:26"},"nodeType":"YulFunctionCall","src":"1194:47:26"},"nodeType":"YulExpressionStatement","src":"1194:47:26"},{"nodeType":"YulAssignment","src":"1250:86:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:26"},"nodeType":"YulFunctionCall","src":"1258:78:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:26","type":""}],"src":"1030:313:26"},{"body":{"nodeType":"YulBlock","src":"1389:35:26","statements":[{"nodeType":"YulAssignment","src":"1399:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:26"},"nodeType":"YulFunctionCall","src":"1409:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:26","type":""}],"src":"1349:75:26"},{"body":{"nodeType":"YulBlock","src":"1519:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:26"},"nodeType":"YulFunctionCall","src":"1529:12:26"},"nodeType":"YulExpressionStatement","src":"1529:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:26"},{"body":{"nodeType":"YulBlock","src":"1642:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:26"},"nodeType":"YulFunctionCall","src":"1652:12:26"},"nodeType":"YulExpressionStatement","src":"1652:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:26"},{"body":{"nodeType":"YulBlock","src":"1721:81:26","statements":[{"nodeType":"YulAssignment","src":"1731:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:26"},"nodeType":"YulFunctionCall","src":"1742:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:26","type":""}],"src":"1676:126:26"},{"body":{"nodeType":"YulBlock","src":"1853:51:26","statements":[{"nodeType":"YulAssignment","src":"1863:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:26"},"nodeType":"YulFunctionCall","src":"1874:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:26","type":""}],"src":"1808:96:26"},{"body":{"nodeType":"YulBlock","src":"1953:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:26"},"nodeType":"YulFunctionCall","src":"2012:12:26"},"nodeType":"YulExpressionStatement","src":"2012:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:26"},"nodeType":"YulFunctionCall","src":"1983:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:26"},"nodeType":"YulFunctionCall","src":"1973:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:26"},"nodeType":"YulFunctionCall","src":"1966:43:26"},"nodeType":"YulIf","src":"1963:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:26","type":""}],"src":"1910:122:26"},{"body":{"nodeType":"YulBlock","src":"2090:87:26","statements":[{"nodeType":"YulAssignment","src":"2100:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:26"},"nodeType":"YulFunctionCall","src":"2109:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:26"},"nodeType":"YulFunctionCall","src":"2138:33:26"},"nodeType":"YulExpressionStatement","src":"2138:33:26"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:26","type":""}],"src":"2038:139:26"},{"body":{"nodeType":"YulBlock","src":"2228:32:26","statements":[{"nodeType":"YulAssignment","src":"2238:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:26","type":""}],"src":"2183:77:26"},{"body":{"nodeType":"YulBlock","src":"2309:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:26"},"nodeType":"YulFunctionCall","src":"2368:12:26"},"nodeType":"YulExpressionStatement","src":"2368:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:26"},"nodeType":"YulFunctionCall","src":"2339:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:26"},"nodeType":"YulFunctionCall","src":"2329:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:26"},"nodeType":"YulFunctionCall","src":"2322:43:26"},"nodeType":"YulIf","src":"2319:63:26"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:26","type":""}],"src":"2266:122:26"},{"body":{"nodeType":"YulBlock","src":"2446:87:26","statements":[{"nodeType":"YulAssignment","src":"2456:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:26"},"nodeType":"YulFunctionCall","src":"2465:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:26"},"nodeType":"YulFunctionCall","src":"2494:33:26"},"nodeType":"YulExpressionStatement","src":"2494:33:26"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:26","type":""}],"src":"2394:139:26"},{"body":{"nodeType":"YulBlock","src":"2622:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:26"},"nodeType":"YulFunctionCall","src":"2670:79:26"},"nodeType":"YulExpressionStatement","src":"2670:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:26"},"nodeType":"YulFunctionCall","src":"2639:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:26"},"nodeType":"YulFunctionCall","src":"2635:32:26"},"nodeType":"YulIf","src":"2632:119:26"},{"nodeType":"YulBlock","src":"2761:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:26"},"nodeType":"YulFunctionCall","src":"2836:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:26"},"nodeType":"YulFunctionCall","src":"2815:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:26"}]}]},{"nodeType":"YulBlock","src":"2888:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:26"},"nodeType":"YulFunctionCall","src":"2964:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:26"},"nodeType":"YulFunctionCall","src":"2943:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:26","type":""}],"src":"2539:474:26"},{"body":{"nodeType":"YulBlock","src":"3061:48:26","statements":[{"nodeType":"YulAssignment","src":"3071:32:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:26"},"nodeType":"YulFunctionCall","src":"3089:13:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:26"},"nodeType":"YulFunctionCall","src":"3082:21:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:26"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:26","type":""}],"src":"3019:90:26"},{"body":{"nodeType":"YulBlock","src":"3174:50:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:26"},"nodeType":"YulFunctionCall","src":"3196:21:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:26"},"nodeType":"YulFunctionCall","src":"3184:34:26"},"nodeType":"YulExpressionStatement","src":"3184:34:26"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:26","type":""}],"src":"3115:109:26"},{"body":{"nodeType":"YulBlock","src":"3322:118:26","statements":[{"nodeType":"YulAssignment","src":"3332:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:26"},"nodeType":"YulFunctionCall","src":"3340:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:26"},"nodeType":"YulFunctionCall","src":"3415:17:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:26"},"nodeType":"YulFunctionCall","src":"3368:65:26"},"nodeType":"YulExpressionStatement","src":"3368:65:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:26","type":""}],"src":"3230:210:26"},{"body":{"nodeType":"YulBlock","src":"3511:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:26"},"nodeType":"YulFunctionCall","src":"3533:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:26"},"nodeType":"YulFunctionCall","src":"3521:37:26"},"nodeType":"YulExpressionStatement","src":"3521:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:26","type":""}],"src":"3446:118:26"},{"body":{"nodeType":"YulBlock","src":"3668:124:26","statements":[{"nodeType":"YulAssignment","src":"3678:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:26"},"nodeType":"YulFunctionCall","src":"3686:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:26"},"nodeType":"YulFunctionCall","src":"3767:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:26"},"nodeType":"YulFunctionCall","src":"3714:71:26"},"nodeType":"YulExpressionStatement","src":"3714:71:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:26","type":""}],"src":"3570:222:26"},{"body":{"nodeType":"YulBlock","src":"3898:519:26","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:26"},"nodeType":"YulFunctionCall","src":"3946:79:26"},"nodeType":"YulExpressionStatement","src":"3946:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:26"},"nodeType":"YulFunctionCall","src":"3915:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:26"},"nodeType":"YulFunctionCall","src":"3911:32:26"},"nodeType":"YulIf","src":"3908:119:26"},{"nodeType":"YulBlock","src":"4037:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:26"},"nodeType":"YulFunctionCall","src":"4112:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:26"},"nodeType":"YulFunctionCall","src":"4091:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:26"}]}]},{"nodeType":"YulBlock","src":"4164:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:26"},"nodeType":"YulFunctionCall","src":"4240:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:26"},"nodeType":"YulFunctionCall","src":"4219:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:26"}]}]},{"nodeType":"YulBlock","src":"4292:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:26"},"nodeType":"YulFunctionCall","src":"4368:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:26"},"nodeType":"YulFunctionCall","src":"4347:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:26","type":""}],"src":"3798:619:26"},{"body":{"nodeType":"YulBlock","src":"4466:43:26","statements":[{"nodeType":"YulAssignment","src":"4476:27:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:26","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:26"},"nodeType":"YulFunctionCall","src":"4487:16:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:26"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:26","type":""}],"src":"4423:86:26"},{"body":{"nodeType":"YulBlock","src":"4576:51:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:26"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:26"},"nodeType":"YulFunctionCall","src":"4598:22:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:26"},"nodeType":"YulFunctionCall","src":"4586:35:26"},"nodeType":"YulExpressionStatement","src":"4586:35:26"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:26","type":""}],"src":"4515:112:26"},{"body":{"nodeType":"YulBlock","src":"4727:120:26","statements":[{"nodeType":"YulAssignment","src":"4737:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:26"},"nodeType":"YulFunctionCall","src":"4745:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:26"},"nodeType":"YulFunctionCall","src":"4822:17:26"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:26"},"nodeType":"YulFunctionCall","src":"4773:67:26"},"nodeType":"YulExpressionStatement","src":"4773:67:26"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:26","type":""}],"src":"4633:214:26"},{"body":{"nodeType":"YulBlock","src":"4919:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:26"},"nodeType":"YulFunctionCall","src":"4967:79:26"},"nodeType":"YulExpressionStatement","src":"4967:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:26"},"nodeType":"YulFunctionCall","src":"4936:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:26"},"nodeType":"YulFunctionCall","src":"4932:32:26"},"nodeType":"YulIf","src":"4929:119:26"},{"nodeType":"YulBlock","src":"5058:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:26"},"nodeType":"YulFunctionCall","src":"5133:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:26"},"nodeType":"YulFunctionCall","src":"5112:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:26"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:26","type":""}],"src":"4853:329:26"},{"body":{"nodeType":"YulBlock","src":"5271:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5319:77:26"},"nodeType":"YulFunctionCall","src":"5319:79:26"},"nodeType":"YulExpressionStatement","src":"5319:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5292:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5288:3:26"},"nodeType":"YulFunctionCall","src":"5288:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"5313:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5284:3:26"},"nodeType":"YulFunctionCall","src":"5284:32:26"},"nodeType":"YulIf","src":"5281:119:26"},{"nodeType":"YulBlock","src":"5410:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5439:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5429:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5454:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:26"},"nodeType":"YulFunctionCall","src":"5485:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5509:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5464:20:26"},"nodeType":"YulFunctionCall","src":"5464:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:26"}]}]},{"nodeType":"YulBlock","src":"5537:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5552:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5566:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5556:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:26"},"nodeType":"YulFunctionCall","src":"5613:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5592:20:26"},"nodeType":"YulFunctionCall","src":"5592:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5582:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5233:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5244:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5256:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5264:6:26","type":""}],"src":"5188:474:26"},{"body":{"nodeType":"YulBlock","src":"5696:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5713:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5716:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:26"},"nodeType":"YulFunctionCall","src":"5706:88:26"},"nodeType":"YulExpressionStatement","src":"5706:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5810:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5813:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:26"},"nodeType":"YulFunctionCall","src":"5803:15:26"},"nodeType":"YulExpressionStatement","src":"5803:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:26"},"nodeType":"YulFunctionCall","src":"5827:15:26"},"nodeType":"YulExpressionStatement","src":"5827:15:26"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5668:180:26"},{"body":{"nodeType":"YulBlock","src":"5905:269:26","statements":[{"nodeType":"YulAssignment","src":"5915:22:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5929:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:26","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5925:3:26"},"nodeType":"YulFunctionCall","src":"5925:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5915:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"5946:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5976:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"5982:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5972:3:26"},"nodeType":"YulFunctionCall","src":"5972:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5950:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:51:26","statements":[{"nodeType":"YulAssignment","src":"6037:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6051:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:26"},"nodeType":"YulFunctionCall","src":"6047:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6037:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6003:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:26"},"nodeType":"YulFunctionCall","src":"5996:26:26"},"nodeType":"YulIf","src":"5993:81:26"},{"body":{"nodeType":"YulBlock","src":"6126:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6140:16:26"},"nodeType":"YulFunctionCall","src":"6140:18:26"},"nodeType":"YulExpressionStatement","src":"6140:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6090:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6113:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6121:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6110:2:26"},"nodeType":"YulFunctionCall","src":"6110:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6087:2:26"},"nodeType":"YulFunctionCall","src":"6087:38:26"},"nodeType":"YulIf","src":"6084:84:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5889:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:26","type":""}],"src":"5854:320:26"},{"body":{"nodeType":"YulBlock","src":"6208:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6225:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6228:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6218:6:26"},"nodeType":"YulFunctionCall","src":"6218:88:26"},"nodeType":"YulExpressionStatement","src":"6218:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6322:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6325:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:26"},"nodeType":"YulFunctionCall","src":"6315:15:26"},"nodeType":"YulExpressionStatement","src":"6315:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6346:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6349:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6339:6:26"},"nodeType":"YulFunctionCall","src":"6339:15:26"},"nodeType":"YulExpressionStatement","src":"6339:15:26"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6180:180:26"},{"body":{"nodeType":"YulBlock","src":"6410:147:26","statements":[{"nodeType":"YulAssignment","src":"6420:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6443:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6425:17:26"},"nodeType":"YulFunctionCall","src":"6425:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6420:1:26"}]},{"nodeType":"YulAssignment","src":"6454:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6477:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6459:17:26"},"nodeType":"YulFunctionCall","src":"6459:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6454:1:26"}]},{"nodeType":"YulAssignment","src":"6488:16:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6499:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"6502:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6495:3:26"},"nodeType":"YulFunctionCall","src":"6495:9:26"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6488:3:26"}]},{"body":{"nodeType":"YulBlock","src":"6528:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6530:16:26"},"nodeType":"YulFunctionCall","src":"6530:18:26"},"nodeType":"YulExpressionStatement","src":"6530:18:26"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6520:1:26"},{"name":"sum","nodeType":"YulIdentifier","src":"6523:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6517:2:26"},"nodeType":"YulFunctionCall","src":"6517:10:26"},"nodeType":"YulIf","src":"6514:36:26"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6397:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"6400:1:26","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6406:3:26","type":""}],"src":"6366:191:26"},{"body":{"nodeType":"YulBlock","src":"6669:118:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6691:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6699:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6687:3:26"},"nodeType":"YulFunctionCall","src":"6687:14:26"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6703:34:26","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6680:6:26"},"nodeType":"YulFunctionCall","src":"6680:58:26"},"nodeType":"YulExpressionStatement","src":"6680:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6759:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6767:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6755:3:26"},"nodeType":"YulFunctionCall","src":"6755:15:26"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6772:7:26","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6748:6:26"},"nodeType":"YulFunctionCall","src":"6748:32:26"},"nodeType":"YulExpressionStatement","src":"6748:32:26"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6661:6:26","type":""}],"src":"6563:224:26"},{"body":{"nodeType":"YulBlock","src":"6939:220:26","statements":[{"nodeType":"YulAssignment","src":"6949:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7015:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"7020:2:26","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6956:58:26"},"nodeType":"YulFunctionCall","src":"6956:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6949:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7121:3:26"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7032:88:26"},"nodeType":"YulFunctionCall","src":"7032:93:26"},"nodeType":"YulExpressionStatement","src":"7032:93:26"},{"nodeType":"YulAssignment","src":"7134:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7145:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"7150:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7141:3:26"},"nodeType":"YulFunctionCall","src":"7141:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7134:3:26"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6927:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6935:3:26","type":""}],"src":"6793:366:26"},{"body":{"nodeType":"YulBlock","src":"7336:248:26","statements":[{"nodeType":"YulAssignment","src":"7346:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7358:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7369:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7354:3:26"},"nodeType":"YulFunctionCall","src":"7354:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7346:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7393:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7404:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7389:3:26"},"nodeType":"YulFunctionCall","src":"7389:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7412:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"7418:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7408:3:26"},"nodeType":"YulFunctionCall","src":"7408:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7382:6:26"},"nodeType":"YulFunctionCall","src":"7382:47:26"},"nodeType":"YulExpressionStatement","src":"7382:47:26"},{"nodeType":"YulAssignment","src":"7438:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7572:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7446:124:26"},"nodeType":"YulFunctionCall","src":"7446:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7438:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7316:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7331:4:26","type":""}],"src":"7165:419:26"},{"body":{"nodeType":"YulBlock","src":"7696:117:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7718:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7726:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:26"},"nodeType":"YulFunctionCall","src":"7714:14:26"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7730:34:26","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7707:6:26"},"nodeType":"YulFunctionCall","src":"7707:58:26"},"nodeType":"YulExpressionStatement","src":"7707:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7786:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7794:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7782:3:26"},"nodeType":"YulFunctionCall","src":"7782:15:26"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7799:6:26","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7775:6:26"},"nodeType":"YulFunctionCall","src":"7775:31:26"},"nodeType":"YulExpressionStatement","src":"7775:31:26"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7688:6:26","type":""}],"src":"7590:223:26"},{"body":{"nodeType":"YulBlock","src":"7965:220:26","statements":[{"nodeType":"YulAssignment","src":"7975:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8041:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"8046:2:26","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7982:58:26"},"nodeType":"YulFunctionCall","src":"7982:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7975:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8147:3:26"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8058:88:26"},"nodeType":"YulFunctionCall","src":"8058:93:26"},"nodeType":"YulExpressionStatement","src":"8058:93:26"},{"nodeType":"YulAssignment","src":"8160:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8171:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"8176:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8167:3:26"},"nodeType":"YulFunctionCall","src":"8167:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8160:3:26"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7953:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7961:3:26","type":""}],"src":"7819:366:26"},{"body":{"nodeType":"YulBlock","src":"8362:248:26","statements":[{"nodeType":"YulAssignment","src":"8372:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8384:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8395:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8380:3:26"},"nodeType":"YulFunctionCall","src":"8380:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8372:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8419:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8430:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8415:3:26"},"nodeType":"YulFunctionCall","src":"8415:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8438:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"8444:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8434:3:26"},"nodeType":"YulFunctionCall","src":"8434:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8408:6:26"},"nodeType":"YulFunctionCall","src":"8408:47:26"},"nodeType":"YulExpressionStatement","src":"8408:47:26"},{"nodeType":"YulAssignment","src":"8464:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8598:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8472:124:26"},"nodeType":"YulFunctionCall","src":"8472:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8464:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8342:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8357:4:26","type":""}],"src":"8191:419:26"},{"body":{"nodeType":"YulBlock","src":"8722:115:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8744:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"8752:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8740:3:26"},"nodeType":"YulFunctionCall","src":"8740:14:26"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8756:34:26","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8733:6:26"},"nodeType":"YulFunctionCall","src":"8733:58:26"},"nodeType":"YulExpressionStatement","src":"8733:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8812:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"8820:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8808:3:26"},"nodeType":"YulFunctionCall","src":"8808:15:26"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8825:4:26","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8801:6:26"},"nodeType":"YulFunctionCall","src":"8801:29:26"},"nodeType":"YulExpressionStatement","src":"8801:29:26"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8714:6:26","type":""}],"src":"8616:221:26"},{"body":{"nodeType":"YulBlock","src":"8989:220:26","statements":[{"nodeType":"YulAssignment","src":"8999:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9065:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"9070:2:26","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9006:58:26"},"nodeType":"YulFunctionCall","src":"9006:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8999:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9171:3:26"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9082:88:26"},"nodeType":"YulFunctionCall","src":"9082:93:26"},"nodeType":"YulExpressionStatement","src":"9082:93:26"},{"nodeType":"YulAssignment","src":"9184:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9195:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"9200:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9191:3:26"},"nodeType":"YulFunctionCall","src":"9191:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9184:3:26"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8977:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8985:3:26","type":""}],"src":"8843:366:26"},{"body":{"nodeType":"YulBlock","src":"9386:248:26","statements":[{"nodeType":"YulAssignment","src":"9396:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9408:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9419:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9404:3:26"},"nodeType":"YulFunctionCall","src":"9404:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9396:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9443:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9454:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9439:3:26"},"nodeType":"YulFunctionCall","src":"9439:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9462:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"9468:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9458:3:26"},"nodeType":"YulFunctionCall","src":"9458:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9432:6:26"},"nodeType":"YulFunctionCall","src":"9432:47:26"},"nodeType":"YulExpressionStatement","src":"9432:47:26"},{"nodeType":"YulAssignment","src":"9488:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9622:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9496:124:26"},"nodeType":"YulFunctionCall","src":"9496:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9488:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9366:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9381:4:26","type":""}],"src":"9215:419:26"},{"body":{"nodeType":"YulBlock","src":"9746:73:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9768:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"9776:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9764:3:26"},"nodeType":"YulFunctionCall","src":"9764:14:26"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9780:31:26","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9757:6:26"},"nodeType":"YulFunctionCall","src":"9757:55:26"},"nodeType":"YulExpressionStatement","src":"9757:55:26"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9738:6:26","type":""}],"src":"9640:179:26"},{"body":{"nodeType":"YulBlock","src":"9971:220:26","statements":[{"nodeType":"YulAssignment","src":"9981:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10047:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"10052:2:26","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9988:58:26"},"nodeType":"YulFunctionCall","src":"9988:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9981:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10153:3:26"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10064:88:26"},"nodeType":"YulFunctionCall","src":"10064:93:26"},"nodeType":"YulExpressionStatement","src":"10064:93:26"},{"nodeType":"YulAssignment","src":"10166:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10177:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"10182:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10173:3:26"},"nodeType":"YulFunctionCall","src":"10173:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10166:3:26"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9959:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9967:3:26","type":""}],"src":"9825:366:26"},{"body":{"nodeType":"YulBlock","src":"10368:248:26","statements":[{"nodeType":"YulAssignment","src":"10378:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10390:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10401:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10386:3:26"},"nodeType":"YulFunctionCall","src":"10386:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10378:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10425:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10436:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10421:3:26"},"nodeType":"YulFunctionCall","src":"10421:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10444:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"10450:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10440:3:26"},"nodeType":"YulFunctionCall","src":"10440:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10414:6:26"},"nodeType":"YulFunctionCall","src":"10414:47:26"},"nodeType":"YulExpressionStatement","src":"10414:47:26"},{"nodeType":"YulAssignment","src":"10470:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10604:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10478:124:26"},"nodeType":"YulFunctionCall","src":"10478:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10470:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10348:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10363:4:26","type":""}],"src":"10197:419:26"},{"body":{"nodeType":"YulBlock","src":"10728:118:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10750:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"10758:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10746:3:26"},"nodeType":"YulFunctionCall","src":"10746:14:26"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10762:34:26","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10739:6:26"},"nodeType":"YulFunctionCall","src":"10739:58:26"},"nodeType":"YulExpressionStatement","src":"10739:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10818:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"10826:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10814:3:26"},"nodeType":"YulFunctionCall","src":"10814:15:26"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10831:7:26","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10807:6:26"},"nodeType":"YulFunctionCall","src":"10807:32:26"},"nodeType":"YulExpressionStatement","src":"10807:32:26"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10720:6:26","type":""}],"src":"10622:224:26"},{"body":{"nodeType":"YulBlock","src":"10998:220:26","statements":[{"nodeType":"YulAssignment","src":"11008:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11074:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"11079:2:26","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11015:58:26"},"nodeType":"YulFunctionCall","src":"11015:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11008:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11180:3:26"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11091:88:26"},"nodeType":"YulFunctionCall","src":"11091:93:26"},"nodeType":"YulExpressionStatement","src":"11091:93:26"},{"nodeType":"YulAssignment","src":"11193:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11204:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"11209:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11200:3:26"},"nodeType":"YulFunctionCall","src":"11200:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11193:3:26"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10986:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10994:3:26","type":""}],"src":"10852:366:26"},{"body":{"nodeType":"YulBlock","src":"11395:248:26","statements":[{"nodeType":"YulAssignment","src":"11405:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11417:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:26"},"nodeType":"YulFunctionCall","src":"11413:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11405:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11452:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11463:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11448:3:26"},"nodeType":"YulFunctionCall","src":"11448:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11471:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"11477:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11467:3:26"},"nodeType":"YulFunctionCall","src":"11467:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11441:6:26"},"nodeType":"YulFunctionCall","src":"11441:47:26"},"nodeType":"YulExpressionStatement","src":"11441:47:26"},{"nodeType":"YulAssignment","src":"11497:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11631:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11505:124:26"},"nodeType":"YulFunctionCall","src":"11505:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11497:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11375:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11390:4:26","type":""}],"src":"11224:419:26"},{"body":{"nodeType":"YulBlock","src":"11755:116:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11777:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"11785:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11773:3:26"},"nodeType":"YulFunctionCall","src":"11773:14:26"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11789:34:26","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11766:6:26"},"nodeType":"YulFunctionCall","src":"11766:58:26"},"nodeType":"YulExpressionStatement","src":"11766:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11845:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"11853:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11841:3:26"},"nodeType":"YulFunctionCall","src":"11841:15:26"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"11858:5:26","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11834:6:26"},"nodeType":"YulFunctionCall","src":"11834:30:26"},"nodeType":"YulExpressionStatement","src":"11834:30:26"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11747:6:26","type":""}],"src":"11649:222:26"},{"body":{"nodeType":"YulBlock","src":"12023:220:26","statements":[{"nodeType":"YulAssignment","src":"12033:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12099:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"12104:2:26","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12040:58:26"},"nodeType":"YulFunctionCall","src":"12040:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12033:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12205:3:26"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12116:88:26"},"nodeType":"YulFunctionCall","src":"12116:93:26"},"nodeType":"YulExpressionStatement","src":"12116:93:26"},{"nodeType":"YulAssignment","src":"12218:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12229:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"12234:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12225:3:26"},"nodeType":"YulFunctionCall","src":"12225:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12218:3:26"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12011:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12019:3:26","type":""}],"src":"11877:366:26"},{"body":{"nodeType":"YulBlock","src":"12420:248:26","statements":[{"nodeType":"YulAssignment","src":"12430:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12438:3:26"},"nodeType":"YulFunctionCall","src":"12438:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12430:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12477:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12488:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12473:3:26"},"nodeType":"YulFunctionCall","src":"12473:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12496:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"12502:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12492:3:26"},"nodeType":"YulFunctionCall","src":"12492:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12466:6:26"},"nodeType":"YulFunctionCall","src":"12466:47:26"},"nodeType":"YulExpressionStatement","src":"12466:47:26"},{"nodeType":"YulAssignment","src":"12522:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12656:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12530:124:26"},"nodeType":"YulFunctionCall","src":"12530:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12522:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12400:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12415:4:26","type":""}],"src":"12249:419:26"},{"body":{"nodeType":"YulBlock","src":"12780:119:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12802:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"12810:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12798:3:26"},"nodeType":"YulFunctionCall","src":"12798:14:26"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12814:34:26","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12791:6:26"},"nodeType":"YulFunctionCall","src":"12791:58:26"},"nodeType":"YulExpressionStatement","src":"12791:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12870:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"12878:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12866:3:26"},"nodeType":"YulFunctionCall","src":"12866:15:26"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12883:8:26","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12859:6:26"},"nodeType":"YulFunctionCall","src":"12859:33:26"},"nodeType":"YulExpressionStatement","src":"12859:33:26"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12772:6:26","type":""}],"src":"12674:225:26"},{"body":{"nodeType":"YulBlock","src":"13051:220:26","statements":[{"nodeType":"YulAssignment","src":"13061:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13127:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"13132:2:26","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13068:58:26"},"nodeType":"YulFunctionCall","src":"13068:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13061:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13233:3:26"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13144:88:26"},"nodeType":"YulFunctionCall","src":"13144:93:26"},"nodeType":"YulExpressionStatement","src":"13144:93:26"},{"nodeType":"YulAssignment","src":"13246:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13257:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"13262:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13253:3:26"},"nodeType":"YulFunctionCall","src":"13253:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13246:3:26"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13039:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13047:3:26","type":""}],"src":"12905:366:26"},{"body":{"nodeType":"YulBlock","src":"13448:248:26","statements":[{"nodeType":"YulAssignment","src":"13458:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13470:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:26"},"nodeType":"YulFunctionCall","src":"13466:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13458:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13505:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13516:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13501:3:26"},"nodeType":"YulFunctionCall","src":"13501:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13524:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"13530:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13520:3:26"},"nodeType":"YulFunctionCall","src":"13520:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13494:6:26"},"nodeType":"YulFunctionCall","src":"13494:47:26"},"nodeType":"YulExpressionStatement","src":"13494:47:26"},{"nodeType":"YulAssignment","src":"13550:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13684:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13558:124:26"},"nodeType":"YulFunctionCall","src":"13558:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13550:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13428:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13443:4:26","type":""}],"src":"13277:419:26"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561000f575f80fd5b50600436106100a7575f3560e01c8063395093511161006f578063395093511461016557806370a082311461019557806395d89b41146101c5578063a457c2d7146101e3578063a9059cbb14610213578063dd62ed3e14610243576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f80fd5b6100b3610273565b6040516100c09190610ae1565b60405180910390f35b6100e360048036038101906100de9190610b92565b610303565b6040516100f09190610bea565b60405180910390f35b610101610325565b60405161010e9190610c12565b60405180910390f35b610131600480360381019061012c9190610c2b565b61032e565b60405161013e9190610bea565b60405180910390f35b61014f61035c565b60405161015c9190610c96565b60405180910390f35b61017f600480360381019061017a9190610b92565b610364565b60405161018c9190610bea565b60405180910390f35b6101af60048036038101906101aa9190610caf565b61039a565b6040516101bc9190610c12565b60405180910390f35b6101cd6103e0565b6040516101da9190610ae1565b60405180910390f35b6101fd60048036038101906101f89190610b92565b610470565b60405161020a9190610bea565b60405180910390f35b61022d60048036038101906102289190610b92565b6104e5565b60405161023a9190610bea565b60405180910390f35b61025d60048036038101906102589190610cda565b610507565b60405161026a9190610c12565b60405180910390f35b60606036805461028290610d45565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610d45565b80156102f95780601f106102d0576101008083540402835291602001916102f9565b820191905f5260205f20905b8154815290600101906020018083116102dc57829003601f168201915b5050505050905090565b5f8061030d610589565b905061031a818585610590565b600191505092915050565b5f603554905090565b5f80610338610589565b9050610345858285610753565b6103508585856107de565b60019150509392505050565b5f6012905090565b5f8061036e610589565b905061038f8185856103808589610507565b61038a9190610da2565b610590565b600191505092915050565b5f60335f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060603780546103ef90610d45565b80601f016020809104026020016040519081016040528092919081815260200182805461041b90610d45565b80156104665780601f1061043d57610100808354040283529160200191610466565b820191905f5260205f20905b81548152906001019060200180831161044957829003601f168201915b5050505050905090565b5f8061047a610589565b90505f6104878286610507565b9050838110156104cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c390610e45565b60405180910390fd5b6104d98286868403610590565b60019250505092915050565b5f806104ef610589565b90506104fc8185856107de565b600191505092915050565b5f60345f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f590610ed3565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361066c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066390610f61565b60405180910390fd5b8060345f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107469190610c12565b60405180910390a3505050565b5f61075e8484610507565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107d857818110156107ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c190610fc9565b60405180910390fd5b6107d78484848403610590565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084390611057565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b1906110e5565b60405180910390fd5b6108c5838383610a4d565b5f60335f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610949576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094090611173565b60405180910390fd5b81810360335f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508160335f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a349190610c12565b60405180910390a3610a47848484610a52565b50505050565b505050565b505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610a8e578082015181840152602081019050610a73565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610ab382610a57565b610abd8185610a61565b9350610acd818560208601610a71565b610ad681610a99565b840191505092915050565b5f6020820190508181035f830152610af98184610aa9565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b2e82610b05565b9050919050565b610b3e81610b24565b8114610b48575f80fd5b50565b5f81359050610b5981610b35565b92915050565b5f819050919050565b610b7181610b5f565b8114610b7b575f80fd5b50565b5f81359050610b8c81610b68565b92915050565b5f8060408385031215610ba857610ba7610b01565b5b5f610bb585828601610b4b565b9250506020610bc685828601610b7e565b9150509250929050565b5f8115159050919050565b610be481610bd0565b82525050565b5f602082019050610bfd5f830184610bdb565b92915050565b610c0c81610b5f565b82525050565b5f602082019050610c255f830184610c03565b92915050565b5f805f60608486031215610c4257610c41610b01565b5b5f610c4f86828701610b4b565b9350506020610c6086828701610b4b565b9250506040610c7186828701610b7e565b9150509250925092565b5f60ff82169050919050565b610c9081610c7b565b82525050565b5f602082019050610ca95f830184610c87565b92915050565b5f60208284031215610cc457610cc3610b01565b5b5f610cd184828501610b4b565b91505092915050565b5f8060408385031215610cf057610cef610b01565b5b5f610cfd85828601610b4b565b9250506020610d0e85828601610b4b565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610d5c57607f821691505b602082108103610d6f57610d6e610d18565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610dac82610b5f565b9150610db783610b5f565b9250828201905080821115610dcf57610dce610d75565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f610e2f602583610a61565b9150610e3a82610dd5565b604082019050919050565b5f6020820190508181035f830152610e5c81610e23565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f610ebd602483610a61565b9150610ec882610e63565b604082019050919050565b5f6020820190508181035f830152610eea81610eb1565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f610f4b602283610a61565b9150610f5682610ef1565b604082019050919050565b5f6020820190508181035f830152610f7881610f3f565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f610fb3601d83610a61565b9150610fbe82610f7f565b602082019050919050565b5f6020820190508181035f830152610fe081610fa7565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f611041602583610a61565b915061104c82610fe7565b604082019050919050565b5f6020820190508181035f83015261106e81611035565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f6110cf602383610a61565b91506110da82611075565b604082019050919050565b5f6020820190508181035f8301526110fc816110c3565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f61115d602683610a61565b915061116882611103565b604082019050919050565b5f6020820190508181035f83015261118a81611151565b905091905056fea2646970667358221220451729fc3d679c79b138e8016c6afaaa85eeb229c8160a5e8a1fd09bf7c2d33464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x243 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x147 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x325 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xC96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xCAF JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CD PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x258 SWAP2 SWAP1 PUSH2 0xCDA JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x282 SWAP1 PUSH2 0xD45 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AE SWAP1 PUSH2 0xD45 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x30D PUSH2 0x589 JUMP JUMPDEST SWAP1 POP PUSH2 0x31A DUP2 DUP6 DUP6 PUSH2 0x590 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x338 PUSH2 0x589 JUMP JUMPDEST SWAP1 POP PUSH2 0x345 DUP6 DUP3 DUP6 PUSH2 0x753 JUMP JUMPDEST PUSH2 0x350 DUP6 DUP6 DUP6 PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x36E PUSH2 0x589 JUMP JUMPDEST SWAP1 POP PUSH2 0x38F DUP2 DUP6 DUP6 PUSH2 0x380 DUP6 DUP10 PUSH2 0x507 JUMP JUMPDEST PUSH2 0x38A SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH2 0x590 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x33 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x3EF SWAP1 PUSH2 0xD45 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x41B SWAP1 PUSH2 0xD45 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x466 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x43D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x466 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x449 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x47A PUSH2 0x589 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x487 DUP3 DUP7 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C3 SWAP1 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4D9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x590 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4EF PUSH2 0x589 JUMP JUMPDEST SWAP1 POP PUSH2 0x4FC DUP2 DUP6 DUP6 PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x34 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F5 SWAP1 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x663 SWAP1 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x746 SWAP2 SWAP1 PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x75E DUP5 DUP5 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7D8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C1 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x590 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x84C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x843 SWAP1 PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B1 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C5 DUP4 DUP4 DUP4 PUSH2 0xA4D JUMP JUMPDEST PUSH0 PUSH1 0x33 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x949 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x940 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA34 SWAP2 SWAP1 PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA47 DUP5 DUP5 DUP5 PUSH2 0xA52 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA8E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA73 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAB3 DUP3 PUSH2 0xA57 JUMP JUMPDEST PUSH2 0xABD DUP2 DUP6 PUSH2 0xA61 JUMP JUMPDEST SWAP4 POP PUSH2 0xACD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA71 JUMP JUMPDEST PUSH2 0xAD6 DUP2 PUSH2 0xA99 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAF9 DUP2 DUP5 PUSH2 0xAA9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB2E DUP3 PUSH2 0xB05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3E DUP2 PUSH2 0xB24 JUMP JUMPDEST DUP2 EQ PUSH2 0xB48 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB59 DUP2 PUSH2 0xB35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB71 DUP2 PUSH2 0xB5F JUMP JUMPDEST DUP2 EQ PUSH2 0xB7B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8C DUP2 PUSH2 0xB68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBA8 JUMPI PUSH2 0xBA7 PUSH2 0xB01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBB5 DUP6 DUP3 DUP7 ADD PUSH2 0xB4B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBC6 DUP6 DUP3 DUP7 ADD PUSH2 0xB7E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBE4 DUP2 PUSH2 0xBD0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBFD PUSH0 DUP4 ADD DUP5 PUSH2 0xBDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC0C DUP2 PUSH2 0xB5F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC25 PUSH0 DUP4 ADD DUP5 PUSH2 0xC03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC42 JUMPI PUSH2 0xC41 PUSH2 0xB01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC4F DUP7 DUP3 DUP8 ADD PUSH2 0xB4B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC60 DUP7 DUP3 DUP8 ADD PUSH2 0xB4B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC71 DUP7 DUP3 DUP8 ADD PUSH2 0xB7E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC90 DUP2 PUSH2 0xC7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCA9 PUSH0 DUP4 ADD DUP5 PUSH2 0xC87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC4 JUMPI PUSH2 0xCC3 PUSH2 0xB01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCD1 DUP5 DUP3 DUP6 ADD PUSH2 0xB4B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCF0 JUMPI PUSH2 0xCEF PUSH2 0xB01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCFD DUP6 DUP3 DUP7 ADD PUSH2 0xB4B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD0E DUP6 DUP3 DUP7 ADD PUSH2 0xB4B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD5C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD6F JUMPI PUSH2 0xD6E PUSH2 0xD18 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xDAC DUP3 PUSH2 0xB5F JUMP JUMPDEST SWAP2 POP PUSH2 0xDB7 DUP4 PUSH2 0xB5F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDCF JUMPI PUSH2 0xDCE PUSH2 0xD75 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE2F PUSH1 0x25 DUP4 PUSH2 0xA61 JUMP JUMPDEST SWAP2 POP PUSH2 0xE3A DUP3 PUSH2 0xDD5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE5C DUP2 PUSH2 0xE23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEBD PUSH1 0x24 DUP4 PUSH2 0xA61 JUMP JUMPDEST SWAP2 POP PUSH2 0xEC8 DUP3 PUSH2 0xE63 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEEA DUP2 PUSH2 0xEB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF4B PUSH1 0x22 DUP4 PUSH2 0xA61 JUMP JUMPDEST SWAP2 POP PUSH2 0xF56 DUP3 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF78 DUP2 PUSH2 0xF3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFB3 PUSH1 0x1D DUP4 PUSH2 0xA61 JUMP JUMPDEST SWAP2 POP PUSH2 0xFBE DUP3 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFE0 DUP2 PUSH2 0xFA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1041 PUSH1 0x25 DUP4 PUSH2 0xA61 JUMP JUMPDEST SWAP2 POP PUSH2 0x104C DUP3 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x106E DUP2 PUSH2 0x1035 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10CF PUSH1 0x23 DUP4 PUSH2 0xA61 JUMP JUMPDEST SWAP2 POP PUSH2 0x10DA DUP3 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10FC DUP2 PUSH2 0x10C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x115D PUSH1 0x26 DUP4 PUSH2 0xA61 JUMP JUMPDEST SWAP2 POP PUSH2 0x1168 DUP3 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x118A DUP2 PUSH2 0x1151 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT OR 0x29 0xFC RETURNDATASIZE PUSH8 0x9C79B138E8016C6A STATICCALL 0xAA DUP6 0xEE 0xB2 0x29 0xC8 AND EXP 0x5E DUP11 0x1F 0xD0 SWAP12 0xF7 0xC2 0xD3 CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1611:11861:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2495:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4781:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3592:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5540:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3441:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6191:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3756:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2706:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6912:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4077:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4324:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2495:98;2549:13;2581:5;2574:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2495:98;:::o;4781:197::-;4864:4;4880:13;4896:12;:10;:12::i;:::-;4880:28;;4918:32;4927:5;4934:7;4943:6;4918:8;:32::i;:::-;4967:4;4960:11;;;4781:197;;;;:::o;3592:106::-;3653:7;3679:12;;3672:19;;3592:106;:::o;5540:256::-;5637:4;5653:15;5671:12;:10;:12::i;:::-;5653:30;;5693:38;5709:4;5715:7;5724:6;5693:15;:38::i;:::-;5741:27;5751:4;5757:2;5761:6;5741:9;:27::i;:::-;5785:4;5778:11;;;5540:256;;;;;:::o;3441:91::-;3499:5;3523:2;3516:9;;3441:91;:::o;6191:234::-;6279:4;6295:13;6311:12;:10;:12::i;:::-;6295:28;;6333:64;6342:5;6349:7;6386:10;6358:25;6368:5;6375:7;6358:9;:25::i;:::-;:38;;;;:::i;:::-;6333:8;:64::i;:::-;6414:4;6407:11;;;6191:234;;;;:::o;3756:125::-;3830:7;3856:9;:18;3866:7;3856:18;;;;;;;;;;;;;;;;3849:25;;3756:125;;;:::o;2706:102::-;2762:13;2794:7;2787:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2706:102;:::o;6912:427::-;7005:4;7021:13;7037:12;:10;:12::i;:::-;7021:28;;7059:24;7086:25;7096:5;7103:7;7086:9;:25::i;:::-;7059:52;;7149:15;7129:16;:35;;7121:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;7240:60;7249:5;7256:7;7284:15;7265:16;:34;7240:8;:60::i;:::-;7328:4;7321:11;;;;6912:427;;;;:::o;4077:189::-;4156:4;4172:13;4188:12;:10;:12::i;:::-;4172:28;;4210;4220:5;4227:2;4231:6;4210:9;:28::i;:::-;4255:4;4248:11;;;4077:189;;;;:::o;4324:149::-;4413:7;4439:11;:18;4451:5;4439:18;;;;;;;;;;;;;;;:27;4458:7;4439:27;;;;;;;;;;;;;;;;4432:34;;4324:149;;;;:::o;850:96:15:-;903:7;929:10;922:17;;850:96;:::o;10794:340:8:-;10912:1;10895:19;;:5;:19;;;10887:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10992:1;10973:21;;:7;:21;;;10965:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11074:6;11044:11;:18;11056:5;11044:18;;;;;;;;;;;;;;;:27;11063:7;11044:27;;;;;;;;;;;;;;;:36;;;;11111:7;11095:32;;11104:5;11095:32;;;11120:6;11095:32;;;;;;:::i;:::-;;;;;;;;10794:340;;;:::o;11415:411::-;11515:24;11542:25;11552:5;11559:7;11542:9;:25::i;:::-;11515:52;;11601:17;11581:16;:37;11577:243;;11662:6;11642:16;:26;;11634:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11744:51;11753:5;11760:7;11788:6;11769:16;:25;11744:8;:51::i;:::-;11577:243;11505:321;11415:411;;;:::o;7793:788::-;7905:1;7889:18;;:4;:18;;;7881:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7981:1;7967:16;;:2;:16;;;7959:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;8034:38;8055:4;8061:2;8065:6;8034:20;:38::i;:::-;8083:19;8105:9;:15;8115:4;8105:15;;;;;;;;;;;;;;;;8083:37;;8153:6;8138:11;:21;;8130:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;8268:6;8254:11;:20;8236:9;:15;8246:4;8236:15;;;;;;;;;;;;;;;:38;;;;8468:6;8451:9;:13;8461:2;8451:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8515:2;8500:26;;8509:4;8500:26;;;8519:6;8500:26;;;;;;:::i;:::-;;;;;;;;8537:37;8557:4;8563:2;8567:6;8537:19;:37::i;:::-;7871:710;7793:788;;;:::o;12410:91::-;;;;:::o;13089:90::-;;;;:::o;7:99:26:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee\",\"dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":542,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":545,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2898,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":850,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":856,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":858,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":860,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":862,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1442,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"IERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol":{"ERC20PermitUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","eip712Domain()":"84b0196e","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:storage-size\":\"51\",\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"_PERMIT_TYPEHASH_DEPRECATED_SLOT\":{\"custom:oz-renamed-from\":\"_PERMIT_TYPEHASH\",\"details\":\"In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`. However, to ensure consistency with the upgradeable transpiler, we will continue to reserve a slot.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":\"ERC20PermitUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol\":{\"keccak256\":\"0xe562dab443278837fa50faddb76743399e942181881db8dccaea3bd1712994db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79ebe0e661396045cefe94f4256398cf632756d779a6871319db374c9eb128c9\",\"dweb:/ipfs/QmfCTCivb9fFhyCX8hzushzcKunvKL2N9RDsnRNdvbd11M\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee\",\"dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x3988ac03e4819acd4b5adf41de7d43c1471748ddc2d73d2c7aca1e3827402e5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1cabb782a72f8d9f5b7df868144e78c048be74b5bdc0799a5f2580267be4d32\",\"dweb:/ipfs/QmRoUEeKUgp6DeuZAx3a3C1Gy2ySmZfVu639a1TvEBA3SA\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce6e5ae4633559c2aad156be884a96f7a9beb8dd31b1b630a6de55972e3af622\",\"dweb:/ipfs/QmQasz4sQoexkrvB7wCQAY6NbMoCtPS7AqomymRoJGYz85\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0xeb8d6be406a373771724922eb41b5d593bc8e2dc705daa22cd1145cfc8f5a3a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dcf8f1b2f1869895bffaa1d83ea0e3ab5b42275c97248eda76441e64b343b66\",\"dweb:/ipfs/QmRqs6vX3dnVkRtdXmrxP7a677eaNnTUjY48DT96q6dMcZ\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":542,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":545,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2898,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":850,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":856,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":858,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":860,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":862,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1442,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"},{"astId":3586,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_hashedName","offset":0,"slot":"101","type":"t_bytes32"},{"astId":3589,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_hashedVersion","offset":0,"slot":"102","type":"t_bytes32"},{"astId":3591,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_name","offset":0,"slot":"103","type":"t_string_storage"},{"astId":3593,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_version","offset":0,"slot":"104","type":"t_string_storage"},{"astId":3851,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"__gap","offset":0,"slot":"105","type":"t_array(t_uint256)48_storage"},{"astId":1547,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_nonces","offset":0,"slot":"153","type":"t_mapping(t_address,t_struct(Counter)2905_storage)"},{"astId":1555,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","offset":0,"slot":"154","type":"t_bytes32"},{"astId":1711,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"__gap","offset":0,"slot":"155","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)48_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[48]","numberOfBytes":"1536"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Counter)2905_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct CountersUpgradeable.Counter)","numberOfBytes":"32","value":"t_struct(Counter)2905_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Counter)2905_storage":{"encoding":"inplace","label":"struct CountersUpgradeable.Counter","members":[{"astId":2904,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol":{"ERC20VotesUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20VotesUpgradeable.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20VotesUpgradeable.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's, and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1. NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting power can be queried through the public accessors {getVotes} and {getPastVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked. _Available since v4.2._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `timepoint` must be in the past\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `timepoint`. Requirements: - `timepoint` must be in the past\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol\":\"ERC20VotesUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol\":{\"keccak256\":\"0x2d600bbef9320309cd2a86c1d087eb9d6dbcc00430713ee54bbc5c5a2a11ba31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52a5380b861d676adef15f33f8f643e236a1acb2d9456beb4065307eaa22bc2a\",\"dweb:/ipfs/QmdwSfxrafQubVvCoQCU5T7bbPR8JDWU1WotSDXSiUdm33\"]},\"@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol\":{\"keccak256\":\"0xe562dab443278837fa50faddb76743399e942181881db8dccaea3bd1712994db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79ebe0e661396045cefe94f4256398cf632756d779a6871319db374c9eb128c9\",\"dweb:/ipfs/QmfCTCivb9fFhyCX8hzushzcKunvKL2N9RDsnRNdvbd11M\"]},\"@openzeppelin/contracts-upgradeable/interfaces/IERC5805Upgradeable.sol\":{\"keccak256\":\"0x19848eec9045c8b91f1ab6b1853966443e3e36bcbc307593ed37a9f0df179d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a07972c1330ee99a5d051b393260e01412ac4c14c7bc4d75d80b7cce291a6412\",\"dweb:/ipfs/QmQx1ZiAo4AbSobN41c1xUEtyX1QejydWCmY7Sj3H5aDNv\"]},\"@openzeppelin/contracts-upgradeable/interfaces/IERC6372Upgradeable.sol\":{\"keccak256\":\"0x3026befd6d69d1b46960bdc35a2ad37c0e1352f26983ee3728dd61fd32aa308a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2001b7209fd4920ec7674f194db7fe163dfea7a7af2dd25fe6c0e5a94dc595c\",\"dweb:/ipfs/QmXX2zTFyiNWoDxivV3trKcKWifAENMqNAB34NgjWq5feX\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee\",\"dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x3988ac03e4819acd4b5adf41de7d43c1471748ddc2d73d2c7aca1e3827402e5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1cabb782a72f8d9f5b7df868144e78c048be74b5bdc0799a5f2580267be4d32\",\"dweb:/ipfs/QmRoUEeKUgp6DeuZAx3a3C1Gy2ySmZfVu639a1TvEBA3SA\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol\":{\"keccak256\":\"0x435286e01fcfb0bed104e44b9bf9d8abfe9f7b0a8f576e5bbef5eb91fe55e1d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22e9068747b6a7d9de3730525e09a369f65991c88377499582c1b8fe92961a27\",\"dweb:/ipfs/QmafdiqMV6eGdZbm9wJRr2ExhhAZ5uXNtyqqwvmgyzwEaF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce6e5ae4633559c2aad156be884a96f7a9beb8dd31b1b630a6de55972e3af622\",\"dweb:/ipfs/QmQasz4sQoexkrvB7wCQAY6NbMoCtPS7AqomymRoJGYz85\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0xeb8d6be406a373771724922eb41b5d593bc8e2dc705daa22cd1145cfc8f5a3a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dcf8f1b2f1869895bffaa1d83ea0e3ab5b42275c97248eda76441e64b343b66\",\"dweb:/ipfs/QmRqs6vX3dnVkRtdXmrxP7a677eaNnTUjY48DT96q6dMcZ\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":542,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":545,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2898,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":850,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":856,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":858,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":860,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":862,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1442,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"},{"astId":3586,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_hashedName","offset":0,"slot":"101","type":"t_bytes32"},{"astId":3589,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_hashedVersion","offset":0,"slot":"102","type":"t_bytes32"},{"astId":3591,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_name","offset":0,"slot":"103","type":"t_string_storage"},{"astId":3593,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_version","offset":0,"slot":"104","type":"t_string_storage"},{"astId":3851,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"__gap","offset":0,"slot":"105","type":"t_array(t_uint256)48_storage"},{"astId":1547,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_nonces","offset":0,"slot":"153","type":"t_mapping(t_address,t_struct(Counter)2905_storage)"},{"astId":1555,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","offset":0,"slot":"154","type":"t_bytes32"},{"astId":1711,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"__gap","offset":0,"slot":"155","type":"t_array(t_uint256)49_storage"},{"astId":1753,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_delegates","offset":0,"slot":"204","type":"t_mapping(t_address,t_address)"},{"astId":1759,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_checkpoints","offset":0,"slot":"205","type":"t_mapping(t_address,t_array(t_struct(Checkpoint)1744_storage)dyn_storage)"},{"astId":1763,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_totalSupplyCheckpoints","offset":0,"slot":"206","type":"t_array(t_struct(Checkpoint)1744_storage)dyn_storage"},{"astId":2465,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"__gap","offset":0,"slot":"207","type":"t_array(t_uint256)47_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(Checkpoint)1744_storage)dyn_storage":{"base":"t_struct(Checkpoint)1744_storage","encoding":"dynamic_array","label":"struct ERC20VotesUpgradeable.Checkpoint[]","numberOfBytes":"32"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)47_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[47]","numberOfBytes":"1504"},"t_array(t_uint256)48_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[48]","numberOfBytes":"1536"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_array(t_struct(Checkpoint)1744_storage)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])","numberOfBytes":"32","value":"t_array(t_struct(Checkpoint)1744_storage)dyn_storage"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Counter)2905_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct CountersUpgradeable.Counter)","numberOfBytes":"32","value":"t_struct(Counter)2905_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Checkpoint)1744_storage":{"encoding":"inplace","label":"struct ERC20VotesUpgradeable.Checkpoint","members":[{"astId":1741,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"fromBlock","offset":0,"slot":"0","type":"t_uint32"},{"astId":1743,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"votes","offset":4,"slot":"0","type":"t_uint224"}],"numberOfBytes":"32"},"t_struct(Counter)2905_storage":{"encoding":"inplace","label":"struct CountersUpgradeable.Counter","members":[{"astId":2904,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:ERC20VotesUpgradeable","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_uint224":{"encoding":"inplace","label":"uint224","numberOfBytes":"28"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"IERC20MetadataUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":\"IERC20MetadataUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol":{"IERC20PermitUpgradeable":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":\"IERC20PermitUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce6e5ae4633559c2aad156be884a96f7a9beb8dd31b1b630a6de55972e3af622\",\"dweb:/ipfs/QmQasz4sQoexkrvB7wCQAY6NbMoCtPS7AqomymRoJGYz85\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122034e78351c953f4f127c8f748a76e42136d2978c5c3ec53466665a6354847ad0464736f6c63430008140033","opcodes":"PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0xE7 DUP4 MLOAD 0xC9 MSTORE8 DELEGATECALL CALL 0x27 0xC8 0xF7 BASEFEE 0xA7 PUSH15 0x42136D2978C5C3EC53466665A63548 SELFBALANCE 0xAD DIV PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"194:9180:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122034e78351c953f4f127c8f748a76e42136d2978c5c3ec53466665a6354847ad0464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0xE7 DUP4 MLOAD 0xC9 MSTORE8 DELEGATECALL CALL 0x27 0xC8 0xF7 BASEFEE 0xA7 PUSH15 0x42136D2978C5C3EC53466665A63548 SELFBALANCE 0xAD DIV PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"194:9180:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":542,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":545,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2898,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"CountersUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c67891dcd1df9cc99164725676b09646c97e52ed7e6856e112bccf251d61563664736f6c63430008140033","opcodes":"PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 PUSH25 0x91DCD1DF9CC99164725676B09646C97E52ED7E6856E112BCCF 0x25 SAR PUSH2 0x5636 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"424:982:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c67891dcd1df9cc99164725676b09646c97e52ed7e6856e112bccf251d61563664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 PUSH25 0x91DCD1DF9CC99164725676B09646C97E52ED7E6856E112BCCF 0x25 SAR PUSH2 0x5636 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"424:982:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":\"CountersUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"StringsUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122096b4f1741626d501915da9730b2b3956d102369f5bb94b8aae48b2541283a2df64736f6c63430008140033","opcodes":"PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0xB4 CALL PUSH21 0x1626D501915DA9730B2B3956D102369F5BB94B8AAE BASEFEE 0xB2 SLOAD SLT DUP4 LOG2 0xDF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"242:2603:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122096b4f1741626d501915da9730b2b3956d102369f5bb94b8aae48b2541283a2df64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0xB4 CALL PUSH21 0x1626D501915DA9730B2B3956D102369F5BB94B8AAE BASEFEE 0xB2 SLOAD SLT DUP4 LOG2 0xDF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"242:2603:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":\"StringsUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":{"ECDSAUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122060a28c4e11d1bdbb211a64b5ea85b0776e173104e681315e64866bd41d8795b964736f6c63430008140033","opcodes":"PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xA2 DUP13 0x4E GT 0xD1 0xBD 0xBB 0x21 BYTE PUSH5 0xB5EA85B077 PUSH15 0x173104E681315E64866BD41D8795B9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"380:8783:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122060a28c4e11d1bdbb211a64b5ea85b0776e173104e681315e64866bd41d8795b964736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xA2 DUP13 0x4E GT 0xD1 0xBD 0xBB 0x21 BYTE PUSH5 0xB5EA85B077 PUSH15 0x173104E681315E64866BD41D8795B9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"380:8783:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":\"ECDSAUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"EIP712Upgradeable":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:storage-size\":\"52\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage. _Available since v3.4._\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"_hashedName\":{\"custom:oz-renamed-from\":\"_HASHED_NAME\"},\"_hashedVersion\":{\"custom:oz-renamed-from\":\"_HASHED_VERSION\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":\"EIP712Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol\":{\"keccak256\":\"0xe562dab443278837fa50faddb76743399e942181881db8dccaea3bd1712994db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79ebe0e661396045cefe94f4256398cf632756d779a6871319db374c9eb128c9\",\"dweb:/ipfs/QmfCTCivb9fFhyCX8hzushzcKunvKL2N9RDsnRNdvbd11M\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0xeb8d6be406a373771724922eb41b5d593bc8e2dc705daa22cd1145cfc8f5a3a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dcf8f1b2f1869895bffaa1d83ea0e3ab5b42275c97248eda76441e64b343b66\",\"dweb:/ipfs/QmRqs6vX3dnVkRtdXmrxP7a677eaNnTUjY48DT96q6dMcZ\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":542,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":545,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3586,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable","label":"_hashedName","offset":0,"slot":"1","type":"t_bytes32"},{"astId":3589,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable","label":"_hashedVersion","offset":0,"slot":"2","type":"t_bytes32"},{"astId":3591,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":3593,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable","label":"_version","offset":0,"slot":"4","type":"t_string_storage"},{"astId":3851,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable","label":"__gap","offset":0,"slot":"5","type":"t_array(t_uint256)48_storage"}],"types":{"t_array(t_uint256)48_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[48]","numberOfBytes":"1536"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":542,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":545,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3895,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"IERC165Upgradeable":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"MathUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e40736fc3f3726e676c83d20e6a9cb72d41e00c10244acb9b9cc749486e4df6764736f6c63430008140033","opcodes":"PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 SMOD CALLDATASIZE 0xFC EXTCODEHASH CALLDATACOPY 0x26 0xE6 PUSH23 0xC83D20E6A9CB72D41E00C10244ACB9B9CC749486E4DF67 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"202:12593:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e40736fc3f3726e676c83d20e6a9cb72d41e00c10244acb9b9cc749486e4df6764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 SMOD CALLDATASIZE 0xFC EXTCODEHASH CALLDATACOPY 0x26 0xE6 PUSH23 0xC83D20E6A9CB72D41E00C10244ACB9B9CC749486E4DF67 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"202:12593:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":\"MathUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol":{"SafeCastUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220673ea70de32902f24eacc7ea13749f1209b22b230ce0496fefa4d487624141e964736f6c63430008140033","opcodes":"PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x3EA70DE32902F24E 0xAC 0xC7 0xEA SGT PUSH21 0x9F1209B22B230CE0496FEFA4D487624141E964736F PUSH13 0x63430008140033000000000000 ","sourceMap":"927:34164:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220673ea70de32902f24eacc7ea13749f1209b22b230ce0496fefa4d487624141e964736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x3EA70DE32902F24E 0xAC 0xC7 0xEA SGT PUSH21 0x9F1209B22B230CE0496FEFA4D487624141E964736F PUSH13 0x63430008140033000000000000 ","sourceMap":"927:34164:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol\":\"SafeCastUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol":{"SignedMathUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b9535cb534a7d4f51fa10c5a3586b117c7bb69a4bcc8f2d749836ad9cfe5e0ca64736f6c63430008140033","opcodes":"PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 MSTORE8 0x5C 0xB5 CALLVALUE 0xA7 0xD4 CREATE2 0x1F LOG1 0xC GAS CALLDATALOAD DUP7 0xB1 OR 0xC7 0xBB PUSH10 0xA4BCC8F2D749836AD9CF 0xE5 0xE0 0xCA PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"215:1058:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b9535cb534a7d4f51fa10c5a3586b117c7bb69a4bcc8f2d749836ad9cfe5e0ca64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 MSTORE8 0x5C 0xB5 CALLVALUE 0xA7 0xD4 CREATE2 0x1F LOG1 0xC GAS CALLDATALOAD DUP7 0xB1 OR 0xC7 0xBB PUSH10 0xA4BCC8F2D749836AD9CF 0xE5 0xE0 0xCA PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"215:1058:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":\"SignedMathUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/MindplexUpgradeableToken.sol":{"MindplexUpgradeableToken":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20VotesUpgradeable.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561000f575f80fd5b5061645e806200001e5f395ff3fe608060405234801561000f575f80fd5b506004361061025c575f3560e01c80636fcfff45116101445780639ab24eb0116100c1578063d505accf11610085578063d505accf14610774578063d539139314610790578063d547741f146107ae578063dd62ed3e146107ca578063e63ab1e9146107fa578063f1127ed8146108185761025c565b80639ab24eb0146106aa578063a217fddf146106da578063a457c2d7146106f8578063a9059cbb14610728578063c3cda520146107585761025c565b806384b0196e1161010857806384b0196e146105ea5780638e539e8c1461060e57806391d148541461063e57806391ddadf41461066e57806395d89b411461068c5761025c565b80636fcfff451461053457806370a082311461056457806379cc6790146105945780637ecebe00146105b05780638456cb59146105e05761025c565b806336568abe116101dd57806342966c68116101a157806342966c68146104745780634bf5d7e9146104905780634cd88b76146104ae578063587cde1e146104ca5780635c19a95c146104fa5780635c975abb146105165761025c565b806336568abe146103d257806339509351146103ee5780633a46b1a81461041e5780633f4ba83a1461044e57806340c10f19146104585761025c565b8063248a9ca311610224578063248a9ca31461032c5780632f2ff15d1461035c578063313ce5671461037857806332cb6b0c146103965780633644e515146103b45761025c565b806301ffc9a71461026057806306fdde0314610290578063095ea7b3146102ae57806318160ddd146102de57806323b872dd146102fc575b5f80fd5b61027a6004803603810190610275919061420b565b610848565b6040516102879190614250565b60405180910390f35b6102986108c1565b6040516102a591906142f3565b60405180910390f35b6102c860048036038101906102c391906143a0565b610951565b6040516102d59190614250565b60405180910390f35b6102e6610973565b6040516102f391906143ed565b60405180910390f35b61031660048036038101906103119190614406565b61097c565b6040516103239190614250565b60405180910390f35b61034660048036038101906103419190614489565b6109aa565b60405161035391906144c3565b60405180910390f35b610376600480360381019061037191906144dc565b6109c7565b005b6103806109e8565b60405161038d9190614535565b60405180910390f35b61039e610a2c565b6040516103ab91906143ed565b60405180910390f35b6103bc610a4c565b6040516103c991906144c3565b60405180910390f35b6103ec60048036038101906103e791906144dc565b610a5a565b005b610408600480360381019061040391906143a0565b610add565b6040516104159190614250565b60405180910390f35b610438600480360381019061043391906143a0565b610b13565b60405161044591906143ed565b60405180910390f35b610456610bb4565b005b610472600480360381019061046d91906143a0565b610c4d565b005b61048e6004803603810190610489919061454e565b610dab565b005b610498610dfb565b6040516104a591906142f3565b60405180910390f35b6104c860048036038101906104c391906146a5565b610e89565b005b6104e460048036038101906104df919061471b565b6111fc565b6040516104f19190614755565b60405180910390f35b610514600480360381019061050f919061471b565b611262565b005b61051e611276565b60405161052b9190614250565b60405180910390f35b61054e6004803603810190610549919061471b565b61128c565b60405161055b919061478c565b60405180910390f35b61057e6004803603810190610579919061471b565b6112de565b60405161058b91906143ed565b60405180910390f35b6105ae60048036038101906105a991906143a0565b611324565b005b6105ca60048036038101906105c5919061471b565b61148e565b6040516105d791906143ed565b60405180910390f35b6105e86114db565b005b6105f2611573565b6040516106059796959493929190614896565b60405180910390f35b6106286004803603810190610623919061454e565b61166d565b60405161063591906143ed565b60405180910390f35b610658600480360381019061065391906144dc565b6116d2565b6040516106659190614250565b60405180910390f35b610676611736565b6040516106839190614938565b60405180910390f35b610694611745565b6040516106a191906142f3565b60405180910390f35b6106c460048036038101906106bf919061471b565b6117d5565b6040516106d191906143ed565b60405180910390f35b6106e26118d5565b6040516106ef91906144c3565b60405180910390f35b610712600480360381019061070d91906143a0565b6118db565b60405161071f9190614250565b60405180910390f35b610742600480360381019061073d91906143a0565b611950565b60405161074f9190614250565b60405180910390f35b610772600480360381019061076d919061497b565b611972565b005b61078e60048036038101906107899190614a04565b611a75565b005b610798611bb4565b6040516107a591906144c3565b60405180910390f35b6107c860048036038101906107c391906144dc565b611bd8565b005b6107e460048036038101906107df9190614aa1565b611bf9565b6040516107f191906143ed565b60405180910390f35b610802611c7b565b60405161080f91906144c3565b60405180910390f35b610832600480360381019061082d9190614b09565b611c9f565b60405161083f9190614bb9565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806108ba57506108b982611da9565b5b9050919050565b6060609a80546108d090614bff565b80601f01602080910402602001604051908101604052809291908181526020018280546108fc90614bff565b80156109475780601f1061091e57610100808354040283529160200191610947565b820191905f5260205f20905b81548152906001019060200180831161092a57829003601f168201915b5050505050905090565b5f8061095b611e12565b9050610968818585611e19565b600191505092915050565b5f609954905090565b5f80610986611e12565b9050610993858285611fdc565b61099e858585612067565b60019150509392505050565b5f60655f8381526020019081526020015f20600101549050919050565b6109d0826109aa565b6109d9816122d6565b6109e383836122ea565b505050565b5f6109fd676ceffb00f5b8f42460c01b6123c5565b610a11676f181a4c156b28df60c01b6123c5565b610a25672fd4b306738ce29960c01b6123c5565b6006905090565b6006600a610a3a9190614d8b565b633b9aca00610a499190614dd5565b81565b5f610a556123c8565b905090565b610a62611e12565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610acf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac690614e86565b60405180910390fd5b610ad982826123d6565b5050565b5f80610ae7611e12565b9050610b08818585610af98589611bf9565b610b039190614ea4565b611e19565b600191505092915050565b5f610b1c611736565b65ffffffffffff168210610b65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5c90614f21565b60405180910390fd5b610bac6101315f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20836124b1565b905092915050565b610bc867609999f02b3d32d560c01b6123c5565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610bf2816122d6565b610c0667abe91030000d1ac060c01b6123c5565b610c1a67c59fe76821dd927a60c01b6123c5565b610c2e67bc1dee6fafac93db60c01b6123c5565b610c4267159893534c8de7e060c01b6123c5565b610c4a6125ee565b50565b610c61677e144a1024e2676860c01b6123c5565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610c8b816122d6565b610c9f67e002f4a7f1138ae860c01b6123c5565b610cb367633c34d81d9c2e7a60c01b6123c5565b610cc767c5f2d1228bc0d60d60c01b6123c5565b610cdb67ef978fb6da0fd80560c01b6123c5565b610cef674fdafa4b0cddd4d360c01b6123c5565b6006600a610cfd9190614d8b565b633b9aca00610d0c9190614dd5565b82610d15610973565b610d1f9190614ea4565b1115610d60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5790614faf565b60405180910390fd5b610d7467d53c72cad467e7ba60c01b6123c5565b610d8867344ed792e6fd2a1460c01b6123c5565b610d9c67690192438dc8036160c01b6123c5565b610da68383612650565b505050565b610dbf6777e3700c135e6c4e60c01b6123c5565b610dd367dabd11cca3d2544d60c01b6123c5565b610de767c7f8ab0a5c0665d460c01b6123c5565b610df8610df2611e12565b8261269a565b50565b606043610e06611736565b65ffffffffffff1614610e4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4590615017565b60405180910390fd5b6040518060400160405280601d81526020017f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000815250905090565b610e9d677d1353b017bd2acb60c01b6123c5565b5f8060019054906101000a900460ff16159050808015610ecc575060015f8054906101000a900460ff1660ff16105b80610ef85750610edb306126e4565b158015610ef7575060015f8054906101000a900460ff1660ff16145b5b610f37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2e906150a5565b60405180910390fd5b60015f806101000a81548160ff021916908360ff1602179055508015610f725760015f60016101000a81548160ff0219169083151502179055505b610f8667807a5faab267db3e60c01b6123c5565b610f9a671b87ec61cb2af8fd60c01b6123c5565b610fae6775fb0fffe85d5ba060c01b6123c5565b610fc2676e9287142fa2bf5d60c01b6123c5565b610fcc8383612706565b610fe0675362e89620d126dd60c01b6123c5565b610ff467dc3081c3b05d8e2860c01b6123c5565b610ffd83612762565b61101167535585d7b1c7d4bc60c01b6123c5565b611025674b157aa2e3b72fba60c01b6123c5565b61102d6127f2565b611041670e7a7141161bee4260c01b6123c5565b6110556754aeeb5a2d5cc81460c01b6123c5565b61105d61284a565b61107167c7ef261c6b52e84060c01b6123c5565b61108567ed8bf8d8aa09f5a860c01b6123c5565b6110985f801b611093611e12565b6122ea565b6110ac679fef610354934c3660c01b6123c5565b6110c0675642366cad1df8b960c01b6123c5565b6110f17f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6110ec611e12565b6122ea565b61110567631d5a374bcef4dc60c01b6123c5565b611119672508c509e3bc1ea660c01b6123c5565b61114a7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6611145611e12565b6122ea565b61115e67b2e403d7374d65aa60c01b6123c5565b61117267130d054c74f7230f60c01b6123c5565b61119f61117d611e12565b6006600a61118b9190614d8b565b633b9aca0061119a9190614dd5565b612650565b80156111f7575f8060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516111ee9190615105565b60405180910390a15b505050565b5f6101305f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61127361126d611e12565b8261289a565b50565b5f6101625f9054906101000a900460ff16905090565b5f6112d76101315f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490506129b0565b9050919050565b5f60975f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61133867607442f905452daa60c01b6123c5565b61134c671395f68543aa27f460c01b6123c5565b611360670827047d6b13681e60c01b6123c5565b5f6113728361136d611e12565b611bf9565b90506113886744f3479ec179ef0560c01b6123c5565b61139c67bc481ed37c3138b060c01b6123c5565b6113b067486fc6494b6c978860c01b6123c5565b818110156113f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ea9061518e565b60405180910390fd5b611407678e6de9144bd4ddf760c01b6123c5565b61141b676e67c260954339a060c01b6123c5565b61142f672e7c51116fbfe06f60c01b6123c5565b611443672fa744005f173f6360c01b6123c5565b6114578361144f611e12565b848403611e19565b61146b671af6ea53ee18c33f60c01b6123c5565b61147f6779063f61dd07465460c01b6123c5565b611489838361269a565b505050565b5f6114d460fd5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20612a02565b9050919050565b6114ef67ebb165517487136f60c01b6123c5565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a611519816122d6565b61152c668adad4de1c304a60c01b6123c5565b611540675f719cafd3ed6c9360c01b6123c5565b611554673cbaca61587caa0f60c01b6123c5565b611568670fe0ea4ed91e2d2c60c01b6123c5565b611570612a0e565b50565b5f6060805f805f60605f801b60c95414801561159257505f801b60ca54145b6115d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c8906151f6565b60405180910390fd5b6115d9612a71565b6115e1612b01565b46305f801b5f67ffffffffffffffff811115611600576115ff614581565b5b60405190808252806020026020018201604052801561162e5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b5f611676611736565b65ffffffffffff1682106116bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116b690614f21565b60405180910390fd5b6116cb610132836124b1565b9050919050565b5f60655f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f61174043612b91565b905090565b6060609b805461175490614bff565b80601f016020809104026020016040519081016040528092919081815260200182805461178090614bff565b80156117cb5780601f106117a2576101008083540402835291602001916117cb565b820191905f5260205f20905b8154815290600101906020018083116117ae57829003601f168201915b5050505050905090565b5f806101315f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905090505f81146118ad576101315f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600182038154811061187557611874615214565b5b905f5260205f20015f0160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166118af565b5f5b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16915050919050565b5f801b81565b5f806118e5611e12565b90505f6118f28286611bf9565b905083811015611937576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192e906152b1565b60405180910390fd5b6119448286868403611e19565b60019250505092915050565b5f8061195a611e12565b9050611967818585612067565b600191505092915050565b834211156119b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119ac90615319565b60405180910390fd5b5f611a16611a0e7fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf8989896040516020016119f39493929190615337565b60405160208183030381529060405280519060200120612be5565b858585612bfe565b9050611a2181612c27565b8614611a62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a59906153c4565b60405180910390fd5b611a6c818861289a565b50505050505050565b83421115611ab8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aaf9061542c565b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888611ae68c612c27565b89604051602001611afc9695949392919061544a565b6040516020818303038152906040528051906020012090505f611b1e82612be5565b90505f611b2d82878787612bfe565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611b9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b94906154f3565b60405180910390fd5b611ba88a8a8a611e19565b50505050505050505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b611be1826109aa565b611bea816122d6565b611bf483836123d6565b505050565b5f60985f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b611ca7614169565b6101315f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208263ffffffff1681548110611cfd57611cfc615214565b5b905f5260205f20016040518060400160405290815f82015f9054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020015f820160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611e87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e7e90615581565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611ef5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611eec9061560f565b60405180910390fd5b8060985f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051611fcf91906143ed565b60405180910390a3505050565b5f611fe78484611bf9565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146120615781811015612053576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161204a90615677565b60405180910390fd5b6120608484848403611e19565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036120d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120cc90615705565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612143576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161213a90615793565b60405180910390fd5b61214e838383612c82565b5f60975f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156121d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121c990615821565b60405180910390fd5b81810360975f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508160975f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516122bd91906143ed565b60405180910390a36122d0848484612cfe565b50505050565b6122e7816122e2611e12565b612d4a565b50565b6122f482826116d2565b6123c157600160655f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550612366611e12565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b50565b5f6123d1612dce565b905090565b6123e082826116d2565b156124ad575f60655f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550612452611e12565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b5f80838054905090505f808290506005831115612522575f6124d284612e31565b846124dd919061583f565b9050856124ea8883612f27565b5f015f9054906101000a900463ffffffff1663ffffffff16111561251057809150612520565b60018161251d9190614ea4565b92505b505b5b8082101561257f575f6125368383612f39565b9050856125438883612f27565b5f015f9054906101000a900463ffffffff1663ffffffff16111561256957809150612579565b6001816125769190614ea4565b92505b50612523565b5f81146125c3576125938660018303612f27565b5f0160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166125c5565b5f5b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16935050505092915050565b6125f6612f5e565b5f6101625f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa612639611e12565b6040516126469190614755565b60405180910390a1565b6126646715060568254823a060c01b6123c5565b612678678c6c359bba103ede60c01b6123c5565b61268c6741eb3bcee080785a60c01b6123c5565b6126968282612fa7565b5050565b6126ae675f0acf80ee14088e60c01b6123c5565b6126c267657c1cdd7dd3eef060c01b6123c5565b6126d667a2ae61bcf032aa4160c01b6123c5565b6126e08282613035565b5050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b5f60019054906101000a900460ff16612754576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161274b906158e2565b60405180910390fd5b61275e8282613054565b5050565b5f60019054906101000a900460ff166127b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127a7906158e2565b60405180910390fd5b6127ef816040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152506130c6565b50565b5f60019054906101000a900460ff16612840576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612837906158e2565b60405180910390fd5b61284861314a565b565b5f60019054906101000a900460ff16612898576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161288f906158e2565b60405180910390fd5b565b5f6128a4836111fc565b90505f6128b0846112de565b9050826101305f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a46129aa8284836131b4565b50505050565b5f63ffffffff80168211156129fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129f190615970565b60405180910390fd5b819050919050565b5f815f01549050919050565b612a166133a6565b60016101625f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612a5a611e12565b604051612a679190614755565b60405180910390a1565b606060cb8054612a8090614bff565b80601f0160208091040260200160405190810160405280929190818152602001828054612aac90614bff565b8015612af75780601f10612ace57610100808354040283529160200191612af7565b820191905f5260205f20905b815481529060010190602001808311612ada57829003601f168201915b5050505050905090565b606060cc8054612b1090614bff565b80601f0160208091040260200160405190810160405280929190818152602001828054612b3c90614bff565b8015612b875780601f10612b5e57610100808354040283529160200191612b87565b820191905f5260205f20905b815481529060010190602001808311612b6a57829003601f168201915b5050505050905090565b5f65ffffffffffff8016821115612bdd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bd4906159fe565b60405180910390fd5b819050919050565b5f612bf7612bf16123c8565b836133f0565b9050919050565b5f805f612c0d87878787613430565b91509150612c1a81613508565b8192505050949350505050565b5f8060fd5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050612c7181612a02565b9150612c7c8161366d565b50919050565b612c9667444cc09b6123a02460c01b6123c5565b612c9e6133a6565b612cb26762ff3d194fb103ec60c01b6123c5565b612cc667938a90d94264968d60c01b6123c5565b612cda67d4b19e2bd3ddc3ea60c01b6123c5565b612cee6734e741239a9f760c60c01b6123c5565b612cf9838383613681565b505050565b612d1267bbeee96de4b55cf760c01b6123c5565b612d266797e889cf08d5d19d60c01b6123c5565b612d3a6781f53f79b57312d360c01b6123c5565b612d45838383613686565b505050565b612d5482826116d2565b612dca57612d61816136b1565b612d6e835f1c60206136de565b604051602001612d7f929190615aea565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612dc191906142f3565b60405180910390fd5b5050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f612df8613913565b612e0061397a565b4630604051602001612e16959493929190615b23565b60405160208183030381529060405280519060200120905090565b5f808203612e41575f9050612f22565b5f6001612e4d846139e1565b901c6001901b90506001818481612e6757612e66615b74565b5b048201901c90506001818481612e8057612e7f615b74565b5b048201901c90506001818481612e9957612e98615b74565b5b048201901c90506001818481612eb257612eb1615b74565b5b048201901c90506001818481612ecb57612eca615b74565b5b048201901c90506001818481612ee457612ee3615b74565b5b048201901c90506001818481612efd57612efc615b74565b5b048201901c9050612f1e81828581612f1857612f17615b74565b5b04613ab8565b9150505b919050565b5f825f528160205f2001905092915050565b5f6002828418612f499190615ba1565b828416612f569190614ea4565b905092915050565b612f66611276565b612fa5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f9c90615c1b565b60405180910390fd5b565b612fb18282613ad0565b612fb9613c1f565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612fdf610973565b1115613020576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161301790615ca9565b60405180910390fd5b61302f610132613c4283613c57565b50505050565b61303f8282613f20565b61304e6101326140e583613c57565b50505050565b5f60019054906101000a900460ff166130a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613099906158e2565b60405180910390fd5b81609a90816130b19190615e5b565b5080609b90816130c19190615e5b565b505050565b5f60019054906101000a900460ff16613114576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161310b906158e2565b60405180910390fd5b8160cb90816131239190615e5b565b508060cc90816131339190615e5b565b505f801b60c9819055505f801b60ca819055505050565b5f60019054906101000a900460ff16613198576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161318f906158e2565b60405180910390fd5b5f6101625f6101000a81548160ff021916908315150217905550565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156131ef57505f81115b156133a1575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146132ca575f806132736101315f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206140e585613c57565b915091508473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516132bf929190615f2a565b60405180910390a250505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146133a0575f806133496101315f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20613c4285613c57565b915091508373ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051613395929190615f2a565b60405180910390a250505b5b505050565b6133ae611276565b156133ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016133e590615f9b565b60405180910390fd5b565b5f6040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b5f807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0835f1c1115613468575f6003915091506134ff565b5f6001878787876040515f815260200160405260405161348b9493929190615fb9565b6020604051602081039080840390855afa1580156134ab573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036134f7575f600192509250506134ff565b805f92509250505b94509492505050565b5f600481111561351b5761351a615ffc565b5b81600481111561352e5761352d615ffc565b5b031561366a576001600481111561354857613547615ffc565b5b81600481111561355b5761355a615ffc565b5b0361359b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161359290616073565b60405180910390fd5b600260048111156135af576135ae615ffc565b5b8160048111156135c2576135c1615ffc565b5b03613602576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016135f9906160db565b60405180910390fd5b6003600481111561361657613615615ffc565b5b81600481111561362957613628615ffc565b5b03613669576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161366090616169565b60405180910390fd5b5b50565b6001815f015f828254019250508190555050565b505050565b6136918383836140fa565b6136ac61369d846111fc565b6136a6846111fc565b836131b4565b505050565b60606136d78273ffffffffffffffffffffffffffffffffffffffff16601460ff166136de565b9050919050565b60605f60028360026136f09190614dd5565b6136fa9190614ea4565b67ffffffffffffffff81111561371357613712614581565b5b6040519080825280601f01601f1916602001820160405280156137455781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000815f8151811061377c5761377b615214565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106137df576137de615214565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053505f600184600261381d9190614dd5565b6138279190614ea4565b90505b60018111156138c6577f3031323334353637383961626364656600000000000000000000000000000000600f86166010811061386957613868615214565b5b1a60f81b8282815181106138805761387f615214565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350600485901c9450806138bf90616187565b905061382a565b505f8414613909576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613900906161f8565b60405180910390fd5b8091505092915050565b5f8061391d612a71565b90505f81511115613938578080519060200120915050613977565b5f60c95490505f801b8114613951578092505050613977565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470925050505b90565b5f80613984612b01565b90505f8151111561399f5780805190602001209150506139de565b5f60ca5490505f801b81146139b85780925050506139de565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470925050505b90565b5f805f90505f608084901c1115613a0057608083901c92506080810190505b5f604084901c1115613a1a57604083901c92506040810190505b5f602084901c1115613a3457602083901c92506020810190505b5f601084901c1115613a4e57601083901c92506010810190505b5f600884901c1115613a6857600883901c92506008810190505b5f600484901c1115613a8257600483901c92506004810190505b5f600284901c1115613a9c57600283901c92506002810190505b5f600184901c1115613aaf576001810190505b80915050919050565b5f818310613ac65781613ac8565b825b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603613b3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613b3590616260565b60405180910390fd5b613b495f8383612c82565b8060995f828254613b5a9190614ea4565b925050819055508060975f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508173ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051613c0891906143ed565b60405180910390a3613c1b5f8383612cfe565b5050565b5f7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b5f8183613c4f9190614ea4565b905092915050565b5f805f858054905090505f808214613d1757613c768760018403612f27565b6040518060400160405290815f82015f9054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020015f820160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525050613d51565b60405180604001604052805f63ffffffff1681526020015f7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152505b905080602001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169350613d8684868863ffffffff16565b92505f82118015613dae5750613d9a611736565b65ffffffffffff16815f015163ffffffff16145b15613e1e57613dbc836140ff565b613dc98860018503612f27565b5f0160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff160217905550613f16565b866040518060400160405280613e42613e35611736565b65ffffffffffff166129b0565b63ffffffff168152602001613e56866140ff565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003905f5260205f20015f909190919091505f820151815f015f6101000a81548163ffffffff021916908363ffffffff1602179055506020820151815f0160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555050505b5050935093915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603613f8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613f85906162ee565b60405180910390fd5b613f99825f83612c82565b5f60975f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561401d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016140149061637c565b60405180910390fd5b81810360975f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508160995f82825403925050819055505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516140cd91906143ed565b60405180910390a36140e0835f84612cfe565b505050565b5f81836140f2919061583f565b905092915050565b505050565b5f7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8016821115614161576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016141589061640a565b60405180910390fd5b819050919050565b60405180604001604052805f63ffffffff1681526020015f7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525090565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6141ea816141b6565b81146141f4575f80fd5b50565b5f81359050614205816141e1565b92915050565b5f602082840312156142205761421f6141ae565b5b5f61422d848285016141f7565b91505092915050565b5f8115159050919050565b61424a81614236565b82525050565b5f6020820190506142635f830184614241565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156142a0578082015181840152602081019050614285565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6142c582614269565b6142cf8185614273565b93506142df818560208601614283565b6142e8816142ab565b840191505092915050565b5f6020820190508181035f83015261430b81846142bb565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61433c82614313565b9050919050565b61434c81614332565b8114614356575f80fd5b50565b5f8135905061436781614343565b92915050565b5f819050919050565b61437f8161436d565b8114614389575f80fd5b50565b5f8135905061439a81614376565b92915050565b5f80604083850312156143b6576143b56141ae565b5b5f6143c385828601614359565b92505060206143d48582860161438c565b9150509250929050565b6143e78161436d565b82525050565b5f6020820190506144005f8301846143de565b92915050565b5f805f6060848603121561441d5761441c6141ae565b5b5f61442a86828701614359565b935050602061443b86828701614359565b925050604061444c8682870161438c565b9150509250925092565b5f819050919050565b61446881614456565b8114614472575f80fd5b50565b5f813590506144838161445f565b92915050565b5f6020828403121561449e5761449d6141ae565b5b5f6144ab84828501614475565b91505092915050565b6144bd81614456565b82525050565b5f6020820190506144d65f8301846144b4565b92915050565b5f80604083850312156144f2576144f16141ae565b5b5f6144ff85828601614475565b925050602061451085828601614359565b9150509250929050565b5f60ff82169050919050565b61452f8161451a565b82525050565b5f6020820190506145485f830184614526565b92915050565b5f60208284031215614563576145626141ae565b5b5f6145708482850161438c565b91505092915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6145b7826142ab565b810181811067ffffffffffffffff821117156145d6576145d5614581565b5b80604052505050565b5f6145e86141a5565b90506145f482826145ae565b919050565b5f67ffffffffffffffff82111561461357614612614581565b5b61461c826142ab565b9050602081019050919050565b828183375f83830152505050565b5f614649614644846145f9565b6145df565b9050828152602081018484840111156146655761466461457d565b5b614670848285614629565b509392505050565b5f82601f83011261468c5761468b614579565b5b813561469c848260208601614637565b91505092915050565b5f80604083850312156146bb576146ba6141ae565b5b5f83013567ffffffffffffffff8111156146d8576146d76141b2565b5b6146e485828601614678565b925050602083013567ffffffffffffffff811115614705576147046141b2565b5b61471185828601614678565b9150509250929050565b5f602082840312156147305761472f6141ae565b5b5f61473d84828501614359565b91505092915050565b61474f81614332565b82525050565b5f6020820190506147685f830184614746565b92915050565b5f63ffffffff82169050919050565b6147868161476e565b82525050565b5f60208201905061479f5f83018461477d565b92915050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6147d9816147a5565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6148118161436d565b82525050565b5f6148228383614808565b60208301905092915050565b5f602082019050919050565b5f614844826147df565b61484e81856147e9565b9350614859836147f9565b805f5b838110156148895781516148708882614817565b975061487b8361482e565b92505060018101905061485c565b5085935050505092915050565b5f60e0820190506148a95f83018a6147d0565b81810360208301526148bb81896142bb565b905081810360408301526148cf81886142bb565b90506148de60608301876143de565b6148eb6080830186614746565b6148f860a08301856144b4565b81810360c083015261490a818461483a565b905098975050505050505050565b5f65ffffffffffff82169050919050565b61493281614918565b82525050565b5f60208201905061494b5f830184614929565b92915050565b61495a8161451a565b8114614964575f80fd5b50565b5f8135905061497581614951565b92915050565b5f805f805f8060c08789031215614995576149946141ae565b5b5f6149a289828a01614359565b96505060206149b389828a0161438c565b95505060406149c489828a0161438c565b94505060606149d589828a01614967565b93505060806149e689828a01614475565b92505060a06149f789828a01614475565b9150509295509295509295565b5f805f805f805f60e0888a031215614a1f57614a1e6141ae565b5b5f614a2c8a828b01614359565b9750506020614a3d8a828b01614359565b9650506040614a4e8a828b0161438c565b9550506060614a5f8a828b0161438c565b9450506080614a708a828b01614967565b93505060a0614a818a828b01614475565b92505060c0614a928a828b01614475565b91505092959891949750929550565b5f8060408385031215614ab757614ab66141ae565b5b5f614ac485828601614359565b9250506020614ad585828601614359565b9150509250929050565b614ae88161476e565b8114614af2575f80fd5b50565b5f81359050614b0381614adf565b92915050565b5f8060408385031215614b1f57614b1e6141ae565b5b5f614b2c85828601614359565b9250506020614b3d85828601614af5565b9150509250929050565b614b508161476e565b82525050565b5f7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b614b8681614b56565b82525050565b604082015f820151614ba05f850182614b47565b506020820151614bb36020850182614b7d565b50505050565b5f604082019050614bcc5f830184614b8c565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680614c1657607f821691505b602082108103614c2957614c28614bd2565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115614cb157808604811115614c8d57614c8c614c2f565b5b6001851615614c9c5780820291505b8081029050614caa85614c5c565b9450614c71565b94509492505050565b5f82614cc95760019050614d84565b81614cd6575f9050614d84565b8160018114614cec5760028114614cf657614d25565b6001915050614d84565b60ff841115614d0857614d07614c2f565b5b8360020a915084821115614d1f57614d1e614c2f565b5b50614d84565b5060208310610133831016604e8410600b8410161715614d5a5782820a905083811115614d5557614d54614c2f565b5b614d84565b614d678484846001614c68565b92509050818404811115614d7e57614d7d614c2f565b5b81810290505b9392505050565b5f614d958261436d565b9150614da08361436d565b9250614dcd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484614cba565b905092915050565b5f614ddf8261436d565b9150614dea8361436d565b9250828202614df88161436d565b91508282048414831517614e0f57614e0e614c2f565b5b5092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e63655f8201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b5f614e70602f83614273565b9150614e7b82614e16565b604082019050919050565b5f6020820190508181035f830152614e9d81614e64565b9050919050565b5f614eae8261436d565b9150614eb98361436d565b9250828201905080821115614ed157614ed0614c2f565b5b92915050565b7f4552433230566f7465733a20667574757265206c6f6f6b7570000000000000005f82015250565b5f614f0b601983614273565b9150614f1682614ed7565b602082019050919050565b5f6020820190508181035f830152614f3881614eff565b9050919050565b7f546f6b656e20746f206265206d696e7465642073686f756c64206e6f742065785f8201527f63656564204d617820737570706c790000000000000000000000000000000000602082015250565b5f614f99602f83614273565b9150614fa482614f3f565b604082019050919050565b5f6020820190508181035f830152614fc681614f8d565b9050919050565b7f4552433230566f7465733a2062726f6b656e20636c6f636b206d6f64650000005f82015250565b5f615001601d83614273565b915061500c82614fcd565b602082019050919050565b5f6020820190508181035f83015261502e81614ff5565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c7265615f8201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b5f61508f602e83614273565b915061509a82615035565b604082019050919050565b5f6020820190508181035f8301526150bc81615083565b9050919050565b5f819050919050565b5f819050919050565b5f6150ef6150ea6150e5846150c3565b6150cc565b61451a565b9050919050565b6150ff816150d5565b82525050565b5f6020820190506151185f8301846150f6565b92915050565b7f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f775f8201527f616e636500000000000000000000000000000000000000000000000000000000602082015250565b5f615178602483614273565b91506151838261511e565b604082019050919050565b5f6020820190508181035f8301526151a58161516c565b9050919050565b7f4549503731323a20556e696e697469616c697a656400000000000000000000005f82015250565b5f6151e0601583614273565b91506151eb826151ac565b602082019050919050565b5f6020820190508181035f83015261520d816151d4565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f61529b602583614273565b91506152a682615241565b604082019050919050565b5f6020820190508181035f8301526152c88161528f565b9050919050565b7f4552433230566f7465733a207369676e617475726520657870697265640000005f82015250565b5f615303601d83614273565b915061530e826152cf565b602082019050919050565b5f6020820190508181035f830152615330816152f7565b9050919050565b5f60808201905061534a5f8301876144b4565b6153576020830186614746565b61536460408301856143de565b61537160608301846143de565b95945050505050565b7f4552433230566f7465733a20696e76616c6964206e6f6e6365000000000000005f82015250565b5f6153ae601983614273565b91506153b98261537a565b602082019050919050565b5f6020820190508181035f8301526153db816153a2565b9050919050565b7f45524332305065726d69743a206578706972656420646561646c696e650000005f82015250565b5f615416601d83614273565b9150615421826153e2565b602082019050919050565b5f6020820190508181035f8301526154438161540a565b9050919050565b5f60c08201905061545d5f8301896144b4565b61546a6020830188614746565b6154776040830187614746565b61548460608301866143de565b61549160808301856143de565b61549e60a08301846143de565b979650505050505050565b7f45524332305065726d69743a20696e76616c6964207369676e617475726500005f82015250565b5f6154dd601e83614273565b91506154e8826154a9565b602082019050919050565b5f6020820190508181035f83015261550a816154d1565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f61556b602483614273565b915061557682615511565b604082019050919050565b5f6020820190508181035f8301526155988161555f565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f6155f9602283614273565b91506156048261559f565b604082019050919050565b5f6020820190508181035f830152615626816155ed565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f615661601d83614273565b915061566c8261562d565b602082019050919050565b5f6020820190508181035f83015261568e81615655565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f6156ef602583614273565b91506156fa82615695565b604082019050919050565b5f6020820190508181035f83015261571c816156e3565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f61577d602383614273565b915061578882615723565b604082019050919050565b5f6020820190508181035f8301526157aa81615771565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f61580b602683614273565b9150615816826157b1565b604082019050919050565b5f6020820190508181035f830152615838816157ff565b9050919050565b5f6158498261436d565b91506158548361436d565b925082820390508181111561586c5761586b614c2f565b5b92915050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420695f8201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b5f6158cc602b83614273565b91506158d782615872565b604082019050919050565b5f6020820190508181035f8301526158f9816158c0565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e20335f8201527f3220626974730000000000000000000000000000000000000000000000000000602082015250565b5f61595a602683614273565b915061596582615900565b604082019050919050565b5f6020820190508181035f8301526159878161594e565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e20345f8201527f3820626974730000000000000000000000000000000000000000000000000000602082015250565b5f6159e8602683614273565b91506159f38261598e565b604082019050919050565b5f6020820190508181035f830152615a15816159dc565b9050919050565b5f81905092915050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000005f82015250565b5f615a5a601783615a1c565b9150615a6582615a26565b601782019050919050565b5f615a7a82614269565b615a848185615a1c565b9350615a94818560208601614283565b80840191505092915050565b7f206973206d697373696e6720726f6c65200000000000000000000000000000005f82015250565b5f615ad4601183615a1c565b9150615adf82615aa0565b601182019050919050565b5f615af482615a4e565b9150615b008285615a70565b9150615b0b82615ac8565b9150615b178284615a70565b91508190509392505050565b5f60a082019050615b365f8301886144b4565b615b4360208301876144b4565b615b5060408301866144b4565b615b5d60608301856143de565b615b6a6080830184614746565b9695505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f615bab8261436d565b9150615bb68361436d565b925082615bc657615bc5615b74565b5b828204905092915050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f615c05601483614273565b9150615c1082615bd1565b602082019050919050565b5f6020820190508181035f830152615c3281615bf9565b9050919050565b7f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f5f8201527f766572666c6f77696e6720766f74657300000000000000000000000000000000602082015250565b5f615c93603083614273565b9150615c9e82615c39565b604082019050919050565b5f6020820190508181035f830152615cc081615c87565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302615d237fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82615ce8565b615d2d8683615ce8565b95508019841693508086168417925050509392505050565b5f615d5f615d5a615d558461436d565b6150cc565b61436d565b9050919050565b5f819050919050565b615d7883615d45565b615d8c615d8482615d66565b848454615cf4565b825550505050565b5f90565b615da0615d94565b615dab818484615d6f565b505050565b5b81811015615dce57615dc35f82615d98565b600181019050615db1565b5050565b601f821115615e1357615de481615cc7565b615ded84615cd9565b81016020851015615dfc578190505b615e10615e0885615cd9565b830182615db0565b50505b505050565b5f82821c905092915050565b5f615e335f1984600802615e18565b1980831691505092915050565b5f615e4b8383615e24565b9150826002028217905092915050565b615e6482614269565b67ffffffffffffffff811115615e7d57615e7c614581565b5b615e878254614bff565b615e92828285615dd2565b5f60209050601f831160018114615ec3575f8415615eb1578287015190505b615ebb8582615e40565b865550615f22565b601f198416615ed186615cc7565b5f5b82811015615ef857848901518255600182019150602085019450602081019050615ed3565b86831015615f155784890151615f11601f891682615e24565b8355505b6001600288020188555050505b505050505050565b5f604082019050615f3d5f8301856143de565b615f4a60208301846143de565b9392505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f615f85601083614273565b9150615f9082615f51565b602082019050919050565b5f6020820190508181035f830152615fb281615f79565b9050919050565b5f608082019050615fcc5f8301876144b4565b615fd96020830186614526565b615fe660408301856144b4565b615ff360608301846144b4565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b7f45434453413a20696e76616c6964207369676e617475726500000000000000005f82015250565b5f61605d601883614273565b915061606882616029565b602082019050919050565b5f6020820190508181035f83015261608a81616051565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e677468005f82015250565b5f6160c5601f83614273565b91506160d082616091565b602082019050919050565b5f6020820190508181035f8301526160f2816160b9565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c5f8201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b5f616153602283614273565b915061615e826160f9565b604082019050919050565b5f6020820190508181035f83015261618081616147565b9050919050565b5f6161918261436d565b91505f82036161a3576161a2614c2f565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e745f82015250565b5f6161e2602083614273565b91506161ed826161ae565b602082019050919050565b5f6020820190508181035f83015261620f816161d6565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f2061646472657373005f82015250565b5f61624a601f83614273565b915061625582616216565b602082019050919050565b5f6020820190508181035f8301526162778161623e565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f206164647265735f8201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b5f6162d8602183614273565b91506162e38261627e565b604082019050919050565b5f6020820190508181035f830152616305816162cc565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e5f8201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b5f616366602283614273565b91506163718261630c565b604082019050919050565b5f6020820190508181035f8301526163938161635a565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e20325f8201527f3234206269747300000000000000000000000000000000000000000000000000602082015250565b5f6163f4602783614273565b91506163ff8261639a565b604082019050919050565b5f6020820190508181035f830152616421816163e8565b905091905056fea264697066735822122073ff06046c08d0cd853c758c631fa806bb26088007b12365805c4921e9369b6664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x645E DUP1 PUSH3 0x1E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FCFFF45 GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x9AB24EB0 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x85 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x774 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x790 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x7AE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7CA JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x7FA JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x818 JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x6AA JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x6F8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x728 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x758 JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x84B0196E GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x66E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x68C JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x594 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x5B0 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5E0 JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x1DD JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0x4CD88B76 EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x516 JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x458 JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x224 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x3B4 JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2FC JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x420B JUMP JUMPDEST PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x4250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH2 0x8C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x43A0 JUMP JUMPDEST PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x4250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x4406 JUMP JUMPDEST PUSH2 0x97C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x4250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x346 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x4489 JUMP JUMPDEST PUSH2 0x9AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x44C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x376 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x44DC JUMP JUMPDEST PUSH2 0x9C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x380 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x4535 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39E PUSH2 0xA2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BC PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x44C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x44DC JUMP JUMPDEST PUSH2 0xA5A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x408 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x43A0 JUMP JUMPDEST PUSH2 0xADD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x4250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x438 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x43A0 JUMP JUMPDEST PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x456 PUSH2 0xBB4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x472 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x43A0 JUMP JUMPDEST PUSH2 0xC4D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x454E JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x498 PUSH2 0xDFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A5 SWAP2 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x46A5 JUMP JUMPDEST PUSH2 0xE89 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x471B JUMP JUMPDEST PUSH2 0x11FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0x4755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x514 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x471B JUMP JUMPDEST PUSH2 0x1262 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51E PUSH2 0x1276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52B SWAP2 SWAP1 PUSH2 0x4250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x549 SWAP2 SWAP1 PUSH2 0x471B JUMP JUMPDEST PUSH2 0x128C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55B SWAP2 SWAP1 PUSH2 0x478C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x579 SWAP2 SWAP1 PUSH2 0x471B JUMP JUMPDEST PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x43A0 JUMP JUMPDEST PUSH2 0x1324 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C5 SWAP2 SWAP1 PUSH2 0x471B JUMP JUMPDEST PUSH2 0x148E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E8 PUSH2 0x14DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F2 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x605 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x628 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x623 SWAP2 SWAP1 PUSH2 0x454E JUMP JUMPDEST PUSH2 0x166D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x635 SWAP2 SWAP1 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x658 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x653 SWAP2 SWAP1 PUSH2 0x44DC JUMP JUMPDEST PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x4250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x676 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x683 SWAP2 SWAP1 PUSH2 0x4938 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x694 PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A1 SWAP2 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6BF SWAP2 SWAP1 PUSH2 0x471B JUMP JUMPDEST PUSH2 0x17D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D1 SWAP2 SWAP1 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E2 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6EF SWAP2 SWAP1 PUSH2 0x44C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x712 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x43A0 JUMP JUMPDEST PUSH2 0x18DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71F SWAP2 SWAP1 PUSH2 0x4250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x742 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x73D SWAP2 SWAP1 PUSH2 0x43A0 JUMP JUMPDEST PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x74F SWAP2 SWAP1 PUSH2 0x4250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x772 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76D SWAP2 SWAP1 PUSH2 0x497B JUMP JUMPDEST PUSH2 0x1972 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x789 SWAP2 SWAP1 PUSH2 0x4A04 JUMP JUMPDEST PUSH2 0x1A75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x798 PUSH2 0x1BB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0x44C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C3 SWAP2 SWAP1 PUSH2 0x44DC JUMP JUMPDEST PUSH2 0x1BD8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7DF SWAP2 SWAP1 PUSH2 0x4AA1 JUMP JUMPDEST PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F1 SWAP2 SWAP1 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x802 PUSH2 0x1C7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80F SWAP2 SWAP1 PUSH2 0x44C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x832 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82D SWAP2 SWAP1 PUSH2 0x4B09 JUMP JUMPDEST PUSH2 0x1C9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83F SWAP2 SWAP1 PUSH2 0x4BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x8BA JUMPI POP PUSH2 0x8B9 DUP3 PUSH2 0x1DA9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9A DUP1 SLOAD PUSH2 0x8D0 SWAP1 PUSH2 0x4BFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8FC SWAP1 PUSH2 0x4BFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x947 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x91E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x947 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x92A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x95B PUSH2 0x1E12 JUMP JUMPDEST SWAP1 POP PUSH2 0x968 DUP2 DUP6 DUP6 PUSH2 0x1E19 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x99 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x986 PUSH2 0x1E12 JUMP JUMPDEST SWAP1 POP PUSH2 0x993 DUP6 DUP3 DUP6 PUSH2 0x1FDC JUMP JUMPDEST PUSH2 0x99E DUP6 DUP6 DUP6 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x65 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9D0 DUP3 PUSH2 0x9AA JUMP JUMPDEST PUSH2 0x9D9 DUP2 PUSH2 0x22D6 JUMP JUMPDEST PUSH2 0x9E3 DUP4 DUP4 PUSH2 0x22EA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9FD PUSH8 0x6CEFFB00F5B8F424 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xA11 PUSH8 0x6F181A4C156B28DF PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xA25 PUSH8 0x2FD4B306738CE299 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x6 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0xA PUSH2 0xA3A SWAP2 SWAP1 PUSH2 0x4D8B JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH2 0xA49 SWAP2 SWAP1 PUSH2 0x4DD5 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xA55 PUSH2 0x23C8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA62 PUSH2 0x1E12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xACF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC6 SWAP1 PUSH2 0x4E86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAD9 DUP3 DUP3 PUSH2 0x23D6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAE7 PUSH2 0x1E12 JUMP JUMPDEST SWAP1 POP PUSH2 0xB08 DUP2 DUP6 DUP6 PUSH2 0xAF9 DUP6 DUP10 PUSH2 0x1BF9 JUMP JUMPDEST PUSH2 0xB03 SWAP2 SWAP1 PUSH2 0x4EA4 JUMP JUMPDEST PUSH2 0x1E19 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB1C PUSH2 0x1736 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP3 LT PUSH2 0xB65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5C SWAP1 PUSH2 0x4F21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBAC PUSH2 0x131 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 PUSH2 0x24B1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBC8 PUSH8 0x609999F02B3D32D5 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xBF2 DUP2 PUSH2 0x22D6 JUMP JUMPDEST PUSH2 0xC06 PUSH8 0xABE91030000D1AC0 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xC1A PUSH8 0xC59FE76821DD927A PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xC2E PUSH8 0xBC1DEE6FAFAC93DB PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xC42 PUSH8 0x159893534C8DE7E0 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xC4A PUSH2 0x25EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC61 PUSH8 0x7E144A1024E26768 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xC8B DUP2 PUSH2 0x22D6 JUMP JUMPDEST PUSH2 0xC9F PUSH8 0xE002F4A7F1138AE8 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xCB3 PUSH8 0x633C34D81D9C2E7A PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xCC7 PUSH8 0xC5F2D1228BC0D60D PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xCDB PUSH8 0xEF978FB6DA0FD805 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xCEF PUSH8 0x4FDAFA4B0CDDD4D3 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x6 PUSH1 0xA PUSH2 0xCFD SWAP2 SWAP1 PUSH2 0x4D8B JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH2 0xD0C SWAP2 SWAP1 PUSH2 0x4DD5 JUMP JUMPDEST DUP3 PUSH2 0xD15 PUSH2 0x973 JUMP JUMPDEST PUSH2 0xD1F SWAP2 SWAP1 PUSH2 0x4EA4 JUMP JUMPDEST GT ISZERO PUSH2 0xD60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD57 SWAP1 PUSH2 0x4FAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD74 PUSH8 0xD53C72CAD467E7BA PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xD88 PUSH8 0x344ED792E6FD2A14 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xD9C PUSH8 0x690192438DC80361 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xDA6 DUP4 DUP4 PUSH2 0x2650 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xDBF PUSH8 0x77E3700C135E6C4E PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xDD3 PUSH8 0xDABD11CCA3D2544D PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xDE7 PUSH8 0xC7F8AB0A5C0665D4 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xDF8 PUSH2 0xDF2 PUSH2 0x1E12 JUMP JUMPDEST DUP3 PUSH2 0x269A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 NUMBER PUSH2 0xE06 PUSH2 0x1736 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND EQ PUSH2 0xE4E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE45 SWAP1 PUSH2 0x5017 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE9D PUSH8 0x7D1353B017BD2ACB PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0xECC JUMPI POP PUSH1 0x1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0xEF8 JUMPI POP PUSH2 0xEDB ADDRESS PUSH2 0x26E4 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0xEF7 JUMPI POP PUSH1 0x1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0xF37 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2E SWAP1 PUSH2 0x50A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xF72 JUMPI PUSH1 0x1 PUSH0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xF86 PUSH8 0x807A5FAAB267DB3E PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xF9A PUSH8 0x1B87EC61CB2AF8FD PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xFAE PUSH8 0x75FB0FFFE85D5BA0 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xFC2 PUSH8 0x6E9287142FA2BF5D PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xFCC DUP4 DUP4 PUSH2 0x2706 JUMP JUMPDEST PUSH2 0xFE0 PUSH8 0x5362E89620D126DD PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xFF4 PUSH8 0xDC3081C3B05D8E28 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xFFD DUP4 PUSH2 0x2762 JUMP JUMPDEST PUSH2 0x1011 PUSH8 0x535585D7B1C7D4BC PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1025 PUSH8 0x4B157AA2E3B72FBA PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x102D PUSH2 0x27F2 JUMP JUMPDEST PUSH2 0x1041 PUSH8 0xE7A7141161BEE42 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1055 PUSH8 0x54AEEB5A2D5CC814 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x105D PUSH2 0x284A JUMP JUMPDEST PUSH2 0x1071 PUSH8 0xC7EF261C6B52E840 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1085 PUSH8 0xED8BF8D8AA09F5A8 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1098 PUSH0 DUP1 SHL PUSH2 0x1093 PUSH2 0x1E12 JUMP JUMPDEST PUSH2 0x22EA JUMP JUMPDEST PUSH2 0x10AC PUSH8 0x9FEF610354934C36 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x10C0 PUSH8 0x5642366CAD1DF8B9 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x10F1 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x10EC PUSH2 0x1E12 JUMP JUMPDEST PUSH2 0x22EA JUMP JUMPDEST PUSH2 0x1105 PUSH8 0x631D5A374BCEF4DC PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1119 PUSH8 0x2508C509E3BC1EA6 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x114A PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x1145 PUSH2 0x1E12 JUMP JUMPDEST PUSH2 0x22EA JUMP JUMPDEST PUSH2 0x115E PUSH8 0xB2E403D7374D65AA PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1172 PUSH8 0x130D054C74F7230F PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x119F PUSH2 0x117D PUSH2 0x1E12 JUMP JUMPDEST PUSH1 0x6 PUSH1 0xA PUSH2 0x118B SWAP2 SWAP1 PUSH2 0x4D8B JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH2 0x119A SWAP2 SWAP1 PUSH2 0x4DD5 JUMP JUMPDEST PUSH2 0x2650 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11F7 JUMPI PUSH0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x11EE SWAP2 SWAP1 PUSH2 0x5105 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x130 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1273 PUSH2 0x126D PUSH2 0x1E12 JUMP JUMPDEST DUP3 PUSH2 0x289A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x162 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x12D7 PUSH2 0x131 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x29B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x97 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1338 PUSH8 0x607442F905452DAA PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x134C PUSH8 0x1395F68543AA27F4 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1360 PUSH8 0x827047D6B13681E PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH0 PUSH2 0x1372 DUP4 PUSH2 0x136D PUSH2 0x1E12 JUMP JUMPDEST PUSH2 0x1BF9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1388 PUSH8 0x44F3479EC179EF05 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x139C PUSH8 0xBC481ED37C3138B0 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x13B0 PUSH8 0x486FC6494B6C9788 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13EA SWAP1 PUSH2 0x518E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1407 PUSH8 0x8E6DE9144BD4DDF7 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x141B PUSH8 0x6E67C260954339A0 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x142F PUSH8 0x2E7C51116FBFE06F PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1443 PUSH8 0x2FA744005F173F63 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1457 DUP4 PUSH2 0x144F PUSH2 0x1E12 JUMP JUMPDEST DUP5 DUP5 SUB PUSH2 0x1E19 JUMP JUMPDEST PUSH2 0x146B PUSH8 0x1AF6EA53EE18C33F PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x147F PUSH8 0x79063F61DD074654 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1489 DUP4 DUP4 PUSH2 0x269A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14D4 PUSH1 0xFD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH2 0x2A02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14EF PUSH8 0xEBB165517487136F PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x1519 DUP2 PUSH2 0x22D6 JUMP JUMPDEST PUSH2 0x152C PUSH7 0x8ADAD4DE1C304A PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1540 PUSH8 0x5F719CAFD3ED6C93 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1554 PUSH8 0x3CBACA61587CAA0F PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1568 PUSH8 0xFE0EA4ED91E2D2C PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1570 PUSH2 0x2A0E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH0 DUP1 SHL PUSH1 0xC9 SLOAD EQ DUP1 ISZERO PUSH2 0x1592 JUMPI POP PUSH0 DUP1 SHL PUSH1 0xCA SLOAD EQ JUMPDEST PUSH2 0x15D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C8 SWAP1 PUSH2 0x51F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15D9 PUSH2 0x2A71 JUMP JUMPDEST PUSH2 0x15E1 PUSH2 0x2B01 JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1600 JUMPI PUSH2 0x15FF PUSH2 0x4581 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x162E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH0 PUSH2 0x1676 PUSH2 0x1736 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP3 LT PUSH2 0x16BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B6 SWAP1 PUSH2 0x4F21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16CB PUSH2 0x132 DUP4 PUSH2 0x24B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x65 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1740 NUMBER PUSH2 0x2B91 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9B DUP1 SLOAD PUSH2 0x1754 SWAP1 PUSH2 0x4BFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1780 SWAP1 PUSH2 0x4BFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17CB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17A2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17CB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17AE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x131 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 DUP2 EQ PUSH2 0x18AD JUMPI PUSH2 0x131 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 DUP3 SUB DUP2 SLOAD DUP2 LT PUSH2 0x1875 JUMPI PUSH2 0x1874 PUSH2 0x5214 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18AF JUMP JUMPDEST PUSH0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x18E5 PUSH2 0x1E12 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x18F2 DUP3 DUP7 PUSH2 0x1BF9 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1937 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192E SWAP1 PUSH2 0x52B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1944 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1E19 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x195A PUSH2 0x1E12 JUMP JUMPDEST SWAP1 POP PUSH2 0x1967 DUP2 DUP6 DUP6 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x19B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19AC SWAP1 PUSH2 0x5319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1A16 PUSH2 0x1A0E PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x19F3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5337 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x2BE5 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x2BFE JUMP JUMPDEST SWAP1 POP PUSH2 0x1A21 DUP2 PUSH2 0x2C27 JUMP JUMPDEST DUP7 EQ PUSH2 0x1A62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A59 SWAP1 PUSH2 0x53C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A6C DUP2 DUP9 PUSH2 0x289A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x1AB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AAF SWAP1 PUSH2 0x542C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x1AE6 DUP13 PUSH2 0x2C27 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1AFC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x544A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x1B1E DUP3 PUSH2 0x2BE5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1B2D DUP3 DUP8 DUP8 DUP8 PUSH2 0x2BFE JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B94 SWAP1 PUSH2 0x54F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BA8 DUP11 DUP11 DUP11 PUSH2 0x1E19 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x1BE1 DUP3 PUSH2 0x9AA JUMP JUMPDEST PUSH2 0x1BEA DUP2 PUSH2 0x22D6 JUMP JUMPDEST PUSH2 0x1BF4 DUP4 DUP4 PUSH2 0x23D6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x98 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH2 0x1CA7 PUSH2 0x4169 JUMP JUMPDEST PUSH2 0x131 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1CFD JUMPI PUSH2 0x1CFC PUSH2 0x5214 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E7E SWAP1 PUSH2 0x5581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EEC SWAP1 PUSH2 0x560F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x98 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1FCF SWAP2 SWAP1 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FE7 DUP5 DUP5 PUSH2 0x1BF9 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x2061 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2053 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x204A SWAP1 PUSH2 0x5677 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2060 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20CC SWAP1 PUSH2 0x5705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2143 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213A SWAP1 PUSH2 0x5793 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x214E DUP4 DUP4 DUP4 PUSH2 0x2C82 JUMP JUMPDEST PUSH0 PUSH1 0x97 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x21D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21C9 SWAP1 PUSH2 0x5821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x97 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x97 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x22BD SWAP2 SWAP1 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x22D0 DUP5 DUP5 DUP5 PUSH2 0x2CFE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x22E7 DUP2 PUSH2 0x22E2 PUSH2 0x1E12 JUMP JUMPDEST PUSH2 0x2D4A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x22F4 DUP3 DUP3 PUSH2 0x16D2 JUMP JUMPDEST PUSH2 0x23C1 JUMPI PUSH1 0x1 PUSH1 0x65 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2366 PUSH2 0x1E12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x23D1 PUSH2 0x2DCE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x23E0 DUP3 DUP3 PUSH2 0x16D2 JUMP JUMPDEST ISZERO PUSH2 0x24AD JUMPI PUSH0 PUSH1 0x65 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2452 PUSH2 0x1E12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 DUP1 DUP3 SWAP1 POP PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x2522 JUMPI PUSH0 PUSH2 0x24D2 DUP5 PUSH2 0x2E31 JUMP JUMPDEST DUP5 PUSH2 0x24DD SWAP2 SWAP1 PUSH2 0x583F JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x24EA DUP9 DUP4 PUSH2 0x2F27 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x2510 JUMPI DUP1 SWAP2 POP PUSH2 0x2520 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x251D SWAP2 SWAP1 PUSH2 0x4EA4 JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x257F JUMPI PUSH0 PUSH2 0x2536 DUP4 DUP4 PUSH2 0x2F39 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x2543 DUP9 DUP4 PUSH2 0x2F27 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x2569 JUMPI DUP1 SWAP2 POP PUSH2 0x2579 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x2576 SWAP2 SWAP1 PUSH2 0x4EA4 JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x2523 JUMP JUMPDEST PUSH0 DUP2 EQ PUSH2 0x25C3 JUMPI PUSH2 0x2593 DUP7 PUSH1 0x1 DUP4 SUB PUSH2 0x2F27 JUMP JUMPDEST PUSH0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x25C5 JUMP JUMPDEST PUSH0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25F6 PUSH2 0x2F5E JUMP JUMPDEST PUSH0 PUSH2 0x162 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x2639 PUSH2 0x1E12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2646 SWAP2 SWAP1 PUSH2 0x4755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x2664 PUSH8 0x15060568254823A0 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x2678 PUSH8 0x8C6C359BBA103EDE PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x268C PUSH8 0x41EB3BCEE080785A PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x2696 DUP3 DUP3 PUSH2 0x2FA7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x26AE PUSH8 0x5F0ACF80EE14088E PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x26C2 PUSH8 0x657C1CDD7DD3EEF0 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x26D6 PUSH8 0xA2AE61BCF032AA41 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x26E0 DUP3 DUP3 PUSH2 0x3035 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2754 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x274B SWAP1 PUSH2 0x58E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x275E DUP3 DUP3 PUSH2 0x3054 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x27B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27A7 SWAP1 PUSH2 0x58E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27EF DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x30C6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2840 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2837 SWAP1 PUSH2 0x58E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2848 PUSH2 0x314A JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2898 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x288F SWAP1 PUSH2 0x58E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x28A4 DUP4 PUSH2 0x11FC JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x28B0 DUP5 PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x130 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x29AA DUP3 DUP5 DUP4 PUSH2 0x31B4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x29FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29F1 SWAP1 PUSH2 0x5970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A16 PUSH2 0x33A6 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x162 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2A5A PUSH2 0x1E12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A67 SWAP2 SWAP1 PUSH2 0x4755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xCB DUP1 SLOAD PUSH2 0x2A80 SWAP1 PUSH2 0x4BFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AAC SWAP1 PUSH2 0x4BFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AF7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2ACE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AF7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2ADA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xCC DUP1 SLOAD PUSH2 0x2B10 SWAP1 PUSH2 0x4BFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B3C SWAP1 PUSH2 0x4BFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B87 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B5E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B87 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B6A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH6 0xFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x2BDD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BD4 SWAP1 PUSH2 0x59FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2BF7 PUSH2 0x2BF1 PUSH2 0x23C8 JUMP JUMPDEST DUP4 PUSH2 0x33F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x2C0D DUP8 DUP8 DUP8 DUP8 PUSH2 0x3430 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x2C1A DUP2 PUSH2 0x3508 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x2C71 DUP2 PUSH2 0x2A02 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C7C DUP2 PUSH2 0x366D JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C96 PUSH8 0x444CC09B6123A024 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x2C9E PUSH2 0x33A6 JUMP JUMPDEST PUSH2 0x2CB2 PUSH8 0x62FF3D194FB103EC PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x2CC6 PUSH8 0x938A90D94264968D PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x2CDA PUSH8 0xD4B19E2BD3DDC3EA PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x2CEE PUSH8 0x34E741239A9F760C PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x2CF9 DUP4 DUP4 DUP4 PUSH2 0x3681 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2D12 PUSH8 0xBBEEE96DE4B55CF7 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x2D26 PUSH8 0x97E889CF08D5D19D PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x2D3A PUSH8 0x81F53F79B57312D3 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x2D45 DUP4 DUP4 DUP4 PUSH2 0x3686 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2D54 DUP3 DUP3 PUSH2 0x16D2 JUMP JUMPDEST PUSH2 0x2DCA JUMPI PUSH2 0x2D61 DUP2 PUSH2 0x36B1 JUMP JUMPDEST PUSH2 0x2D6E DUP4 PUSH0 SHR PUSH1 0x20 PUSH2 0x36DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2D7F SWAP3 SWAP2 SWAP1 PUSH2 0x5AEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DC1 SWAP2 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x2DF8 PUSH2 0x3913 JUMP JUMPDEST PUSH2 0x2E00 PUSH2 0x397A JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2E16 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5B23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 DUP3 SUB PUSH2 0x2E41 JUMPI PUSH0 SWAP1 POP PUSH2 0x2F22 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0x2E4D DUP5 PUSH2 0x39E1 JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2E67 JUMPI PUSH2 0x2E66 PUSH2 0x5B74 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2E80 JUMPI PUSH2 0x2E7F PUSH2 0x5B74 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2E99 JUMPI PUSH2 0x2E98 PUSH2 0x5B74 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2EB2 JUMPI PUSH2 0x2EB1 PUSH2 0x5B74 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2ECB JUMPI PUSH2 0x2ECA PUSH2 0x5B74 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2EE4 JUMPI PUSH2 0x2EE3 PUSH2 0x5B74 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2EFD JUMPI PUSH2 0x2EFC PUSH2 0x5B74 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x2F1E DUP2 DUP3 DUP6 DUP2 PUSH2 0x2F18 JUMPI PUSH2 0x2F17 PUSH2 0x5B74 JUMP JUMPDEST JUMPDEST DIV PUSH2 0x3AB8 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 MSTORE DUP2 PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x2F49 SWAP2 SWAP1 PUSH2 0x5BA1 JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x2F56 SWAP2 SWAP1 PUSH2 0x4EA4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F66 PUSH2 0x1276 JUMP JUMPDEST PUSH2 0x2FA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F9C SWAP1 PUSH2 0x5C1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2FB1 DUP3 DUP3 PUSH2 0x3AD0 JUMP JUMPDEST PUSH2 0x2FB9 PUSH2 0x3C1F JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2FDF PUSH2 0x973 JUMP JUMPDEST GT ISZERO PUSH2 0x3020 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3017 SWAP1 PUSH2 0x5CA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x302F PUSH2 0x132 PUSH2 0x3C42 DUP4 PUSH2 0x3C57 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x303F DUP3 DUP3 PUSH2 0x3F20 JUMP JUMPDEST PUSH2 0x304E PUSH2 0x132 PUSH2 0x40E5 DUP4 PUSH2 0x3C57 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x30A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3099 SWAP1 PUSH2 0x58E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x9A SWAP1 DUP2 PUSH2 0x30B1 SWAP2 SWAP1 PUSH2 0x5E5B JUMP JUMPDEST POP DUP1 PUSH1 0x9B SWAP1 DUP2 PUSH2 0x30C1 SWAP2 SWAP1 PUSH2 0x5E5B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3114 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x310B SWAP1 PUSH2 0x58E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xCB SWAP1 DUP2 PUSH2 0x3123 SWAP2 SWAP1 PUSH2 0x5E5B JUMP JUMPDEST POP DUP1 PUSH1 0xCC SWAP1 DUP2 PUSH2 0x3133 SWAP2 SWAP1 PUSH2 0x5E5B JUMP JUMPDEST POP PUSH0 DUP1 SHL PUSH1 0xC9 DUP2 SWAP1 SSTORE POP PUSH0 DUP1 SHL PUSH1 0xCA DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3198 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x318F SWAP1 PUSH2 0x58E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x162 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x31EF JUMPI POP PUSH0 DUP2 GT JUMPDEST ISZERO PUSH2 0x33A1 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x32CA JUMPI PUSH0 DUP1 PUSH2 0x3273 PUSH2 0x131 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH2 0x40E5 DUP6 PUSH2 0x3C57 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x32BF SWAP3 SWAP2 SWAP1 PUSH2 0x5F2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x33A0 JUMPI PUSH0 DUP1 PUSH2 0x3349 PUSH2 0x131 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH2 0x3C42 DUP6 PUSH2 0x3C57 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x3395 SWAP3 SWAP2 SWAP1 PUSH2 0x5F2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x33AE PUSH2 0x1276 JUMP JUMPDEST ISZERO PUSH2 0x33EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E5 SWAP1 PUSH2 0x5F9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH0 SHR GT ISZERO PUSH2 0x3468 JUMPI PUSH0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x34FF JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x348B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5FB9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34AB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x34F7 JUMPI PUSH0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x34FF JUMP JUMPDEST DUP1 PUSH0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x351B JUMPI PUSH2 0x351A PUSH2 0x5FFC JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x352E JUMPI PUSH2 0x352D PUSH2 0x5FFC JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x366A JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3548 JUMPI PUSH2 0x3547 PUSH2 0x5FFC JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x355B JUMPI PUSH2 0x355A PUSH2 0x5FFC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x359B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3592 SWAP1 PUSH2 0x6073 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x35AF JUMPI PUSH2 0x35AE PUSH2 0x5FFC JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x35C2 JUMPI PUSH2 0x35C1 PUSH2 0x5FFC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x3602 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35F9 SWAP1 PUSH2 0x60DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3616 JUMPI PUSH2 0x3615 PUSH2 0x5FFC JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3629 JUMPI PUSH2 0x3628 PUSH2 0x5FFC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x3669 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3660 SWAP1 PUSH2 0x6169 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3691 DUP4 DUP4 DUP4 PUSH2 0x40FA JUMP JUMPDEST PUSH2 0x36AC PUSH2 0x369D DUP5 PUSH2 0x11FC JUMP JUMPDEST PUSH2 0x36A6 DUP5 PUSH2 0x11FC JUMP JUMPDEST DUP4 PUSH2 0x31B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x36D7 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x36DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x36F0 SWAP2 SWAP1 PUSH2 0x4DD5 JUMP JUMPDEST PUSH2 0x36FA SWAP2 SWAP1 PUSH2 0x4EA4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3713 JUMPI PUSH2 0x3712 PUSH2 0x4581 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3745 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x377C JUMPI PUSH2 0x377B PUSH2 0x5214 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x37DF JUMPI PUSH2 0x37DE PUSH2 0x5214 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x381D SWAP2 SWAP1 PUSH2 0x4DD5 JUMP JUMPDEST PUSH2 0x3827 SWAP2 SWAP1 PUSH2 0x4EA4 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x38C6 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x3869 JUMPI PUSH2 0x3868 PUSH2 0x5214 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3880 JUMPI PUSH2 0x387F PUSH2 0x5214 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x38BF SWAP1 PUSH2 0x6187 JUMP JUMPDEST SWAP1 POP PUSH2 0x382A JUMP JUMPDEST POP PUSH0 DUP5 EQ PUSH2 0x3909 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3900 SWAP1 PUSH2 0x61F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x391D PUSH2 0x2A71 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x3938 JUMPI DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP POP PUSH2 0x3977 JUMP JUMPDEST PUSH0 PUSH1 0xC9 SLOAD SWAP1 POP PUSH0 DUP1 SHL DUP2 EQ PUSH2 0x3951 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x3977 JUMP JUMPDEST PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3984 PUSH2 0x2B01 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x399F JUMPI DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP POP PUSH2 0x39DE JUMP JUMPDEST PUSH0 PUSH1 0xCA SLOAD SWAP1 POP PUSH0 DUP1 SHL DUP2 EQ PUSH2 0x39B8 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x39DE JUMP JUMPDEST PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3A00 JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x80 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3A1A JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3A34 JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3A4E JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3A68 JUMPI PUSH1 0x8 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x4 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3A82 JUMPI PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x2 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3A9C JUMPI PUSH1 0x2 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x1 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3AAF JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x3AC6 JUMPI DUP2 PUSH2 0x3AC8 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3B3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B35 SWAP1 PUSH2 0x6260 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3B49 PUSH0 DUP4 DUP4 PUSH2 0x2C82 JUMP JUMPDEST DUP1 PUSH1 0x99 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3B5A SWAP2 SWAP1 PUSH2 0x4EA4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x97 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3C08 SWAP2 SWAP1 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x3C1B PUSH0 DUP4 DUP4 PUSH2 0x2CFE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x3C4F SWAP2 SWAP1 PUSH2 0x4EA4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 DUP1 DUP3 EQ PUSH2 0x3D17 JUMPI PUSH2 0x3C76 DUP8 PUSH1 0x1 DUP5 SUB PUSH2 0x2F27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH2 0x3D86 DUP5 DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x3DAE JUMPI POP PUSH2 0x3D9A PUSH2 0x1736 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x3E1E JUMPI PUSH2 0x3DBC DUP4 PUSH2 0x40FF JUMP JUMPDEST PUSH2 0x3DC9 DUP9 PUSH1 0x1 DUP6 SUB PUSH2 0x2F27 JUMP JUMPDEST PUSH0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x3F16 JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x3E42 PUSH2 0x3E35 PUSH2 0x1736 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x29B0 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3E56 DUP7 PUSH2 0x40FF JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3F8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F85 SWAP1 PUSH2 0x62EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F99 DUP3 PUSH0 DUP4 PUSH2 0x2C82 JUMP JUMPDEST PUSH0 PUSH1 0x97 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x401D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4014 SWAP1 PUSH2 0x637C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x97 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x99 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x40CD SWAP2 SWAP1 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x40E0 DUP4 PUSH0 DUP5 PUSH2 0x2CFE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x40F2 SWAP2 SWAP1 PUSH2 0x583F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x4161 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4158 SWAP1 PUSH2 0x640A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x41EA DUP2 PUSH2 0x41B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x41F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4205 DUP2 PUSH2 0x41E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4220 JUMPI PUSH2 0x421F PUSH2 0x41AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x422D DUP5 DUP3 DUP6 ADD PUSH2 0x41F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x424A DUP2 PUSH2 0x4236 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4263 PUSH0 DUP4 ADD DUP5 PUSH2 0x4241 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x42A0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4285 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x42C5 DUP3 PUSH2 0x4269 JUMP JUMPDEST PUSH2 0x42CF DUP2 DUP6 PUSH2 0x4273 JUMP JUMPDEST SWAP4 POP PUSH2 0x42DF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4283 JUMP JUMPDEST PUSH2 0x42E8 DUP2 PUSH2 0x42AB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x430B DUP2 DUP5 PUSH2 0x42BB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x433C DUP3 PUSH2 0x4313 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x434C DUP2 PUSH2 0x4332 JUMP JUMPDEST DUP2 EQ PUSH2 0x4356 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4367 DUP2 PUSH2 0x4343 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x437F DUP2 PUSH2 0x436D JUMP JUMPDEST DUP2 EQ PUSH2 0x4389 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x439A DUP2 PUSH2 0x4376 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x43B6 JUMPI PUSH2 0x43B5 PUSH2 0x41AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x43C3 DUP6 DUP3 DUP7 ADD PUSH2 0x4359 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x43D4 DUP6 DUP3 DUP7 ADD PUSH2 0x438C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x43E7 DUP2 PUSH2 0x436D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4400 PUSH0 DUP4 ADD DUP5 PUSH2 0x43DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x441D JUMPI PUSH2 0x441C PUSH2 0x41AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x442A DUP7 DUP3 DUP8 ADD PUSH2 0x4359 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x443B DUP7 DUP3 DUP8 ADD PUSH2 0x4359 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x444C DUP7 DUP3 DUP8 ADD PUSH2 0x438C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4468 DUP2 PUSH2 0x4456 JUMP JUMPDEST DUP2 EQ PUSH2 0x4472 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4483 DUP2 PUSH2 0x445F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x449E JUMPI PUSH2 0x449D PUSH2 0x41AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x44AB DUP5 DUP3 DUP6 ADD PUSH2 0x4475 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x44BD DUP2 PUSH2 0x4456 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x44D6 PUSH0 DUP4 ADD DUP5 PUSH2 0x44B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x44F2 JUMPI PUSH2 0x44F1 PUSH2 0x41AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x44FF DUP6 DUP3 DUP7 ADD PUSH2 0x4475 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4510 DUP6 DUP3 DUP7 ADD PUSH2 0x4359 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x452F DUP2 PUSH2 0x451A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4548 PUSH0 DUP4 ADD DUP5 PUSH2 0x4526 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4563 JUMPI PUSH2 0x4562 PUSH2 0x41AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4570 DUP5 DUP3 DUP6 ADD PUSH2 0x438C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x45B7 DUP3 PUSH2 0x42AB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x45D6 JUMPI PUSH2 0x45D5 PUSH2 0x4581 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x45E8 PUSH2 0x41A5 JUMP JUMPDEST SWAP1 POP PUSH2 0x45F4 DUP3 DUP3 PUSH2 0x45AE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4613 JUMPI PUSH2 0x4612 PUSH2 0x4581 JUMP JUMPDEST JUMPDEST PUSH2 0x461C DUP3 PUSH2 0x42AB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4649 PUSH2 0x4644 DUP5 PUSH2 0x45F9 JUMP JUMPDEST PUSH2 0x45DF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4665 JUMPI PUSH2 0x4664 PUSH2 0x457D JUMP JUMPDEST JUMPDEST PUSH2 0x4670 DUP5 DUP3 DUP6 PUSH2 0x4629 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x468C JUMPI PUSH2 0x468B PUSH2 0x4579 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x469C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4637 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x46BB JUMPI PUSH2 0x46BA PUSH2 0x41AE JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x46D8 JUMPI PUSH2 0x46D7 PUSH2 0x41B2 JUMP JUMPDEST JUMPDEST PUSH2 0x46E4 DUP6 DUP3 DUP7 ADD PUSH2 0x4678 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4705 JUMPI PUSH2 0x4704 PUSH2 0x41B2 JUMP JUMPDEST JUMPDEST PUSH2 0x4711 DUP6 DUP3 DUP7 ADD PUSH2 0x4678 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4730 JUMPI PUSH2 0x472F PUSH2 0x41AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x473D DUP5 DUP3 DUP6 ADD PUSH2 0x4359 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x474F DUP2 PUSH2 0x4332 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4768 PUSH0 DUP4 ADD DUP5 PUSH2 0x4746 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4786 DUP2 PUSH2 0x476E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x479F PUSH0 DUP4 ADD DUP5 PUSH2 0x477D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x47D9 DUP2 PUSH2 0x47A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4811 DUP2 PUSH2 0x436D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4822 DUP4 DUP4 PUSH2 0x4808 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4844 DUP3 PUSH2 0x47DF JUMP JUMPDEST PUSH2 0x484E DUP2 DUP6 PUSH2 0x47E9 JUMP JUMPDEST SWAP4 POP PUSH2 0x4859 DUP4 PUSH2 0x47F9 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4889 JUMPI DUP2 MLOAD PUSH2 0x4870 DUP9 DUP3 PUSH2 0x4817 JUMP JUMPDEST SWAP8 POP PUSH2 0x487B DUP4 PUSH2 0x482E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x485C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x48A9 PUSH0 DUP4 ADD DUP11 PUSH2 0x47D0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x48BB DUP2 DUP10 PUSH2 0x42BB JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x48CF DUP2 DUP9 PUSH2 0x42BB JUMP JUMPDEST SWAP1 POP PUSH2 0x48DE PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x43DE JUMP JUMPDEST PUSH2 0x48EB PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x4746 JUMP JUMPDEST PUSH2 0x48F8 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x44B4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x490A DUP2 DUP5 PUSH2 0x483A JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4932 DUP2 PUSH2 0x4918 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x494B PUSH0 DUP4 ADD DUP5 PUSH2 0x4929 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x495A DUP2 PUSH2 0x451A JUMP JUMPDEST DUP2 EQ PUSH2 0x4964 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4975 DUP2 PUSH2 0x4951 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x4995 JUMPI PUSH2 0x4994 PUSH2 0x41AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x49A2 DUP10 DUP3 DUP11 ADD PUSH2 0x4359 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x49B3 DUP10 DUP3 DUP11 ADD PUSH2 0x438C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x49C4 DUP10 DUP3 DUP11 ADD PUSH2 0x438C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x49D5 DUP10 DUP3 DUP11 ADD PUSH2 0x4967 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x49E6 DUP10 DUP3 DUP11 ADD PUSH2 0x4475 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x49F7 DUP10 DUP3 DUP11 ADD PUSH2 0x4475 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x4A1F JUMPI PUSH2 0x4A1E PUSH2 0x41AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4A2C DUP11 DUP3 DUP12 ADD PUSH2 0x4359 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x4A3D DUP11 DUP3 DUP12 ADD PUSH2 0x4359 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x4A4E DUP11 DUP3 DUP12 ADD PUSH2 0x438C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x4A5F DUP11 DUP3 DUP12 ADD PUSH2 0x438C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x4A70 DUP11 DUP3 DUP12 ADD PUSH2 0x4967 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x4A81 DUP11 DUP3 DUP12 ADD PUSH2 0x4475 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x4A92 DUP11 DUP3 DUP12 ADD PUSH2 0x4475 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4AB7 JUMPI PUSH2 0x4AB6 PUSH2 0x41AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4AC4 DUP6 DUP3 DUP7 ADD PUSH2 0x4359 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4AD5 DUP6 DUP3 DUP7 ADD PUSH2 0x4359 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x4AE8 DUP2 PUSH2 0x476E JUMP JUMPDEST DUP2 EQ PUSH2 0x4AF2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4B03 DUP2 PUSH2 0x4ADF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B1F JUMPI PUSH2 0x4B1E PUSH2 0x41AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4B2C DUP6 DUP3 DUP7 ADD PUSH2 0x4359 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4B3D DUP6 DUP3 DUP7 ADD PUSH2 0x4AF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B50 DUP2 PUSH2 0x476E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B86 DUP2 PUSH2 0x4B56 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x4BA0 PUSH0 DUP6 ADD DUP3 PUSH2 0x4B47 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x4BB3 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x4B7D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4BCC PUSH0 DUP4 ADD DUP5 PUSH2 0x4B8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4C16 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4C29 JUMPI PUSH2 0x4C28 PUSH2 0x4BD2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x4CB1 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x4C8D JUMPI PUSH2 0x4C8C PUSH2 0x4C2F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x4C9C JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x4CAA DUP6 PUSH2 0x4C5C JUMP JUMPDEST SWAP5 POP PUSH2 0x4C71 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x4CC9 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x4D84 JUMP JUMPDEST DUP2 PUSH2 0x4CD6 JUMPI PUSH0 SWAP1 POP PUSH2 0x4D84 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x4CEC JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x4CF6 JUMPI PUSH2 0x4D25 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x4D84 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x4D08 JUMPI PUSH2 0x4D07 PUSH2 0x4C2F JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x4D1F JUMPI PUSH2 0x4D1E PUSH2 0x4C2F JUMP JUMPDEST JUMPDEST POP PUSH2 0x4D84 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x4D5A JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x4D55 JUMPI PUSH2 0x4D54 PUSH2 0x4C2F JUMP JUMPDEST JUMPDEST PUSH2 0x4D84 JUMP JUMPDEST PUSH2 0x4D67 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x4C68 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x4D7E JUMPI PUSH2 0x4D7D PUSH2 0x4C2F JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4D95 DUP3 PUSH2 0x436D JUMP JUMPDEST SWAP2 POP PUSH2 0x4DA0 DUP4 PUSH2 0x436D JUMP JUMPDEST SWAP3 POP PUSH2 0x4DCD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x4CBA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4DDF DUP3 PUSH2 0x436D JUMP JUMPDEST SWAP2 POP PUSH2 0x4DEA DUP4 PUSH2 0x436D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x4DF8 DUP2 PUSH2 0x436D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x4E0F JUMPI PUSH2 0x4E0E PUSH2 0x4C2F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4E70 PUSH1 0x2F DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E7B DUP3 PUSH2 0x4E16 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4E9D DUP2 PUSH2 0x4E64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4EAE DUP3 PUSH2 0x436D JUMP JUMPDEST SWAP2 POP PUSH2 0x4EB9 DUP4 PUSH2 0x436D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4ED1 JUMPI PUSH2 0x4ED0 PUSH2 0x4C2F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20667574757265206C6F6F6B757000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4F0B PUSH1 0x19 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F16 DUP3 PUSH2 0x4ED7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4F38 DUP2 PUSH2 0x4EFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20746F206265206D696E7465642073686F756C64206E6F74206578 PUSH0 DUP3 ADD MSTORE PUSH32 0x63656564204D617820737570706C790000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4F99 PUSH1 0x2F DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FA4 DUP3 PUSH2 0x4F3F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4FC6 DUP2 PUSH2 0x4F8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A2062726F6B656E20636C6F636B206D6F6465000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5001 PUSH1 0x1D DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x500C DUP3 PUSH2 0x4FCD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x502E DUP2 PUSH2 0x4FF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x508F PUSH1 0x2E DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x509A DUP3 PUSH2 0x5035 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x50BC DUP2 PUSH2 0x5083 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x50EF PUSH2 0x50EA PUSH2 0x50E5 DUP5 PUSH2 0x50C3 JUMP JUMPDEST PUSH2 0x50CC JUMP JUMPDEST PUSH2 0x451A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50FF DUP2 PUSH2 0x50D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5118 PUSH0 DUP4 ADD DUP5 PUSH2 0x50F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E74206578636565647320616C6C6F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x616E636500000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5178 PUSH1 0x24 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x5183 DUP3 PUSH2 0x511E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x51A5 DUP2 PUSH2 0x516C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4549503731323A20556E696E697469616C697A65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x51E0 PUSH1 0x15 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x51EB DUP3 PUSH2 0x51AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x520D DUP2 PUSH2 0x51D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x529B PUSH1 0x25 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x52A6 DUP3 PUSH2 0x5241 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x52C8 DUP2 PUSH2 0x528F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A207369676E61747572652065787069726564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5303 PUSH1 0x1D DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x530E DUP3 PUSH2 0x52CF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5330 DUP2 PUSH2 0x52F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x534A PUSH0 DUP4 ADD DUP8 PUSH2 0x44B4 JUMP JUMPDEST PUSH2 0x5357 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4746 JUMP JUMPDEST PUSH2 0x5364 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x43DE JUMP JUMPDEST PUSH2 0x5371 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x43DE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20696E76616C6964206E6F6E636500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x53AE PUSH1 0x19 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x53B9 DUP3 PUSH2 0x537A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x53DB DUP2 PUSH2 0x53A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5416 PUSH1 0x1D DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x5421 DUP3 PUSH2 0x53E2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5443 DUP2 PUSH2 0x540A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x545D PUSH0 DUP4 ADD DUP10 PUSH2 0x44B4 JUMP JUMPDEST PUSH2 0x546A PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x4746 JUMP JUMPDEST PUSH2 0x5477 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x4746 JUMP JUMPDEST PUSH2 0x5484 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x43DE JUMP JUMPDEST PUSH2 0x5491 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x43DE JUMP JUMPDEST PUSH2 0x549E PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x43DE JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x54DD PUSH1 0x1E DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x54E8 DUP3 PUSH2 0x54A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x550A DUP2 PUSH2 0x54D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x556B PUSH1 0x24 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x5576 DUP3 PUSH2 0x5511 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5598 DUP2 PUSH2 0x555F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x55F9 PUSH1 0x22 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x5604 DUP3 PUSH2 0x559F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5626 DUP2 PUSH2 0x55ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5661 PUSH1 0x1D DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x566C DUP3 PUSH2 0x562D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x568E DUP2 PUSH2 0x5655 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x56EF PUSH1 0x25 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x56FA DUP3 PUSH2 0x5695 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x571C DUP2 PUSH2 0x56E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x577D PUSH1 0x23 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x5788 DUP3 PUSH2 0x5723 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x57AA DUP2 PUSH2 0x5771 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x580B PUSH1 0x26 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x5816 DUP3 PUSH2 0x57B1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5838 DUP2 PUSH2 0x57FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5849 DUP3 PUSH2 0x436D JUMP JUMPDEST SWAP2 POP PUSH2 0x5854 DUP4 PUSH2 0x436D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x586C JUMPI PUSH2 0x586B PUSH2 0x4C2F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x58CC PUSH1 0x2B DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x58D7 DUP3 PUSH2 0x5872 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x58F9 DUP2 PUSH2 0x58C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x595A PUSH1 0x26 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x5965 DUP3 PUSH2 0x5900 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5987 DUP2 PUSH2 0x594E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2034 PUSH0 DUP3 ADD MSTORE PUSH32 0x3820626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x59E8 PUSH1 0x26 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x59F3 DUP3 PUSH2 0x598E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5A15 DUP2 PUSH2 0x59DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5A5A PUSH1 0x17 DUP4 PUSH2 0x5A1C JUMP JUMPDEST SWAP2 POP PUSH2 0x5A65 DUP3 PUSH2 0x5A26 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5A7A DUP3 PUSH2 0x4269 JUMP JUMPDEST PUSH2 0x5A84 DUP2 DUP6 PUSH2 0x5A1C JUMP JUMPDEST SWAP4 POP PUSH2 0x5A94 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4283 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5AD4 PUSH1 0x11 DUP4 PUSH2 0x5A1C JUMP JUMPDEST SWAP2 POP PUSH2 0x5ADF DUP3 PUSH2 0x5AA0 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5AF4 DUP3 PUSH2 0x5A4E JUMP JUMPDEST SWAP2 POP PUSH2 0x5B00 DUP3 DUP6 PUSH2 0x5A70 JUMP JUMPDEST SWAP2 POP PUSH2 0x5B0B DUP3 PUSH2 0x5AC8 JUMP JUMPDEST SWAP2 POP PUSH2 0x5B17 DUP3 DUP5 PUSH2 0x5A70 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x5B36 PUSH0 DUP4 ADD DUP9 PUSH2 0x44B4 JUMP JUMPDEST PUSH2 0x5B43 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x44B4 JUMP JUMPDEST PUSH2 0x5B50 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x44B4 JUMP JUMPDEST PUSH2 0x5B5D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x43DE JUMP JUMPDEST PUSH2 0x5B6A PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x4746 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x5BAB DUP3 PUSH2 0x436D JUMP JUMPDEST SWAP2 POP PUSH2 0x5BB6 DUP4 PUSH2 0x436D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x5BC6 JUMPI PUSH2 0x5BC5 PUSH2 0x5B74 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5C05 PUSH1 0x14 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x5C10 DUP3 PUSH2 0x5BD1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5C32 DUP2 PUSH2 0x5BF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH0 DUP3 ADD MSTORE PUSH32 0x766572666C6F77696E6720766F74657300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5C93 PUSH1 0x30 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x5C9E DUP3 PUSH2 0x5C39 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5CC0 DUP2 PUSH2 0x5C87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x5D23 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x5CE8 JUMP JUMPDEST PUSH2 0x5D2D DUP7 DUP4 PUSH2 0x5CE8 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5D5F PUSH2 0x5D5A PUSH2 0x5D55 DUP5 PUSH2 0x436D JUMP JUMPDEST PUSH2 0x50CC JUMP JUMPDEST PUSH2 0x436D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D78 DUP4 PUSH2 0x5D45 JUMP JUMPDEST PUSH2 0x5D8C PUSH2 0x5D84 DUP3 PUSH2 0x5D66 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5CF4 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x5DA0 PUSH2 0x5D94 JUMP JUMPDEST PUSH2 0x5DAB DUP2 DUP5 DUP5 PUSH2 0x5D6F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5DCE JUMPI PUSH2 0x5DC3 PUSH0 DUP3 PUSH2 0x5D98 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5DB1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5E13 JUMPI PUSH2 0x5DE4 DUP2 PUSH2 0x5CC7 JUMP JUMPDEST PUSH2 0x5DED DUP5 PUSH2 0x5CD9 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x5DFC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x5E10 PUSH2 0x5E08 DUP6 PUSH2 0x5CD9 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x5DB0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5E33 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x5E18 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5E4B DUP4 DUP4 PUSH2 0x5E24 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5E64 DUP3 PUSH2 0x4269 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5E7D JUMPI PUSH2 0x5E7C PUSH2 0x4581 JUMP JUMPDEST JUMPDEST PUSH2 0x5E87 DUP3 SLOAD PUSH2 0x4BFF JUMP JUMPDEST PUSH2 0x5E92 DUP3 DUP3 DUP6 PUSH2 0x5DD2 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5EC3 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x5EB1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x5EBB DUP6 DUP3 PUSH2 0x5E40 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x5F22 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x5ED1 DUP7 PUSH2 0x5CC7 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5EF8 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5ED3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x5F15 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x5F11 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x5E24 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5F3D PUSH0 DUP4 ADD DUP6 PUSH2 0x43DE JUMP JUMPDEST PUSH2 0x5F4A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x43DE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5F85 PUSH1 0x10 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x5F90 DUP3 PUSH2 0x5F51 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5FB2 DUP2 PUSH2 0x5F79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x5FCC PUSH0 DUP4 ADD DUP8 PUSH2 0x44B4 JUMP JUMPDEST PUSH2 0x5FD9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4526 JUMP JUMPDEST PUSH2 0x5FE6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x44B4 JUMP JUMPDEST PUSH2 0x5FF3 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x44B4 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x605D PUSH1 0x18 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x6068 DUP3 PUSH2 0x6029 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x608A DUP2 PUSH2 0x6051 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x60C5 PUSH1 0x1F DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x60D0 DUP3 PUSH2 0x6091 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x60F2 DUP2 PUSH2 0x60B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x6153 PUSH1 0x22 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x615E DUP3 PUSH2 0x60F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6180 DUP2 PUSH2 0x6147 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6191 DUP3 PUSH2 0x436D JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x61A3 JUMPI PUSH2 0x61A2 PUSH2 0x4C2F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x61E2 PUSH1 0x20 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x61ED DUP3 PUSH2 0x61AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x620F DUP2 PUSH2 0x61D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x624A PUSH1 0x1F DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x6255 DUP3 PUSH2 0x6216 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6277 DUP2 PUSH2 0x623E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x62D8 PUSH1 0x21 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x62E3 DUP3 PUSH2 0x627E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6305 DUP2 PUSH2 0x62CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x6366 PUSH1 0x22 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x6371 DUP3 PUSH2 0x630C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6393 DUP2 PUSH2 0x635A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x63F4 PUSH1 0x27 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x63FF DUP3 PUSH2 0x639A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6421 DUP2 PUSH2 0x63E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xFF06046C08D0CD853C758C631FA806BB26088007 0xB1 0x23 PUSH6 0x805C4921E936 SWAP12 PUSH7 0x64736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"948:8997:25:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@CLOCK_MODE_1796":{"entryPoint":3579,"id":1796,"parameterSlots":0,"returnSlots":1},"@DEFAULT_ADMIN_ROLE_42":{"entryPoint":6357,"id":42,"parameterSlots":0,"returnSlots":0},"@DOMAIN_SEPARATOR_1677":{"entryPoint":2636,"id":1677,"parameterSlots":0,"returnSlots":1},"@MAX_SUPPLY_6587":{"entryPoint":2604,"id":6587,"parameterSlots":0,"returnSlots":0},"@MINTER_ROLE_6577":{"entryPoint":7092,"id":6577,"parameterSlots":0,"returnSlots":0},"@PAUSER_ROLE_6572":{"entryPoint":7291,"id":6572,"parameterSlots":0,"returnSlots":0},"@_EIP712NameHash_3801":{"entryPoint":14611,"id":3801,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_3747":{"entryPoint":10865,"id":3747,"parameterSlots":0,"returnSlots":1},"@_EIP712VersionHash_3846":{"entryPoint":14714,"id":3846,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3756":{"entryPoint":11009,"id":3756,"parameterSlots":0,"returnSlots":1},"@__AccessControl_init_21":{"entryPoint":10314,"id":21,"parameterSlots":0,"returnSlots":0},"@__EIP712_init_unchained_3635":{"entryPoint":12486,"id":3635,"parameterSlots":2,"returnSlots":0},"@__ERC20Permit_init_1569":{"entryPoint":10082,"id":1569,"parameterSlots":1,"returnSlots":0},"@__ERC20_init_878":{"entryPoint":9990,"id":878,"parameterSlots":2,"returnSlots":0},"@__ERC20_init_unchained_896":{"entryPoint":12372,"id":896,"parameterSlots":2,"returnSlots":0},"@__Pausable_init_735":{"entryPoint":10226,"id":735,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_unchained_745":{"entryPoint":12618,"id":745,"parameterSlots":0,"returnSlots":0},"@_add_2431":{"entryPoint":15426,"id":2431,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_1437":{"entryPoint":16634,"id":1437,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_2206":{"entryPoint":13958,"id":2206,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_7088":{"entryPoint":11518,"id":7088,"parameterSlots":3,"returnSlots":0},"@_approve_1372":{"entryPoint":7705,"id":1372,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1426":{"entryPoint":13953,"id":1426,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_7054":{"entryPoint":11394,"id":7054,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_3668":{"entryPoint":11726,"id":3668,"parameterSlots":0,"returnSlots":1},"@_burn_1327":{"entryPoint":16160,"id":1327,"parameterSlots":2,"returnSlots":0},"@_burn_2176":{"entryPoint":12341,"id":2176,"parameterSlots":2,"returnSlots":0},"@_burn_6985":{"entryPoint":9882,"id":6985,"parameterSlots":2,"returnSlots":0},"@_checkRole_107":{"entryPoint":8918,"id":107,"parameterSlots":1,"returnSlots":0},"@_checkRole_146":{"entryPoint":11594,"id":146,"parameterSlots":2,"returnSlots":0},"@_checkpointsLookup_2034":{"entryPoint":9393,"id":2034,"parameterSlots":2,"returnSlots":1},"@_delegate_2245":{"entryPoint":10394,"id":2245,"parameterSlots":2,"returnSlots":0},"@_domainSeparatorV4_3645":{"entryPoint":9160,"id":3645,"parameterSlots":0,"returnSlots":1},"@_grantRole_298":{"entryPoint":8938,"id":298,"parameterSlots":2,"returnSlots":0},"@_hashTypedDataV4_3684":{"entryPoint":11237,"id":3684,"parameterSlots":1,"returnSlots":1},"@_maxSupply_2121":{"entryPoint":15391,"id":2121,"parameterSlots":0,"returnSlots":1},"@_mint_1255":{"entryPoint":15056,"id":1255,"parameterSlots":2,"returnSlots":0},"@_mint_2153":{"entryPoint":12199,"id":2153,"parameterSlots":2,"returnSlots":0},"@_mint_7016":{"entryPoint":9808,"id":7016,"parameterSlots":2,"returnSlots":0},"@_moveVotingPower_2316":{"entryPoint":12724,"id":2316,"parameterSlots":3,"returnSlots":0},"@_msgSender_2884":{"entryPoint":7698,"id":2884,"parameterSlots":0,"returnSlots":1},"@_pause_809":{"entryPoint":10766,"id":809,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_782":{"entryPoint":13222,"id":782,"parameterSlots":0,"returnSlots":0},"@_requirePaused_793":{"entryPoint":12126,"id":793,"parameterSlots":0,"returnSlots":0},"@_revokeRole_329":{"entryPoint":9174,"id":329,"parameterSlots":2,"returnSlots":0},"@_spendAllowance_1415":{"entryPoint":8156,"id":1415,"parameterSlots":3,"returnSlots":0},"@_subtract_2445":{"entryPoint":16613,"id":2445,"parameterSlots":2,"returnSlots":1},"@_throwError_3256":{"entryPoint":13576,"id":3256,"parameterSlots":1,"returnSlots":0},"@_transfer_1198":{"entryPoint":8295,"id":1198,"parameterSlots":3,"returnSlots":0},"@_unpause_825":{"entryPoint":9710,"id":825,"parameterSlots":0,"returnSlots":0},"@_unsafeAccess_2460":{"entryPoint":12071,"id":2460,"parameterSlots":2,"returnSlots":1},"@_useNonce_1706":{"entryPoint":11303,"id":1706,"parameterSlots":1,"returnSlots":1},"@_writeCheckpoint_2417":{"entryPoint":15447,"id":2417,"parameterSlots":3,"returnSlots":2},"@allowance_993":{"entryPoint":7161,"id":993,"parameterSlots":2,"returnSlots":1},"@approve_1018":{"entryPoint":2385,"id":1018,"parameterSlots":2,"returnSlots":1},"@average_3974":{"entryPoint":12089,"id":3974,"parameterSlots":2,"returnSlots":1},"@balanceOf_950":{"entryPoint":4830,"id":950,"parameterSlots":1,"returnSlots":1},"@burnFrom_6878":{"entryPoint":4900,"id":6878,"parameterSlots":2,"returnSlots":0},"@burn_6791":{"entryPoint":3499,"id":6791,"parameterSlots":1,"returnSlots":0},"@c_e1ac8b9c_6467":{"entryPoint":9157,"id":6467,"parameterSlots":1,"returnSlots":0},"@checkpoints_1814":{"entryPoint":7327,"id":1814,"parameterSlots":2,"returnSlots":1},"@clock_1777":{"entryPoint":5942,"id":1777,"parameterSlots":0,"returnSlots":1},"@current_2917":{"entryPoint":10754,"id":2917,"parameterSlots":1,"returnSlots":1},"@decimals_6954":{"entryPoint":2536,"id":6954,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_1121":{"entryPoint":6363,"id":1121,"parameterSlots":2,"returnSlots":1},"@delegateBySig_2108":{"entryPoint":6514,"id":2108,"parameterSlots":6,"returnSlots":0},"@delegate_2048":{"entryPoint":4706,"id":2048,"parameterSlots":1,"returnSlots":0},"@delegates_1845":{"entryPoint":4604,"id":1845,"parameterSlots":1,"returnSlots":1},"@eip712Domain_3738":{"entryPoint":5491,"id":3738,"parameterSlots":0,"returnSlots":7},"@getPastTotalSupply_1927":{"entryPoint":5741,"id":1927,"parameterSlots":1,"returnSlots":1},"@getPastVotes_1904":{"entryPoint":2835,"id":1904,"parameterSlots":2,"returnSlots":1},"@getRoleAdmin_161":{"entryPoint":2474,"id":161,"parameterSlots":1,"returnSlots":1},"@getVotes_1877":{"entryPoint":6101,"id":1877,"parameterSlots":1,"returnSlots":1},"@grantRole_181":{"entryPoint":2503,"id":181,"parameterSlots":2,"returnSlots":0},"@hasRole_94":{"entryPoint":5842,"id":94,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_1080":{"entryPoint":2781,"id":1080,"parameterSlots":2,"returnSlots":1},"@increment_2931":{"entryPoint":13933,"id":2931,"parameterSlots":1,"returnSlots":0},"@initialize_6709":{"entryPoint":3721,"id":6709,"parameterSlots":2,"returnSlots":0},"@isContract_2545":{"entryPoint":9956,"id":2545,"parameterSlots":1,"returnSlots":1},"@log2_4446":{"entryPoint":14817,"id":4446,"parameterSlots":1,"returnSlots":1},"@min_3951":{"entryPoint":15032,"id":3951,"parameterSlots":2,"returnSlots":1},"@mint_6767":{"entryPoint":3149,"id":6767,"parameterSlots":2,"returnSlots":0},"@name_906":{"entryPoint":2241,"id":906,"parameterSlots":0,"returnSlots":1},"@nonces_1666":{"entryPoint":5262,"id":1666,"parameterSlots":1,"returnSlots":1},"@numCheckpoints_1831":{"entryPoint":4748,"id":1831,"parameterSlots":1,"returnSlots":1},"@pause_6905":{"entryPoint":5339,"id":6905,"parameterSlots":0,"returnSlots":0},"@paused_770":{"entryPoint":4726,"id":770,"parameterSlots":0,"returnSlots":1},"@permit_1650":{"entryPoint":6773,"id":1650,"parameterSlots":7,"returnSlots":0},"@recover_3503":{"entryPoint":11262,"id":3503,"parameterSlots":4,"returnSlots":1},"@renounceRole_224":{"entryPoint":2650,"id":224,"parameterSlots":2,"returnSlots":0},"@revokeRole_201":{"entryPoint":7128,"id":201,"parameterSlots":2,"returnSlots":0},"@sqrt_4278":{"entryPoint":11825,"id":4278,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3890":{"entryPoint":7593,"id":3890,"parameterSlots":1,"returnSlots":1},"@supportsInterface_75":{"entryPoint":2120,"id":75,"parameterSlots":1,"returnSlots":1},"@symbol_916":{"entryPoint":5957,"id":916,"parameterSlots":0,"returnSlots":1},"@toHexString_3156":{"entryPoint":14046,"id":3156,"parameterSlots":2,"returnSlots":1},"@toHexString_3176":{"entryPoint":14001,"id":3176,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_3547":{"entryPoint":13296,"id":3547,"parameterSlots":2,"returnSlots":1},"@toUint224_4877":{"entryPoint":16639,"id":4877,"parameterSlots":1,"returnSlots":1},"@toUint32_5477":{"entryPoint":10672,"id":5477,"parameterSlots":1,"returnSlots":1},"@toUint48_5427":{"entryPoint":11153,"id":5427,"parameterSlots":1,"returnSlots":1},"@totalSupply_936":{"entryPoint":2419,"id":936,"parameterSlots":0,"returnSlots":1},"@transferFrom_1051":{"entryPoint":2428,"id":1051,"parameterSlots":3,"returnSlots":1},"@transfer_975":{"entryPoint":6480,"id":975,"parameterSlots":2,"returnSlots":1},"@tryRecover_3470":{"entryPoint":13360,"id":3470,"parameterSlots":4,"returnSlots":2},"@unpause_6932":{"entryPoint":2996,"id":6932,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":17975,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":17241,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":17525,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":16887,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":18040,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":17292,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":19189,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":18791,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":18203,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":19105,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":17414,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":18948,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":17312,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":18811,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_uint32":{"entryPoint":19209,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":17545,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":17628,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":16907,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr":{"entryPoint":18085,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":17742,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":18455,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":18246,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":18490,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":16961,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":18384,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":17588,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack":{"entryPoint":20726,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":17083,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":23152,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack":{"entryPoint":24657,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack":{"entryPoint":25046,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":22385,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack":{"entryPoint":23545,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack":{"entryPoint":21239,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack":{"entryPoint":25434,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack":{"entryPoint":24761,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack":{"entryPoint":21410,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":21997,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade_to_t_string_memory_ptr_fromStack":{"entryPoint":20948,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":22101,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack":{"entryPoint":21514,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":22527,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack":{"entryPoint":24903,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack":{"entryPoint":23004,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack":{"entryPoint":24441,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack":{"entryPoint":20611,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614_to_t_string_memory_ptr_fromStack":{"entryPoint":20365,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack":{"entryPoint":21713,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack":{"entryPoint":23687,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack":{"entryPoint":25576,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72_to_t_string_memory_ptr_fromStack":{"entryPoint":20223,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db_to_t_string_memory_ptr_fromStack":{"entryPoint":20844,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack":{"entryPoint":25292,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":22243,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack":{"entryPoint":22862,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":21855,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack":{"entryPoint":22720,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df_to_t_string_memory_ptr_fromStack":{"entryPoint":20469,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":23118,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":21135,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":23240,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack":{"entryPoint":20068,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":25150,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Checkpoint_$1744_memory_ptr_to_t_struct$_Checkpoint_$1744_memory_ptr_fromStack":{"entryPoint":19340,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint224_to_t_uint224":{"entryPoint":19325,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":18440,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":17374,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32":{"entryPoint":19271,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":18301,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint48_to_t_uint48_fromStack":{"entryPoint":18729,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":17702,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":23274,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":18261,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":16976,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":18582,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":17603,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":21578,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":21303,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":23331,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":24505,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":20741,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17139,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":24691,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":25080,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22419,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":23579,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21273,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":25468,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":24795,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21444,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22031,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20982,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22135,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21548,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22561,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":24937,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":23038,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":24475,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20645,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20399,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21747,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":23721,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":25610,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20257,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20878,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":25326,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22277,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22896,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21889,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22754,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20503,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21169,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20102,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":25184,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Checkpoint_$1744_memory_ptr__to_t_struct$_Checkpoint_$1744_memory_ptr__fromStack_reversed":{"entryPoint":19385,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":17389,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":24362,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":18316,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed":{"entryPoint":18744,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":17717,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":17887,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":16805,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":17913,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":18425,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":23751,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":18399,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":17001,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":18478,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":18409,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":17011,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":23068,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":20132,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":23457,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":19560,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":19851,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":19642,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":19925,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":22591,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":24018,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":17202,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":16950,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":18341,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":17494,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":16822,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":20675,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":17171,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint224":{"entryPoint":19286,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":17261,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":18286,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint48":{"entryPoint":18712,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":17690,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":23984,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_rational_1_by_1_to_t_uint8":{"entryPoint":20693,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":23877,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":24155,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":17961,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":17027,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":24967,"id":null,"parameterSlots":1,"returnSlots":1},"divide_by_32_ceil":{"entryPoint":23769,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":19455,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":24128,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":17838,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":20684,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":24100,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":19503,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":23412,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":24572,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":19410,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":21012,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":17793,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":23910,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":17785,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":17789,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":16818,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":16814,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":17067,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":23784,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_1_unsigned":{"entryPoint":19548,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":24088,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":23960,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be":{"entryPoint":24617,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2":{"entryPoint":25006,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":22307,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a":{"entryPoint":23505,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257":{"entryPoint":21199,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd":{"entryPoint":25356,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77":{"entryPoint":24721,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872":{"entryPoint":21370,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":21919,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade":{"entryPoint":20908,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":22061,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd":{"entryPoint":21474,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":22449,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd":{"entryPoint":24825,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495":{"entryPoint":22926,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a":{"entryPoint":24401,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759":{"entryPoint":20533,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614":{"entryPoint":20287,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124":{"entryPoint":21673,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699":{"entryPoint":23609,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79":{"entryPoint":25498,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72":{"entryPoint":20183,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db":{"entryPoint":20766,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f":{"entryPoint":25214,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":22165,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19":{"entryPoint":22784,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":21777,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b":{"entryPoint":22642,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df":{"entryPoint":20429,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874":{"entryPoint":23078,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":21057,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69":{"entryPoint":23200,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b":{"entryPoint":19990,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":25110,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":23796,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":23919,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":17219,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":17503,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":16865,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":17270,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":19167,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":18769,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":23956,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:67781:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"378:105:26","statements":[{"nodeType":"YulAssignment","src":"388:89:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:26","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:26"},"nodeType":"YulFunctionCall","src":"399:78:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:26"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:26","type":""}],"src":"334:149:26"},{"body":{"nodeType":"YulBlock","src":"531:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:26"},"nodeType":"YulFunctionCall","src":"589:12:26"},"nodeType":"YulExpressionStatement","src":"589:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:26"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:26"},"nodeType":"YulFunctionCall","src":"561:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:26"},"nodeType":"YulFunctionCall","src":"551:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:26"},"nodeType":"YulFunctionCall","src":"544:42:26"},"nodeType":"YulIf","src":"541:62:26"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:26","type":""}],"src":"489:120:26"},{"body":{"nodeType":"YulBlock","src":"666:86:26","statements":[{"nodeType":"YulAssignment","src":"676:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:26"},"nodeType":"YulFunctionCall","src":"685:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:26"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:26"},"nodeType":"YulFunctionCall","src":"714:32:26"},"nodeType":"YulExpressionStatement","src":"714:32:26"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:26","type":""}],"src":"615:137:26"},{"body":{"nodeType":"YulBlock","src":"823:262:26","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:26"},"nodeType":"YulFunctionCall","src":"871:79:26"},"nodeType":"YulExpressionStatement","src":"871:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:26"},"nodeType":"YulFunctionCall","src":"840:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:26"},"nodeType":"YulFunctionCall","src":"836:32:26"},"nodeType":"YulIf","src":"833:119:26"},{"nodeType":"YulBlock","src":"962:116:26","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:26"},"nodeType":"YulFunctionCall","src":"1036:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:26"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:26"},"nodeType":"YulFunctionCall","src":"1016:52:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:26","type":""}],"src":"758:327:26"},{"body":{"nodeType":"YulBlock","src":"1133:48:26","statements":[{"nodeType":"YulAssignment","src":"1143:32:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:26"},"nodeType":"YulFunctionCall","src":"1161:13:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:26"},"nodeType":"YulFunctionCall","src":"1154:21:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:26"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:26","type":""}],"src":"1091:90:26"},{"body":{"nodeType":"YulBlock","src":"1246:50:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:26"},"nodeType":"YulFunctionCall","src":"1268:21:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:26"},"nodeType":"YulFunctionCall","src":"1256:34:26"},"nodeType":"YulExpressionStatement","src":"1256:34:26"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:26","type":""}],"src":"1187:109:26"},{"body":{"nodeType":"YulBlock","src":"1394:118:26","statements":[{"nodeType":"YulAssignment","src":"1404:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:26"},"nodeType":"YulFunctionCall","src":"1412:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:26"},"nodeType":"YulFunctionCall","src":"1487:17:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:26"},"nodeType":"YulFunctionCall","src":"1440:65:26"},"nodeType":"YulExpressionStatement","src":"1440:65:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:26","type":""}],"src":"1302:210:26"},{"body":{"nodeType":"YulBlock","src":"1577:40:26","statements":[{"nodeType":"YulAssignment","src":"1588:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:26"},"nodeType":"YulFunctionCall","src":"1598:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:26","type":""}],"src":"1518:99:26"},{"body":{"nodeType":"YulBlock","src":"1719:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:26"},"nodeType":"YulFunctionCall","src":"1729:19:26"},"nodeType":"YulExpressionStatement","src":"1729:19:26"},{"nodeType":"YulAssignment","src":"1757:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:26"},"nodeType":"YulFunctionCall","src":"1772:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:26","type":""}],"src":"1623:169:26"},{"body":{"nodeType":"YulBlock","src":"1860:184:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1874:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1939:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1964:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"1969:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:26"},"nodeType":"YulFunctionCall","src":"1960:11:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1983:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"1988:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:26"},"nodeType":"YulFunctionCall","src":"1979:11:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1973:5:26"},"nodeType":"YulFunctionCall","src":"1973:18:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:26"},"nodeType":"YulFunctionCall","src":"1953:39:26"},"nodeType":"YulExpressionStatement","src":"1953:39:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"1903:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1897:2:26"},"nodeType":"YulFunctionCall","src":"1897:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1911:19:26","statements":[{"nodeType":"YulAssignment","src":"1913:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1922:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"1925:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:26"},"nodeType":"YulFunctionCall","src":"1918:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1913:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"1893:3:26","statements":[]},"src":"1889:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2022:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2027:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:26"},"nodeType":"YulFunctionCall","src":"2018:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"2036:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:26"},"nodeType":"YulFunctionCall","src":"2011:27:26"},"nodeType":"YulExpressionStatement","src":"2011:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1842:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1847:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"1852:6:26","type":""}],"src":"1798:246:26"},{"body":{"nodeType":"YulBlock","src":"2098:54:26","statements":[{"nodeType":"YulAssignment","src":"2108:38:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2126:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:26"},"nodeType":"YulFunctionCall","src":"2122:14:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2138:3:26"},"nodeType":"YulFunctionCall","src":"2138:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2118:3:26"},"nodeType":"YulFunctionCall","src":"2118:28:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2108:6:26"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2091:6:26","type":""}],"src":"2050:102:26"},{"body":{"nodeType":"YulBlock","src":"2250:285:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2260:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2274:32:26"},"nodeType":"YulFunctionCall","src":"2274:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2264:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2322:78:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2388:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2329:58:26"},"nodeType":"YulFunctionCall","src":"2329:71:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2322:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2448:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2455:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:26"},"nodeType":"YulFunctionCall","src":"2444:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"2462:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2467:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2409:34:26"},"nodeType":"YulFunctionCall","src":"2409:65:26"},"nodeType":"YulExpressionStatement","src":"2409:65:26"},{"nodeType":"YulAssignment","src":"2483:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2494:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2521:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2499:21:26"},"nodeType":"YulFunctionCall","src":"2499:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:26"},"nodeType":"YulFunctionCall","src":"2490:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2483:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2231:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2238:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2246:3:26","type":""}],"src":"2158:377:26"},{"body":{"nodeType":"YulBlock","src":"2659:195:26","statements":[{"nodeType":"YulAssignment","src":"2669:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2692:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2677:3:26"},"nodeType":"YulFunctionCall","src":"2677:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2669:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:26"},"nodeType":"YulFunctionCall","src":"2712:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2731:3:26"},"nodeType":"YulFunctionCall","src":"2731:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:26"},"nodeType":"YulFunctionCall","src":"2705:47:26"},"nodeType":"YulExpressionStatement","src":"2705:47:26"},{"nodeType":"YulAssignment","src":"2761:86:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2833:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"2842:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2769:63:26"},"nodeType":"YulFunctionCall","src":"2769:78:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2761:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2643:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2654:4:26","type":""}],"src":"2541:313:26"},{"body":{"nodeType":"YulBlock","src":"2905:81:26","statements":[{"nodeType":"YulAssignment","src":"2915:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2930:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2937:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2926:3:26"},"nodeType":"YulFunctionCall","src":"2926:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2915:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2887:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2897:7:26","type":""}],"src":"2860:126:26"},{"body":{"nodeType":"YulBlock","src":"3037:51:26","statements":[{"nodeType":"YulAssignment","src":"3047:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3076:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3058:17:26"},"nodeType":"YulFunctionCall","src":"3058:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3047:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3019:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3029:7:26","type":""}],"src":"2992:96:26"},{"body":{"nodeType":"YulBlock","src":"3137:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"3194:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3203:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3206:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3196:6:26"},"nodeType":"YulFunctionCall","src":"3196:12:26"},"nodeType":"YulExpressionStatement","src":"3196:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3160:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3185:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3167:17:26"},"nodeType":"YulFunctionCall","src":"3167:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3157:2:26"},"nodeType":"YulFunctionCall","src":"3157:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3150:6:26"},"nodeType":"YulFunctionCall","src":"3150:43:26"},"nodeType":"YulIf","src":"3147:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3130:5:26","type":""}],"src":"3094:122:26"},{"body":{"nodeType":"YulBlock","src":"3274:87:26","statements":[{"nodeType":"YulAssignment","src":"3284:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3306:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3293:12:26"},"nodeType":"YulFunctionCall","src":"3293:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3284:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3349:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3322:26:26"},"nodeType":"YulFunctionCall","src":"3322:33:26"},"nodeType":"YulExpressionStatement","src":"3322:33:26"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3252:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"3260:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3268:5:26","type":""}],"src":"3222:139:26"},{"body":{"nodeType":"YulBlock","src":"3412:32:26","statements":[{"nodeType":"YulAssignment","src":"3422:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"3433:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3422:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3394:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3404:7:26","type":""}],"src":"3367:77:26"},{"body":{"nodeType":"YulBlock","src":"3493:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"3550:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3559:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3562:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3552:6:26"},"nodeType":"YulFunctionCall","src":"3552:12:26"},"nodeType":"YulExpressionStatement","src":"3552:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3516:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3541:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3523:17:26"},"nodeType":"YulFunctionCall","src":"3523:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3513:2:26"},"nodeType":"YulFunctionCall","src":"3513:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3506:6:26"},"nodeType":"YulFunctionCall","src":"3506:43:26"},"nodeType":"YulIf","src":"3503:63:26"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3486:5:26","type":""}],"src":"3450:122:26"},{"body":{"nodeType":"YulBlock","src":"3630:87:26","statements":[{"nodeType":"YulAssignment","src":"3640:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3662:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3649:12:26"},"nodeType":"YulFunctionCall","src":"3649:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3640:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3705:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3678:26:26"},"nodeType":"YulFunctionCall","src":"3678:33:26"},"nodeType":"YulExpressionStatement","src":"3678:33:26"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3608:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"3616:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3624:5:26","type":""}],"src":"3578:139:26"},{"body":{"nodeType":"YulBlock","src":"3806:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"3852:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3854:77:26"},"nodeType":"YulFunctionCall","src":"3854:79:26"},"nodeType":"YulExpressionStatement","src":"3854:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3827:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"3836:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3823:3:26"},"nodeType":"YulFunctionCall","src":"3823:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"3848:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3819:3:26"},"nodeType":"YulFunctionCall","src":"3819:32:26"},"nodeType":"YulIf","src":"3816:119:26"},{"nodeType":"YulBlock","src":"3945:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3960:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3974:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3964:6:26","type":""}]},{"nodeType":"YulAssignment","src":"3989:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4024:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4035:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4020:3:26"},"nodeType":"YulFunctionCall","src":"4020:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4044:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3999:20:26"},"nodeType":"YulFunctionCall","src":"3999:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3989:6:26"}]}]},{"nodeType":"YulBlock","src":"4072:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4087:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4101:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4091:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4117:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4152:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4163:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4148:3:26"},"nodeType":"YulFunctionCall","src":"4148:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4172:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4127:20:26"},"nodeType":"YulFunctionCall","src":"4127:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4117:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3768:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3779:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3791:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3799:6:26","type":""}],"src":"3723:474:26"},{"body":{"nodeType":"YulBlock","src":"4268:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4285:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4308:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4290:17:26"},"nodeType":"YulFunctionCall","src":"4290:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4278:6:26"},"nodeType":"YulFunctionCall","src":"4278:37:26"},"nodeType":"YulExpressionStatement","src":"4278:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4256:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4263:3:26","type":""}],"src":"4203:118:26"},{"body":{"nodeType":"YulBlock","src":"4425:124:26","statements":[{"nodeType":"YulAssignment","src":"4435:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4447:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4458:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4443:3:26"},"nodeType":"YulFunctionCall","src":"4443:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4435:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4515:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4528:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4539:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4524:3:26"},"nodeType":"YulFunctionCall","src":"4524:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4471:43:26"},"nodeType":"YulFunctionCall","src":"4471:71:26"},"nodeType":"YulExpressionStatement","src":"4471:71:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4397:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4409:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4420:4:26","type":""}],"src":"4327:222:26"},{"body":{"nodeType":"YulBlock","src":"4655:519:26","statements":[{"body":{"nodeType":"YulBlock","src":"4701:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4703:77:26"},"nodeType":"YulFunctionCall","src":"4703:79:26"},"nodeType":"YulExpressionStatement","src":"4703:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4676:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"4685:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4672:3:26"},"nodeType":"YulFunctionCall","src":"4672:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"4697:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4668:3:26"},"nodeType":"YulFunctionCall","src":"4668:32:26"},"nodeType":"YulIf","src":"4665:119:26"},{"nodeType":"YulBlock","src":"4794:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4809:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4823:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4813:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4838:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4873:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4884:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4869:3:26"},"nodeType":"YulFunctionCall","src":"4869:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4893:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4848:20:26"},"nodeType":"YulFunctionCall","src":"4848:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4838:6:26"}]}]},{"nodeType":"YulBlock","src":"4921:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4936:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4950:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4940:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4966:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5001:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5012:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4997:3:26"},"nodeType":"YulFunctionCall","src":"4997:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5021:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4976:20:26"},"nodeType":"YulFunctionCall","src":"4976:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4966:6:26"}]}]},{"nodeType":"YulBlock","src":"5049:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5064:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5078:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5068:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5094:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5129:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5140:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5125:3:26"},"nodeType":"YulFunctionCall","src":"5125:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5149:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5104:20:26"},"nodeType":"YulFunctionCall","src":"5104:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5094:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4609:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4620:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4632:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4640:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4648:6:26","type":""}],"src":"4555:619:26"},{"body":{"nodeType":"YulBlock","src":"5225:32:26","statements":[{"nodeType":"YulAssignment","src":"5235:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"5246:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5235:7:26"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5207:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5217:7:26","type":""}],"src":"5180:77:26"},{"body":{"nodeType":"YulBlock","src":"5306:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"5363:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5372:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5375:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5365:6:26"},"nodeType":"YulFunctionCall","src":"5365:12:26"},"nodeType":"YulExpressionStatement","src":"5365:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5329:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5354:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5336:17:26"},"nodeType":"YulFunctionCall","src":"5336:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5326:2:26"},"nodeType":"YulFunctionCall","src":"5326:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5319:6:26"},"nodeType":"YulFunctionCall","src":"5319:43:26"},"nodeType":"YulIf","src":"5316:63:26"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5299:5:26","type":""}],"src":"5263:122:26"},{"body":{"nodeType":"YulBlock","src":"5443:87:26","statements":[{"nodeType":"YulAssignment","src":"5453:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5475:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5462:12:26"},"nodeType":"YulFunctionCall","src":"5462:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5453:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5518:5:26"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"5491:26:26"},"nodeType":"YulFunctionCall","src":"5491:33:26"},"nodeType":"YulExpressionStatement","src":"5491:33:26"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5421:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"5429:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5437:5:26","type":""}],"src":"5391:139:26"},{"body":{"nodeType":"YulBlock","src":"5602:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"5648:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5650:77:26"},"nodeType":"YulFunctionCall","src":"5650:79:26"},"nodeType":"YulExpressionStatement","src":"5650:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5623:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5632:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5619:3:26"},"nodeType":"YulFunctionCall","src":"5619:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"5644:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5615:3:26"},"nodeType":"YulFunctionCall","src":"5615:32:26"},"nodeType":"YulIf","src":"5612:119:26"},{"nodeType":"YulBlock","src":"5741:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5756:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5770:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5760:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5785:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5820:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5831:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5816:3:26"},"nodeType":"YulFunctionCall","src":"5816:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5840:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"5795:20:26"},"nodeType":"YulFunctionCall","src":"5795:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5785:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5572:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5583:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5595:6:26","type":""}],"src":"5536:329:26"},{"body":{"nodeType":"YulBlock","src":"5936:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5953:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5976:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5958:17:26"},"nodeType":"YulFunctionCall","src":"5958:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5946:6:26"},"nodeType":"YulFunctionCall","src":"5946:37:26"},"nodeType":"YulExpressionStatement","src":"5946:37:26"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5924:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5931:3:26","type":""}],"src":"5871:118:26"},{"body":{"nodeType":"YulBlock","src":"6093:124:26","statements":[{"nodeType":"YulAssignment","src":"6103:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6115:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6126:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6111:3:26"},"nodeType":"YulFunctionCall","src":"6111:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6103:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6183:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6196:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6207:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6192:3:26"},"nodeType":"YulFunctionCall","src":"6192:17:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6139:43:26"},"nodeType":"YulFunctionCall","src":"6139:71:26"},"nodeType":"YulExpressionStatement","src":"6139:71:26"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6065:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6077:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6088:4:26","type":""}],"src":"5995:222:26"},{"body":{"nodeType":"YulBlock","src":"6306:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"6352:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6354:77:26"},"nodeType":"YulFunctionCall","src":"6354:79:26"},"nodeType":"YulExpressionStatement","src":"6354:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6327:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"6336:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6323:3:26"},"nodeType":"YulFunctionCall","src":"6323:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"6348:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6319:3:26"},"nodeType":"YulFunctionCall","src":"6319:32:26"},"nodeType":"YulIf","src":"6316:119:26"},{"nodeType":"YulBlock","src":"6445:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6460:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6474:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6464:6:26","type":""}]},{"nodeType":"YulAssignment","src":"6489:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6524:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6535:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6520:3:26"},"nodeType":"YulFunctionCall","src":"6520:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6544:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"6499:20:26"},"nodeType":"YulFunctionCall","src":"6499:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6489:6:26"}]}]},{"nodeType":"YulBlock","src":"6572:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6587:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6601:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6591:6:26","type":""}]},{"nodeType":"YulAssignment","src":"6617:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6652:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6663:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6648:3:26"},"nodeType":"YulFunctionCall","src":"6648:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6672:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6627:20:26"},"nodeType":"YulFunctionCall","src":"6627:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6617:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6268:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6279:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6291:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6299:6:26","type":""}],"src":"6223:474:26"},{"body":{"nodeType":"YulBlock","src":"6746:43:26","statements":[{"nodeType":"YulAssignment","src":"6756:27:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6771:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"6778:4:26","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6767:3:26"},"nodeType":"YulFunctionCall","src":"6767:16:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6756:7:26"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6728:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6738:7:26","type":""}],"src":"6703:86:26"},{"body":{"nodeType":"YulBlock","src":"6856:51:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6873:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6894:5:26"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"6878:15:26"},"nodeType":"YulFunctionCall","src":"6878:22:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6866:6:26"},"nodeType":"YulFunctionCall","src":"6866:35:26"},"nodeType":"YulExpressionStatement","src":"6866:35:26"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6844:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6851:3:26","type":""}],"src":"6795:112:26"},{"body":{"nodeType":"YulBlock","src":"7007:120:26","statements":[{"nodeType":"YulAssignment","src":"7017:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7029:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7040:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7025:3:26"},"nodeType":"YulFunctionCall","src":"7025:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7017:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7093:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7106:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7117:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7102:3:26"},"nodeType":"YulFunctionCall","src":"7102:17:26"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"7053:39:26"},"nodeType":"YulFunctionCall","src":"7053:67:26"},"nodeType":"YulExpressionStatement","src":"7053:67:26"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6979:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6991:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7002:4:26","type":""}],"src":"6913:214:26"},{"body":{"nodeType":"YulBlock","src":"7199:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"7245:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7247:77:26"},"nodeType":"YulFunctionCall","src":"7247:79:26"},"nodeType":"YulExpressionStatement","src":"7247:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7220:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"7229:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7216:3:26"},"nodeType":"YulFunctionCall","src":"7216:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"7241:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7212:3:26"},"nodeType":"YulFunctionCall","src":"7212:32:26"},"nodeType":"YulIf","src":"7209:119:26"},{"nodeType":"YulBlock","src":"7338:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7353:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"7367:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7357:6:26","type":""}]},{"nodeType":"YulAssignment","src":"7382:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7417:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"7428:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7413:3:26"},"nodeType":"YulFunctionCall","src":"7413:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7437:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7392:20:26"},"nodeType":"YulFunctionCall","src":"7392:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7382:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7169:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7180:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7192:6:26","type":""}],"src":"7133:329:26"},{"body":{"nodeType":"YulBlock","src":"7557:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7574:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7577:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7567:6:26"},"nodeType":"YulFunctionCall","src":"7567:12:26"},"nodeType":"YulExpressionStatement","src":"7567:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"7468:117:26"},{"body":{"nodeType":"YulBlock","src":"7680:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7697:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7700:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7690:6:26"},"nodeType":"YulFunctionCall","src":"7690:12:26"},"nodeType":"YulExpressionStatement","src":"7690:12:26"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7591:117:26"},{"body":{"nodeType":"YulBlock","src":"7742:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7759:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7762:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7752:6:26"},"nodeType":"YulFunctionCall","src":"7752:88:26"},"nodeType":"YulExpressionStatement","src":"7752:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7856:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7859:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7849:6:26"},"nodeType":"YulFunctionCall","src":"7849:15:26"},"nodeType":"YulExpressionStatement","src":"7849:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7880:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7883:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7873:6:26"},"nodeType":"YulFunctionCall","src":"7873:15:26"},"nodeType":"YulExpressionStatement","src":"7873:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7714:180:26"},{"body":{"nodeType":"YulBlock","src":"7943:238:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7953:58:26","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7975:6:26"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8005:4:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7983:21:26"},"nodeType":"YulFunctionCall","src":"7983:27:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7971:3:26"},"nodeType":"YulFunctionCall","src":"7971:40:26"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7957:10:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"8122:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8124:16:26"},"nodeType":"YulFunctionCall","src":"8124:18:26"},"nodeType":"YulExpressionStatement","src":"8124:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8065:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"8077:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8062:2:26"},"nodeType":"YulFunctionCall","src":"8062:34:26"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8101:10:26"},{"name":"memPtr","nodeType":"YulIdentifier","src":"8113:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8098:2:26"},"nodeType":"YulFunctionCall","src":"8098:22:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8059:2:26"},"nodeType":"YulFunctionCall","src":"8059:62:26"},"nodeType":"YulIf","src":"8056:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8160:2:26","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8164:10:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8153:6:26"},"nodeType":"YulFunctionCall","src":"8153:22:26"},"nodeType":"YulExpressionStatement","src":"8153:22:26"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7929:6:26","type":""},{"name":"size","nodeType":"YulTypedName","src":"7937:4:26","type":""}],"src":"7900:281:26"},{"body":{"nodeType":"YulBlock","src":"8228:88:26","statements":[{"nodeType":"YulAssignment","src":"8238:30:26","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"8248:18:26"},"nodeType":"YulFunctionCall","src":"8248:20:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8238:6:26"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8297:6:26"},{"name":"size","nodeType":"YulIdentifier","src":"8305:4:26"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"8277:19:26"},"nodeType":"YulFunctionCall","src":"8277:33:26"},"nodeType":"YulExpressionStatement","src":"8277:33:26"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"8212:4:26","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"8221:6:26","type":""}],"src":"8187:129:26"},{"body":{"nodeType":"YulBlock","src":"8389:241:26","statements":[{"body":{"nodeType":"YulBlock","src":"8494:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8496:16:26"},"nodeType":"YulFunctionCall","src":"8496:18:26"},"nodeType":"YulExpressionStatement","src":"8496:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8466:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"8474:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8463:2:26"},"nodeType":"YulFunctionCall","src":"8463:30:26"},"nodeType":"YulIf","src":"8460:56:26"},{"nodeType":"YulAssignment","src":"8526:37:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8556:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8534:21:26"},"nodeType":"YulFunctionCall","src":"8534:29:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8526:4:26"}]},{"nodeType":"YulAssignment","src":"8600:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8612:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"8618:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8608:3:26"},"nodeType":"YulFunctionCall","src":"8608:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8600:4:26"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"8373:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"8384:4:26","type":""}],"src":"8322:308:26"},{"body":{"nodeType":"YulBlock","src":"8700:82:26","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8723:3:26"},{"name":"src","nodeType":"YulIdentifier","src":"8728:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8733:6:26"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8710:12:26"},"nodeType":"YulFunctionCall","src":"8710:30:26"},"nodeType":"YulExpressionStatement","src":"8710:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8760:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8765:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8756:3:26"},"nodeType":"YulFunctionCall","src":"8756:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"8774:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8749:6:26"},"nodeType":"YulFunctionCall","src":"8749:27:26"},"nodeType":"YulExpressionStatement","src":"8749:27:26"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8682:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8687:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"8692:6:26","type":""}],"src":"8636:146:26"},{"body":{"nodeType":"YulBlock","src":"8872:341:26","statements":[{"nodeType":"YulAssignment","src":"8882:75:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8949:6:26"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8907:41:26"},"nodeType":"YulFunctionCall","src":"8907:49:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8891:15:26"},"nodeType":"YulFunctionCall","src":"8891:66:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8882:5:26"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8973:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"8980:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8966:6:26"},"nodeType":"YulFunctionCall","src":"8966:21:26"},"nodeType":"YulExpressionStatement","src":"8966:21:26"},{"nodeType":"YulVariableDeclaration","src":"8996:27:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9011:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"9018:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9007:3:26"},"nodeType":"YulFunctionCall","src":"9007:16:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"9000:3:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"9061:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"9063:77:26"},"nodeType":"YulFunctionCall","src":"9063:79:26"},"nodeType":"YulExpressionStatement","src":"9063:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9042:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"9047:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:26"},"nodeType":"YulFunctionCall","src":"9038:16:26"},{"name":"end","nodeType":"YulIdentifier","src":"9056:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9035:2:26"},"nodeType":"YulFunctionCall","src":"9035:25:26"},"nodeType":"YulIf","src":"9032:112:26"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9190:3:26"},{"name":"dst","nodeType":"YulIdentifier","src":"9195:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"9200:6:26"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9153:36:26"},"nodeType":"YulFunctionCall","src":"9153:54:26"},"nodeType":"YulExpressionStatement","src":"9153:54:26"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8845:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"8850:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"8858:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8866:5:26","type":""}],"src":"8788:425:26"},{"body":{"nodeType":"YulBlock","src":"9295:278:26","statements":[{"body":{"nodeType":"YulBlock","src":"9344:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"9346:77:26"},"nodeType":"YulFunctionCall","src":"9346:79:26"},"nodeType":"YulExpressionStatement","src":"9346:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9323:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"9331:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9319:3:26"},"nodeType":"YulFunctionCall","src":"9319:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"9338:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9315:3:26"},"nodeType":"YulFunctionCall","src":"9315:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9308:6:26"},"nodeType":"YulFunctionCall","src":"9308:35:26"},"nodeType":"YulIf","src":"9305:122:26"},{"nodeType":"YulVariableDeclaration","src":"9436:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9463:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9450:12:26"},"nodeType":"YulFunctionCall","src":"9450:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9440:6:26","type":""}]},{"nodeType":"YulAssignment","src":"9479:88:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9540:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"9548:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9536:3:26"},"nodeType":"YulFunctionCall","src":"9536:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"9555:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"9563:3:26"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9488:47:26"},"nodeType":"YulFunctionCall","src":"9488:79:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9479:5:26"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9273:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"9281:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"9289:5:26","type":""}],"src":"9233:340:26"},{"body":{"nodeType":"YulBlock","src":"9682:731:26","statements":[{"body":{"nodeType":"YulBlock","src":"9728:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9730:77:26"},"nodeType":"YulFunctionCall","src":"9730:79:26"},"nodeType":"YulExpressionStatement","src":"9730:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9703:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"9712:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9699:3:26"},"nodeType":"YulFunctionCall","src":"9699:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"9724:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9695:3:26"},"nodeType":"YulFunctionCall","src":"9695:32:26"},"nodeType":"YulIf","src":"9692:119:26"},{"nodeType":"YulBlock","src":"9821:287:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9836:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9867:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9878:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9863:3:26"},"nodeType":"YulFunctionCall","src":"9863:17:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9850:12:26"},"nodeType":"YulFunctionCall","src":"9850:31:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9840:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"9928:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9930:77:26"},"nodeType":"YulFunctionCall","src":"9930:79:26"},"nodeType":"YulExpressionStatement","src":"9930:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9900:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"9908:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9897:2:26"},"nodeType":"YulFunctionCall","src":"9897:30:26"},"nodeType":"YulIf","src":"9894:117:26"},{"nodeType":"YulAssignment","src":"10025:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10070:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10081:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10066:3:26"},"nodeType":"YulFunctionCall","src":"10066:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10090:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10035:30:26"},"nodeType":"YulFunctionCall","src":"10035:63:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10025:6:26"}]}]},{"nodeType":"YulBlock","src":"10118:288:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10133:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10164:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10175:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10160:3:26"},"nodeType":"YulFunctionCall","src":"10160:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10147:12:26"},"nodeType":"YulFunctionCall","src":"10147:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10137:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"10226:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10228:77:26"},"nodeType":"YulFunctionCall","src":"10228:79:26"},"nodeType":"YulExpressionStatement","src":"10228:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10198:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"10206:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10195:2:26"},"nodeType":"YulFunctionCall","src":"10195:30:26"},"nodeType":"YulIf","src":"10192:117:26"},{"nodeType":"YulAssignment","src":"10323:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10368:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10379:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10364:3:26"},"nodeType":"YulFunctionCall","src":"10364:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10388:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10333:30:26"},"nodeType":"YulFunctionCall","src":"10333:63:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10323:6:26"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9644:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9655:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9667:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9675:6:26","type":""}],"src":"9579:834:26"},{"body":{"nodeType":"YulBlock","src":"10485:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"10531:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10533:77:26"},"nodeType":"YulFunctionCall","src":"10533:79:26"},"nodeType":"YulExpressionStatement","src":"10533:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10506:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"10515:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10502:3:26"},"nodeType":"YulFunctionCall","src":"10502:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"10527:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10498:3:26"},"nodeType":"YulFunctionCall","src":"10498:32:26"},"nodeType":"YulIf","src":"10495:119:26"},{"nodeType":"YulBlock","src":"10624:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10639:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10653:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10643:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10668:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10703:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10714:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10699:3:26"},"nodeType":"YulFunctionCall","src":"10699:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10723:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10678:20:26"},"nodeType":"YulFunctionCall","src":"10678:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10668:6:26"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10455:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10466:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10478:6:26","type":""}],"src":"10419:329:26"},{"body":{"nodeType":"YulBlock","src":"10819:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10836:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10859:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"10841:17:26"},"nodeType":"YulFunctionCall","src":"10841:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10829:6:26"},"nodeType":"YulFunctionCall","src":"10829:37:26"},"nodeType":"YulExpressionStatement","src":"10829:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10807:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10814:3:26","type":""}],"src":"10754:118:26"},{"body":{"nodeType":"YulBlock","src":"10976:124:26","statements":[{"nodeType":"YulAssignment","src":"10986:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10998:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11009:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10994:3:26"},"nodeType":"YulFunctionCall","src":"10994:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10986:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11066:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11079:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11090:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11075:3:26"},"nodeType":"YulFunctionCall","src":"11075:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11022:43:26"},"nodeType":"YulFunctionCall","src":"11022:71:26"},"nodeType":"YulExpressionStatement","src":"11022:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10948:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10960:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10971:4:26","type":""}],"src":"10878:222:26"},{"body":{"nodeType":"YulBlock","src":"11150:49:26","statements":[{"nodeType":"YulAssignment","src":"11160:33:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11175:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"11182:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11171:3:26"},"nodeType":"YulFunctionCall","src":"11171:22:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11160:7:26"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11132:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11142:7:26","type":""}],"src":"11106:93:26"},{"body":{"nodeType":"YulBlock","src":"11268:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11285:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11307:5:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"11290:16:26"},"nodeType":"YulFunctionCall","src":"11290:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11278:6:26"},"nodeType":"YulFunctionCall","src":"11278:36:26"},"nodeType":"YulExpressionStatement","src":"11278:36:26"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11256:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11263:3:26","type":""}],"src":"11205:115:26"},{"body":{"nodeType":"YulBlock","src":"11422:122:26","statements":[{"nodeType":"YulAssignment","src":"11432:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11444:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11455:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11440:3:26"},"nodeType":"YulFunctionCall","src":"11440:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11432:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11510:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11523:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11534:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11519:3:26"},"nodeType":"YulFunctionCall","src":"11519:17:26"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"11468:41:26"},"nodeType":"YulFunctionCall","src":"11468:69:26"},"nodeType":"YulExpressionStatement","src":"11468:69:26"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11394:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11406:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11417:4:26","type":""}],"src":"11326:218:26"},{"body":{"nodeType":"YulBlock","src":"11594:105:26","statements":[{"nodeType":"YulAssignment","src":"11604:89:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11619:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"11626:66:26","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11615:3:26"},"nodeType":"YulFunctionCall","src":"11615:78:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11604:7:26"}]}]},"name":"cleanup_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11576:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11586:7:26","type":""}],"src":"11550:149:26"},{"body":{"nodeType":"YulBlock","src":"11768:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11785:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11807:5:26"}],"functionName":{"name":"cleanup_t_bytes1","nodeType":"YulIdentifier","src":"11790:16:26"},"nodeType":"YulFunctionCall","src":"11790:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11778:6:26"},"nodeType":"YulFunctionCall","src":"11778:36:26"},"nodeType":"YulExpressionStatement","src":"11778:36:26"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11756:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11763:3:26","type":""}],"src":"11705:115:26"},{"body":{"nodeType":"YulBlock","src":"11900:40:26","statements":[{"nodeType":"YulAssignment","src":"11911:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11927:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11921:5:26"},"nodeType":"YulFunctionCall","src":"11921:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11911:6:26"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11883:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11893:6:26","type":""}],"src":"11826:114:26"},{"body":{"nodeType":"YulBlock","src":"12057:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12074:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"12079:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12067:6:26"},"nodeType":"YulFunctionCall","src":"12067:19:26"},"nodeType":"YulExpressionStatement","src":"12067:19:26"},{"nodeType":"YulAssignment","src":"12095:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12114:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"12119:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12110:3:26"},"nodeType":"YulFunctionCall","src":"12110:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12095:11:26"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12029:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"12034:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12045:11:26","type":""}],"src":"11946:184:26"},{"body":{"nodeType":"YulBlock","src":"12208:60:26","statements":[{"nodeType":"YulAssignment","src":"12218:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"12226:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12218:4:26"}]},{"nodeType":"YulAssignment","src":"12239:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"12251:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"12256:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12247:3:26"},"nodeType":"YulFunctionCall","src":"12247:14:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12239:4:26"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12195:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"12203:4:26","type":""}],"src":"12136:132:26"},{"body":{"nodeType":"YulBlock","src":"12329:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12346:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12369:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12351:17:26"},"nodeType":"YulFunctionCall","src":"12351:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12339:6:26"},"nodeType":"YulFunctionCall","src":"12339:37:26"},"nodeType":"YulExpressionStatement","src":"12339:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12317:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12324:3:26","type":""}],"src":"12274:108:26"},{"body":{"nodeType":"YulBlock","src":"12468:99:26","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12512:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"12520:3:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12478:33:26"},"nodeType":"YulFunctionCall","src":"12478:46:26"},"nodeType":"YulExpressionStatement","src":"12478:46:26"},{"nodeType":"YulAssignment","src":"12533:28:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12551:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"12556:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12547:3:26"},"nodeType":"YulFunctionCall","src":"12547:14:26"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"12533:10:26"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"12441:6:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12449:3:26","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"12457:10:26","type":""}],"src":"12388:179:26"},{"body":{"nodeType":"YulBlock","src":"12648:38:26","statements":[{"nodeType":"YulAssignment","src":"12658:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"12670:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"12675:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12666:3:26"},"nodeType":"YulFunctionCall","src":"12666:14:26"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"12658:4:26"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12635:3:26","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"12643:4:26","type":""}],"src":"12573:113:26"},{"body":{"nodeType":"YulBlock","src":"12846:608:26","statements":[{"nodeType":"YulVariableDeclaration","src":"12856:68:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12918:5:26"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12870:47:26"},"nodeType":"YulFunctionCall","src":"12870:54:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12860:6:26","type":""}]},{"nodeType":"YulAssignment","src":"12933:93:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13014:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"13019:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12940:73:26"},"nodeType":"YulFunctionCall","src":"12940:86:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12933:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"13035:71:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13100:5:26"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13050:49:26"},"nodeType":"YulFunctionCall","src":"13050:56:26"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"13039:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13115:21:26","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"13129:7:26"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"13119:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"13205:224:26","statements":[{"nodeType":"YulVariableDeclaration","src":"13219:34:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13246:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13240:5:26"},"nodeType":"YulFunctionCall","src":"13240:13:26"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"13223:13:26","type":""}]},{"nodeType":"YulAssignment","src":"13266:70:26","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"13317:13:26"},{"name":"pos","nodeType":"YulIdentifier","src":"13332:3:26"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13273:43:26"},"nodeType":"YulFunctionCall","src":"13273:63:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13266:3:26"}]},{"nodeType":"YulAssignment","src":"13349:70:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13412:6:26"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13359:52:26"},"nodeType":"YulFunctionCall","src":"13359:60:26"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13349:6:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13167:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"13170:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13164:2:26"},"nodeType":"YulFunctionCall","src":"13164:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13178:18:26","statements":[{"nodeType":"YulAssignment","src":"13180:14:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13189:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"13192:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13185:3:26"},"nodeType":"YulFunctionCall","src":"13185:9:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13180:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"13149:14:26","statements":[{"nodeType":"YulVariableDeclaration","src":"13151:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"13160:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13155:1:26","type":""}]}]},"src":"13145:284:26"},{"nodeType":"YulAssignment","src":"13438:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"13445:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13438:3:26"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12825:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12832:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12841:3:26","type":""}],"src":"12722:732:26"},{"body":{"nodeType":"YulBlock","src":"13814:861:26","statements":[{"nodeType":"YulAssignment","src":"13824:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13836:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13847:3:26","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13832:3:26"},"nodeType":"YulFunctionCall","src":"13832:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13824:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13903:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13916:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13927:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13912:3:26"},"nodeType":"YulFunctionCall","src":"13912:17:26"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulIdentifier","src":"13861:41:26"},"nodeType":"YulFunctionCall","src":"13861:69:26"},"nodeType":"YulExpressionStatement","src":"13861:69:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13951:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13962:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13947:3:26"},"nodeType":"YulFunctionCall","src":"13947:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13971:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"13977:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13967:3:26"},"nodeType":"YulFunctionCall","src":"13967:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13940:6:26"},"nodeType":"YulFunctionCall","src":"13940:48:26"},"nodeType":"YulExpressionStatement","src":"13940:48:26"},{"nodeType":"YulAssignment","src":"13997:86:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14069:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"14078:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14005:63:26"},"nodeType":"YulFunctionCall","src":"14005:78:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13997:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14104:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14115:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14100:3:26"},"nodeType":"YulFunctionCall","src":"14100:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14124:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"14130:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14120:3:26"},"nodeType":"YulFunctionCall","src":"14120:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14093:6:26"},"nodeType":"YulFunctionCall","src":"14093:48:26"},"nodeType":"YulExpressionStatement","src":"14093:48:26"},{"nodeType":"YulAssignment","src":"14150:86:26","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14222:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"14231:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14158:63:26"},"nodeType":"YulFunctionCall","src":"14158:78:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14150:4:26"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"14290:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14303:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14314:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14299:3:26"},"nodeType":"YulFunctionCall","src":"14299:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14246:43:26"},"nodeType":"YulFunctionCall","src":"14246:72:26"},"nodeType":"YulExpressionStatement","src":"14246:72:26"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"14372:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14385:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14396:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14381:3:26"},"nodeType":"YulFunctionCall","src":"14381:19:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14328:43:26"},"nodeType":"YulFunctionCall","src":"14328:73:26"},"nodeType":"YulExpressionStatement","src":"14328:73:26"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"14455:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14468:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14479:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14464:3:26"},"nodeType":"YulFunctionCall","src":"14464:19:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"14411:43:26"},"nodeType":"YulFunctionCall","src":"14411:73:26"},"nodeType":"YulExpressionStatement","src":"14411:73:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14505:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14516:3:26","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14501:3:26"},"nodeType":"YulFunctionCall","src":"14501:19:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14526:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"14532:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14522:3:26"},"nodeType":"YulFunctionCall","src":"14522:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14494:6:26"},"nodeType":"YulFunctionCall","src":"14494:49:26"},"nodeType":"YulExpressionStatement","src":"14494:49:26"},{"nodeType":"YulAssignment","src":"14552:116:26","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"14654:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"14663:4:26"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14560:93:26"},"nodeType":"YulFunctionCall","src":"14560:108:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14552:4:26"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13738:9:26","type":""},{"name":"value6","nodeType":"YulTypedName","src":"13750:6:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"13758:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"13766:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13774:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13782:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13790:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13798:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13809:4:26","type":""}],"src":"13460:1215:26"},{"body":{"nodeType":"YulBlock","src":"14725:53:26","statements":[{"nodeType":"YulAssignment","src":"14735:37:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14750:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"14757:14:26","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14746:3:26"},"nodeType":"YulFunctionCall","src":"14746:26:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"14735:7:26"}]}]},"name":"cleanup_t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14707:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"14717:7:26","type":""}],"src":"14681:97:26"},{"body":{"nodeType":"YulBlock","src":"14847:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14864:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14886:5:26"}],"functionName":{"name":"cleanup_t_uint48","nodeType":"YulIdentifier","src":"14869:16:26"},"nodeType":"YulFunctionCall","src":"14869:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14857:6:26"},"nodeType":"YulFunctionCall","src":"14857:36:26"},"nodeType":"YulExpressionStatement","src":"14857:36:26"}]},"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14835:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14842:3:26","type":""}],"src":"14784:115:26"},{"body":{"nodeType":"YulBlock","src":"15001:122:26","statements":[{"nodeType":"YulAssignment","src":"15011:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15023:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15034:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15019:3:26"},"nodeType":"YulFunctionCall","src":"15019:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15011:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15089:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15102:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15113:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15098:3:26"},"nodeType":"YulFunctionCall","src":"15098:17:26"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulIdentifier","src":"15047:41:26"},"nodeType":"YulFunctionCall","src":"15047:69:26"},"nodeType":"YulExpressionStatement","src":"15047:69:26"}]},"name":"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14973:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14985:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14996:4:26","type":""}],"src":"14905:218:26"},{"body":{"nodeType":"YulBlock","src":"15170:77:26","statements":[{"body":{"nodeType":"YulBlock","src":"15225:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15234:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15237:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15227:6:26"},"nodeType":"YulFunctionCall","src":"15227:12:26"},"nodeType":"YulExpressionStatement","src":"15227:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15193:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15216:5:26"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"15200:15:26"},"nodeType":"YulFunctionCall","src":"15200:22:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15190:2:26"},"nodeType":"YulFunctionCall","src":"15190:33:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15183:6:26"},"nodeType":"YulFunctionCall","src":"15183:41:26"},"nodeType":"YulIf","src":"15180:61:26"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15163:5:26","type":""}],"src":"15129:118:26"},{"body":{"nodeType":"YulBlock","src":"15303:85:26","statements":[{"nodeType":"YulAssignment","src":"15313:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15335:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15322:12:26"},"nodeType":"YulFunctionCall","src":"15322:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15313:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15376:5:26"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"15351:24:26"},"nodeType":"YulFunctionCall","src":"15351:31:26"},"nodeType":"YulExpressionStatement","src":"15351:31:26"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15281:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"15289:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15297:5:26","type":""}],"src":"15253:135:26"},{"body":{"nodeType":"YulBlock","src":"15543:904:26","statements":[{"body":{"nodeType":"YulBlock","src":"15590:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15592:77:26"},"nodeType":"YulFunctionCall","src":"15592:79:26"},"nodeType":"YulExpressionStatement","src":"15592:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15564:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"15573:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15560:3:26"},"nodeType":"YulFunctionCall","src":"15560:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"15585:3:26","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15556:3:26"},"nodeType":"YulFunctionCall","src":"15556:33:26"},"nodeType":"YulIf","src":"15553:120:26"},{"nodeType":"YulBlock","src":"15683:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"15698:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"15712:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15702:6:26","type":""}]},{"nodeType":"YulAssignment","src":"15727:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15762:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"15773:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:26"},"nodeType":"YulFunctionCall","src":"15758:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15782:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15737:20:26"},"nodeType":"YulFunctionCall","src":"15737:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15727:6:26"}]}]},{"nodeType":"YulBlock","src":"15810:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"15825:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"15839:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15829:6:26","type":""}]},{"nodeType":"YulAssignment","src":"15855:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15890:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"15901:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15886:3:26"},"nodeType":"YulFunctionCall","src":"15886:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15910:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"15865:20:26"},"nodeType":"YulFunctionCall","src":"15865:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15855:6:26"}]}]},{"nodeType":"YulBlock","src":"15938:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"15953:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"15967:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15957:6:26","type":""}]},{"nodeType":"YulAssignment","src":"15983:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16018:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"16029:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16014:3:26"},"nodeType":"YulFunctionCall","src":"16014:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16038:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"15993:20:26"},"nodeType":"YulFunctionCall","src":"15993:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"15983:6:26"}]}]},{"nodeType":"YulBlock","src":"16066:116:26","statements":[{"nodeType":"YulVariableDeclaration","src":"16081:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"16095:2:26","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16085:6:26","type":""}]},{"nodeType":"YulAssignment","src":"16111:61:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16144:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"16155:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16140:3:26"},"nodeType":"YulFunctionCall","src":"16140:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16164:7:26"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"16121:18:26"},"nodeType":"YulFunctionCall","src":"16121:51:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"16111:6:26"}]}]},{"nodeType":"YulBlock","src":"16192:119:26","statements":[{"nodeType":"YulVariableDeclaration","src":"16207:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"16221:3:26","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16211:6:26","type":""}]},{"nodeType":"YulAssignment","src":"16238:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16273:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"16284:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16269:3:26"},"nodeType":"YulFunctionCall","src":"16269:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16293:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"16248:20:26"},"nodeType":"YulFunctionCall","src":"16248:53:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"16238:6:26"}]}]},{"nodeType":"YulBlock","src":"16321:119:26","statements":[{"nodeType":"YulVariableDeclaration","src":"16336:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"16350:3:26","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16340:6:26","type":""}]},{"nodeType":"YulAssignment","src":"16367:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16402:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"16413:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16398:3:26"},"nodeType":"YulFunctionCall","src":"16398:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16422:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"16377:20:26"},"nodeType":"YulFunctionCall","src":"16377:53:26"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"16367:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15473:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15484:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15496:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15504:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15512:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15520:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15528:6:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"15536:6:26","type":""}],"src":"15394:1053:26"},{"body":{"nodeType":"YulBlock","src":"16619:1033:26","statements":[{"body":{"nodeType":"YulBlock","src":"16666:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16668:77:26"},"nodeType":"YulFunctionCall","src":"16668:79:26"},"nodeType":"YulExpressionStatement","src":"16668:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16640:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"16649:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16636:3:26"},"nodeType":"YulFunctionCall","src":"16636:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"16661:3:26","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16632:3:26"},"nodeType":"YulFunctionCall","src":"16632:33:26"},"nodeType":"YulIf","src":"16629:120:26"},{"nodeType":"YulBlock","src":"16759:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"16774:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"16788:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16778:6:26","type":""}]},{"nodeType":"YulAssignment","src":"16803:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16838:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"16849:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16834:3:26"},"nodeType":"YulFunctionCall","src":"16834:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16858:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16813:20:26"},"nodeType":"YulFunctionCall","src":"16813:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16803:6:26"}]}]},{"nodeType":"YulBlock","src":"16886:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"16901:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"16915:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16905:6:26","type":""}]},{"nodeType":"YulAssignment","src":"16931:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16966:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"16977:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16962:3:26"},"nodeType":"YulFunctionCall","src":"16962:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16986:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16941:20:26"},"nodeType":"YulFunctionCall","src":"16941:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16931:6:26"}]}]},{"nodeType":"YulBlock","src":"17014:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"17029:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"17043:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17033:6:26","type":""}]},{"nodeType":"YulAssignment","src":"17059:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17094:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"17105:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17090:3:26"},"nodeType":"YulFunctionCall","src":"17090:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17114:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"17069:20:26"},"nodeType":"YulFunctionCall","src":"17069:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"17059:6:26"}]}]},{"nodeType":"YulBlock","src":"17142:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"17157:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"17171:2:26","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17161:6:26","type":""}]},{"nodeType":"YulAssignment","src":"17187:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17222:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"17233:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17218:3:26"},"nodeType":"YulFunctionCall","src":"17218:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17242:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"17197:20:26"},"nodeType":"YulFunctionCall","src":"17197:53:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"17187:6:26"}]}]},{"nodeType":"YulBlock","src":"17270:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"17285:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"17299:3:26","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17289:6:26","type":""}]},{"nodeType":"YulAssignment","src":"17316:61:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17349:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"17360:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17345:3:26"},"nodeType":"YulFunctionCall","src":"17345:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17369:7:26"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"17326:18:26"},"nodeType":"YulFunctionCall","src":"17326:51:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"17316:6:26"}]}]},{"nodeType":"YulBlock","src":"17397:119:26","statements":[{"nodeType":"YulVariableDeclaration","src":"17412:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"17426:3:26","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17416:6:26","type":""}]},{"nodeType":"YulAssignment","src":"17443:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17478:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"17489:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17474:3:26"},"nodeType":"YulFunctionCall","src":"17474:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17498:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"17453:20:26"},"nodeType":"YulFunctionCall","src":"17453:53:26"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"17443:6:26"}]}]},{"nodeType":"YulBlock","src":"17526:119:26","statements":[{"nodeType":"YulVariableDeclaration","src":"17541:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"17555:3:26","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17545:6:26","type":""}]},{"nodeType":"YulAssignment","src":"17572:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17607:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"17618:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17603:3:26"},"nodeType":"YulFunctionCall","src":"17603:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17627:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"17582:20:26"},"nodeType":"YulFunctionCall","src":"17582:53:26"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"17572:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16541:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16552:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16564:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16572:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16580:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16588:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"16596:6:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"16604:6:26","type":""},{"name":"value6","nodeType":"YulTypedName","src":"16612:6:26","type":""}],"src":"16453:1199:26"},{"body":{"nodeType":"YulBlock","src":"17741:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"17787:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17789:77:26"},"nodeType":"YulFunctionCall","src":"17789:79:26"},"nodeType":"YulExpressionStatement","src":"17789:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17762:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"17771:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17758:3:26"},"nodeType":"YulFunctionCall","src":"17758:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"17783:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17754:3:26"},"nodeType":"YulFunctionCall","src":"17754:32:26"},"nodeType":"YulIf","src":"17751:119:26"},{"nodeType":"YulBlock","src":"17880:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"17895:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"17909:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17899:6:26","type":""}]},{"nodeType":"YulAssignment","src":"17924:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17959:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"17970:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17955:3:26"},"nodeType":"YulFunctionCall","src":"17955:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17979:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"17934:20:26"},"nodeType":"YulFunctionCall","src":"17934:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17924:6:26"}]}]},{"nodeType":"YulBlock","src":"18007:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"18022:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"18036:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18026:6:26","type":""}]},{"nodeType":"YulAssignment","src":"18052:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18087:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"18098:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18083:3:26"},"nodeType":"YulFunctionCall","src":"18083:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18107:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"18062:20:26"},"nodeType":"YulFunctionCall","src":"18062:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18052:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17703:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17714:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17726:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17734:6:26","type":""}],"src":"17658:474:26"},{"body":{"nodeType":"YulBlock","src":"18180:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"18236:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18245:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18248:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18238:6:26"},"nodeType":"YulFunctionCall","src":"18238:12:26"},"nodeType":"YulExpressionStatement","src":"18238:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18203:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18227:5:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"18210:16:26"},"nodeType":"YulFunctionCall","src":"18210:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18200:2:26"},"nodeType":"YulFunctionCall","src":"18200:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18193:6:26"},"nodeType":"YulFunctionCall","src":"18193:42:26"},"nodeType":"YulIf","src":"18190:62:26"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18173:5:26","type":""}],"src":"18138:120:26"},{"body":{"nodeType":"YulBlock","src":"18315:86:26","statements":[{"nodeType":"YulAssignment","src":"18325:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18347:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18334:12:26"},"nodeType":"YulFunctionCall","src":"18334:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18325:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18389:5:26"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"18363:25:26"},"nodeType":"YulFunctionCall","src":"18363:32:26"},"nodeType":"YulExpressionStatement","src":"18363:32:26"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"18293:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"18301:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"18309:5:26","type":""}],"src":"18264:137:26"},{"body":{"nodeType":"YulBlock","src":"18489:390:26","statements":[{"body":{"nodeType":"YulBlock","src":"18535:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18537:77:26"},"nodeType":"YulFunctionCall","src":"18537:79:26"},"nodeType":"YulExpressionStatement","src":"18537:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18510:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"18519:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18506:3:26"},"nodeType":"YulFunctionCall","src":"18506:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"18531:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18502:3:26"},"nodeType":"YulFunctionCall","src":"18502:32:26"},"nodeType":"YulIf","src":"18499:119:26"},{"nodeType":"YulBlock","src":"18628:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"18643:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"18657:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18647:6:26","type":""}]},{"nodeType":"YulAssignment","src":"18672:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18707:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"18718:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18703:3:26"},"nodeType":"YulFunctionCall","src":"18703:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18727:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"18682:20:26"},"nodeType":"YulFunctionCall","src":"18682:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18672:6:26"}]}]},{"nodeType":"YulBlock","src":"18755:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"18770:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"18784:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18774:6:26","type":""}]},{"nodeType":"YulAssignment","src":"18800:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18834:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"18845:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18830:3:26"},"nodeType":"YulFunctionCall","src":"18830:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18854:7:26"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"18810:19:26"},"nodeType":"YulFunctionCall","src":"18810:52:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18800:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18451:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18462:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18474:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18482:6:26","type":""}],"src":"18407:472:26"},{"body":{"nodeType":"YulBlock","src":"18938:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18955:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18977:5:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"18960:16:26"},"nodeType":"YulFunctionCall","src":"18960:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18948:6:26"},"nodeType":"YulFunctionCall","src":"18948:36:26"},"nodeType":"YulExpressionStatement","src":"18948:36:26"}]},"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18926:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18933:3:26","type":""}],"src":"18885:105:26"},{"body":{"nodeType":"YulBlock","src":"19041:97:26","statements":[{"nodeType":"YulAssignment","src":"19051:81:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19066:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"19073:58:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19062:3:26"},"nodeType":"YulFunctionCall","src":"19062:70:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19051:7:26"}]}]},"name":"cleanup_t_uint224","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19023:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19033:7:26","type":""}],"src":"18996:142:26"},{"body":{"nodeType":"YulBlock","src":"19199:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19216:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19239:5:26"}],"functionName":{"name":"cleanup_t_uint224","nodeType":"YulIdentifier","src":"19221:17:26"},"nodeType":"YulFunctionCall","src":"19221:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19209:6:26"},"nodeType":"YulFunctionCall","src":"19209:37:26"},"nodeType":"YulExpressionStatement","src":"19209:37:26"}]},"name":"abi_encode_t_uint224_to_t_uint224","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19187:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19194:3:26","type":""}],"src":"19144:108:26"},{"body":{"nodeType":"YulBlock","src":"19470:395:26","statements":[{"nodeType":"YulVariableDeclaration","src":"19480:26:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19496:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"19501:4:26","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19492:3:26"},"nodeType":"YulFunctionCall","src":"19492:14:26"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"19484:4:26","type":""}]},{"nodeType":"YulBlock","src":"19516:167:26","statements":[{"nodeType":"YulVariableDeclaration","src":"19556:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19586:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"19593:4:26","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19582:3:26"},"nodeType":"YulFunctionCall","src":"19582:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19576:5:26"},"nodeType":"YulFunctionCall","src":"19576:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"19560:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"19644:12:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19662:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"19667:4:26","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19658:3:26"},"nodeType":"YulFunctionCall","src":"19658:14:26"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"19612:31:26"},"nodeType":"YulFunctionCall","src":"19612:61:26"},"nodeType":"YulExpressionStatement","src":"19612:61:26"}]},{"nodeType":"YulBlock","src":"19693:165:26","statements":[{"nodeType":"YulVariableDeclaration","src":"19729:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19759:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"19766:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19755:3:26"},"nodeType":"YulFunctionCall","src":"19755:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19749:5:26"},"nodeType":"YulFunctionCall","src":"19749:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"19733:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"19819:12:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19837:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"19842:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19833:3:26"},"nodeType":"YulFunctionCall","src":"19833:14:26"}],"functionName":{"name":"abi_encode_t_uint224_to_t_uint224","nodeType":"YulIdentifier","src":"19785:33:26"},"nodeType":"YulFunctionCall","src":"19785:63:26"},"nodeType":"YulExpressionStatement","src":"19785:63:26"}]}]},"name":"abi_encode_t_struct$_Checkpoint_$1744_memory_ptr_to_t_struct$_Checkpoint_$1744_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19457:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19464:3:26","type":""}],"src":"19348:517:26"},{"body":{"nodeType":"YulBlock","src":"20025:180:26","statements":[{"nodeType":"YulAssignment","src":"20035:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20047:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20058:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20043:3:26"},"nodeType":"YulFunctionCall","src":"20043:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20035:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20171:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20184:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20195:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20180:3:26"},"nodeType":"YulFunctionCall","src":"20180:17:26"}],"functionName":{"name":"abi_encode_t_struct$_Checkpoint_$1744_memory_ptr_to_t_struct$_Checkpoint_$1744_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20071:99:26"},"nodeType":"YulFunctionCall","src":"20071:127:26"},"nodeType":"YulExpressionStatement","src":"20071:127:26"}]},"name":"abi_encode_tuple_t_struct$_Checkpoint_$1744_memory_ptr__to_t_struct$_Checkpoint_$1744_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19997:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20009:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20020:4:26","type":""}],"src":"19871:334:26"},{"body":{"nodeType":"YulBlock","src":"20239:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20256:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20259:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20249:6:26"},"nodeType":"YulFunctionCall","src":"20249:88:26"},"nodeType":"YulExpressionStatement","src":"20249:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20353:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20356:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20346:6:26"},"nodeType":"YulFunctionCall","src":"20346:15:26"},"nodeType":"YulExpressionStatement","src":"20346:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20377:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20380:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20370:6:26"},"nodeType":"YulFunctionCall","src":"20370:15:26"},"nodeType":"YulExpressionStatement","src":"20370:15:26"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"20211:180:26"},{"body":{"nodeType":"YulBlock","src":"20448:269:26","statements":[{"nodeType":"YulAssignment","src":"20458:22:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20472:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"20478:1:26","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"20468:3:26"},"nodeType":"YulFunctionCall","src":"20468:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20458:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"20489:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20519:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"20525:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20515:3:26"},"nodeType":"YulFunctionCall","src":"20515:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"20493:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"20566:51:26","statements":[{"nodeType":"YulAssignment","src":"20580:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20594:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"20602:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20590:3:26"},"nodeType":"YulFunctionCall","src":"20590:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20580:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"20546:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20539:6:26"},"nodeType":"YulFunctionCall","src":"20539:26:26"},"nodeType":"YulIf","src":"20536:81:26"},{"body":{"nodeType":"YulBlock","src":"20669:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"20683:16:26"},"nodeType":"YulFunctionCall","src":"20683:18:26"},"nodeType":"YulExpressionStatement","src":"20683:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"20633:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20656:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"20664:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20653:2:26"},"nodeType":"YulFunctionCall","src":"20653:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20630:2:26"},"nodeType":"YulFunctionCall","src":"20630:38:26"},"nodeType":"YulIf","src":"20627:84:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"20432:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"20441:6:26","type":""}],"src":"20397:320:26"},{"body":{"nodeType":"YulBlock","src":"20751:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20768:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20771:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20761:6:26"},"nodeType":"YulFunctionCall","src":"20761:88:26"},"nodeType":"YulExpressionStatement","src":"20761:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20865:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20868:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20858:6:26"},"nodeType":"YulFunctionCall","src":"20858:15:26"},"nodeType":"YulExpressionStatement","src":"20858:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20889:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20892:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20882:6:26"},"nodeType":"YulFunctionCall","src":"20882:15:26"},"nodeType":"YulExpressionStatement","src":"20882:15:26"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"20723:180:26"},{"body":{"nodeType":"YulBlock","src":"20960:51:26","statements":[{"nodeType":"YulAssignment","src":"20970:34:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20995:1:26","type":"","value":"1"},{"name":"value","nodeType":"YulIdentifier","src":"20998:5:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"20991:3:26"},"nodeType":"YulFunctionCall","src":"20991:13:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"20970:8:26"}]}]},"name":"shift_right_1_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20941:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"20951:8:26","type":""}],"src":"20909:102:26"},{"body":{"nodeType":"YulBlock","src":"21090:775:26","statements":[{"nodeType":"YulAssignment","src":"21100:15:26","value":{"name":"_power","nodeType":"YulIdentifier","src":"21109:6:26"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"21100:5:26"}]},{"nodeType":"YulAssignment","src":"21124:14:26","value":{"name":"_base","nodeType":"YulIdentifier","src":"21133:5:26"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"21124:4:26"}]},{"body":{"nodeType":"YulBlock","src":"21182:677:26","statements":[{"body":{"nodeType":"YulBlock","src":"21270:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21272:16:26"},"nodeType":"YulFunctionCall","src":"21272:18:26"},"nodeType":"YulExpressionStatement","src":"21272:18:26"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"21248:4:26"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"21258:3:26"},{"name":"base","nodeType":"YulIdentifier","src":"21263:4:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"21254:3:26"},"nodeType":"YulFunctionCall","src":"21254:14:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21245:2:26"},"nodeType":"YulFunctionCall","src":"21245:24:26"},"nodeType":"YulIf","src":"21242:50:26"},{"body":{"nodeType":"YulBlock","src":"21337:419:26","statements":[{"nodeType":"YulAssignment","src":"21717:25:26","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"21730:5:26"},{"name":"base","nodeType":"YulIdentifier","src":"21737:4:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21726:3:26"},"nodeType":"YulFunctionCall","src":"21726:16:26"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"21717:5:26"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"21312:8:26"},{"kind":"number","nodeType":"YulLiteral","src":"21322:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21308:3:26"},"nodeType":"YulFunctionCall","src":"21308:16:26"},"nodeType":"YulIf","src":"21305:451:26"},{"nodeType":"YulAssignment","src":"21769:23:26","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"21781:4:26"},{"name":"base","nodeType":"YulIdentifier","src":"21787:4:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21777:3:26"},"nodeType":"YulFunctionCall","src":"21777:15:26"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"21769:4:26"}]},{"nodeType":"YulAssignment","src":"21805:44:26","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"21840:8:26"}],"functionName":{"name":"shift_right_1_unsigned","nodeType":"YulIdentifier","src":"21817:22:26"},"nodeType":"YulFunctionCall","src":"21817:32:26"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"21805:8:26"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"21158:8:26"},{"kind":"number","nodeType":"YulLiteral","src":"21168:1:26","type":"","value":"1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21155:2:26"},"nodeType":"YulFunctionCall","src":"21155:15:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"21171:2:26","statements":[]},"pre":{"nodeType":"YulBlock","src":"21151:3:26","statements":[]},"src":"21147:712:26"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nodeType":"YulTypedName","src":"21045:6:26","type":""},{"name":"_base","nodeType":"YulTypedName","src":"21053:5:26","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"21060:8:26","type":""},{"name":"max","nodeType":"YulTypedName","src":"21070:3:26","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"21078:5:26","type":""},{"name":"base","nodeType":"YulTypedName","src":"21085:4:26","type":""}],"src":"21017:848:26"},{"body":{"nodeType":"YulBlock","src":"21931:1013:26","statements":[{"body":{"nodeType":"YulBlock","src":"22126:20:26","statements":[{"nodeType":"YulAssignment","src":"22128:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"22137:1:26","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"22128:5:26"}]},{"nodeType":"YulLeave","src":"22139:5:26"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"22116:8:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22109:6:26"},"nodeType":"YulFunctionCall","src":"22109:16:26"},"nodeType":"YulIf","src":"22106:40:26"},{"body":{"nodeType":"YulBlock","src":"22171:20:26","statements":[{"nodeType":"YulAssignment","src":"22173:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"22182:1:26","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"22173:5:26"}]},{"nodeType":"YulLeave","src":"22184:5:26"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"22165:4:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22158:6:26"},"nodeType":"YulFunctionCall","src":"22158:12:26"},"nodeType":"YulIf","src":"22155:36:26"},{"cases":[{"body":{"nodeType":"YulBlock","src":"22301:20:26","statements":[{"nodeType":"YulAssignment","src":"22303:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"22312:1:26","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"22303:5:26"}]},{"nodeType":"YulLeave","src":"22314:5:26"}]},"nodeType":"YulCase","src":"22294:27:26","value":{"kind":"number","nodeType":"YulLiteral","src":"22299:1:26","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"22345:176:26","statements":[{"body":{"nodeType":"YulBlock","src":"22380:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22382:16:26"},"nodeType":"YulFunctionCall","src":"22382:18:26"},"nodeType":"YulExpressionStatement","src":"22382:18:26"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"22365:8:26"},{"kind":"number","nodeType":"YulLiteral","src":"22375:3:26","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22362:2:26"},"nodeType":"YulFunctionCall","src":"22362:17:26"},"nodeType":"YulIf","src":"22359:43:26"},{"nodeType":"YulAssignment","src":"22415:25:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22428:1:26","type":"","value":"2"},{"name":"exponent","nodeType":"YulIdentifier","src":"22431:8:26"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"22424:3:26"},"nodeType":"YulFunctionCall","src":"22424:16:26"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"22415:5:26"}]},{"body":{"nodeType":"YulBlock","src":"22471:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22473:16:26"},"nodeType":"YulFunctionCall","src":"22473:18:26"},"nodeType":"YulExpressionStatement","src":"22473:18:26"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"22459:5:26"},{"name":"max","nodeType":"YulIdentifier","src":"22466:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22456:2:26"},"nodeType":"YulFunctionCall","src":"22456:14:26"},"nodeType":"YulIf","src":"22453:40:26"},{"nodeType":"YulLeave","src":"22506:5:26"}]},"nodeType":"YulCase","src":"22330:191:26","value":{"kind":"number","nodeType":"YulLiteral","src":"22335:1:26","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"22251:4:26"},"nodeType":"YulSwitch","src":"22244:277:26"},{"body":{"nodeType":"YulBlock","src":"22653:123:26","statements":[{"nodeType":"YulAssignment","src":"22667:28:26","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"22680:4:26"},{"name":"exponent","nodeType":"YulIdentifier","src":"22686:8:26"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"22676:3:26"},"nodeType":"YulFunctionCall","src":"22676:19:26"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"22667:5:26"}]},{"body":{"nodeType":"YulBlock","src":"22726:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22728:16:26"},"nodeType":"YulFunctionCall","src":"22728:18:26"},"nodeType":"YulExpressionStatement","src":"22728:18:26"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"22714:5:26"},{"name":"max","nodeType":"YulIdentifier","src":"22721:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22711:2:26"},"nodeType":"YulFunctionCall","src":"22711:14:26"},"nodeType":"YulIf","src":"22708:40:26"},{"nodeType":"YulLeave","src":"22761:5:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"22556:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"22562:2:26","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22553:2:26"},"nodeType":"YulFunctionCall","src":"22553:12:26"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"22570:8:26"},{"kind":"number","nodeType":"YulLiteral","src":"22580:2:26","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22567:2:26"},"nodeType":"YulFunctionCall","src":"22567:16:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22549:3:26"},"nodeType":"YulFunctionCall","src":"22549:35:26"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"22605:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"22611:3:26","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22602:2:26"},"nodeType":"YulFunctionCall","src":"22602:13:26"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"22620:8:26"},{"kind":"number","nodeType":"YulLiteral","src":"22630:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22617:2:26"},"nodeType":"YulFunctionCall","src":"22617:16:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22598:3:26"},"nodeType":"YulFunctionCall","src":"22598:36:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"22533:2:26"},"nodeType":"YulFunctionCall","src":"22533:111:26"},"nodeType":"YulIf","src":"22530:246:26"},{"nodeType":"YulAssignment","src":"22786:57:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22820:1:26","type":"","value":"1"},{"name":"base","nodeType":"YulIdentifier","src":"22823:4:26"},{"name":"exponent","nodeType":"YulIdentifier","src":"22829:8:26"},{"name":"max","nodeType":"YulIdentifier","src":"22839:3:26"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"22801:18:26"},"nodeType":"YulFunctionCall","src":"22801:42:26"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"22786:5:26"},{"name":"base","nodeType":"YulIdentifier","src":"22793:4:26"}]},{"body":{"nodeType":"YulBlock","src":"22882:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22884:16:26"},"nodeType":"YulFunctionCall","src":"22884:18:26"},"nodeType":"YulExpressionStatement","src":"22884:18:26"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"22859:5:26"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"22870:3:26"},{"name":"base","nodeType":"YulIdentifier","src":"22875:4:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"22866:3:26"},"nodeType":"YulFunctionCall","src":"22866:14:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22856:2:26"},"nodeType":"YulFunctionCall","src":"22856:25:26"},"nodeType":"YulIf","src":"22853:51:26"},{"nodeType":"YulAssignment","src":"22913:25:26","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"22926:5:26"},{"name":"base","nodeType":"YulIdentifier","src":"22933:4:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"22922:3:26"},"nodeType":"YulFunctionCall","src":"22922:16:26"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"22913:5:26"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"21901:4:26","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"21907:8:26","type":""},{"name":"max","nodeType":"YulTypedName","src":"21917:3:26","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"21925:5:26","type":""}],"src":"21871:1073:26"},{"body":{"nodeType":"YulBlock","src":"23016:219:26","statements":[{"nodeType":"YulAssignment","src":"23026:31:26","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"23052:4:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23034:17:26"},"nodeType":"YulFunctionCall","src":"23034:23:26"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"23026:4:26"}]},{"nodeType":"YulAssignment","src":"23066:39:26","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"23096:8:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23078:17:26"},"nodeType":"YulFunctionCall","src":"23078:27:26"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"23066:8:26"}]},{"nodeType":"YulAssignment","src":"23115:113:26","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"23145:4:26"},{"name":"exponent","nodeType":"YulIdentifier","src":"23151:8:26"},{"kind":"number","nodeType":"YulLiteral","src":"23161:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"23124:20:26"},"nodeType":"YulFunctionCall","src":"23124:104:26"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"23115:5:26"}]}]},"name":"checked_exp_t_uint256_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"22991:4:26","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"22997:8:26","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"23010:5:26","type":""}],"src":"22950:285:26"},{"body":{"nodeType":"YulBlock","src":"23289:362:26","statements":[{"nodeType":"YulAssignment","src":"23299:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23322:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23304:17:26"},"nodeType":"YulFunctionCall","src":"23304:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23299:1:26"}]},{"nodeType":"YulAssignment","src":"23333:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23356:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23338:17:26"},"nodeType":"YulFunctionCall","src":"23338:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23333:1:26"}]},{"nodeType":"YulVariableDeclaration","src":"23367:28:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23390:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"23393:1:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"23386:3:26"},"nodeType":"YulFunctionCall","src":"23386:9:26"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"23371:11:26","type":""}]},{"nodeType":"YulAssignment","src":"23404:41:26","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"23433:11:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23415:17:26"},"nodeType":"YulFunctionCall","src":"23415:30:26"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"23404:7:26"}]},{"body":{"nodeType":"YulBlock","src":"23622:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23624:16:26"},"nodeType":"YulFunctionCall","src":"23624:18:26"},"nodeType":"YulExpressionStatement","src":"23624:18:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23555:1:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23548:6:26"},"nodeType":"YulFunctionCall","src":"23548:9:26"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23578:1:26"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"23585:7:26"},{"name":"x","nodeType":"YulIdentifier","src":"23594:1:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"23581:3:26"},"nodeType":"YulFunctionCall","src":"23581:15:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23575:2:26"},"nodeType":"YulFunctionCall","src":"23575:22:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"23528:2:26"},"nodeType":"YulFunctionCall","src":"23528:83:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23508:6:26"},"nodeType":"YulFunctionCall","src":"23508:113:26"},"nodeType":"YulIf","src":"23505:139:26"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23272:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"23275:1:26","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"23281:7:26","type":""}],"src":"23241:410:26"},{"body":{"nodeType":"YulBlock","src":"23763:128:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23785:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"23793:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23781:3:26"},"nodeType":"YulFunctionCall","src":"23781:14:26"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"23797:34:26","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23774:6:26"},"nodeType":"YulFunctionCall","src":"23774:58:26"},"nodeType":"YulExpressionStatement","src":"23774:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23853:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"23861:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23849:3:26"},"nodeType":"YulFunctionCall","src":"23849:15:26"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"23866:17:26","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23842:6:26"},"nodeType":"YulFunctionCall","src":"23842:42:26"},"nodeType":"YulExpressionStatement","src":"23842:42:26"}]},"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23755:6:26","type":""}],"src":"23657:234:26"},{"body":{"nodeType":"YulBlock","src":"24043:220:26","statements":[{"nodeType":"YulAssignment","src":"24053:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24119:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"24124:2:26","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24060:58:26"},"nodeType":"YulFunctionCall","src":"24060:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24053:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24225:3:26"}],"functionName":{"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulIdentifier","src":"24136:88:26"},"nodeType":"YulFunctionCall","src":"24136:93:26"},"nodeType":"YulExpressionStatement","src":"24136:93:26"},{"nodeType":"YulAssignment","src":"24238:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24249:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"24254:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24245:3:26"},"nodeType":"YulFunctionCall","src":"24245:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24238:3:26"}]}]},"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24031:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24039:3:26","type":""}],"src":"23897:366:26"},{"body":{"nodeType":"YulBlock","src":"24440:248:26","statements":[{"nodeType":"YulAssignment","src":"24450:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24462:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"24473:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24458:3:26"},"nodeType":"YulFunctionCall","src":"24458:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24450:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24497:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"24508:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24493:3:26"},"nodeType":"YulFunctionCall","src":"24493:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24516:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"24522:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24512:3:26"},"nodeType":"YulFunctionCall","src":"24512:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24486:6:26"},"nodeType":"YulFunctionCall","src":"24486:47:26"},"nodeType":"YulExpressionStatement","src":"24486:47:26"},{"nodeType":"YulAssignment","src":"24542:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24676:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24550:124:26"},"nodeType":"YulFunctionCall","src":"24550:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24542:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24420:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24435:4:26","type":""}],"src":"24269:419:26"},{"body":{"nodeType":"YulBlock","src":"24738:147:26","statements":[{"nodeType":"YulAssignment","src":"24748:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24771:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24753:17:26"},"nodeType":"YulFunctionCall","src":"24753:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24748:1:26"}]},{"nodeType":"YulAssignment","src":"24782:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24805:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24787:17:26"},"nodeType":"YulFunctionCall","src":"24787:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24782:1:26"}]},{"nodeType":"YulAssignment","src":"24816:16:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24827:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"24830:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24823:3:26"},"nodeType":"YulFunctionCall","src":"24823:9:26"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"24816:3:26"}]},{"body":{"nodeType":"YulBlock","src":"24856:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24858:16:26"},"nodeType":"YulFunctionCall","src":"24858:18:26"},"nodeType":"YulExpressionStatement","src":"24858:18:26"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24848:1:26"},{"name":"sum","nodeType":"YulIdentifier","src":"24851:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24845:2:26"},"nodeType":"YulFunctionCall","src":"24845:10:26"},"nodeType":"YulIf","src":"24842:36:26"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24725:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"24728:1:26","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"24734:3:26","type":""}],"src":"24694:191:26"},{"body":{"nodeType":"YulBlock","src":"24997:69:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25019:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"25027:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25015:3:26"},"nodeType":"YulFunctionCall","src":"25015:14:26"},{"hexValue":"4552433230566f7465733a20667574757265206c6f6f6b7570","kind":"string","nodeType":"YulLiteral","src":"25031:27:26","type":"","value":"ERC20Votes: future lookup"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25008:6:26"},"nodeType":"YulFunctionCall","src":"25008:51:26"},"nodeType":"YulExpressionStatement","src":"25008:51:26"}]},"name":"store_literal_in_memory_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24989:6:26","type":""}],"src":"24891:175:26"},{"body":{"nodeType":"YulBlock","src":"25218:220:26","statements":[{"nodeType":"YulAssignment","src":"25228:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25294:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"25299:2:26","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25235:58:26"},"nodeType":"YulFunctionCall","src":"25235:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25228:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25400:3:26"}],"functionName":{"name":"store_literal_in_memory_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","nodeType":"YulIdentifier","src":"25311:88:26"},"nodeType":"YulFunctionCall","src":"25311:93:26"},"nodeType":"YulExpressionStatement","src":"25311:93:26"},{"nodeType":"YulAssignment","src":"25413:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25424:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"25429:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25420:3:26"},"nodeType":"YulFunctionCall","src":"25420:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25413:3:26"}]}]},"name":"abi_encode_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25206:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25214:3:26","type":""}],"src":"25072:366:26"},{"body":{"nodeType":"YulBlock","src":"25615:248:26","statements":[{"nodeType":"YulAssignment","src":"25625:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25637:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25648:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25633:3:26"},"nodeType":"YulFunctionCall","src":"25633:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25625:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25672:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25683:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25668:3:26"},"nodeType":"YulFunctionCall","src":"25668:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25691:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"25697:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25687:3:26"},"nodeType":"YulFunctionCall","src":"25687:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25661:6:26"},"nodeType":"YulFunctionCall","src":"25661:47:26"},"nodeType":"YulExpressionStatement","src":"25661:47:26"},{"nodeType":"YulAssignment","src":"25717:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25851:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25725:124:26"},"nodeType":"YulFunctionCall","src":"25725:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25717:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25595:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25610:4:26","type":""}],"src":"25444:419:26"},{"body":{"nodeType":"YulBlock","src":"25975:128:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25997:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"26005:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25993:3:26"},"nodeType":"YulFunctionCall","src":"25993:14:26"},{"hexValue":"546f6b656e20746f206265206d696e7465642073686f756c64206e6f74206578","kind":"string","nodeType":"YulLiteral","src":"26009:34:26","type":"","value":"Token to be minted should not ex"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25986:6:26"},"nodeType":"YulFunctionCall","src":"25986:58:26"},"nodeType":"YulExpressionStatement","src":"25986:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26065:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"26073:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26061:3:26"},"nodeType":"YulFunctionCall","src":"26061:15:26"},{"hexValue":"63656564204d617820737570706c79","kind":"string","nodeType":"YulLiteral","src":"26078:17:26","type":"","value":"ceed Max supply"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26054:6:26"},"nodeType":"YulFunctionCall","src":"26054:42:26"},"nodeType":"YulExpressionStatement","src":"26054:42:26"}]},"name":"store_literal_in_memory_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25967:6:26","type":""}],"src":"25869:234:26"},{"body":{"nodeType":"YulBlock","src":"26255:220:26","statements":[{"nodeType":"YulAssignment","src":"26265:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26331:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"26336:2:26","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26272:58:26"},"nodeType":"YulFunctionCall","src":"26272:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26265:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26437:3:26"}],"functionName":{"name":"store_literal_in_memory_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614","nodeType":"YulIdentifier","src":"26348:88:26"},"nodeType":"YulFunctionCall","src":"26348:93:26"},"nodeType":"YulExpressionStatement","src":"26348:93:26"},{"nodeType":"YulAssignment","src":"26450:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26461:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"26466:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26457:3:26"},"nodeType":"YulFunctionCall","src":"26457:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26450:3:26"}]}]},"name":"abi_encode_t_stringliteral_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26243:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26251:3:26","type":""}],"src":"26109:366:26"},{"body":{"nodeType":"YulBlock","src":"26652:248:26","statements":[{"nodeType":"YulAssignment","src":"26662:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26674:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"26685:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26670:3:26"},"nodeType":"YulFunctionCall","src":"26670:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26662:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26709:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"26720:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26705:3:26"},"nodeType":"YulFunctionCall","src":"26705:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26728:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"26734:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26724:3:26"},"nodeType":"YulFunctionCall","src":"26724:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26698:6:26"},"nodeType":"YulFunctionCall","src":"26698:47:26"},"nodeType":"YulExpressionStatement","src":"26698:47:26"},{"nodeType":"YulAssignment","src":"26754:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26888:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26762:124:26"},"nodeType":"YulFunctionCall","src":"26762:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26754:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26632:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26647:4:26","type":""}],"src":"26481:419:26"},{"body":{"nodeType":"YulBlock","src":"27012:73:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27034:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"27042:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27030:3:26"},"nodeType":"YulFunctionCall","src":"27030:14:26"},{"hexValue":"4552433230566f7465733a2062726f6b656e20636c6f636b206d6f6465","kind":"string","nodeType":"YulLiteral","src":"27046:31:26","type":"","value":"ERC20Votes: broken clock mode"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27023:6:26"},"nodeType":"YulFunctionCall","src":"27023:55:26"},"nodeType":"YulExpressionStatement","src":"27023:55:26"}]},"name":"store_literal_in_memory_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27004:6:26","type":""}],"src":"26906:179:26"},{"body":{"nodeType":"YulBlock","src":"27237:220:26","statements":[{"nodeType":"YulAssignment","src":"27247:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27313:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"27318:2:26","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27254:58:26"},"nodeType":"YulFunctionCall","src":"27254:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27247:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27419:3:26"}],"functionName":{"name":"store_literal_in_memory_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df","nodeType":"YulIdentifier","src":"27330:88:26"},"nodeType":"YulFunctionCall","src":"27330:93:26"},"nodeType":"YulExpressionStatement","src":"27330:93:26"},{"nodeType":"YulAssignment","src":"27432:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27443:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"27448:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27439:3:26"},"nodeType":"YulFunctionCall","src":"27439:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27432:3:26"}]}]},"name":"abi_encode_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27225:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27233:3:26","type":""}],"src":"27091:366:26"},{"body":{"nodeType":"YulBlock","src":"27634:248:26","statements":[{"nodeType":"YulAssignment","src":"27644:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27656:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"27667:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27652:3:26"},"nodeType":"YulFunctionCall","src":"27652:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27644:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27691:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"27702:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27687:3:26"},"nodeType":"YulFunctionCall","src":"27687:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27710:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"27716:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27706:3:26"},"nodeType":"YulFunctionCall","src":"27706:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27680:6:26"},"nodeType":"YulFunctionCall","src":"27680:47:26"},"nodeType":"YulExpressionStatement","src":"27680:47:26"},{"nodeType":"YulAssignment","src":"27736:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27870:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27744:124:26"},"nodeType":"YulFunctionCall","src":"27744:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27736:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27614:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27629:4:26","type":""}],"src":"27463:419:26"},{"body":{"nodeType":"YulBlock","src":"27994:127:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28016:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"28024:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28012:3:26"},"nodeType":"YulFunctionCall","src":"28012:14:26"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"28028:34:26","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28005:6:26"},"nodeType":"YulFunctionCall","src":"28005:58:26"},"nodeType":"YulExpressionStatement","src":"28005:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28084:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"28092:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28080:3:26"},"nodeType":"YulFunctionCall","src":"28080:15:26"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"28097:16:26","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28073:6:26"},"nodeType":"YulFunctionCall","src":"28073:41:26"},"nodeType":"YulExpressionStatement","src":"28073:41:26"}]},"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27986:6:26","type":""}],"src":"27888:233:26"},{"body":{"nodeType":"YulBlock","src":"28273:220:26","statements":[{"nodeType":"YulAssignment","src":"28283:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28349:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"28354:2:26","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28290:58:26"},"nodeType":"YulFunctionCall","src":"28290:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28283:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28455:3:26"}],"functionName":{"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulIdentifier","src":"28366:88:26"},"nodeType":"YulFunctionCall","src":"28366:93:26"},"nodeType":"YulExpressionStatement","src":"28366:93:26"},{"nodeType":"YulAssignment","src":"28468:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28479:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"28484:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28475:3:26"},"nodeType":"YulFunctionCall","src":"28475:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28468:3:26"}]}]},"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28261:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28269:3:26","type":""}],"src":"28127:366:26"},{"body":{"nodeType":"YulBlock","src":"28670:248:26","statements":[{"nodeType":"YulAssignment","src":"28680:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28692:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"28703:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28688:3:26"},"nodeType":"YulFunctionCall","src":"28688:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28680:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28727:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"28738:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28723:3:26"},"nodeType":"YulFunctionCall","src":"28723:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28746:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"28752:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28742:3:26"},"nodeType":"YulFunctionCall","src":"28742:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28716:6:26"},"nodeType":"YulFunctionCall","src":"28716:47:26"},"nodeType":"YulExpressionStatement","src":"28716:47:26"},{"nodeType":"YulAssignment","src":"28772:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28906:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28780:124:26"},"nodeType":"YulFunctionCall","src":"28780:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28772:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28650:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28665:4:26","type":""}],"src":"28499:419:26"},{"body":{"nodeType":"YulBlock","src":"28977:32:26","statements":[{"nodeType":"YulAssignment","src":"28987:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"28998:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"28987:7:26"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28959:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"28969:7:26","type":""}],"src":"28924:85:26"},{"body":{"nodeType":"YulBlock","src":"29047:28:26","statements":[{"nodeType":"YulAssignment","src":"29057:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"29064:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"29057:3:26"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29033:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"29043:3:26","type":""}],"src":"29015:60:26"},{"body":{"nodeType":"YulBlock","src":"29147:88:26","statements":[{"nodeType":"YulAssignment","src":"29157:72:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29221:5:26"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"29195:25:26"},"nodeType":"YulFunctionCall","src":"29195:32:26"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"29186:8:26"},"nodeType":"YulFunctionCall","src":"29186:42:26"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"29170:15:26"},"nodeType":"YulFunctionCall","src":"29170:59:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"29157:9:26"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29127:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"29137:9:26","type":""}],"src":"29081:154:26"},{"body":{"nodeType":"YulBlock","src":"29312:72:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29329:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29371:5:26"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulIdentifier","src":"29334:36:26"},"nodeType":"YulFunctionCall","src":"29334:43:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29322:6:26"},"nodeType":"YulFunctionCall","src":"29322:56:26"},"nodeType":"YulExpressionStatement","src":"29322:56:26"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29300:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29307:3:26","type":""}],"src":"29241:143:26"},{"body":{"nodeType":"YulBlock","src":"29494:130:26","statements":[{"nodeType":"YulAssignment","src":"29504:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29516:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"29527:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29512:3:26"},"nodeType":"YulFunctionCall","src":"29512:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29504:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29590:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29603:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"29614:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29599:3:26"},"nodeType":"YulFunctionCall","src":"29599:17:26"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"29540:49:26"},"nodeType":"YulFunctionCall","src":"29540:77:26"},"nodeType":"YulExpressionStatement","src":"29540:77:26"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29466:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29478:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29489:4:26","type":""}],"src":"29390:234:26"},{"body":{"nodeType":"YulBlock","src":"29736:117:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29758:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"29766:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29754:3:26"},"nodeType":"YulFunctionCall","src":"29754:14:26"},{"hexValue":"45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77","kind":"string","nodeType":"YulLiteral","src":"29770:34:26","type":"","value":"ERC20: burn amount exceeds allow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29747:6:26"},"nodeType":"YulFunctionCall","src":"29747:58:26"},"nodeType":"YulExpressionStatement","src":"29747:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29826:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"29834:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29822:3:26"},"nodeType":"YulFunctionCall","src":"29822:15:26"},{"hexValue":"616e6365","kind":"string","nodeType":"YulLiteral","src":"29839:6:26","type":"","value":"ance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29815:6:26"},"nodeType":"YulFunctionCall","src":"29815:31:26"},"nodeType":"YulExpressionStatement","src":"29815:31:26"}]},"name":"store_literal_in_memory_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29728:6:26","type":""}],"src":"29630:223:26"},{"body":{"nodeType":"YulBlock","src":"30005:220:26","statements":[{"nodeType":"YulAssignment","src":"30015:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30081:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"30086:2:26","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30022:58:26"},"nodeType":"YulFunctionCall","src":"30022:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30015:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30187:3:26"}],"functionName":{"name":"store_literal_in_memory_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db","nodeType":"YulIdentifier","src":"30098:88:26"},"nodeType":"YulFunctionCall","src":"30098:93:26"},"nodeType":"YulExpressionStatement","src":"30098:93:26"},{"nodeType":"YulAssignment","src":"30200:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30211:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"30216:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30207:3:26"},"nodeType":"YulFunctionCall","src":"30207:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30200:3:26"}]}]},"name":"abi_encode_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29993:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30001:3:26","type":""}],"src":"29859:366:26"},{"body":{"nodeType":"YulBlock","src":"30402:248:26","statements":[{"nodeType":"YulAssignment","src":"30412:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30424:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"30435:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30420:3:26"},"nodeType":"YulFunctionCall","src":"30420:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30412:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30459:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"30470:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30455:3:26"},"nodeType":"YulFunctionCall","src":"30455:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30478:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"30484:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30474:3:26"},"nodeType":"YulFunctionCall","src":"30474:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30448:6:26"},"nodeType":"YulFunctionCall","src":"30448:47:26"},"nodeType":"YulExpressionStatement","src":"30448:47:26"},{"nodeType":"YulAssignment","src":"30504:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30638:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30512:124:26"},"nodeType":"YulFunctionCall","src":"30512:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30504:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30382:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30397:4:26","type":""}],"src":"30231:419:26"},{"body":{"nodeType":"YulBlock","src":"30762:65:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30784:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"30792:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30780:3:26"},"nodeType":"YulFunctionCall","src":"30780:14:26"},{"hexValue":"4549503731323a20556e696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"30796:23:26","type":"","value":"EIP712: Uninitialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30773:6:26"},"nodeType":"YulFunctionCall","src":"30773:47:26"},"nodeType":"YulExpressionStatement","src":"30773:47:26"}]},"name":"store_literal_in_memory_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30754:6:26","type":""}],"src":"30656:171:26"},{"body":{"nodeType":"YulBlock","src":"30979:220:26","statements":[{"nodeType":"YulAssignment","src":"30989:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31055:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"31060:2:26","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30996:58:26"},"nodeType":"YulFunctionCall","src":"30996:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30989:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31161:3:26"}],"functionName":{"name":"store_literal_in_memory_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","nodeType":"YulIdentifier","src":"31072:88:26"},"nodeType":"YulFunctionCall","src":"31072:93:26"},"nodeType":"YulExpressionStatement","src":"31072:93:26"},{"nodeType":"YulAssignment","src":"31174:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31185:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"31190:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31181:3:26"},"nodeType":"YulFunctionCall","src":"31181:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31174:3:26"}]}]},"name":"abi_encode_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30967:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30975:3:26","type":""}],"src":"30833:366:26"},{"body":{"nodeType":"YulBlock","src":"31376:248:26","statements":[{"nodeType":"YulAssignment","src":"31386:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31398:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"31409:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31394:3:26"},"nodeType":"YulFunctionCall","src":"31394:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31386:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31433:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"31444:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31429:3:26"},"nodeType":"YulFunctionCall","src":"31429:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31452:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"31458:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31448:3:26"},"nodeType":"YulFunctionCall","src":"31448:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31422:6:26"},"nodeType":"YulFunctionCall","src":"31422:47:26"},"nodeType":"YulExpressionStatement","src":"31422:47:26"},{"nodeType":"YulAssignment","src":"31478:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31612:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31486:124:26"},"nodeType":"YulFunctionCall","src":"31486:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31478:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31356:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31371:4:26","type":""}],"src":"31205:419:26"},{"body":{"nodeType":"YulBlock","src":"31658:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31675:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31678:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31668:6:26"},"nodeType":"YulFunctionCall","src":"31668:88:26"},"nodeType":"YulExpressionStatement","src":"31668:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31772:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"31775:4:26","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31765:6:26"},"nodeType":"YulFunctionCall","src":"31765:15:26"},"nodeType":"YulExpressionStatement","src":"31765:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31796:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31799:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"31789:6:26"},"nodeType":"YulFunctionCall","src":"31789:15:26"},"nodeType":"YulExpressionStatement","src":"31789:15:26"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"31630:180:26"},{"body":{"nodeType":"YulBlock","src":"31922:118:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31944:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"31952:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31940:3:26"},"nodeType":"YulFunctionCall","src":"31940:14:26"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"31956:34:26","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31933:6:26"},"nodeType":"YulFunctionCall","src":"31933:58:26"},"nodeType":"YulExpressionStatement","src":"31933:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32012:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"32020:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32008:3:26"},"nodeType":"YulFunctionCall","src":"32008:15:26"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"32025:7:26","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32001:6:26"},"nodeType":"YulFunctionCall","src":"32001:32:26"},"nodeType":"YulExpressionStatement","src":"32001:32:26"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31914:6:26","type":""}],"src":"31816:224:26"},{"body":{"nodeType":"YulBlock","src":"32192:220:26","statements":[{"nodeType":"YulAssignment","src":"32202:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32268:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"32273:2:26","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32209:58:26"},"nodeType":"YulFunctionCall","src":"32209:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32202:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32374:3:26"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"32285:88:26"},"nodeType":"YulFunctionCall","src":"32285:93:26"},"nodeType":"YulExpressionStatement","src":"32285:93:26"},{"nodeType":"YulAssignment","src":"32387:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32398:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"32403:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32394:3:26"},"nodeType":"YulFunctionCall","src":"32394:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32387:3:26"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32180:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32188:3:26","type":""}],"src":"32046:366:26"},{"body":{"nodeType":"YulBlock","src":"32589:248:26","statements":[{"nodeType":"YulAssignment","src":"32599:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32611:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"32622:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32607:3:26"},"nodeType":"YulFunctionCall","src":"32607:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32599:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32646:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"32657:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32642:3:26"},"nodeType":"YulFunctionCall","src":"32642:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32665:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"32671:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32661:3:26"},"nodeType":"YulFunctionCall","src":"32661:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32635:6:26"},"nodeType":"YulFunctionCall","src":"32635:47:26"},"nodeType":"YulExpressionStatement","src":"32635:47:26"},{"nodeType":"YulAssignment","src":"32691:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32825:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32699:124:26"},"nodeType":"YulFunctionCall","src":"32699:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32691:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32569:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32584:4:26","type":""}],"src":"32418:419:26"},{"body":{"nodeType":"YulBlock","src":"32949:73:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32971:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"32979:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32967:3:26"},"nodeType":"YulFunctionCall","src":"32967:14:26"},{"hexValue":"4552433230566f7465733a207369676e61747572652065787069726564","kind":"string","nodeType":"YulLiteral","src":"32983:31:26","type":"","value":"ERC20Votes: signature expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32960:6:26"},"nodeType":"YulFunctionCall","src":"32960:55:26"},"nodeType":"YulExpressionStatement","src":"32960:55:26"}]},"name":"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32941:6:26","type":""}],"src":"32843:179:26"},{"body":{"nodeType":"YulBlock","src":"33174:220:26","statements":[{"nodeType":"YulAssignment","src":"33184:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33250:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"33255:2:26","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33191:58:26"},"nodeType":"YulFunctionCall","src":"33191:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33184:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33356:3:26"}],"functionName":{"name":"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","nodeType":"YulIdentifier","src":"33267:88:26"},"nodeType":"YulFunctionCall","src":"33267:93:26"},"nodeType":"YulExpressionStatement","src":"33267:93:26"},{"nodeType":"YulAssignment","src":"33369:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33380:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"33385:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33376:3:26"},"nodeType":"YulFunctionCall","src":"33376:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33369:3:26"}]}]},"name":"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33162:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33170:3:26","type":""}],"src":"33028:366:26"},{"body":{"nodeType":"YulBlock","src":"33571:248:26","statements":[{"nodeType":"YulAssignment","src":"33581:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33593:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"33604:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33589:3:26"},"nodeType":"YulFunctionCall","src":"33589:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33581:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33628:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"33639:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33624:3:26"},"nodeType":"YulFunctionCall","src":"33624:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33647:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"33653:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33643:3:26"},"nodeType":"YulFunctionCall","src":"33643:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33617:6:26"},"nodeType":"YulFunctionCall","src":"33617:47:26"},"nodeType":"YulExpressionStatement","src":"33617:47:26"},{"nodeType":"YulAssignment","src":"33673:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33807:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33681:124:26"},"nodeType":"YulFunctionCall","src":"33681:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33673:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33551:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33566:4:26","type":""}],"src":"33400:419:26"},{"body":{"nodeType":"YulBlock","src":"34007:371:26","statements":[{"nodeType":"YulAssignment","src":"34017:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34029:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"34040:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34025:3:26"},"nodeType":"YulFunctionCall","src":"34025:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34017:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34098:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34111:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"34122:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34107:3:26"},"nodeType":"YulFunctionCall","src":"34107:17:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"34054:43:26"},"nodeType":"YulFunctionCall","src":"34054:71:26"},"nodeType":"YulExpressionStatement","src":"34054:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"34179:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34192:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"34203:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34188:3:26"},"nodeType":"YulFunctionCall","src":"34188:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"34135:43:26"},"nodeType":"YulFunctionCall","src":"34135:72:26"},"nodeType":"YulExpressionStatement","src":"34135:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"34261:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34274:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"34285:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34270:3:26"},"nodeType":"YulFunctionCall","src":"34270:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34217:43:26"},"nodeType":"YulFunctionCall","src":"34217:72:26"},"nodeType":"YulExpressionStatement","src":"34217:72:26"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"34343:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34356:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"34367:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34352:3:26"},"nodeType":"YulFunctionCall","src":"34352:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34299:43:26"},"nodeType":"YulFunctionCall","src":"34299:72:26"},"nodeType":"YulExpressionStatement","src":"34299:72:26"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33955:9:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"33967:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"33975:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33983:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33991:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34002:4:26","type":""}],"src":"33825:553:26"},{"body":{"nodeType":"YulBlock","src":"34490:69:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34512:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"34520:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34508:3:26"},"nodeType":"YulFunctionCall","src":"34508:14:26"},{"hexValue":"4552433230566f7465733a20696e76616c6964206e6f6e6365","kind":"string","nodeType":"YulLiteral","src":"34524:27:26","type":"","value":"ERC20Votes: invalid nonce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34501:6:26"},"nodeType":"YulFunctionCall","src":"34501:51:26"},"nodeType":"YulExpressionStatement","src":"34501:51:26"}]},"name":"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34482:6:26","type":""}],"src":"34384:175:26"},{"body":{"nodeType":"YulBlock","src":"34711:220:26","statements":[{"nodeType":"YulAssignment","src":"34721:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34787:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"34792:2:26","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34728:58:26"},"nodeType":"YulFunctionCall","src":"34728:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34721:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34893:3:26"}],"functionName":{"name":"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","nodeType":"YulIdentifier","src":"34804:88:26"},"nodeType":"YulFunctionCall","src":"34804:93:26"},"nodeType":"YulExpressionStatement","src":"34804:93:26"},{"nodeType":"YulAssignment","src":"34906:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34917:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"34922:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34913:3:26"},"nodeType":"YulFunctionCall","src":"34913:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34906:3:26"}]}]},"name":"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34699:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34707:3:26","type":""}],"src":"34565:366:26"},{"body":{"nodeType":"YulBlock","src":"35108:248:26","statements":[{"nodeType":"YulAssignment","src":"35118:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35130:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"35141:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35126:3:26"},"nodeType":"YulFunctionCall","src":"35126:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35118:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35165:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"35176:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35161:3:26"},"nodeType":"YulFunctionCall","src":"35161:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35184:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"35190:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35180:3:26"},"nodeType":"YulFunctionCall","src":"35180:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35154:6:26"},"nodeType":"YulFunctionCall","src":"35154:47:26"},"nodeType":"YulExpressionStatement","src":"35154:47:26"},{"nodeType":"YulAssignment","src":"35210:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35344:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35218:124:26"},"nodeType":"YulFunctionCall","src":"35218:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35210:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35088:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35103:4:26","type":""}],"src":"34937:419:26"},{"body":{"nodeType":"YulBlock","src":"35468:73:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35490:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"35498:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35486:3:26"},"nodeType":"YulFunctionCall","src":"35486:14:26"},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","kind":"string","nodeType":"YulLiteral","src":"35502:31:26","type":"","value":"ERC20Permit: expired deadline"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35479:6:26"},"nodeType":"YulFunctionCall","src":"35479:55:26"},"nodeType":"YulExpressionStatement","src":"35479:55:26"}]},"name":"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35460:6:26","type":""}],"src":"35362:179:26"},{"body":{"nodeType":"YulBlock","src":"35693:220:26","statements":[{"nodeType":"YulAssignment","src":"35703:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35769:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"35774:2:26","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35710:58:26"},"nodeType":"YulFunctionCall","src":"35710:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35703:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35875:3:26"}],"functionName":{"name":"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","nodeType":"YulIdentifier","src":"35786:88:26"},"nodeType":"YulFunctionCall","src":"35786:93:26"},"nodeType":"YulExpressionStatement","src":"35786:93:26"},{"nodeType":"YulAssignment","src":"35888:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35899:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"35904:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35895:3:26"},"nodeType":"YulFunctionCall","src":"35895:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35888:3:26"}]}]},"name":"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35681:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35689:3:26","type":""}],"src":"35547:366:26"},{"body":{"nodeType":"YulBlock","src":"36090:248:26","statements":[{"nodeType":"YulAssignment","src":"36100:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36112:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"36123:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36108:3:26"},"nodeType":"YulFunctionCall","src":"36108:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36100:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36147:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"36158:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36143:3:26"},"nodeType":"YulFunctionCall","src":"36143:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36166:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"36172:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36162:3:26"},"nodeType":"YulFunctionCall","src":"36162:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36136:6:26"},"nodeType":"YulFunctionCall","src":"36136:47:26"},"nodeType":"YulExpressionStatement","src":"36136:47:26"},{"nodeType":"YulAssignment","src":"36192:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36326:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36200:124:26"},"nodeType":"YulFunctionCall","src":"36200:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36192:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36070:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36085:4:26","type":""}],"src":"35919:419:26"},{"body":{"nodeType":"YulBlock","src":"36582:537:26","statements":[{"nodeType":"YulAssignment","src":"36592:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36604:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"36615:3:26","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36600:3:26"},"nodeType":"YulFunctionCall","src":"36600:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36592:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36673:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36686:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"36697:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36682:3:26"},"nodeType":"YulFunctionCall","src":"36682:17:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"36629:43:26"},"nodeType":"YulFunctionCall","src":"36629:71:26"},"nodeType":"YulExpressionStatement","src":"36629:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"36754:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36767:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"36778:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36763:3:26"},"nodeType":"YulFunctionCall","src":"36763:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"36710:43:26"},"nodeType":"YulFunctionCall","src":"36710:72:26"},"nodeType":"YulExpressionStatement","src":"36710:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"36836:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36849:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"36860:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36845:3:26"},"nodeType":"YulFunctionCall","src":"36845:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"36792:43:26"},"nodeType":"YulFunctionCall","src":"36792:72:26"},"nodeType":"YulExpressionStatement","src":"36792:72:26"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"36918:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36931:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"36942:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36927:3:26"},"nodeType":"YulFunctionCall","src":"36927:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"36874:43:26"},"nodeType":"YulFunctionCall","src":"36874:72:26"},"nodeType":"YulExpressionStatement","src":"36874:72:26"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"37000:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37013:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"37024:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37009:3:26"},"nodeType":"YulFunctionCall","src":"37009:19:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"36956:43:26"},"nodeType":"YulFunctionCall","src":"36956:73:26"},"nodeType":"YulExpressionStatement","src":"36956:73:26"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"37083:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37096:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"37107:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37092:3:26"},"nodeType":"YulFunctionCall","src":"37092:19:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"37039:43:26"},"nodeType":"YulFunctionCall","src":"37039:73:26"},"nodeType":"YulExpressionStatement","src":"37039:73:26"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36514:9:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"36526:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"36534:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"36542:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"36550:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36558:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36566:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36577:4:26","type":""}],"src":"36344:775:26"},{"body":{"nodeType":"YulBlock","src":"37231:74:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37253:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"37261:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37249:3:26"},"nodeType":"YulFunctionCall","src":"37249:14:26"},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"37265:32:26","type":"","value":"ERC20Permit: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37242:6:26"},"nodeType":"YulFunctionCall","src":"37242:56:26"},"nodeType":"YulExpressionStatement","src":"37242:56:26"}]},"name":"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37223:6:26","type":""}],"src":"37125:180:26"},{"body":{"nodeType":"YulBlock","src":"37457:220:26","statements":[{"nodeType":"YulAssignment","src":"37467:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37533:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"37538:2:26","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37474:58:26"},"nodeType":"YulFunctionCall","src":"37474:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37467:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37639:3:26"}],"functionName":{"name":"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","nodeType":"YulIdentifier","src":"37550:88:26"},"nodeType":"YulFunctionCall","src":"37550:93:26"},"nodeType":"YulExpressionStatement","src":"37550:93:26"},{"nodeType":"YulAssignment","src":"37652:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37663:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"37668:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37659:3:26"},"nodeType":"YulFunctionCall","src":"37659:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37652:3:26"}]}]},"name":"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37445:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37453:3:26","type":""}],"src":"37311:366:26"},{"body":{"nodeType":"YulBlock","src":"37854:248:26","statements":[{"nodeType":"YulAssignment","src":"37864:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37876:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"37887:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37872:3:26"},"nodeType":"YulFunctionCall","src":"37872:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37864:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37911:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"37922:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37907:3:26"},"nodeType":"YulFunctionCall","src":"37907:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37930:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"37936:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37926:3:26"},"nodeType":"YulFunctionCall","src":"37926:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37900:6:26"},"nodeType":"YulFunctionCall","src":"37900:47:26"},"nodeType":"YulExpressionStatement","src":"37900:47:26"},{"nodeType":"YulAssignment","src":"37956:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38090:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37964:124:26"},"nodeType":"YulFunctionCall","src":"37964:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37956:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37834:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37849:4:26","type":""}],"src":"37683:419:26"},{"body":{"nodeType":"YulBlock","src":"38214:117:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38236:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"38244:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38232:3:26"},"nodeType":"YulFunctionCall","src":"38232:14:26"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"38248:34:26","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38225:6:26"},"nodeType":"YulFunctionCall","src":"38225:58:26"},"nodeType":"YulExpressionStatement","src":"38225:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38304:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"38312:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38300:3:26"},"nodeType":"YulFunctionCall","src":"38300:15:26"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"38317:6:26","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38293:6:26"},"nodeType":"YulFunctionCall","src":"38293:31:26"},"nodeType":"YulExpressionStatement","src":"38293:31:26"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38206:6:26","type":""}],"src":"38108:223:26"},{"body":{"nodeType":"YulBlock","src":"38483:220:26","statements":[{"nodeType":"YulAssignment","src":"38493:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38559:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"38564:2:26","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38500:58:26"},"nodeType":"YulFunctionCall","src":"38500:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38493:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38665:3:26"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"38576:88:26"},"nodeType":"YulFunctionCall","src":"38576:93:26"},"nodeType":"YulExpressionStatement","src":"38576:93:26"},{"nodeType":"YulAssignment","src":"38678:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38689:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"38694:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38685:3:26"},"nodeType":"YulFunctionCall","src":"38685:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38678:3:26"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38471:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38479:3:26","type":""}],"src":"38337:366:26"},{"body":{"nodeType":"YulBlock","src":"38880:248:26","statements":[{"nodeType":"YulAssignment","src":"38890:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38902:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"38913:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38898:3:26"},"nodeType":"YulFunctionCall","src":"38898:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38890:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38937:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"38948:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38933:3:26"},"nodeType":"YulFunctionCall","src":"38933:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38956:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"38962:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38952:3:26"},"nodeType":"YulFunctionCall","src":"38952:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38926:6:26"},"nodeType":"YulFunctionCall","src":"38926:47:26"},"nodeType":"YulExpressionStatement","src":"38926:47:26"},{"nodeType":"YulAssignment","src":"38982:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39116:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38990:124:26"},"nodeType":"YulFunctionCall","src":"38990:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38982:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38860:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38875:4:26","type":""}],"src":"38709:419:26"},{"body":{"nodeType":"YulBlock","src":"39240:115:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39262:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"39270:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39258:3:26"},"nodeType":"YulFunctionCall","src":"39258:14:26"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"39274:34:26","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39251:6:26"},"nodeType":"YulFunctionCall","src":"39251:58:26"},"nodeType":"YulExpressionStatement","src":"39251:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39330:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"39338:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39326:3:26"},"nodeType":"YulFunctionCall","src":"39326:15:26"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"39343:4:26","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39319:6:26"},"nodeType":"YulFunctionCall","src":"39319:29:26"},"nodeType":"YulExpressionStatement","src":"39319:29:26"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39232:6:26","type":""}],"src":"39134:221:26"},{"body":{"nodeType":"YulBlock","src":"39507:220:26","statements":[{"nodeType":"YulAssignment","src":"39517:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39583:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"39588:2:26","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39524:58:26"},"nodeType":"YulFunctionCall","src":"39524:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39517:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39689:3:26"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"39600:88:26"},"nodeType":"YulFunctionCall","src":"39600:93:26"},"nodeType":"YulExpressionStatement","src":"39600:93:26"},{"nodeType":"YulAssignment","src":"39702:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39713:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"39718:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39709:3:26"},"nodeType":"YulFunctionCall","src":"39709:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39702:3:26"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39495:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39503:3:26","type":""}],"src":"39361:366:26"},{"body":{"nodeType":"YulBlock","src":"39904:248:26","statements":[{"nodeType":"YulAssignment","src":"39914:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39926:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"39937:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39922:3:26"},"nodeType":"YulFunctionCall","src":"39922:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39914:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39961:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"39972:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39957:3:26"},"nodeType":"YulFunctionCall","src":"39957:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39980:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"39986:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39976:3:26"},"nodeType":"YulFunctionCall","src":"39976:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39950:6:26"},"nodeType":"YulFunctionCall","src":"39950:47:26"},"nodeType":"YulExpressionStatement","src":"39950:47:26"},{"nodeType":"YulAssignment","src":"40006:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40140:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40014:124:26"},"nodeType":"YulFunctionCall","src":"40014:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40006:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39884:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39899:4:26","type":""}],"src":"39733:419:26"},{"body":{"nodeType":"YulBlock","src":"40264:73:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40286:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"40294:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40282:3:26"},"nodeType":"YulFunctionCall","src":"40282:14:26"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"40298:31:26","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40275:6:26"},"nodeType":"YulFunctionCall","src":"40275:55:26"},"nodeType":"YulExpressionStatement","src":"40275:55:26"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40256:6:26","type":""}],"src":"40158:179:26"},{"body":{"nodeType":"YulBlock","src":"40489:220:26","statements":[{"nodeType":"YulAssignment","src":"40499:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40565:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"40570:2:26","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40506:58:26"},"nodeType":"YulFunctionCall","src":"40506:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40499:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40671:3:26"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"40582:88:26"},"nodeType":"YulFunctionCall","src":"40582:93:26"},"nodeType":"YulExpressionStatement","src":"40582:93:26"},{"nodeType":"YulAssignment","src":"40684:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40695:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"40700:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40691:3:26"},"nodeType":"YulFunctionCall","src":"40691:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40684:3:26"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40477:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40485:3:26","type":""}],"src":"40343:366:26"},{"body":{"nodeType":"YulBlock","src":"40886:248:26","statements":[{"nodeType":"YulAssignment","src":"40896:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40908:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"40919:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40904:3:26"},"nodeType":"YulFunctionCall","src":"40904:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40896:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40943:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"40954:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40939:3:26"},"nodeType":"YulFunctionCall","src":"40939:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40962:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"40968:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40958:3:26"},"nodeType":"YulFunctionCall","src":"40958:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40932:6:26"},"nodeType":"YulFunctionCall","src":"40932:47:26"},"nodeType":"YulExpressionStatement","src":"40932:47:26"},{"nodeType":"YulAssignment","src":"40988:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41122:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40996:124:26"},"nodeType":"YulFunctionCall","src":"40996:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40988:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40866:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40881:4:26","type":""}],"src":"40715:419:26"},{"body":{"nodeType":"YulBlock","src":"41246:118:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41268:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"41276:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41264:3:26"},"nodeType":"YulFunctionCall","src":"41264:14:26"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"41280:34:26","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41257:6:26"},"nodeType":"YulFunctionCall","src":"41257:58:26"},"nodeType":"YulExpressionStatement","src":"41257:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41336:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"41344:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41332:3:26"},"nodeType":"YulFunctionCall","src":"41332:15:26"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"41349:7:26","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41325:6:26"},"nodeType":"YulFunctionCall","src":"41325:32:26"},"nodeType":"YulExpressionStatement","src":"41325:32:26"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41238:6:26","type":""}],"src":"41140:224:26"},{"body":{"nodeType":"YulBlock","src":"41516:220:26","statements":[{"nodeType":"YulAssignment","src":"41526:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41592:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"41597:2:26","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41533:58:26"},"nodeType":"YulFunctionCall","src":"41533:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41526:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41698:3:26"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"41609:88:26"},"nodeType":"YulFunctionCall","src":"41609:93:26"},"nodeType":"YulExpressionStatement","src":"41609:93:26"},{"nodeType":"YulAssignment","src":"41711:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41722:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"41727:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41718:3:26"},"nodeType":"YulFunctionCall","src":"41718:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41711:3:26"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"41504:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41512:3:26","type":""}],"src":"41370:366:26"},{"body":{"nodeType":"YulBlock","src":"41913:248:26","statements":[{"nodeType":"YulAssignment","src":"41923:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41935:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"41946:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41931:3:26"},"nodeType":"YulFunctionCall","src":"41931:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41923:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41970:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"41981:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41966:3:26"},"nodeType":"YulFunctionCall","src":"41966:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41989:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"41995:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41985:3:26"},"nodeType":"YulFunctionCall","src":"41985:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41959:6:26"},"nodeType":"YulFunctionCall","src":"41959:47:26"},"nodeType":"YulExpressionStatement","src":"41959:47:26"},{"nodeType":"YulAssignment","src":"42015:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42149:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42023:124:26"},"nodeType":"YulFunctionCall","src":"42023:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42015:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41893:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41908:4:26","type":""}],"src":"41742:419:26"},{"body":{"nodeType":"YulBlock","src":"42273:116:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42295:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"42303:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42291:3:26"},"nodeType":"YulFunctionCall","src":"42291:14:26"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"42307:34:26","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42284:6:26"},"nodeType":"YulFunctionCall","src":"42284:58:26"},"nodeType":"YulExpressionStatement","src":"42284:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42363:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"42371:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42359:3:26"},"nodeType":"YulFunctionCall","src":"42359:15:26"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"42376:5:26","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42352:6:26"},"nodeType":"YulFunctionCall","src":"42352:30:26"},"nodeType":"YulExpressionStatement","src":"42352:30:26"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"42265:6:26","type":""}],"src":"42167:222:26"},{"body":{"nodeType":"YulBlock","src":"42541:220:26","statements":[{"nodeType":"YulAssignment","src":"42551:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42617:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"42622:2:26","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42558:58:26"},"nodeType":"YulFunctionCall","src":"42558:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42551:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42723:3:26"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"42634:88:26"},"nodeType":"YulFunctionCall","src":"42634:93:26"},"nodeType":"YulExpressionStatement","src":"42634:93:26"},{"nodeType":"YulAssignment","src":"42736:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42747:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"42752:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42743:3:26"},"nodeType":"YulFunctionCall","src":"42743:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42736:3:26"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42529:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42537:3:26","type":""}],"src":"42395:366:26"},{"body":{"nodeType":"YulBlock","src":"42938:248:26","statements":[{"nodeType":"YulAssignment","src":"42948:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42960:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"42971:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42956:3:26"},"nodeType":"YulFunctionCall","src":"42956:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42948:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42995:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"43006:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42991:3:26"},"nodeType":"YulFunctionCall","src":"42991:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43014:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"43020:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43010:3:26"},"nodeType":"YulFunctionCall","src":"43010:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42984:6:26"},"nodeType":"YulFunctionCall","src":"42984:47:26"},"nodeType":"YulExpressionStatement","src":"42984:47:26"},{"nodeType":"YulAssignment","src":"43040:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43174:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43048:124:26"},"nodeType":"YulFunctionCall","src":"43048:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43040:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42918:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42933:4:26","type":""}],"src":"42767:419:26"},{"body":{"nodeType":"YulBlock","src":"43298:119:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43320:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"43328:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43316:3:26"},"nodeType":"YulFunctionCall","src":"43316:14:26"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"43332:34:26","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43309:6:26"},"nodeType":"YulFunctionCall","src":"43309:58:26"},"nodeType":"YulExpressionStatement","src":"43309:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43388:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"43396:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43384:3:26"},"nodeType":"YulFunctionCall","src":"43384:15:26"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"43401:8:26","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43377:6:26"},"nodeType":"YulFunctionCall","src":"43377:33:26"},"nodeType":"YulExpressionStatement","src":"43377:33:26"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43290:6:26","type":""}],"src":"43192:225:26"},{"body":{"nodeType":"YulBlock","src":"43569:220:26","statements":[{"nodeType":"YulAssignment","src":"43579:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43645:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"43650:2:26","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43586:58:26"},"nodeType":"YulFunctionCall","src":"43586:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"43579:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43751:3:26"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"43662:88:26"},"nodeType":"YulFunctionCall","src":"43662:93:26"},"nodeType":"YulExpressionStatement","src":"43662:93:26"},{"nodeType":"YulAssignment","src":"43764:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43775:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"43780:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43771:3:26"},"nodeType":"YulFunctionCall","src":"43771:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"43764:3:26"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"43557:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"43565:3:26","type":""}],"src":"43423:366:26"},{"body":{"nodeType":"YulBlock","src":"43966:248:26","statements":[{"nodeType":"YulAssignment","src":"43976:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43988:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"43999:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43984:3:26"},"nodeType":"YulFunctionCall","src":"43984:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43976:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44023:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"44034:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44019:3:26"},"nodeType":"YulFunctionCall","src":"44019:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44042:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"44048:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44038:3:26"},"nodeType":"YulFunctionCall","src":"44038:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44012:6:26"},"nodeType":"YulFunctionCall","src":"44012:47:26"},"nodeType":"YulExpressionStatement","src":"44012:47:26"},{"nodeType":"YulAssignment","src":"44068:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44202:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44076:124:26"},"nodeType":"YulFunctionCall","src":"44076:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44068:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43946:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43961:4:26","type":""}],"src":"43795:419:26"},{"body":{"nodeType":"YulBlock","src":"44265:149:26","statements":[{"nodeType":"YulAssignment","src":"44275:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"44298:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"44280:17:26"},"nodeType":"YulFunctionCall","src":"44280:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"44275:1:26"}]},{"nodeType":"YulAssignment","src":"44309:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"44332:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"44314:17:26"},"nodeType":"YulFunctionCall","src":"44314:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"44309:1:26"}]},{"nodeType":"YulAssignment","src":"44343:17:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"44355:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"44358:1:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44351:3:26"},"nodeType":"YulFunctionCall","src":"44351:9:26"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"44343:4:26"}]},{"body":{"nodeType":"YulBlock","src":"44385:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"44387:16:26"},"nodeType":"YulFunctionCall","src":"44387:18:26"},"nodeType":"YulExpressionStatement","src":"44387:18:26"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"44376:4:26"},{"name":"x","nodeType":"YulIdentifier","src":"44382:1:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"44373:2:26"},"nodeType":"YulFunctionCall","src":"44373:11:26"},"nodeType":"YulIf","src":"44370:37:26"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"44251:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"44254:1:26","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"44260:4:26","type":""}],"src":"44220:194:26"},{"body":{"nodeType":"YulBlock","src":"44526:124:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44548:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"44556:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44544:3:26"},"nodeType":"YulFunctionCall","src":"44544:14:26"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"44560:34:26","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44537:6:26"},"nodeType":"YulFunctionCall","src":"44537:58:26"},"nodeType":"YulExpressionStatement","src":"44537:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44616:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"44624:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44612:3:26"},"nodeType":"YulFunctionCall","src":"44612:15:26"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"44629:13:26","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44605:6:26"},"nodeType":"YulFunctionCall","src":"44605:38:26"},"nodeType":"YulExpressionStatement","src":"44605:38:26"}]},"name":"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44518:6:26","type":""}],"src":"44420:230:26"},{"body":{"nodeType":"YulBlock","src":"44802:220:26","statements":[{"nodeType":"YulAssignment","src":"44812:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44878:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"44883:2:26","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44819:58:26"},"nodeType":"YulFunctionCall","src":"44819:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"44812:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44984:3:26"}],"functionName":{"name":"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","nodeType":"YulIdentifier","src":"44895:88:26"},"nodeType":"YulFunctionCall","src":"44895:93:26"},"nodeType":"YulExpressionStatement","src":"44895:93:26"},{"nodeType":"YulAssignment","src":"44997:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45008:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"45013:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45004:3:26"},"nodeType":"YulFunctionCall","src":"45004:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"44997:3:26"}]}]},"name":"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"44790:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"44798:3:26","type":""}],"src":"44656:366:26"},{"body":{"nodeType":"YulBlock","src":"45199:248:26","statements":[{"nodeType":"YulAssignment","src":"45209:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45221:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"45232:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45217:3:26"},"nodeType":"YulFunctionCall","src":"45217:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45209:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45256:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"45267:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45252:3:26"},"nodeType":"YulFunctionCall","src":"45252:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45275:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"45281:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45271:3:26"},"nodeType":"YulFunctionCall","src":"45271:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45245:6:26"},"nodeType":"YulFunctionCall","src":"45245:47:26"},"nodeType":"YulExpressionStatement","src":"45245:47:26"},{"nodeType":"YulAssignment","src":"45301:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45435:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45309:124:26"},"nodeType":"YulFunctionCall","src":"45309:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45301:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45179:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45194:4:26","type":""}],"src":"45028:419:26"},{"body":{"nodeType":"YulBlock","src":"45559:119:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45581:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"45589:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45577:3:26"},"nodeType":"YulFunctionCall","src":"45577:14:26"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033","kind":"string","nodeType":"YulLiteral","src":"45593:34:26","type":"","value":"SafeCast: value doesn't fit in 3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45570:6:26"},"nodeType":"YulFunctionCall","src":"45570:58:26"},"nodeType":"YulExpressionStatement","src":"45570:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45649:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"45657:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45645:3:26"},"nodeType":"YulFunctionCall","src":"45645:15:26"},{"hexValue":"322062697473","kind":"string","nodeType":"YulLiteral","src":"45662:8:26","type":"","value":"2 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45638:6:26"},"nodeType":"YulFunctionCall","src":"45638:33:26"},"nodeType":"YulExpressionStatement","src":"45638:33:26"}]},"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45551:6:26","type":""}],"src":"45453:225:26"},{"body":{"nodeType":"YulBlock","src":"45830:220:26","statements":[{"nodeType":"YulAssignment","src":"45840:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45906:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"45911:2:26","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45847:58:26"},"nodeType":"YulFunctionCall","src":"45847:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"45840:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46012:3:26"}],"functionName":{"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulIdentifier","src":"45923:88:26"},"nodeType":"YulFunctionCall","src":"45923:93:26"},"nodeType":"YulExpressionStatement","src":"45923:93:26"},{"nodeType":"YulAssignment","src":"46025:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46036:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"46041:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46032:3:26"},"nodeType":"YulFunctionCall","src":"46032:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46025:3:26"}]}]},"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"45818:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"45826:3:26","type":""}],"src":"45684:366:26"},{"body":{"nodeType":"YulBlock","src":"46227:248:26","statements":[{"nodeType":"YulAssignment","src":"46237:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46249:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"46260:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46245:3:26"},"nodeType":"YulFunctionCall","src":"46245:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46237:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46284:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"46295:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46280:3:26"},"nodeType":"YulFunctionCall","src":"46280:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46303:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"46309:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46299:3:26"},"nodeType":"YulFunctionCall","src":"46299:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46273:6:26"},"nodeType":"YulFunctionCall","src":"46273:47:26"},"nodeType":"YulExpressionStatement","src":"46273:47:26"},{"nodeType":"YulAssignment","src":"46329:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46463:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46337:124:26"},"nodeType":"YulFunctionCall","src":"46337:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46329:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46207:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46222:4:26","type":""}],"src":"46056:419:26"},{"body":{"nodeType":"YulBlock","src":"46587:119:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46609:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"46617:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46605:3:26"},"nodeType":"YulFunctionCall","src":"46605:14:26"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034","kind":"string","nodeType":"YulLiteral","src":"46621:34:26","type":"","value":"SafeCast: value doesn't fit in 4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46598:6:26"},"nodeType":"YulFunctionCall","src":"46598:58:26"},"nodeType":"YulExpressionStatement","src":"46598:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46677:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"46685:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46673:3:26"},"nodeType":"YulFunctionCall","src":"46673:15:26"},{"hexValue":"382062697473","kind":"string","nodeType":"YulLiteral","src":"46690:8:26","type":"","value":"8 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46666:6:26"},"nodeType":"YulFunctionCall","src":"46666:33:26"},"nodeType":"YulExpressionStatement","src":"46666:33:26"}]},"name":"store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46579:6:26","type":""}],"src":"46481:225:26"},{"body":{"nodeType":"YulBlock","src":"46858:220:26","statements":[{"nodeType":"YulAssignment","src":"46868:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46934:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"46939:2:26","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46875:58:26"},"nodeType":"YulFunctionCall","src":"46875:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46868:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47040:3:26"}],"functionName":{"name":"store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","nodeType":"YulIdentifier","src":"46951:88:26"},"nodeType":"YulFunctionCall","src":"46951:93:26"},"nodeType":"YulExpressionStatement","src":"46951:93:26"},{"nodeType":"YulAssignment","src":"47053:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47064:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"47069:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47060:3:26"},"nodeType":"YulFunctionCall","src":"47060:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"47053:3:26"}]}]},"name":"abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"46846:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"46854:3:26","type":""}],"src":"46712:366:26"},{"body":{"nodeType":"YulBlock","src":"47255:248:26","statements":[{"nodeType":"YulAssignment","src":"47265:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47277:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"47288:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47273:3:26"},"nodeType":"YulFunctionCall","src":"47273:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47265:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47312:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"47323:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47308:3:26"},"nodeType":"YulFunctionCall","src":"47308:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47331:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"47337:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"47327:3:26"},"nodeType":"YulFunctionCall","src":"47327:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47301:6:26"},"nodeType":"YulFunctionCall","src":"47301:47:26"},"nodeType":"YulExpressionStatement","src":"47301:47:26"},{"nodeType":"YulAssignment","src":"47357:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47491:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47365:124:26"},"nodeType":"YulFunctionCall","src":"47365:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47357:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47235:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47250:4:26","type":""}],"src":"47084:419:26"},{"body":{"nodeType":"YulBlock","src":"47623:34:26","statements":[{"nodeType":"YulAssignment","src":"47633:18:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"47648:3:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"47633:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"47595:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"47600:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"47611:11:26","type":""}],"src":"47509:148:26"},{"body":{"nodeType":"YulBlock","src":"47769:67:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"47791:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"47799:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47787:3:26"},"nodeType":"YulFunctionCall","src":"47787:14:26"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"47803:25:26","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47780:6:26"},"nodeType":"YulFunctionCall","src":"47780:49:26"},"nodeType":"YulExpressionStatement","src":"47780:49:26"}]},"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"47761:6:26","type":""}],"src":"47663:173:26"},{"body":{"nodeType":"YulBlock","src":"48006:238:26","statements":[{"nodeType":"YulAssignment","src":"48016:92:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48100:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"48105:2:26","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"48023:76:26"},"nodeType":"YulFunctionCall","src":"48023:85:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"48016:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48206:3:26"}],"functionName":{"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulIdentifier","src":"48117:88:26"},"nodeType":"YulFunctionCall","src":"48117:93:26"},"nodeType":"YulExpressionStatement","src":"48117:93:26"},{"nodeType":"YulAssignment","src":"48219:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48230:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"48235:2:26","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48226:3:26"},"nodeType":"YulFunctionCall","src":"48226:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"48219:3:26"}]}]},"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"47994:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"48002:3:26","type":""}],"src":"47842:402:26"},{"body":{"nodeType":"YulBlock","src":"48360:280:26","statements":[{"nodeType":"YulVariableDeclaration","src":"48370:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"48417:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"48384:32:26"},"nodeType":"YulFunctionCall","src":"48384:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"48374:6:26","type":""}]},{"nodeType":"YulAssignment","src":"48432:96:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48516:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"48521:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"48439:76:26"},"nodeType":"YulFunctionCall","src":"48439:89:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"48432:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"48576:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"48583:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48572:3:26"},"nodeType":"YulFunctionCall","src":"48572:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"48590:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"48595:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"48537:34:26"},"nodeType":"YulFunctionCall","src":"48537:65:26"},"nodeType":"YulExpressionStatement","src":"48537:65:26"},{"nodeType":"YulAssignment","src":"48611:23:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48622:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"48627:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48618:3:26"},"nodeType":"YulFunctionCall","src":"48618:16:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"48611:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48341:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"48348:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"48356:3:26","type":""}],"src":"48250:390:26"},{"body":{"nodeType":"YulBlock","src":"48752:61:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48774:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"48782:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48770:3:26"},"nodeType":"YulFunctionCall","src":"48770:14:26"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"48786:19:26","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48763:6:26"},"nodeType":"YulFunctionCall","src":"48763:43:26"},"nodeType":"YulExpressionStatement","src":"48763:43:26"}]},"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"48744:6:26","type":""}],"src":"48646:167:26"},{"body":{"nodeType":"YulBlock","src":"48983:238:26","statements":[{"nodeType":"YulAssignment","src":"48993:92:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49077:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"49082:2:26","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"49000:76:26"},"nodeType":"YulFunctionCall","src":"49000:85:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"48993:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49183:3:26"}],"functionName":{"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulIdentifier","src":"49094:88:26"},"nodeType":"YulFunctionCall","src":"49094:93:26"},"nodeType":"YulExpressionStatement","src":"49094:93:26"},{"nodeType":"YulAssignment","src":"49196:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49207:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"49212:2:26","type":"","value":"17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49203:3:26"},"nodeType":"YulFunctionCall","src":"49203:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"49196:3:26"}]}]},"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"48971:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"48979:3:26","type":""}],"src":"48819:402:26"},{"body":{"nodeType":"YulBlock","src":"49613:581:26","statements":[{"nodeType":"YulAssignment","src":"49624:155:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49775:3:26"}],"functionName":{"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"49631:142:26"},"nodeType":"YulFunctionCall","src":"49631:148:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"49624:3:26"}]},{"nodeType":"YulAssignment","src":"49789:102:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"49878:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"49887:3:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"49796:81:26"},"nodeType":"YulFunctionCall","src":"49796:95:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"49789:3:26"}]},{"nodeType":"YulAssignment","src":"49901:155:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50052:3:26"}],"functionName":{"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"49908:142:26"},"nodeType":"YulFunctionCall","src":"49908:148:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"49901:3:26"}]},{"nodeType":"YulAssignment","src":"50066:102:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"50155:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"50164:3:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"50073:81:26"},"nodeType":"YulFunctionCall","src":"50073:95:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"50066:3:26"}]},{"nodeType":"YulAssignment","src":"50178:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"50185:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"50178:3:26"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"49584:3:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"49590:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"49598:6:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"49609:3:26","type":""}],"src":"49227:967:26"},{"body":{"nodeType":"YulBlock","src":"50410:454:26","statements":[{"nodeType":"YulAssignment","src":"50420:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50432:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"50443:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50428:3:26"},"nodeType":"YulFunctionCall","src":"50428:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50420:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"50501:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50514:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"50525:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50510:3:26"},"nodeType":"YulFunctionCall","src":"50510:17:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"50457:43:26"},"nodeType":"YulFunctionCall","src":"50457:71:26"},"nodeType":"YulExpressionStatement","src":"50457:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"50582:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50595:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"50606:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50591:3:26"},"nodeType":"YulFunctionCall","src":"50591:18:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"50538:43:26"},"nodeType":"YulFunctionCall","src":"50538:72:26"},"nodeType":"YulExpressionStatement","src":"50538:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"50664:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50677:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"50688:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50673:3:26"},"nodeType":"YulFunctionCall","src":"50673:18:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"50620:43:26"},"nodeType":"YulFunctionCall","src":"50620:72:26"},"nodeType":"YulExpressionStatement","src":"50620:72:26"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"50746:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50759:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"50770:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50755:3:26"},"nodeType":"YulFunctionCall","src":"50755:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"50702:43:26"},"nodeType":"YulFunctionCall","src":"50702:72:26"},"nodeType":"YulExpressionStatement","src":"50702:72:26"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"50828:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50841:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"50852:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50837:3:26"},"nodeType":"YulFunctionCall","src":"50837:19:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"50784:43:26"},"nodeType":"YulFunctionCall","src":"50784:73:26"},"nodeType":"YulExpressionStatement","src":"50784:73:26"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50350:9:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"50362:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"50370:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"50378:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"50386:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"50394:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"50405:4:26","type":""}],"src":"50200:664:26"},{"body":{"nodeType":"YulBlock","src":"50898:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"50915:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"50918:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50908:6:26"},"nodeType":"YulFunctionCall","src":"50908:88:26"},"nodeType":"YulExpressionStatement","src":"50908:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"51012:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"51015:4:26","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51005:6:26"},"nodeType":"YulFunctionCall","src":"51005:15:26"},"nodeType":"YulExpressionStatement","src":"51005:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"51036:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"51039:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"51029:6:26"},"nodeType":"YulFunctionCall","src":"51029:15:26"},"nodeType":"YulExpressionStatement","src":"51029:15:26"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"50870:180:26"},{"body":{"nodeType":"YulBlock","src":"51098:143:26","statements":[{"nodeType":"YulAssignment","src":"51108:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"51131:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"51113:17:26"},"nodeType":"YulFunctionCall","src":"51113:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"51108:1:26"}]},{"nodeType":"YulAssignment","src":"51142:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"51165:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"51147:17:26"},"nodeType":"YulFunctionCall","src":"51147:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"51142:1:26"}]},{"body":{"nodeType":"YulBlock","src":"51189:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"51191:16:26"},"nodeType":"YulFunctionCall","src":"51191:18:26"},"nodeType":"YulExpressionStatement","src":"51191:18:26"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"51186:1:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"51179:6:26"},"nodeType":"YulFunctionCall","src":"51179:9:26"},"nodeType":"YulIf","src":"51176:35:26"},{"nodeType":"YulAssignment","src":"51221:14:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"51230:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"51233:1:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"51226:3:26"},"nodeType":"YulFunctionCall","src":"51226:9:26"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"51221:1:26"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"51087:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"51090:1:26","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"51096:1:26","type":""}],"src":"51056:185:26"},{"body":{"nodeType":"YulBlock","src":"51353:64:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"51375:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"51383:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51371:3:26"},"nodeType":"YulFunctionCall","src":"51371:14:26"},{"hexValue":"5061757361626c653a206e6f7420706175736564","kind":"string","nodeType":"YulLiteral","src":"51387:22:26","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51364:6:26"},"nodeType":"YulFunctionCall","src":"51364:46:26"},"nodeType":"YulExpressionStatement","src":"51364:46:26"}]},"name":"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"51345:6:26","type":""}],"src":"51247:170:26"},{"body":{"nodeType":"YulBlock","src":"51569:220:26","statements":[{"nodeType":"YulAssignment","src":"51579:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51645:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"51650:2:26","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"51586:58:26"},"nodeType":"YulFunctionCall","src":"51586:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"51579:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51751:3:26"}],"functionName":{"name":"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","nodeType":"YulIdentifier","src":"51662:88:26"},"nodeType":"YulFunctionCall","src":"51662:93:26"},"nodeType":"YulExpressionStatement","src":"51662:93:26"},{"nodeType":"YulAssignment","src":"51764:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51775:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"51780:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51771:3:26"},"nodeType":"YulFunctionCall","src":"51771:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"51764:3:26"}]}]},"name":"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"51557:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"51565:3:26","type":""}],"src":"51423:366:26"},{"body":{"nodeType":"YulBlock","src":"51966:248:26","statements":[{"nodeType":"YulAssignment","src":"51976:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51988:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"51999:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51984:3:26"},"nodeType":"YulFunctionCall","src":"51984:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51976:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52023:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"52034:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52019:3:26"},"nodeType":"YulFunctionCall","src":"52019:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"52042:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"52048:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"52038:3:26"},"nodeType":"YulFunctionCall","src":"52038:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52012:6:26"},"nodeType":"YulFunctionCall","src":"52012:47:26"},"nodeType":"YulExpressionStatement","src":"52012:47:26"},{"nodeType":"YulAssignment","src":"52068:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"52202:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"52076:124:26"},"nodeType":"YulFunctionCall","src":"52076:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52068:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"51946:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"51961:4:26","type":""}],"src":"51795:419:26"},{"body":{"nodeType":"YulBlock","src":"52326:129:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"52348:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"52356:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52344:3:26"},"nodeType":"YulFunctionCall","src":"52344:14:26"},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f","kind":"string","nodeType":"YulLiteral","src":"52360:34:26","type":"","value":"ERC20Votes: total supply risks o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52337:6:26"},"nodeType":"YulFunctionCall","src":"52337:58:26"},"nodeType":"YulExpressionStatement","src":"52337:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"52416:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"52424:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52412:3:26"},"nodeType":"YulFunctionCall","src":"52412:15:26"},{"hexValue":"766572666c6f77696e6720766f746573","kind":"string","nodeType":"YulLiteral","src":"52429:18:26","type":"","value":"verflowing votes"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52405:6:26"},"nodeType":"YulFunctionCall","src":"52405:43:26"},"nodeType":"YulExpressionStatement","src":"52405:43:26"}]},"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"52318:6:26","type":""}],"src":"52220:235:26"},{"body":{"nodeType":"YulBlock","src":"52607:220:26","statements":[{"nodeType":"YulAssignment","src":"52617:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52683:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"52688:2:26","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"52624:58:26"},"nodeType":"YulFunctionCall","src":"52624:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"52617:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52789:3:26"}],"functionName":{"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulIdentifier","src":"52700:88:26"},"nodeType":"YulFunctionCall","src":"52700:93:26"},"nodeType":"YulExpressionStatement","src":"52700:93:26"},{"nodeType":"YulAssignment","src":"52802:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52813:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"52818:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52809:3:26"},"nodeType":"YulFunctionCall","src":"52809:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"52802:3:26"}]}]},"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"52595:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"52603:3:26","type":""}],"src":"52461:366:26"},{"body":{"nodeType":"YulBlock","src":"53004:248:26","statements":[{"nodeType":"YulAssignment","src":"53014:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53026:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"53037:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53022:3:26"},"nodeType":"YulFunctionCall","src":"53022:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"53014:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53061:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"53072:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53057:3:26"},"nodeType":"YulFunctionCall","src":"53057:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"53080:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"53086:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"53076:3:26"},"nodeType":"YulFunctionCall","src":"53076:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53050:6:26"},"nodeType":"YulFunctionCall","src":"53050:47:26"},"nodeType":"YulExpressionStatement","src":"53050:47:26"},{"nodeType":"YulAssignment","src":"53106:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"53240:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"53114:124:26"},"nodeType":"YulFunctionCall","src":"53114:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"53106:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"52984:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"52999:4:26","type":""}],"src":"52833:419:26"},{"body":{"nodeType":"YulBlock","src":"53312:87:26","statements":[{"nodeType":"YulAssignment","src":"53322:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"53330:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"53322:4:26"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"53350:1:26","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"53353:3:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53343:6:26"},"nodeType":"YulFunctionCall","src":"53343:14:26"},"nodeType":"YulExpressionStatement","src":"53343:14:26"},{"nodeType":"YulAssignment","src":"53366:26:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"53384:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"53387:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"53374:9:26"},"nodeType":"YulFunctionCall","src":"53374:18:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"53366:4:26"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"53299:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"53307:4:26","type":""}],"src":"53258:141:26"},{"body":{"nodeType":"YulBlock","src":"53449:49:26","statements":[{"nodeType":"YulAssignment","src":"53459:33:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"53477:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"53484:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53473:3:26"},"nodeType":"YulFunctionCall","src":"53473:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"53489:2:26","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"53469:3:26"},"nodeType":"YulFunctionCall","src":"53469:23:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"53459:6:26"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"53432:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"53442:6:26","type":""}],"src":"53405:93:26"},{"body":{"nodeType":"YulBlock","src":"53557:54:26","statements":[{"nodeType":"YulAssignment","src":"53567:37:26","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"53592:4:26"},{"name":"value","nodeType":"YulIdentifier","src":"53598:5:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"53588:3:26"},"nodeType":"YulFunctionCall","src":"53588:16:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"53567:8:26"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"53532:4:26","type":""},{"name":"value","nodeType":"YulTypedName","src":"53538:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"53548:8:26","type":""}],"src":"53504:107:26"},{"body":{"nodeType":"YulBlock","src":"53693:317:26","statements":[{"nodeType":"YulVariableDeclaration","src":"53703:35:26","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"53724:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"53736:1:26","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"53720:3:26"},"nodeType":"YulFunctionCall","src":"53720:18:26"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"53707:9:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"53747:109:26","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"53778:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"53789:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"53759:18:26"},"nodeType":"YulFunctionCall","src":"53759:97:26"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"53751:4:26","type":""}]},{"nodeType":"YulAssignment","src":"53865:51:26","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"53896:9:26"},{"name":"toInsert","nodeType":"YulIdentifier","src":"53907:8:26"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"53877:18:26"},"nodeType":"YulFunctionCall","src":"53877:39:26"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"53865:8:26"}]},{"nodeType":"YulAssignment","src":"53925:30:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"53938:5:26"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"53949:4:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"53945:3:26"},"nodeType":"YulFunctionCall","src":"53945:9:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"53934:3:26"},"nodeType":"YulFunctionCall","src":"53934:21:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"53925:5:26"}]},{"nodeType":"YulAssignment","src":"53964:40:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"53977:5:26"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"53988:8:26"},{"name":"mask","nodeType":"YulIdentifier","src":"53998:4:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"53984:3:26"},"nodeType":"YulFunctionCall","src":"53984:19:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"53974:2:26"},"nodeType":"YulFunctionCall","src":"53974:30:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"53964:6:26"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"53654:5:26","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"53661:10:26","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"53673:8:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"53686:6:26","type":""}],"src":"53617:393:26"},{"body":{"nodeType":"YulBlock","src":"54076:82:26","statements":[{"nodeType":"YulAssignment","src":"54086:66:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"54144:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"54126:17:26"},"nodeType":"YulFunctionCall","src":"54126:24:26"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"54117:8:26"},"nodeType":"YulFunctionCall","src":"54117:34:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"54099:17:26"},"nodeType":"YulFunctionCall","src":"54099:53:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"54086:9:26"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"54056:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"54066:9:26","type":""}],"src":"54016:142:26"},{"body":{"nodeType":"YulBlock","src":"54211:28:26","statements":[{"nodeType":"YulAssignment","src":"54221:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"54228:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"54221:3:26"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"54197:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"54207:3:26","type":""}],"src":"54164:75:26"},{"body":{"nodeType":"YulBlock","src":"54321:193:26","statements":[{"nodeType":"YulVariableDeclaration","src":"54331:63:26","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"54386:7:26"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"54355:30:26"},"nodeType":"YulFunctionCall","src":"54355:39:26"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"54335:16:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"54410:4:26"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"54450:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"54444:5:26"},"nodeType":"YulFunctionCall","src":"54444:11:26"},{"name":"offset","nodeType":"YulIdentifier","src":"54457:6:26"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"54489:16:26"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"54465:23:26"},"nodeType":"YulFunctionCall","src":"54465:41:26"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"54416:27:26"},"nodeType":"YulFunctionCall","src":"54416:91:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"54403:6:26"},"nodeType":"YulFunctionCall","src":"54403:105:26"},"nodeType":"YulExpressionStatement","src":"54403:105:26"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"54298:4:26","type":""},{"name":"offset","nodeType":"YulTypedName","src":"54304:6:26","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"54312:7:26","type":""}],"src":"54245:269:26"},{"body":{"nodeType":"YulBlock","src":"54569:24:26","statements":[{"nodeType":"YulAssignment","src":"54579:8:26","value":{"kind":"number","nodeType":"YulLiteral","src":"54586:1:26","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"54579:3:26"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"54565:3:26","type":""}],"src":"54520:73:26"},{"body":{"nodeType":"YulBlock","src":"54652:136:26","statements":[{"nodeType":"YulVariableDeclaration","src":"54662:46:26","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"54676:30:26"},"nodeType":"YulFunctionCall","src":"54676:32:26"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"54666:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"54761:4:26"},{"name":"offset","nodeType":"YulIdentifier","src":"54767:6:26"},{"name":"zero_0","nodeType":"YulIdentifier","src":"54775:6:26"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"54717:43:26"},"nodeType":"YulFunctionCall","src":"54717:65:26"},"nodeType":"YulExpressionStatement","src":"54717:65:26"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"54638:4:26","type":""},{"name":"offset","nodeType":"YulTypedName","src":"54644:6:26","type":""}],"src":"54599:189:26"},{"body":{"nodeType":"YulBlock","src":"54844:136:26","statements":[{"body":{"nodeType":"YulBlock","src":"54911:63:26","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"54955:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"54962:1:26","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"54925:29:26"},"nodeType":"YulFunctionCall","src":"54925:39:26"},"nodeType":"YulExpressionStatement","src":"54925:39:26"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"54864:5:26"},{"name":"end","nodeType":"YulIdentifier","src":"54871:3:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"54861:2:26"},"nodeType":"YulFunctionCall","src":"54861:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"54876:26:26","statements":[{"nodeType":"YulAssignment","src":"54878:22:26","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"54891:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"54898:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54887:3:26"},"nodeType":"YulFunctionCall","src":"54887:13:26"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"54878:5:26"}]}]},"pre":{"nodeType":"YulBlock","src":"54858:2:26","statements":[]},"src":"54854:120:26"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"54832:5:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"54839:3:26","type":""}],"src":"54794:186:26"},{"body":{"nodeType":"YulBlock","src":"55065:464:26","statements":[{"body":{"nodeType":"YulBlock","src":"55091:431:26","statements":[{"nodeType":"YulVariableDeclaration","src":"55105:54:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"55153:5:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"55121:31:26"},"nodeType":"YulFunctionCall","src":"55121:38:26"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"55109:8:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"55172:63:26","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"55195:8:26"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"55223:10:26"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"55205:17:26"},"nodeType":"YulFunctionCall","src":"55205:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55191:3:26"},"nodeType":"YulFunctionCall","src":"55191:44:26"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"55176:11:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"55392:27:26","statements":[{"nodeType":"YulAssignment","src":"55394:23:26","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"55409:8:26"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"55394:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"55376:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"55388:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"55373:2:26"},"nodeType":"YulFunctionCall","src":"55373:18:26"},"nodeType":"YulIf","src":"55370:49:26"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"55461:11:26"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"55478:8:26"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"55506:3:26"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"55488:17:26"},"nodeType":"YulFunctionCall","src":"55488:22:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55474:3:26"},"nodeType":"YulFunctionCall","src":"55474:37:26"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"55432:28:26"},"nodeType":"YulFunctionCall","src":"55432:80:26"},"nodeType":"YulExpressionStatement","src":"55432:80:26"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"55082:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"55087:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"55079:2:26"},"nodeType":"YulFunctionCall","src":"55079:11:26"},"nodeType":"YulIf","src":"55076:446:26"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"55041:5:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"55048:3:26","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"55053:10:26","type":""}],"src":"54986:543:26"},{"body":{"nodeType":"YulBlock","src":"55598:54:26","statements":[{"nodeType":"YulAssignment","src":"55608:37:26","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"55633:4:26"},{"name":"value","nodeType":"YulIdentifier","src":"55639:5:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"55629:3:26"},"nodeType":"YulFunctionCall","src":"55629:16:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"55608:8:26"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"55573:4:26","type":""},{"name":"value","nodeType":"YulTypedName","src":"55579:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"55589:8:26","type":""}],"src":"55535:117:26"},{"body":{"nodeType":"YulBlock","src":"55709:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"55719:68:26","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"55768:1:26","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"55771:5:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"55764:3:26"},"nodeType":"YulFunctionCall","src":"55764:13:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"55783:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"55779:3:26"},"nodeType":"YulFunctionCall","src":"55779:6:26"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"55735:28:26"},"nodeType":"YulFunctionCall","src":"55735:51:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"55731:3:26"},"nodeType":"YulFunctionCall","src":"55731:56:26"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"55723:4:26","type":""}]},{"nodeType":"YulAssignment","src":"55796:25:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"55810:4:26"},{"name":"mask","nodeType":"YulIdentifier","src":"55816:4:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"55806:3:26"},"nodeType":"YulFunctionCall","src":"55806:15:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"55796:6:26"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"55686:4:26","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"55692:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"55702:6:26","type":""}],"src":"55658:169:26"},{"body":{"nodeType":"YulBlock","src":"55913:214:26","statements":[{"nodeType":"YulAssignment","src":"56046:37:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"56073:4:26"},{"name":"len","nodeType":"YulIdentifier","src":"56079:3:26"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"56054:18:26"},"nodeType":"YulFunctionCall","src":"56054:29:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"56046:4:26"}]},{"nodeType":"YulAssignment","src":"56092:29:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"56103:4:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"56113:1:26","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"56116:3:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"56109:3:26"},"nodeType":"YulFunctionCall","src":"56109:11:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"56100:2:26"},"nodeType":"YulFunctionCall","src":"56100:21:26"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"56092:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"55894:4:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"55900:3:26","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"55908:4:26","type":""}],"src":"55832:295:26"},{"body":{"nodeType":"YulBlock","src":"56224:1303:26","statements":[{"nodeType":"YulVariableDeclaration","src":"56235:51:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"56282:3:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"56249:32:26"},"nodeType":"YulFunctionCall","src":"56249:37:26"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"56239:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"56371:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"56373:16:26"},"nodeType":"YulFunctionCall","src":"56373:18:26"},"nodeType":"YulExpressionStatement","src":"56373:18:26"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"56343:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"56351:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"56340:2:26"},"nodeType":"YulFunctionCall","src":"56340:30:26"},"nodeType":"YulIf","src":"56337:56:26"},{"nodeType":"YulVariableDeclaration","src":"56403:52:26","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"56449:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"56443:5:26"},"nodeType":"YulFunctionCall","src":"56443:11:26"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"56417:25:26"},"nodeType":"YulFunctionCall","src":"56417:38:26"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"56407:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"56548:4:26"},{"name":"oldLen","nodeType":"YulIdentifier","src":"56554:6:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"56562:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"56502:45:26"},"nodeType":"YulFunctionCall","src":"56502:67:26"},"nodeType":"YulExpressionStatement","src":"56502:67:26"},{"nodeType":"YulVariableDeclaration","src":"56579:18:26","value":{"kind":"number","nodeType":"YulLiteral","src":"56596:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"56583:9:26","type":""}]},{"nodeType":"YulAssignment","src":"56607:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"56620:4:26","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"56607:9:26"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"56671:611:26","statements":[{"nodeType":"YulVariableDeclaration","src":"56685:37:26","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"56704:6:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"56716:4:26","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"56712:3:26"},"nodeType":"YulFunctionCall","src":"56712:9:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"56700:3:26"},"nodeType":"YulFunctionCall","src":"56700:22:26"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"56689:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"56736:51:26","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"56782:4:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"56750:31:26"},"nodeType":"YulFunctionCall","src":"56750:37:26"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"56740:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"56800:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"56809:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"56804:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"56868:163:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"56893:6:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"56911:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"56916:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56907:3:26"},"nodeType":"YulFunctionCall","src":"56907:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"56901:5:26"},"nodeType":"YulFunctionCall","src":"56901:26:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"56886:6:26"},"nodeType":"YulFunctionCall","src":"56886:42:26"},"nodeType":"YulExpressionStatement","src":"56886:42:26"},{"nodeType":"YulAssignment","src":"56945:24:26","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"56959:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"56967:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56955:3:26"},"nodeType":"YulFunctionCall","src":"56955:14:26"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"56945:6:26"}]},{"nodeType":"YulAssignment","src":"56986:31:26","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"57003:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"57014:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56999:3:26"},"nodeType":"YulFunctionCall","src":"56999:18:26"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"56986:9:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"56834:1:26"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"56837:7:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"56831:2:26"},"nodeType":"YulFunctionCall","src":"56831:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"56846:21:26","statements":[{"nodeType":"YulAssignment","src":"56848:17:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"56857:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"56860:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56853:3:26"},"nodeType":"YulFunctionCall","src":"56853:12:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"56848:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"56827:3:26","statements":[]},"src":"56823:208:26"},{"body":{"nodeType":"YulBlock","src":"57067:156:26","statements":[{"nodeType":"YulVariableDeclaration","src":"57085:43:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"57112:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"57117:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57108:3:26"},"nodeType":"YulFunctionCall","src":"57108:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"57102:5:26"},"nodeType":"YulFunctionCall","src":"57102:26:26"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"57089:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"57152:6:26"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"57179:9:26"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"57194:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"57202:4:26","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"57190:3:26"},"nodeType":"YulFunctionCall","src":"57190:17:26"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"57160:18:26"},"nodeType":"YulFunctionCall","src":"57160:48:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"57145:6:26"},"nodeType":"YulFunctionCall","src":"57145:64:26"},"nodeType":"YulExpressionStatement","src":"57145:64:26"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"57050:7:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"57059:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"57047:2:26"},"nodeType":"YulFunctionCall","src":"57047:19:26"},"nodeType":"YulIf","src":"57044:179:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"57243:4:26"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"57257:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"57265:1:26","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"57253:3:26"},"nodeType":"YulFunctionCall","src":"57253:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"57269:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57249:3:26"},"nodeType":"YulFunctionCall","src":"57249:22:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"57236:6:26"},"nodeType":"YulFunctionCall","src":"57236:36:26"},"nodeType":"YulExpressionStatement","src":"57236:36:26"}]},"nodeType":"YulCase","src":"56664:618:26","value":{"kind":"number","nodeType":"YulLiteral","src":"56669:1:26","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"57299:222:26","statements":[{"nodeType":"YulVariableDeclaration","src":"57313:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"57326:1:26","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"57317:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"57350:67:26","statements":[{"nodeType":"YulAssignment","src":"57368:35:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"57387:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"57392:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57383:3:26"},"nodeType":"YulFunctionCall","src":"57383:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"57377:5:26"},"nodeType":"YulFunctionCall","src":"57377:26:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"57368:5:26"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"57343:6:26"},"nodeType":"YulIf","src":"57340:77:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"57437:4:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"57496:5:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"57503:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"57443:52:26"},"nodeType":"YulFunctionCall","src":"57443:67:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"57430:6:26"},"nodeType":"YulFunctionCall","src":"57430:81:26"},"nodeType":"YulExpressionStatement","src":"57430:81:26"}]},"nodeType":"YulCase","src":"57291:230:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"56644:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"56652:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"56641:2:26"},"nodeType":"YulFunctionCall","src":"56641:14:26"},"nodeType":"YulSwitch","src":"56634:887:26"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"56213:4:26","type":""},{"name":"src","nodeType":"YulTypedName","src":"56219:3:26","type":""}],"src":"56132:1395:26"},{"body":{"nodeType":"YulBlock","src":"57659:206:26","statements":[{"nodeType":"YulAssignment","src":"57669:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57681:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"57692:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57677:3:26"},"nodeType":"YulFunctionCall","src":"57677:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"57669:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"57749:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57762:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"57773:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57758:3:26"},"nodeType":"YulFunctionCall","src":"57758:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"57705:43:26"},"nodeType":"YulFunctionCall","src":"57705:71:26"},"nodeType":"YulExpressionStatement","src":"57705:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"57830:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57843:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"57854:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57839:3:26"},"nodeType":"YulFunctionCall","src":"57839:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"57786:43:26"},"nodeType":"YulFunctionCall","src":"57786:72:26"},"nodeType":"YulExpressionStatement","src":"57786:72:26"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"57623:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"57635:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"57643:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"57654:4:26","type":""}],"src":"57533:332:26"},{"body":{"nodeType":"YulBlock","src":"57977:60:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57999:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"58007:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57995:3:26"},"nodeType":"YulFunctionCall","src":"57995:14:26"},{"hexValue":"5061757361626c653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"58011:18:26","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"57988:6:26"},"nodeType":"YulFunctionCall","src":"57988:42:26"},"nodeType":"YulExpressionStatement","src":"57988:42:26"}]},"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"57969:6:26","type":""}],"src":"57871:166:26"},{"body":{"nodeType":"YulBlock","src":"58189:220:26","statements":[{"nodeType":"YulAssignment","src":"58199:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"58265:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"58270:2:26","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"58206:58:26"},"nodeType":"YulFunctionCall","src":"58206:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"58199:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"58371:3:26"}],"functionName":{"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulIdentifier","src":"58282:88:26"},"nodeType":"YulFunctionCall","src":"58282:93:26"},"nodeType":"YulExpressionStatement","src":"58282:93:26"},{"nodeType":"YulAssignment","src":"58384:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"58395:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"58400:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58391:3:26"},"nodeType":"YulFunctionCall","src":"58391:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"58384:3:26"}]}]},"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"58177:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"58185:3:26","type":""}],"src":"58043:366:26"},{"body":{"nodeType":"YulBlock","src":"58586:248:26","statements":[{"nodeType":"YulAssignment","src":"58596:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58608:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"58619:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58604:3:26"},"nodeType":"YulFunctionCall","src":"58604:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"58596:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58643:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"58654:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58639:3:26"},"nodeType":"YulFunctionCall","src":"58639:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"58662:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"58668:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"58658:3:26"},"nodeType":"YulFunctionCall","src":"58658:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"58632:6:26"},"nodeType":"YulFunctionCall","src":"58632:47:26"},"nodeType":"YulExpressionStatement","src":"58632:47:26"},{"nodeType":"YulAssignment","src":"58688:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"58822:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"58696:124:26"},"nodeType":"YulFunctionCall","src":"58696:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"58688:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"58566:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"58581:4:26","type":""}],"src":"58415:419:26"},{"body":{"nodeType":"YulBlock","src":"59018:367:26","statements":[{"nodeType":"YulAssignment","src":"59028:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59040:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"59051:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59036:3:26"},"nodeType":"YulFunctionCall","src":"59036:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"59028:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"59109:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59122:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"59133:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59118:3:26"},"nodeType":"YulFunctionCall","src":"59118:17:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"59065:43:26"},"nodeType":"YulFunctionCall","src":"59065:71:26"},"nodeType":"YulExpressionStatement","src":"59065:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"59186:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59199:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"59210:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59195:3:26"},"nodeType":"YulFunctionCall","src":"59195:18:26"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"59146:39:26"},"nodeType":"YulFunctionCall","src":"59146:68:26"},"nodeType":"YulExpressionStatement","src":"59146:68:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"59268:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59281:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"59292:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59277:3:26"},"nodeType":"YulFunctionCall","src":"59277:18:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"59224:43:26"},"nodeType":"YulFunctionCall","src":"59224:72:26"},"nodeType":"YulExpressionStatement","src":"59224:72:26"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"59350:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59363:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"59374:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59359:3:26"},"nodeType":"YulFunctionCall","src":"59359:18:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"59306:43:26"},"nodeType":"YulFunctionCall","src":"59306:72:26"},"nodeType":"YulExpressionStatement","src":"59306:72:26"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"58966:9:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"58978:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"58986:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"58994:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"59002:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"59013:4:26","type":""}],"src":"58840:545:26"},{"body":{"nodeType":"YulBlock","src":"59419:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"59436:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"59439:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"59429:6:26"},"nodeType":"YulFunctionCall","src":"59429:88:26"},"nodeType":"YulExpressionStatement","src":"59429:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"59533:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"59536:4:26","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"59526:6:26"},"nodeType":"YulFunctionCall","src":"59526:15:26"},"nodeType":"YulExpressionStatement","src":"59526:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"59557:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"59560:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"59550:6:26"},"nodeType":"YulFunctionCall","src":"59550:15:26"},"nodeType":"YulExpressionStatement","src":"59550:15:26"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"59391:180:26"},{"body":{"nodeType":"YulBlock","src":"59683:68:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"59705:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"59713:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59701:3:26"},"nodeType":"YulFunctionCall","src":"59701:14:26"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"59717:26:26","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"59694:6:26"},"nodeType":"YulFunctionCall","src":"59694:50:26"},"nodeType":"YulExpressionStatement","src":"59694:50:26"}]},"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"59675:6:26","type":""}],"src":"59577:174:26"},{"body":{"nodeType":"YulBlock","src":"59903:220:26","statements":[{"nodeType":"YulAssignment","src":"59913:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"59979:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"59984:2:26","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"59920:58:26"},"nodeType":"YulFunctionCall","src":"59920:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"59913:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"60085:3:26"}],"functionName":{"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulIdentifier","src":"59996:88:26"},"nodeType":"YulFunctionCall","src":"59996:93:26"},"nodeType":"YulExpressionStatement","src":"59996:93:26"},{"nodeType":"YulAssignment","src":"60098:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"60109:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"60114:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60105:3:26"},"nodeType":"YulFunctionCall","src":"60105:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"60098:3:26"}]}]},"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"59891:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"59899:3:26","type":""}],"src":"59757:366:26"},{"body":{"nodeType":"YulBlock","src":"60300:248:26","statements":[{"nodeType":"YulAssignment","src":"60310:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60322:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"60333:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60318:3:26"},"nodeType":"YulFunctionCall","src":"60318:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"60310:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60357:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"60368:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60353:3:26"},"nodeType":"YulFunctionCall","src":"60353:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"60376:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"60382:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"60372:3:26"},"nodeType":"YulFunctionCall","src":"60372:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"60346:6:26"},"nodeType":"YulFunctionCall","src":"60346:47:26"},"nodeType":"YulExpressionStatement","src":"60346:47:26"},{"nodeType":"YulAssignment","src":"60402:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"60536:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"60410:124:26"},"nodeType":"YulFunctionCall","src":"60410:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"60402:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"60280:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"60295:4:26","type":""}],"src":"60129:419:26"},{"body":{"nodeType":"YulBlock","src":"60660:75:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"60682:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"60690:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60678:3:26"},"nodeType":"YulFunctionCall","src":"60678:14:26"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"60694:33:26","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"60671:6:26"},"nodeType":"YulFunctionCall","src":"60671:57:26"},"nodeType":"YulExpressionStatement","src":"60671:57:26"}]},"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"60652:6:26","type":""}],"src":"60554:181:26"},{"body":{"nodeType":"YulBlock","src":"60887:220:26","statements":[{"nodeType":"YulAssignment","src":"60897:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"60963:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"60968:2:26","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"60904:58:26"},"nodeType":"YulFunctionCall","src":"60904:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"60897:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"61069:3:26"}],"functionName":{"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulIdentifier","src":"60980:88:26"},"nodeType":"YulFunctionCall","src":"60980:93:26"},"nodeType":"YulExpressionStatement","src":"60980:93:26"},{"nodeType":"YulAssignment","src":"61082:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"61093:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"61098:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61089:3:26"},"nodeType":"YulFunctionCall","src":"61089:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"61082:3:26"}]}]},"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"60875:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"60883:3:26","type":""}],"src":"60741:366:26"},{"body":{"nodeType":"YulBlock","src":"61284:248:26","statements":[{"nodeType":"YulAssignment","src":"61294:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61306:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"61317:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61302:3:26"},"nodeType":"YulFunctionCall","src":"61302:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"61294:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61341:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"61352:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61337:3:26"},"nodeType":"YulFunctionCall","src":"61337:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"61360:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"61366:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"61356:3:26"},"nodeType":"YulFunctionCall","src":"61356:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"61330:6:26"},"nodeType":"YulFunctionCall","src":"61330:47:26"},"nodeType":"YulExpressionStatement","src":"61330:47:26"},{"nodeType":"YulAssignment","src":"61386:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"61520:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"61394:124:26"},"nodeType":"YulFunctionCall","src":"61394:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"61386:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61264:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"61279:4:26","type":""}],"src":"61113:419:26"},{"body":{"nodeType":"YulBlock","src":"61644:115:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"61666:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"61674:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61662:3:26"},"nodeType":"YulFunctionCall","src":"61662:14:26"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"61678:34:26","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"61655:6:26"},"nodeType":"YulFunctionCall","src":"61655:58:26"},"nodeType":"YulExpressionStatement","src":"61655:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"61734:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"61742:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61730:3:26"},"nodeType":"YulFunctionCall","src":"61730:15:26"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"61747:4:26","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"61723:6:26"},"nodeType":"YulFunctionCall","src":"61723:29:26"},"nodeType":"YulExpressionStatement","src":"61723:29:26"}]},"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"61636:6:26","type":""}],"src":"61538:221:26"},{"body":{"nodeType":"YulBlock","src":"61911:220:26","statements":[{"nodeType":"YulAssignment","src":"61921:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"61987:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"61992:2:26","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"61928:58:26"},"nodeType":"YulFunctionCall","src":"61928:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"61921:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"62093:3:26"}],"functionName":{"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulIdentifier","src":"62004:88:26"},"nodeType":"YulFunctionCall","src":"62004:93:26"},"nodeType":"YulExpressionStatement","src":"62004:93:26"},{"nodeType":"YulAssignment","src":"62106:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"62117:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"62122:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62113:3:26"},"nodeType":"YulFunctionCall","src":"62113:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"62106:3:26"}]}]},"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"61899:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"61907:3:26","type":""}],"src":"61765:366:26"},{"body":{"nodeType":"YulBlock","src":"62308:248:26","statements":[{"nodeType":"YulAssignment","src":"62318:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"62330:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"62341:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62326:3:26"},"nodeType":"YulFunctionCall","src":"62326:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"62318:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"62365:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"62376:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62361:3:26"},"nodeType":"YulFunctionCall","src":"62361:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"62384:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"62390:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"62380:3:26"},"nodeType":"YulFunctionCall","src":"62380:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"62354:6:26"},"nodeType":"YulFunctionCall","src":"62354:47:26"},"nodeType":"YulExpressionStatement","src":"62354:47:26"},{"nodeType":"YulAssignment","src":"62410:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"62544:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"62418:124:26"},"nodeType":"YulFunctionCall","src":"62418:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"62410:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"62288:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"62303:4:26","type":""}],"src":"62137:419:26"},{"body":{"nodeType":"YulBlock","src":"62605:128:26","statements":[{"nodeType":"YulAssignment","src":"62615:33:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"62642:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"62624:17:26"},"nodeType":"YulFunctionCall","src":"62624:24:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"62615:5:26"}]},{"body":{"nodeType":"YulBlock","src":"62676:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"62678:16:26"},"nodeType":"YulFunctionCall","src":"62678:18:26"},"nodeType":"YulExpressionStatement","src":"62678:18:26"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"62663:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"62670:4:26","type":"","value":"0x00"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"62660:2:26"},"nodeType":"YulFunctionCall","src":"62660:15:26"},"nodeType":"YulIf","src":"62657:41:26"},{"nodeType":"YulAssignment","src":"62707:20:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"62718:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"62725:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"62714:3:26"},"nodeType":"YulFunctionCall","src":"62714:13:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"62707:3:26"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"62591:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"62601:3:26","type":""}],"src":"62562:171:26"},{"body":{"nodeType":"YulBlock","src":"62845:76:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"62867:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"62875:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62863:3:26"},"nodeType":"YulFunctionCall","src":"62863:14:26"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"62879:34:26","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"62856:6:26"},"nodeType":"YulFunctionCall","src":"62856:58:26"},"nodeType":"YulExpressionStatement","src":"62856:58:26"}]},"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"62837:6:26","type":""}],"src":"62739:182:26"},{"body":{"nodeType":"YulBlock","src":"63073:220:26","statements":[{"nodeType":"YulAssignment","src":"63083:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"63149:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"63154:2:26","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"63090:58:26"},"nodeType":"YulFunctionCall","src":"63090:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"63083:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"63255:3:26"}],"functionName":{"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulIdentifier","src":"63166:88:26"},"nodeType":"YulFunctionCall","src":"63166:93:26"},"nodeType":"YulExpressionStatement","src":"63166:93:26"},{"nodeType":"YulAssignment","src":"63268:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"63279:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"63284:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"63275:3:26"},"nodeType":"YulFunctionCall","src":"63275:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"63268:3:26"}]}]},"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"63061:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"63069:3:26","type":""}],"src":"62927:366:26"},{"body":{"nodeType":"YulBlock","src":"63470:248:26","statements":[{"nodeType":"YulAssignment","src":"63480:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"63492:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"63503:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"63488:3:26"},"nodeType":"YulFunctionCall","src":"63488:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"63480:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"63527:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"63538:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"63523:3:26"},"nodeType":"YulFunctionCall","src":"63523:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"63546:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"63552:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"63542:3:26"},"nodeType":"YulFunctionCall","src":"63542:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"63516:6:26"},"nodeType":"YulFunctionCall","src":"63516:47:26"},"nodeType":"YulExpressionStatement","src":"63516:47:26"},{"nodeType":"YulAssignment","src":"63572:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"63706:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"63580:124:26"},"nodeType":"YulFunctionCall","src":"63580:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"63572:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"63450:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"63465:4:26","type":""}],"src":"63299:419:26"},{"body":{"nodeType":"YulBlock","src":"63830:75:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"63852:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"63860:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"63848:3:26"},"nodeType":"YulFunctionCall","src":"63848:14:26"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"63864:33:26","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"63841:6:26"},"nodeType":"YulFunctionCall","src":"63841:57:26"},"nodeType":"YulExpressionStatement","src":"63841:57:26"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"63822:6:26","type":""}],"src":"63724:181:26"},{"body":{"nodeType":"YulBlock","src":"64057:220:26","statements":[{"nodeType":"YulAssignment","src":"64067:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"64133:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"64138:2:26","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"64074:58:26"},"nodeType":"YulFunctionCall","src":"64074:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"64067:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"64239:3:26"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"64150:88:26"},"nodeType":"YulFunctionCall","src":"64150:93:26"},"nodeType":"YulExpressionStatement","src":"64150:93:26"},{"nodeType":"YulAssignment","src":"64252:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"64263:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"64268:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64259:3:26"},"nodeType":"YulFunctionCall","src":"64259:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"64252:3:26"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"64045:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"64053:3:26","type":""}],"src":"63911:366:26"},{"body":{"nodeType":"YulBlock","src":"64454:248:26","statements":[{"nodeType":"YulAssignment","src":"64464:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"64476:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"64487:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64472:3:26"},"nodeType":"YulFunctionCall","src":"64472:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"64464:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"64511:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"64522:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64507:3:26"},"nodeType":"YulFunctionCall","src":"64507:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"64530:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"64536:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"64526:3:26"},"nodeType":"YulFunctionCall","src":"64526:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"64500:6:26"},"nodeType":"YulFunctionCall","src":"64500:47:26"},"nodeType":"YulExpressionStatement","src":"64500:47:26"},{"nodeType":"YulAssignment","src":"64556:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"64690:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"64564:124:26"},"nodeType":"YulFunctionCall","src":"64564:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"64556:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"64434:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"64449:4:26","type":""}],"src":"64283:419:26"},{"body":{"nodeType":"YulBlock","src":"64814:114:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"64836:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"64844:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64832:3:26"},"nodeType":"YulFunctionCall","src":"64832:14:26"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"64848:34:26","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"64825:6:26"},"nodeType":"YulFunctionCall","src":"64825:58:26"},"nodeType":"YulExpressionStatement","src":"64825:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"64904:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"64912:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64900:3:26"},"nodeType":"YulFunctionCall","src":"64900:15:26"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"64917:3:26","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"64893:6:26"},"nodeType":"YulFunctionCall","src":"64893:28:26"},"nodeType":"YulExpressionStatement","src":"64893:28:26"}]},"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"64806:6:26","type":""}],"src":"64708:220:26"},{"body":{"nodeType":"YulBlock","src":"65080:220:26","statements":[{"nodeType":"YulAssignment","src":"65090:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"65156:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"65161:2:26","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"65097:58:26"},"nodeType":"YulFunctionCall","src":"65097:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"65090:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"65262:3:26"}],"functionName":{"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulIdentifier","src":"65173:88:26"},"nodeType":"YulFunctionCall","src":"65173:93:26"},"nodeType":"YulExpressionStatement","src":"65173:93:26"},{"nodeType":"YulAssignment","src":"65275:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"65286:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"65291:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65282:3:26"},"nodeType":"YulFunctionCall","src":"65282:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"65275:3:26"}]}]},"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"65068:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"65076:3:26","type":""}],"src":"64934:366:26"},{"body":{"nodeType":"YulBlock","src":"65477:248:26","statements":[{"nodeType":"YulAssignment","src":"65487:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"65499:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"65510:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65495:3:26"},"nodeType":"YulFunctionCall","src":"65495:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"65487:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"65534:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"65545:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65530:3:26"},"nodeType":"YulFunctionCall","src":"65530:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"65553:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"65559:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"65549:3:26"},"nodeType":"YulFunctionCall","src":"65549:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"65523:6:26"},"nodeType":"YulFunctionCall","src":"65523:47:26"},"nodeType":"YulExpressionStatement","src":"65523:47:26"},{"nodeType":"YulAssignment","src":"65579:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"65713:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"65587:124:26"},"nodeType":"YulFunctionCall","src":"65587:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"65579:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"65457:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"65472:4:26","type":""}],"src":"65306:419:26"},{"body":{"nodeType":"YulBlock","src":"65837:115:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"65859:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"65867:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65855:3:26"},"nodeType":"YulFunctionCall","src":"65855:14:26"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"65871:34:26","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"65848:6:26"},"nodeType":"YulFunctionCall","src":"65848:58:26"},"nodeType":"YulExpressionStatement","src":"65848:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"65927:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"65935:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65923:3:26"},"nodeType":"YulFunctionCall","src":"65923:15:26"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"65940:4:26","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"65916:6:26"},"nodeType":"YulFunctionCall","src":"65916:29:26"},"nodeType":"YulExpressionStatement","src":"65916:29:26"}]},"name":"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"65829:6:26","type":""}],"src":"65731:221:26"},{"body":{"nodeType":"YulBlock","src":"66104:220:26","statements":[{"nodeType":"YulAssignment","src":"66114:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"66180:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"66185:2:26","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"66121:58:26"},"nodeType":"YulFunctionCall","src":"66121:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"66114:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"66286:3:26"}],"functionName":{"name":"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","nodeType":"YulIdentifier","src":"66197:88:26"},"nodeType":"YulFunctionCall","src":"66197:93:26"},"nodeType":"YulExpressionStatement","src":"66197:93:26"},{"nodeType":"YulAssignment","src":"66299:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"66310:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"66315:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"66306:3:26"},"nodeType":"YulFunctionCall","src":"66306:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"66299:3:26"}]}]},"name":"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"66092:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"66100:3:26","type":""}],"src":"65958:366:26"},{"body":{"nodeType":"YulBlock","src":"66501:248:26","statements":[{"nodeType":"YulAssignment","src":"66511:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"66523:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"66534:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"66519:3:26"},"nodeType":"YulFunctionCall","src":"66519:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"66511:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"66558:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"66569:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"66554:3:26"},"nodeType":"YulFunctionCall","src":"66554:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"66577:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"66583:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"66573:3:26"},"nodeType":"YulFunctionCall","src":"66573:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"66547:6:26"},"nodeType":"YulFunctionCall","src":"66547:47:26"},"nodeType":"YulExpressionStatement","src":"66547:47:26"},{"nodeType":"YulAssignment","src":"66603:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"66737:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"66611:124:26"},"nodeType":"YulFunctionCall","src":"66611:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"66603:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"66481:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"66496:4:26","type":""}],"src":"66330:419:26"},{"body":{"nodeType":"YulBlock","src":"66861:120:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"66883:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"66891:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"66879:3:26"},"nodeType":"YulFunctionCall","src":"66879:14:26"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032","kind":"string","nodeType":"YulLiteral","src":"66895:34:26","type":"","value":"SafeCast: value doesn't fit in 2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"66872:6:26"},"nodeType":"YulFunctionCall","src":"66872:58:26"},"nodeType":"YulExpressionStatement","src":"66872:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"66951:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"66959:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"66947:3:26"},"nodeType":"YulFunctionCall","src":"66947:15:26"},{"hexValue":"32342062697473","kind":"string","nodeType":"YulLiteral","src":"66964:9:26","type":"","value":"24 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"66940:6:26"},"nodeType":"YulFunctionCall","src":"66940:34:26"},"nodeType":"YulExpressionStatement","src":"66940:34:26"}]},"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"66853:6:26","type":""}],"src":"66755:226:26"},{"body":{"nodeType":"YulBlock","src":"67133:220:26","statements":[{"nodeType":"YulAssignment","src":"67143:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"67209:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"67214:2:26","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"67150:58:26"},"nodeType":"YulFunctionCall","src":"67150:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"67143:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"67315:3:26"}],"functionName":{"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulIdentifier","src":"67226:88:26"},"nodeType":"YulFunctionCall","src":"67226:93:26"},"nodeType":"YulExpressionStatement","src":"67226:93:26"},{"nodeType":"YulAssignment","src":"67328:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"67339:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"67344:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"67335:3:26"},"nodeType":"YulFunctionCall","src":"67335:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"67328:3:26"}]}]},"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"67121:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"67129:3:26","type":""}],"src":"66987:366:26"},{"body":{"nodeType":"YulBlock","src":"67530:248:26","statements":[{"nodeType":"YulAssignment","src":"67540:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"67552:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"67563:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"67548:3:26"},"nodeType":"YulFunctionCall","src":"67548:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"67540:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"67587:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"67598:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"67583:3:26"},"nodeType":"YulFunctionCall","src":"67583:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"67606:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"67612:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"67602:3:26"},"nodeType":"YulFunctionCall","src":"67602:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"67576:6:26"},"nodeType":"YulFunctionCall","src":"67576:47:26"},"nodeType":"YulExpressionStatement","src":"67576:47:26"},{"nodeType":"YulAssignment","src":"67632:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"67766:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"67640:124:26"},"nodeType":"YulFunctionCall","src":"67640:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"67632:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"67510:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"67525:4:26","type":""}],"src":"67359:419:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function cleanup_t_uint48(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffff)\n    }\n\n    function abi_encode_t_uint48_to_t_uint48_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint48(value))\n    }\n\n    function abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function cleanup_t_uint224(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint224_to_t_uint224(value, pos) {\n        mstore(pos, cleanup_t_uint224(value))\n    }\n\n    // struct ERC20VotesUpgradeable.Checkpoint -> struct ERC20VotesUpgradeable.Checkpoint\n    function abi_encode_t_struct$_Checkpoint_$1744_memory_ptr_to_t_struct$_Checkpoint_$1744_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // fromBlock\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // votes\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint224_to_t_uint224(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Checkpoint_$1744_memory_ptr__to_t_struct$_Checkpoint_$1744_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_Checkpoint_$1744_memory_ptr_to_t_struct$_Checkpoint_$1744_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: future lookup\")\n\n    }\n\n    function abi_encode_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token to be minted should not ex\")\n\n        mstore(add(memPtr, 32), \"ceed Max supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: broken clock mode\")\n\n    }\n\n    function abi_encode_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(memPtr, 32), \"dy initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn amount exceeds allow\")\n\n        mstore(add(memPtr, 32), \"ance\")\n\n    }\n\n    function abi_encode_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade(memPtr) {\n\n        mstore(add(memPtr, 0), \"EIP712: Uninitialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: signature expired\")\n\n    }\n\n    function abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: invalid nonce\")\n\n    }\n\n    function abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Permit: expired deadline\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Permit: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is not i\")\n\n        mstore(add(memPtr, 32), \"nitializing\")\n\n    }\n\n    function abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 3\")\n\n        mstore(add(memPtr, 32), \"2 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 4\")\n\n        mstore(add(memPtr, 32), \"8 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: total supply risks o\")\n\n        mstore(add(memPtr, 32), \"verflowing votes\")\n\n    }\n\n    function abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature length\")\n\n    }\n\n    function abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature 's' val\")\n\n        mstore(add(memPtr, 32), \"ue\")\n\n    }\n\n    function abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn amount exceeds balan\")\n\n        mstore(add(memPtr, 32), \"ce\")\n\n    }\n\n    function abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 2\")\n\n        mstore(add(memPtr, 32), \"24 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FCFFF45 GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x9AB24EB0 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x85 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x774 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x790 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x7AE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7CA JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x7FA JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x818 JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x6AA JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x6F8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x728 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x758 JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x84B0196E GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x66E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x68C JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x594 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x5B0 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5E0 JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x1DD JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0x4CD88B76 EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x516 JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x458 JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x224 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x3B4 JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2FC JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x420B JUMP JUMPDEST PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x4250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH2 0x8C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x43A0 JUMP JUMPDEST PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x4250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x4406 JUMP JUMPDEST PUSH2 0x97C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x4250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x346 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x4489 JUMP JUMPDEST PUSH2 0x9AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x44C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x376 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x44DC JUMP JUMPDEST PUSH2 0x9C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x380 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x4535 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39E PUSH2 0xA2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BC PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x44C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x44DC JUMP JUMPDEST PUSH2 0xA5A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x408 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x43A0 JUMP JUMPDEST PUSH2 0xADD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x4250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x438 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x43A0 JUMP JUMPDEST PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x456 PUSH2 0xBB4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x472 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x43A0 JUMP JUMPDEST PUSH2 0xC4D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x454E JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x498 PUSH2 0xDFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A5 SWAP2 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x46A5 JUMP JUMPDEST PUSH2 0xE89 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x471B JUMP JUMPDEST PUSH2 0x11FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0x4755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x514 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x471B JUMP JUMPDEST PUSH2 0x1262 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51E PUSH2 0x1276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52B SWAP2 SWAP1 PUSH2 0x4250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x549 SWAP2 SWAP1 PUSH2 0x471B JUMP JUMPDEST PUSH2 0x128C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55B SWAP2 SWAP1 PUSH2 0x478C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x579 SWAP2 SWAP1 PUSH2 0x471B JUMP JUMPDEST PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x43A0 JUMP JUMPDEST PUSH2 0x1324 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C5 SWAP2 SWAP1 PUSH2 0x471B JUMP JUMPDEST PUSH2 0x148E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E8 PUSH2 0x14DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F2 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x605 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x628 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x623 SWAP2 SWAP1 PUSH2 0x454E JUMP JUMPDEST PUSH2 0x166D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x635 SWAP2 SWAP1 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x658 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x653 SWAP2 SWAP1 PUSH2 0x44DC JUMP JUMPDEST PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x4250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x676 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x683 SWAP2 SWAP1 PUSH2 0x4938 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x694 PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A1 SWAP2 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6BF SWAP2 SWAP1 PUSH2 0x471B JUMP JUMPDEST PUSH2 0x17D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D1 SWAP2 SWAP1 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E2 PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6EF SWAP2 SWAP1 PUSH2 0x44C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x712 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x43A0 JUMP JUMPDEST PUSH2 0x18DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71F SWAP2 SWAP1 PUSH2 0x4250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x742 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x73D SWAP2 SWAP1 PUSH2 0x43A0 JUMP JUMPDEST PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x74F SWAP2 SWAP1 PUSH2 0x4250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x772 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76D SWAP2 SWAP1 PUSH2 0x497B JUMP JUMPDEST PUSH2 0x1972 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x789 SWAP2 SWAP1 PUSH2 0x4A04 JUMP JUMPDEST PUSH2 0x1A75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x798 PUSH2 0x1BB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0x44C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C3 SWAP2 SWAP1 PUSH2 0x44DC JUMP JUMPDEST PUSH2 0x1BD8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7DF SWAP2 SWAP1 PUSH2 0x4AA1 JUMP JUMPDEST PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F1 SWAP2 SWAP1 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x802 PUSH2 0x1C7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80F SWAP2 SWAP1 PUSH2 0x44C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x832 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82D SWAP2 SWAP1 PUSH2 0x4B09 JUMP JUMPDEST PUSH2 0x1C9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83F SWAP2 SWAP1 PUSH2 0x4BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x8BA JUMPI POP PUSH2 0x8B9 DUP3 PUSH2 0x1DA9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9A DUP1 SLOAD PUSH2 0x8D0 SWAP1 PUSH2 0x4BFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8FC SWAP1 PUSH2 0x4BFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x947 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x91E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x947 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x92A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x95B PUSH2 0x1E12 JUMP JUMPDEST SWAP1 POP PUSH2 0x968 DUP2 DUP6 DUP6 PUSH2 0x1E19 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x99 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x986 PUSH2 0x1E12 JUMP JUMPDEST SWAP1 POP PUSH2 0x993 DUP6 DUP3 DUP6 PUSH2 0x1FDC JUMP JUMPDEST PUSH2 0x99E DUP6 DUP6 DUP6 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x65 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9D0 DUP3 PUSH2 0x9AA JUMP JUMPDEST PUSH2 0x9D9 DUP2 PUSH2 0x22D6 JUMP JUMPDEST PUSH2 0x9E3 DUP4 DUP4 PUSH2 0x22EA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9FD PUSH8 0x6CEFFB00F5B8F424 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xA11 PUSH8 0x6F181A4C156B28DF PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xA25 PUSH8 0x2FD4B306738CE299 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x6 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0xA PUSH2 0xA3A SWAP2 SWAP1 PUSH2 0x4D8B JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH2 0xA49 SWAP2 SWAP1 PUSH2 0x4DD5 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xA55 PUSH2 0x23C8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA62 PUSH2 0x1E12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xACF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC6 SWAP1 PUSH2 0x4E86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAD9 DUP3 DUP3 PUSH2 0x23D6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAE7 PUSH2 0x1E12 JUMP JUMPDEST SWAP1 POP PUSH2 0xB08 DUP2 DUP6 DUP6 PUSH2 0xAF9 DUP6 DUP10 PUSH2 0x1BF9 JUMP JUMPDEST PUSH2 0xB03 SWAP2 SWAP1 PUSH2 0x4EA4 JUMP JUMPDEST PUSH2 0x1E19 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB1C PUSH2 0x1736 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP3 LT PUSH2 0xB65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5C SWAP1 PUSH2 0x4F21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBAC PUSH2 0x131 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 PUSH2 0x24B1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBC8 PUSH8 0x609999F02B3D32D5 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xBF2 DUP2 PUSH2 0x22D6 JUMP JUMPDEST PUSH2 0xC06 PUSH8 0xABE91030000D1AC0 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xC1A PUSH8 0xC59FE76821DD927A PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xC2E PUSH8 0xBC1DEE6FAFAC93DB PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xC42 PUSH8 0x159893534C8DE7E0 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xC4A PUSH2 0x25EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC61 PUSH8 0x7E144A1024E26768 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xC8B DUP2 PUSH2 0x22D6 JUMP JUMPDEST PUSH2 0xC9F PUSH8 0xE002F4A7F1138AE8 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xCB3 PUSH8 0x633C34D81D9C2E7A PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xCC7 PUSH8 0xC5F2D1228BC0D60D PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xCDB PUSH8 0xEF978FB6DA0FD805 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xCEF PUSH8 0x4FDAFA4B0CDDD4D3 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x6 PUSH1 0xA PUSH2 0xCFD SWAP2 SWAP1 PUSH2 0x4D8B JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH2 0xD0C SWAP2 SWAP1 PUSH2 0x4DD5 JUMP JUMPDEST DUP3 PUSH2 0xD15 PUSH2 0x973 JUMP JUMPDEST PUSH2 0xD1F SWAP2 SWAP1 PUSH2 0x4EA4 JUMP JUMPDEST GT ISZERO PUSH2 0xD60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD57 SWAP1 PUSH2 0x4FAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD74 PUSH8 0xD53C72CAD467E7BA PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xD88 PUSH8 0x344ED792E6FD2A14 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xD9C PUSH8 0x690192438DC80361 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xDA6 DUP4 DUP4 PUSH2 0x2650 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xDBF PUSH8 0x77E3700C135E6C4E PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xDD3 PUSH8 0xDABD11CCA3D2544D PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xDE7 PUSH8 0xC7F8AB0A5C0665D4 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xDF8 PUSH2 0xDF2 PUSH2 0x1E12 JUMP JUMPDEST DUP3 PUSH2 0x269A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 NUMBER PUSH2 0xE06 PUSH2 0x1736 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND EQ PUSH2 0xE4E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE45 SWAP1 PUSH2 0x5017 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE9D PUSH8 0x7D1353B017BD2ACB PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0xECC JUMPI POP PUSH1 0x1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0xEF8 JUMPI POP PUSH2 0xEDB ADDRESS PUSH2 0x26E4 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0xEF7 JUMPI POP PUSH1 0x1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0xF37 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2E SWAP1 PUSH2 0x50A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xF72 JUMPI PUSH1 0x1 PUSH0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xF86 PUSH8 0x807A5FAAB267DB3E PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xF9A PUSH8 0x1B87EC61CB2AF8FD PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xFAE PUSH8 0x75FB0FFFE85D5BA0 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xFC2 PUSH8 0x6E9287142FA2BF5D PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xFCC DUP4 DUP4 PUSH2 0x2706 JUMP JUMPDEST PUSH2 0xFE0 PUSH8 0x5362E89620D126DD PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xFF4 PUSH8 0xDC3081C3B05D8E28 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0xFFD DUP4 PUSH2 0x2762 JUMP JUMPDEST PUSH2 0x1011 PUSH8 0x535585D7B1C7D4BC PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1025 PUSH8 0x4B157AA2E3B72FBA PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x102D PUSH2 0x27F2 JUMP JUMPDEST PUSH2 0x1041 PUSH8 0xE7A7141161BEE42 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1055 PUSH8 0x54AEEB5A2D5CC814 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x105D PUSH2 0x284A JUMP JUMPDEST PUSH2 0x1071 PUSH8 0xC7EF261C6B52E840 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1085 PUSH8 0xED8BF8D8AA09F5A8 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1098 PUSH0 DUP1 SHL PUSH2 0x1093 PUSH2 0x1E12 JUMP JUMPDEST PUSH2 0x22EA JUMP JUMPDEST PUSH2 0x10AC PUSH8 0x9FEF610354934C36 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x10C0 PUSH8 0x5642366CAD1DF8B9 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x10F1 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x10EC PUSH2 0x1E12 JUMP JUMPDEST PUSH2 0x22EA JUMP JUMPDEST PUSH2 0x1105 PUSH8 0x631D5A374BCEF4DC PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1119 PUSH8 0x2508C509E3BC1EA6 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x114A PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x1145 PUSH2 0x1E12 JUMP JUMPDEST PUSH2 0x22EA JUMP JUMPDEST PUSH2 0x115E PUSH8 0xB2E403D7374D65AA PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1172 PUSH8 0x130D054C74F7230F PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x119F PUSH2 0x117D PUSH2 0x1E12 JUMP JUMPDEST PUSH1 0x6 PUSH1 0xA PUSH2 0x118B SWAP2 SWAP1 PUSH2 0x4D8B JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH2 0x119A SWAP2 SWAP1 PUSH2 0x4DD5 JUMP JUMPDEST PUSH2 0x2650 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11F7 JUMPI PUSH0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x11EE SWAP2 SWAP1 PUSH2 0x5105 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x130 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1273 PUSH2 0x126D PUSH2 0x1E12 JUMP JUMPDEST DUP3 PUSH2 0x289A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x162 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x12D7 PUSH2 0x131 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x29B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x97 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1338 PUSH8 0x607442F905452DAA PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x134C PUSH8 0x1395F68543AA27F4 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1360 PUSH8 0x827047D6B13681E PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH0 PUSH2 0x1372 DUP4 PUSH2 0x136D PUSH2 0x1E12 JUMP JUMPDEST PUSH2 0x1BF9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1388 PUSH8 0x44F3479EC179EF05 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x139C PUSH8 0xBC481ED37C3138B0 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x13B0 PUSH8 0x486FC6494B6C9788 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13EA SWAP1 PUSH2 0x518E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1407 PUSH8 0x8E6DE9144BD4DDF7 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x141B PUSH8 0x6E67C260954339A0 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x142F PUSH8 0x2E7C51116FBFE06F PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1443 PUSH8 0x2FA744005F173F63 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1457 DUP4 PUSH2 0x144F PUSH2 0x1E12 JUMP JUMPDEST DUP5 DUP5 SUB PUSH2 0x1E19 JUMP JUMPDEST PUSH2 0x146B PUSH8 0x1AF6EA53EE18C33F PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x147F PUSH8 0x79063F61DD074654 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1489 DUP4 DUP4 PUSH2 0x269A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14D4 PUSH1 0xFD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH2 0x2A02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14EF PUSH8 0xEBB165517487136F PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x1519 DUP2 PUSH2 0x22D6 JUMP JUMPDEST PUSH2 0x152C PUSH7 0x8ADAD4DE1C304A PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1540 PUSH8 0x5F719CAFD3ED6C93 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1554 PUSH8 0x3CBACA61587CAA0F PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1568 PUSH8 0xFE0EA4ED91E2D2C PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x1570 PUSH2 0x2A0E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH0 DUP1 SHL PUSH1 0xC9 SLOAD EQ DUP1 ISZERO PUSH2 0x1592 JUMPI POP PUSH0 DUP1 SHL PUSH1 0xCA SLOAD EQ JUMPDEST PUSH2 0x15D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C8 SWAP1 PUSH2 0x51F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15D9 PUSH2 0x2A71 JUMP JUMPDEST PUSH2 0x15E1 PUSH2 0x2B01 JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1600 JUMPI PUSH2 0x15FF PUSH2 0x4581 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x162E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH0 PUSH2 0x1676 PUSH2 0x1736 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP3 LT PUSH2 0x16BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B6 SWAP1 PUSH2 0x4F21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16CB PUSH2 0x132 DUP4 PUSH2 0x24B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x65 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1740 NUMBER PUSH2 0x2B91 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9B DUP1 SLOAD PUSH2 0x1754 SWAP1 PUSH2 0x4BFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1780 SWAP1 PUSH2 0x4BFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17CB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17A2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17CB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17AE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x131 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 DUP2 EQ PUSH2 0x18AD JUMPI PUSH2 0x131 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 DUP3 SUB DUP2 SLOAD DUP2 LT PUSH2 0x1875 JUMPI PUSH2 0x1874 PUSH2 0x5214 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18AF JUMP JUMPDEST PUSH0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x18E5 PUSH2 0x1E12 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x18F2 DUP3 DUP7 PUSH2 0x1BF9 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1937 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192E SWAP1 PUSH2 0x52B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1944 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1E19 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x195A PUSH2 0x1E12 JUMP JUMPDEST SWAP1 POP PUSH2 0x1967 DUP2 DUP6 DUP6 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x19B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19AC SWAP1 PUSH2 0x5319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1A16 PUSH2 0x1A0E PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x19F3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5337 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x2BE5 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x2BFE JUMP JUMPDEST SWAP1 POP PUSH2 0x1A21 DUP2 PUSH2 0x2C27 JUMP JUMPDEST DUP7 EQ PUSH2 0x1A62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A59 SWAP1 PUSH2 0x53C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A6C DUP2 DUP9 PUSH2 0x289A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x1AB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AAF SWAP1 PUSH2 0x542C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x1AE6 DUP13 PUSH2 0x2C27 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1AFC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x544A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x1B1E DUP3 PUSH2 0x2BE5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1B2D DUP3 DUP8 DUP8 DUP8 PUSH2 0x2BFE JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B94 SWAP1 PUSH2 0x54F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BA8 DUP11 DUP11 DUP11 PUSH2 0x1E19 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x1BE1 DUP3 PUSH2 0x9AA JUMP JUMPDEST PUSH2 0x1BEA DUP2 PUSH2 0x22D6 JUMP JUMPDEST PUSH2 0x1BF4 DUP4 DUP4 PUSH2 0x23D6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x98 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH2 0x1CA7 PUSH2 0x4169 JUMP JUMPDEST PUSH2 0x131 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1CFD JUMPI PUSH2 0x1CFC PUSH2 0x5214 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E7E SWAP1 PUSH2 0x5581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EEC SWAP1 PUSH2 0x560F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x98 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1FCF SWAP2 SWAP1 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FE7 DUP5 DUP5 PUSH2 0x1BF9 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x2061 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2053 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x204A SWAP1 PUSH2 0x5677 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2060 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20CC SWAP1 PUSH2 0x5705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2143 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213A SWAP1 PUSH2 0x5793 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x214E DUP4 DUP4 DUP4 PUSH2 0x2C82 JUMP JUMPDEST PUSH0 PUSH1 0x97 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x21D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21C9 SWAP1 PUSH2 0x5821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x97 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x97 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x22BD SWAP2 SWAP1 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x22D0 DUP5 DUP5 DUP5 PUSH2 0x2CFE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x22E7 DUP2 PUSH2 0x22E2 PUSH2 0x1E12 JUMP JUMPDEST PUSH2 0x2D4A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x22F4 DUP3 DUP3 PUSH2 0x16D2 JUMP JUMPDEST PUSH2 0x23C1 JUMPI PUSH1 0x1 PUSH1 0x65 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2366 PUSH2 0x1E12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x23D1 PUSH2 0x2DCE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x23E0 DUP3 DUP3 PUSH2 0x16D2 JUMP JUMPDEST ISZERO PUSH2 0x24AD JUMPI PUSH0 PUSH1 0x65 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2452 PUSH2 0x1E12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 DUP1 DUP3 SWAP1 POP PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x2522 JUMPI PUSH0 PUSH2 0x24D2 DUP5 PUSH2 0x2E31 JUMP JUMPDEST DUP5 PUSH2 0x24DD SWAP2 SWAP1 PUSH2 0x583F JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x24EA DUP9 DUP4 PUSH2 0x2F27 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x2510 JUMPI DUP1 SWAP2 POP PUSH2 0x2520 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x251D SWAP2 SWAP1 PUSH2 0x4EA4 JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x257F JUMPI PUSH0 PUSH2 0x2536 DUP4 DUP4 PUSH2 0x2F39 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x2543 DUP9 DUP4 PUSH2 0x2F27 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x2569 JUMPI DUP1 SWAP2 POP PUSH2 0x2579 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x2576 SWAP2 SWAP1 PUSH2 0x4EA4 JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x2523 JUMP JUMPDEST PUSH0 DUP2 EQ PUSH2 0x25C3 JUMPI PUSH2 0x2593 DUP7 PUSH1 0x1 DUP4 SUB PUSH2 0x2F27 JUMP JUMPDEST PUSH0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x25C5 JUMP JUMPDEST PUSH0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25F6 PUSH2 0x2F5E JUMP JUMPDEST PUSH0 PUSH2 0x162 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x2639 PUSH2 0x1E12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2646 SWAP2 SWAP1 PUSH2 0x4755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x2664 PUSH8 0x15060568254823A0 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x2678 PUSH8 0x8C6C359BBA103EDE PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x268C PUSH8 0x41EB3BCEE080785A PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x2696 DUP3 DUP3 PUSH2 0x2FA7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x26AE PUSH8 0x5F0ACF80EE14088E PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x26C2 PUSH8 0x657C1CDD7DD3EEF0 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x26D6 PUSH8 0xA2AE61BCF032AA41 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x26E0 DUP3 DUP3 PUSH2 0x3035 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2754 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x274B SWAP1 PUSH2 0x58E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x275E DUP3 DUP3 PUSH2 0x3054 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x27B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27A7 SWAP1 PUSH2 0x58E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27EF DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x30C6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2840 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2837 SWAP1 PUSH2 0x58E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2848 PUSH2 0x314A JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2898 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x288F SWAP1 PUSH2 0x58E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x28A4 DUP4 PUSH2 0x11FC JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x28B0 DUP5 PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x130 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x29AA DUP3 DUP5 DUP4 PUSH2 0x31B4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x29FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29F1 SWAP1 PUSH2 0x5970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A16 PUSH2 0x33A6 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x162 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2A5A PUSH2 0x1E12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A67 SWAP2 SWAP1 PUSH2 0x4755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xCB DUP1 SLOAD PUSH2 0x2A80 SWAP1 PUSH2 0x4BFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AAC SWAP1 PUSH2 0x4BFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AF7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2ACE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AF7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2ADA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xCC DUP1 SLOAD PUSH2 0x2B10 SWAP1 PUSH2 0x4BFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B3C SWAP1 PUSH2 0x4BFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B87 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B5E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B87 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B6A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH6 0xFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x2BDD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BD4 SWAP1 PUSH2 0x59FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2BF7 PUSH2 0x2BF1 PUSH2 0x23C8 JUMP JUMPDEST DUP4 PUSH2 0x33F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x2C0D DUP8 DUP8 DUP8 DUP8 PUSH2 0x3430 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x2C1A DUP2 PUSH2 0x3508 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x2C71 DUP2 PUSH2 0x2A02 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C7C DUP2 PUSH2 0x366D JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C96 PUSH8 0x444CC09B6123A024 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x2C9E PUSH2 0x33A6 JUMP JUMPDEST PUSH2 0x2CB2 PUSH8 0x62FF3D194FB103EC PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x2CC6 PUSH8 0x938A90D94264968D PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x2CDA PUSH8 0xD4B19E2BD3DDC3EA PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x2CEE PUSH8 0x34E741239A9F760C PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x2CF9 DUP4 DUP4 DUP4 PUSH2 0x3681 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2D12 PUSH8 0xBBEEE96DE4B55CF7 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x2D26 PUSH8 0x97E889CF08D5D19D PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x2D3A PUSH8 0x81F53F79B57312D3 PUSH1 0xC0 SHL PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x2D45 DUP4 DUP4 DUP4 PUSH2 0x3686 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2D54 DUP3 DUP3 PUSH2 0x16D2 JUMP JUMPDEST PUSH2 0x2DCA JUMPI PUSH2 0x2D61 DUP2 PUSH2 0x36B1 JUMP JUMPDEST PUSH2 0x2D6E DUP4 PUSH0 SHR PUSH1 0x20 PUSH2 0x36DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2D7F SWAP3 SWAP2 SWAP1 PUSH2 0x5AEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DC1 SWAP2 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x2DF8 PUSH2 0x3913 JUMP JUMPDEST PUSH2 0x2E00 PUSH2 0x397A JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2E16 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5B23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 DUP3 SUB PUSH2 0x2E41 JUMPI PUSH0 SWAP1 POP PUSH2 0x2F22 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0x2E4D DUP5 PUSH2 0x39E1 JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2E67 JUMPI PUSH2 0x2E66 PUSH2 0x5B74 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2E80 JUMPI PUSH2 0x2E7F PUSH2 0x5B74 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2E99 JUMPI PUSH2 0x2E98 PUSH2 0x5B74 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2EB2 JUMPI PUSH2 0x2EB1 PUSH2 0x5B74 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2ECB JUMPI PUSH2 0x2ECA PUSH2 0x5B74 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2EE4 JUMPI PUSH2 0x2EE3 PUSH2 0x5B74 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2EFD JUMPI PUSH2 0x2EFC PUSH2 0x5B74 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x2F1E DUP2 DUP3 DUP6 DUP2 PUSH2 0x2F18 JUMPI PUSH2 0x2F17 PUSH2 0x5B74 JUMP JUMPDEST JUMPDEST DIV PUSH2 0x3AB8 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 MSTORE DUP2 PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x2F49 SWAP2 SWAP1 PUSH2 0x5BA1 JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x2F56 SWAP2 SWAP1 PUSH2 0x4EA4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F66 PUSH2 0x1276 JUMP JUMPDEST PUSH2 0x2FA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F9C SWAP1 PUSH2 0x5C1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2FB1 DUP3 DUP3 PUSH2 0x3AD0 JUMP JUMPDEST PUSH2 0x2FB9 PUSH2 0x3C1F JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2FDF PUSH2 0x973 JUMP JUMPDEST GT ISZERO PUSH2 0x3020 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3017 SWAP1 PUSH2 0x5CA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x302F PUSH2 0x132 PUSH2 0x3C42 DUP4 PUSH2 0x3C57 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x303F DUP3 DUP3 PUSH2 0x3F20 JUMP JUMPDEST PUSH2 0x304E PUSH2 0x132 PUSH2 0x40E5 DUP4 PUSH2 0x3C57 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x30A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3099 SWAP1 PUSH2 0x58E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x9A SWAP1 DUP2 PUSH2 0x30B1 SWAP2 SWAP1 PUSH2 0x5E5B JUMP JUMPDEST POP DUP1 PUSH1 0x9B SWAP1 DUP2 PUSH2 0x30C1 SWAP2 SWAP1 PUSH2 0x5E5B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3114 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x310B SWAP1 PUSH2 0x58E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xCB SWAP1 DUP2 PUSH2 0x3123 SWAP2 SWAP1 PUSH2 0x5E5B JUMP JUMPDEST POP DUP1 PUSH1 0xCC SWAP1 DUP2 PUSH2 0x3133 SWAP2 SWAP1 PUSH2 0x5E5B JUMP JUMPDEST POP PUSH0 DUP1 SHL PUSH1 0xC9 DUP2 SWAP1 SSTORE POP PUSH0 DUP1 SHL PUSH1 0xCA DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3198 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x318F SWAP1 PUSH2 0x58E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x162 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x31EF JUMPI POP PUSH0 DUP2 GT JUMPDEST ISZERO PUSH2 0x33A1 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x32CA JUMPI PUSH0 DUP1 PUSH2 0x3273 PUSH2 0x131 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH2 0x40E5 DUP6 PUSH2 0x3C57 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x32BF SWAP3 SWAP2 SWAP1 PUSH2 0x5F2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x33A0 JUMPI PUSH0 DUP1 PUSH2 0x3349 PUSH2 0x131 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH2 0x3C42 DUP6 PUSH2 0x3C57 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x3395 SWAP3 SWAP2 SWAP1 PUSH2 0x5F2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x33AE PUSH2 0x1276 JUMP JUMPDEST ISZERO PUSH2 0x33EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E5 SWAP1 PUSH2 0x5F9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH0 SHR GT ISZERO PUSH2 0x3468 JUMPI PUSH0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x34FF JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x348B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5FB9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34AB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x34F7 JUMPI PUSH0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x34FF JUMP JUMPDEST DUP1 PUSH0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x351B JUMPI PUSH2 0x351A PUSH2 0x5FFC JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x352E JUMPI PUSH2 0x352D PUSH2 0x5FFC JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x366A JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3548 JUMPI PUSH2 0x3547 PUSH2 0x5FFC JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x355B JUMPI PUSH2 0x355A PUSH2 0x5FFC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x359B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3592 SWAP1 PUSH2 0x6073 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x35AF JUMPI PUSH2 0x35AE PUSH2 0x5FFC JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x35C2 JUMPI PUSH2 0x35C1 PUSH2 0x5FFC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x3602 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35F9 SWAP1 PUSH2 0x60DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3616 JUMPI PUSH2 0x3615 PUSH2 0x5FFC JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3629 JUMPI PUSH2 0x3628 PUSH2 0x5FFC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x3669 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3660 SWAP1 PUSH2 0x6169 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3691 DUP4 DUP4 DUP4 PUSH2 0x40FA JUMP JUMPDEST PUSH2 0x36AC PUSH2 0x369D DUP5 PUSH2 0x11FC JUMP JUMPDEST PUSH2 0x36A6 DUP5 PUSH2 0x11FC JUMP JUMPDEST DUP4 PUSH2 0x31B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x36D7 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x36DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x36F0 SWAP2 SWAP1 PUSH2 0x4DD5 JUMP JUMPDEST PUSH2 0x36FA SWAP2 SWAP1 PUSH2 0x4EA4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3713 JUMPI PUSH2 0x3712 PUSH2 0x4581 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3745 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x377C JUMPI PUSH2 0x377B PUSH2 0x5214 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x37DF JUMPI PUSH2 0x37DE PUSH2 0x5214 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x381D SWAP2 SWAP1 PUSH2 0x4DD5 JUMP JUMPDEST PUSH2 0x3827 SWAP2 SWAP1 PUSH2 0x4EA4 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x38C6 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x3869 JUMPI PUSH2 0x3868 PUSH2 0x5214 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3880 JUMPI PUSH2 0x387F PUSH2 0x5214 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x38BF SWAP1 PUSH2 0x6187 JUMP JUMPDEST SWAP1 POP PUSH2 0x382A JUMP JUMPDEST POP PUSH0 DUP5 EQ PUSH2 0x3909 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3900 SWAP1 PUSH2 0x61F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x391D PUSH2 0x2A71 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x3938 JUMPI DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP POP PUSH2 0x3977 JUMP JUMPDEST PUSH0 PUSH1 0xC9 SLOAD SWAP1 POP PUSH0 DUP1 SHL DUP2 EQ PUSH2 0x3951 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x3977 JUMP JUMPDEST PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3984 PUSH2 0x2B01 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x399F JUMPI DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP POP PUSH2 0x39DE JUMP JUMPDEST PUSH0 PUSH1 0xCA SLOAD SWAP1 POP PUSH0 DUP1 SHL DUP2 EQ PUSH2 0x39B8 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x39DE JUMP JUMPDEST PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3A00 JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x80 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3A1A JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3A34 JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3A4E JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3A68 JUMPI PUSH1 0x8 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x4 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3A82 JUMPI PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x2 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3A9C JUMPI PUSH1 0x2 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x1 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3AAF JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x3AC6 JUMPI DUP2 PUSH2 0x3AC8 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3B3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B35 SWAP1 PUSH2 0x6260 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3B49 PUSH0 DUP4 DUP4 PUSH2 0x2C82 JUMP JUMPDEST DUP1 PUSH1 0x99 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3B5A SWAP2 SWAP1 PUSH2 0x4EA4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x97 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3C08 SWAP2 SWAP1 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x3C1B PUSH0 DUP4 DUP4 PUSH2 0x2CFE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x3C4F SWAP2 SWAP1 PUSH2 0x4EA4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 DUP1 DUP3 EQ PUSH2 0x3D17 JUMPI PUSH2 0x3C76 DUP8 PUSH1 0x1 DUP5 SUB PUSH2 0x2F27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH2 0x3D86 DUP5 DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x3DAE JUMPI POP PUSH2 0x3D9A PUSH2 0x1736 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x3E1E JUMPI PUSH2 0x3DBC DUP4 PUSH2 0x40FF JUMP JUMPDEST PUSH2 0x3DC9 DUP9 PUSH1 0x1 DUP6 SUB PUSH2 0x2F27 JUMP JUMPDEST PUSH0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x3F16 JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x3E42 PUSH2 0x3E35 PUSH2 0x1736 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x29B0 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3E56 DUP7 PUSH2 0x40FF JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3F8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F85 SWAP1 PUSH2 0x62EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F99 DUP3 PUSH0 DUP4 PUSH2 0x2C82 JUMP JUMPDEST PUSH0 PUSH1 0x97 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x401D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4014 SWAP1 PUSH2 0x637C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x97 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x99 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x40CD SWAP2 SWAP1 PUSH2 0x43ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x40E0 DUP4 PUSH0 DUP5 PUSH2 0x2CFE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x40F2 SWAP2 SWAP1 PUSH2 0x583F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x4161 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4158 SWAP1 PUSH2 0x640A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x41EA DUP2 PUSH2 0x41B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x41F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4205 DUP2 PUSH2 0x41E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4220 JUMPI PUSH2 0x421F PUSH2 0x41AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x422D DUP5 DUP3 DUP6 ADD PUSH2 0x41F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x424A DUP2 PUSH2 0x4236 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4263 PUSH0 DUP4 ADD DUP5 PUSH2 0x4241 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x42A0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4285 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x42C5 DUP3 PUSH2 0x4269 JUMP JUMPDEST PUSH2 0x42CF DUP2 DUP6 PUSH2 0x4273 JUMP JUMPDEST SWAP4 POP PUSH2 0x42DF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4283 JUMP JUMPDEST PUSH2 0x42E8 DUP2 PUSH2 0x42AB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x430B DUP2 DUP5 PUSH2 0x42BB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x433C DUP3 PUSH2 0x4313 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x434C DUP2 PUSH2 0x4332 JUMP JUMPDEST DUP2 EQ PUSH2 0x4356 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4367 DUP2 PUSH2 0x4343 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x437F DUP2 PUSH2 0x436D JUMP JUMPDEST DUP2 EQ PUSH2 0x4389 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x439A DUP2 PUSH2 0x4376 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x43B6 JUMPI PUSH2 0x43B5 PUSH2 0x41AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x43C3 DUP6 DUP3 DUP7 ADD PUSH2 0x4359 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x43D4 DUP6 DUP3 DUP7 ADD PUSH2 0x438C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x43E7 DUP2 PUSH2 0x436D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4400 PUSH0 DUP4 ADD DUP5 PUSH2 0x43DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x441D JUMPI PUSH2 0x441C PUSH2 0x41AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x442A DUP7 DUP3 DUP8 ADD PUSH2 0x4359 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x443B DUP7 DUP3 DUP8 ADD PUSH2 0x4359 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x444C DUP7 DUP3 DUP8 ADD PUSH2 0x438C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4468 DUP2 PUSH2 0x4456 JUMP JUMPDEST DUP2 EQ PUSH2 0x4472 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4483 DUP2 PUSH2 0x445F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x449E JUMPI PUSH2 0x449D PUSH2 0x41AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x44AB DUP5 DUP3 DUP6 ADD PUSH2 0x4475 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x44BD DUP2 PUSH2 0x4456 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x44D6 PUSH0 DUP4 ADD DUP5 PUSH2 0x44B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x44F2 JUMPI PUSH2 0x44F1 PUSH2 0x41AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x44FF DUP6 DUP3 DUP7 ADD PUSH2 0x4475 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4510 DUP6 DUP3 DUP7 ADD PUSH2 0x4359 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x452F DUP2 PUSH2 0x451A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4548 PUSH0 DUP4 ADD DUP5 PUSH2 0x4526 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4563 JUMPI PUSH2 0x4562 PUSH2 0x41AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4570 DUP5 DUP3 DUP6 ADD PUSH2 0x438C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x45B7 DUP3 PUSH2 0x42AB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x45D6 JUMPI PUSH2 0x45D5 PUSH2 0x4581 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x45E8 PUSH2 0x41A5 JUMP JUMPDEST SWAP1 POP PUSH2 0x45F4 DUP3 DUP3 PUSH2 0x45AE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4613 JUMPI PUSH2 0x4612 PUSH2 0x4581 JUMP JUMPDEST JUMPDEST PUSH2 0x461C DUP3 PUSH2 0x42AB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4649 PUSH2 0x4644 DUP5 PUSH2 0x45F9 JUMP JUMPDEST PUSH2 0x45DF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4665 JUMPI PUSH2 0x4664 PUSH2 0x457D JUMP JUMPDEST JUMPDEST PUSH2 0x4670 DUP5 DUP3 DUP6 PUSH2 0x4629 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x468C JUMPI PUSH2 0x468B PUSH2 0x4579 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x469C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4637 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x46BB JUMPI PUSH2 0x46BA PUSH2 0x41AE JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x46D8 JUMPI PUSH2 0x46D7 PUSH2 0x41B2 JUMP JUMPDEST JUMPDEST PUSH2 0x46E4 DUP6 DUP3 DUP7 ADD PUSH2 0x4678 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4705 JUMPI PUSH2 0x4704 PUSH2 0x41B2 JUMP JUMPDEST JUMPDEST PUSH2 0x4711 DUP6 DUP3 DUP7 ADD PUSH2 0x4678 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4730 JUMPI PUSH2 0x472F PUSH2 0x41AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x473D DUP5 DUP3 DUP6 ADD PUSH2 0x4359 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x474F DUP2 PUSH2 0x4332 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4768 PUSH0 DUP4 ADD DUP5 PUSH2 0x4746 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4786 DUP2 PUSH2 0x476E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x479F PUSH0 DUP4 ADD DUP5 PUSH2 0x477D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x47D9 DUP2 PUSH2 0x47A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4811 DUP2 PUSH2 0x436D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4822 DUP4 DUP4 PUSH2 0x4808 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4844 DUP3 PUSH2 0x47DF JUMP JUMPDEST PUSH2 0x484E DUP2 DUP6 PUSH2 0x47E9 JUMP JUMPDEST SWAP4 POP PUSH2 0x4859 DUP4 PUSH2 0x47F9 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4889 JUMPI DUP2 MLOAD PUSH2 0x4870 DUP9 DUP3 PUSH2 0x4817 JUMP JUMPDEST SWAP8 POP PUSH2 0x487B DUP4 PUSH2 0x482E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x485C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x48A9 PUSH0 DUP4 ADD DUP11 PUSH2 0x47D0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x48BB DUP2 DUP10 PUSH2 0x42BB JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x48CF DUP2 DUP9 PUSH2 0x42BB JUMP JUMPDEST SWAP1 POP PUSH2 0x48DE PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x43DE JUMP JUMPDEST PUSH2 0x48EB PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x4746 JUMP JUMPDEST PUSH2 0x48F8 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x44B4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x490A DUP2 DUP5 PUSH2 0x483A JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4932 DUP2 PUSH2 0x4918 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x494B PUSH0 DUP4 ADD DUP5 PUSH2 0x4929 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x495A DUP2 PUSH2 0x451A JUMP JUMPDEST DUP2 EQ PUSH2 0x4964 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4975 DUP2 PUSH2 0x4951 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x4995 JUMPI PUSH2 0x4994 PUSH2 0x41AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x49A2 DUP10 DUP3 DUP11 ADD PUSH2 0x4359 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x49B3 DUP10 DUP3 DUP11 ADD PUSH2 0x438C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x49C4 DUP10 DUP3 DUP11 ADD PUSH2 0x438C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x49D5 DUP10 DUP3 DUP11 ADD PUSH2 0x4967 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x49E6 DUP10 DUP3 DUP11 ADD PUSH2 0x4475 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x49F7 DUP10 DUP3 DUP11 ADD PUSH2 0x4475 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x4A1F JUMPI PUSH2 0x4A1E PUSH2 0x41AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4A2C DUP11 DUP3 DUP12 ADD PUSH2 0x4359 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x4A3D DUP11 DUP3 DUP12 ADD PUSH2 0x4359 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x4A4E DUP11 DUP3 DUP12 ADD PUSH2 0x438C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x4A5F DUP11 DUP3 DUP12 ADD PUSH2 0x438C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x4A70 DUP11 DUP3 DUP12 ADD PUSH2 0x4967 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x4A81 DUP11 DUP3 DUP12 ADD PUSH2 0x4475 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x4A92 DUP11 DUP3 DUP12 ADD PUSH2 0x4475 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4AB7 JUMPI PUSH2 0x4AB6 PUSH2 0x41AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4AC4 DUP6 DUP3 DUP7 ADD PUSH2 0x4359 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4AD5 DUP6 DUP3 DUP7 ADD PUSH2 0x4359 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x4AE8 DUP2 PUSH2 0x476E JUMP JUMPDEST DUP2 EQ PUSH2 0x4AF2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4B03 DUP2 PUSH2 0x4ADF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B1F JUMPI PUSH2 0x4B1E PUSH2 0x41AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4B2C DUP6 DUP3 DUP7 ADD PUSH2 0x4359 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4B3D DUP6 DUP3 DUP7 ADD PUSH2 0x4AF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B50 DUP2 PUSH2 0x476E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B86 DUP2 PUSH2 0x4B56 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x4BA0 PUSH0 DUP6 ADD DUP3 PUSH2 0x4B47 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x4BB3 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x4B7D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4BCC PUSH0 DUP4 ADD DUP5 PUSH2 0x4B8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4C16 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4C29 JUMPI PUSH2 0x4C28 PUSH2 0x4BD2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x4CB1 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x4C8D JUMPI PUSH2 0x4C8C PUSH2 0x4C2F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x4C9C JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x4CAA DUP6 PUSH2 0x4C5C JUMP JUMPDEST SWAP5 POP PUSH2 0x4C71 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x4CC9 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x4D84 JUMP JUMPDEST DUP2 PUSH2 0x4CD6 JUMPI PUSH0 SWAP1 POP PUSH2 0x4D84 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x4CEC JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x4CF6 JUMPI PUSH2 0x4D25 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x4D84 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x4D08 JUMPI PUSH2 0x4D07 PUSH2 0x4C2F JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x4D1F JUMPI PUSH2 0x4D1E PUSH2 0x4C2F JUMP JUMPDEST JUMPDEST POP PUSH2 0x4D84 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x4D5A JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x4D55 JUMPI PUSH2 0x4D54 PUSH2 0x4C2F JUMP JUMPDEST JUMPDEST PUSH2 0x4D84 JUMP JUMPDEST PUSH2 0x4D67 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x4C68 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x4D7E JUMPI PUSH2 0x4D7D PUSH2 0x4C2F JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4D95 DUP3 PUSH2 0x436D JUMP JUMPDEST SWAP2 POP PUSH2 0x4DA0 DUP4 PUSH2 0x436D JUMP JUMPDEST SWAP3 POP PUSH2 0x4DCD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x4CBA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4DDF DUP3 PUSH2 0x436D JUMP JUMPDEST SWAP2 POP PUSH2 0x4DEA DUP4 PUSH2 0x436D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x4DF8 DUP2 PUSH2 0x436D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x4E0F JUMPI PUSH2 0x4E0E PUSH2 0x4C2F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4E70 PUSH1 0x2F DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E7B DUP3 PUSH2 0x4E16 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4E9D DUP2 PUSH2 0x4E64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4EAE DUP3 PUSH2 0x436D JUMP JUMPDEST SWAP2 POP PUSH2 0x4EB9 DUP4 PUSH2 0x436D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4ED1 JUMPI PUSH2 0x4ED0 PUSH2 0x4C2F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20667574757265206C6F6F6B757000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4F0B PUSH1 0x19 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F16 DUP3 PUSH2 0x4ED7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4F38 DUP2 PUSH2 0x4EFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20746F206265206D696E7465642073686F756C64206E6F74206578 PUSH0 DUP3 ADD MSTORE PUSH32 0x63656564204D617820737570706C790000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4F99 PUSH1 0x2F DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FA4 DUP3 PUSH2 0x4F3F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4FC6 DUP2 PUSH2 0x4F8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A2062726F6B656E20636C6F636B206D6F6465000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5001 PUSH1 0x1D DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x500C DUP3 PUSH2 0x4FCD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x502E DUP2 PUSH2 0x4FF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x508F PUSH1 0x2E DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x509A DUP3 PUSH2 0x5035 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x50BC DUP2 PUSH2 0x5083 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x50EF PUSH2 0x50EA PUSH2 0x50E5 DUP5 PUSH2 0x50C3 JUMP JUMPDEST PUSH2 0x50CC JUMP JUMPDEST PUSH2 0x451A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50FF DUP2 PUSH2 0x50D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5118 PUSH0 DUP4 ADD DUP5 PUSH2 0x50F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E74206578636565647320616C6C6F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x616E636500000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5178 PUSH1 0x24 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x5183 DUP3 PUSH2 0x511E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x51A5 DUP2 PUSH2 0x516C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4549503731323A20556E696E697469616C697A65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x51E0 PUSH1 0x15 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x51EB DUP3 PUSH2 0x51AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x520D DUP2 PUSH2 0x51D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x529B PUSH1 0x25 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x52A6 DUP3 PUSH2 0x5241 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x52C8 DUP2 PUSH2 0x528F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A207369676E61747572652065787069726564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5303 PUSH1 0x1D DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x530E DUP3 PUSH2 0x52CF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5330 DUP2 PUSH2 0x52F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x534A PUSH0 DUP4 ADD DUP8 PUSH2 0x44B4 JUMP JUMPDEST PUSH2 0x5357 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4746 JUMP JUMPDEST PUSH2 0x5364 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x43DE JUMP JUMPDEST PUSH2 0x5371 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x43DE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20696E76616C6964206E6F6E636500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x53AE PUSH1 0x19 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x53B9 DUP3 PUSH2 0x537A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x53DB DUP2 PUSH2 0x53A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5416 PUSH1 0x1D DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x5421 DUP3 PUSH2 0x53E2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5443 DUP2 PUSH2 0x540A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x545D PUSH0 DUP4 ADD DUP10 PUSH2 0x44B4 JUMP JUMPDEST PUSH2 0x546A PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x4746 JUMP JUMPDEST PUSH2 0x5477 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x4746 JUMP JUMPDEST PUSH2 0x5484 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x43DE JUMP JUMPDEST PUSH2 0x5491 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x43DE JUMP JUMPDEST PUSH2 0x549E PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x43DE JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x54DD PUSH1 0x1E DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x54E8 DUP3 PUSH2 0x54A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x550A DUP2 PUSH2 0x54D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x556B PUSH1 0x24 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x5576 DUP3 PUSH2 0x5511 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5598 DUP2 PUSH2 0x555F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x55F9 PUSH1 0x22 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x5604 DUP3 PUSH2 0x559F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5626 DUP2 PUSH2 0x55ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5661 PUSH1 0x1D DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x566C DUP3 PUSH2 0x562D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x568E DUP2 PUSH2 0x5655 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x56EF PUSH1 0x25 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x56FA DUP3 PUSH2 0x5695 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x571C DUP2 PUSH2 0x56E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x577D PUSH1 0x23 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x5788 DUP3 PUSH2 0x5723 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x57AA DUP2 PUSH2 0x5771 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x580B PUSH1 0x26 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x5816 DUP3 PUSH2 0x57B1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5838 DUP2 PUSH2 0x57FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5849 DUP3 PUSH2 0x436D JUMP JUMPDEST SWAP2 POP PUSH2 0x5854 DUP4 PUSH2 0x436D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x586C JUMPI PUSH2 0x586B PUSH2 0x4C2F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x58CC PUSH1 0x2B DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x58D7 DUP3 PUSH2 0x5872 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x58F9 DUP2 PUSH2 0x58C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x595A PUSH1 0x26 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x5965 DUP3 PUSH2 0x5900 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5987 DUP2 PUSH2 0x594E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2034 PUSH0 DUP3 ADD MSTORE PUSH32 0x3820626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x59E8 PUSH1 0x26 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x59F3 DUP3 PUSH2 0x598E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5A15 DUP2 PUSH2 0x59DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5A5A PUSH1 0x17 DUP4 PUSH2 0x5A1C JUMP JUMPDEST SWAP2 POP PUSH2 0x5A65 DUP3 PUSH2 0x5A26 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5A7A DUP3 PUSH2 0x4269 JUMP JUMPDEST PUSH2 0x5A84 DUP2 DUP6 PUSH2 0x5A1C JUMP JUMPDEST SWAP4 POP PUSH2 0x5A94 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4283 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5AD4 PUSH1 0x11 DUP4 PUSH2 0x5A1C JUMP JUMPDEST SWAP2 POP PUSH2 0x5ADF DUP3 PUSH2 0x5AA0 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5AF4 DUP3 PUSH2 0x5A4E JUMP JUMPDEST SWAP2 POP PUSH2 0x5B00 DUP3 DUP6 PUSH2 0x5A70 JUMP JUMPDEST SWAP2 POP PUSH2 0x5B0B DUP3 PUSH2 0x5AC8 JUMP JUMPDEST SWAP2 POP PUSH2 0x5B17 DUP3 DUP5 PUSH2 0x5A70 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x5B36 PUSH0 DUP4 ADD DUP9 PUSH2 0x44B4 JUMP JUMPDEST PUSH2 0x5B43 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x44B4 JUMP JUMPDEST PUSH2 0x5B50 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x44B4 JUMP JUMPDEST PUSH2 0x5B5D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x43DE JUMP JUMPDEST PUSH2 0x5B6A PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x4746 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x5BAB DUP3 PUSH2 0x436D JUMP JUMPDEST SWAP2 POP PUSH2 0x5BB6 DUP4 PUSH2 0x436D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x5BC6 JUMPI PUSH2 0x5BC5 PUSH2 0x5B74 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5C05 PUSH1 0x14 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x5C10 DUP3 PUSH2 0x5BD1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5C32 DUP2 PUSH2 0x5BF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH0 DUP3 ADD MSTORE PUSH32 0x766572666C6F77696E6720766F74657300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5C93 PUSH1 0x30 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x5C9E DUP3 PUSH2 0x5C39 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5CC0 DUP2 PUSH2 0x5C87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x5D23 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x5CE8 JUMP JUMPDEST PUSH2 0x5D2D DUP7 DUP4 PUSH2 0x5CE8 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5D5F PUSH2 0x5D5A PUSH2 0x5D55 DUP5 PUSH2 0x436D JUMP JUMPDEST PUSH2 0x50CC JUMP JUMPDEST PUSH2 0x436D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D78 DUP4 PUSH2 0x5D45 JUMP JUMPDEST PUSH2 0x5D8C PUSH2 0x5D84 DUP3 PUSH2 0x5D66 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5CF4 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x5DA0 PUSH2 0x5D94 JUMP JUMPDEST PUSH2 0x5DAB DUP2 DUP5 DUP5 PUSH2 0x5D6F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5DCE JUMPI PUSH2 0x5DC3 PUSH0 DUP3 PUSH2 0x5D98 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5DB1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5E13 JUMPI PUSH2 0x5DE4 DUP2 PUSH2 0x5CC7 JUMP JUMPDEST PUSH2 0x5DED DUP5 PUSH2 0x5CD9 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x5DFC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x5E10 PUSH2 0x5E08 DUP6 PUSH2 0x5CD9 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x5DB0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5E33 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x5E18 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5E4B DUP4 DUP4 PUSH2 0x5E24 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5E64 DUP3 PUSH2 0x4269 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5E7D JUMPI PUSH2 0x5E7C PUSH2 0x4581 JUMP JUMPDEST JUMPDEST PUSH2 0x5E87 DUP3 SLOAD PUSH2 0x4BFF JUMP JUMPDEST PUSH2 0x5E92 DUP3 DUP3 DUP6 PUSH2 0x5DD2 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5EC3 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x5EB1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x5EBB DUP6 DUP3 PUSH2 0x5E40 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x5F22 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x5ED1 DUP7 PUSH2 0x5CC7 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5EF8 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5ED3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x5F15 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x5F11 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x5E24 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5F3D PUSH0 DUP4 ADD DUP6 PUSH2 0x43DE JUMP JUMPDEST PUSH2 0x5F4A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x43DE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5F85 PUSH1 0x10 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x5F90 DUP3 PUSH2 0x5F51 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5FB2 DUP2 PUSH2 0x5F79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x5FCC PUSH0 DUP4 ADD DUP8 PUSH2 0x44B4 JUMP JUMPDEST PUSH2 0x5FD9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4526 JUMP JUMPDEST PUSH2 0x5FE6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x44B4 JUMP JUMPDEST PUSH2 0x5FF3 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x44B4 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x605D PUSH1 0x18 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x6068 DUP3 PUSH2 0x6029 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x608A DUP2 PUSH2 0x6051 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x60C5 PUSH1 0x1F DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x60D0 DUP3 PUSH2 0x6091 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x60F2 DUP2 PUSH2 0x60B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x6153 PUSH1 0x22 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x615E DUP3 PUSH2 0x60F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6180 DUP2 PUSH2 0x6147 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6191 DUP3 PUSH2 0x436D JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x61A3 JUMPI PUSH2 0x61A2 PUSH2 0x4C2F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x61E2 PUSH1 0x20 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x61ED DUP3 PUSH2 0x61AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x620F DUP2 PUSH2 0x61D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x624A PUSH1 0x1F DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x6255 DUP3 PUSH2 0x6216 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6277 DUP2 PUSH2 0x623E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x62D8 PUSH1 0x21 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x62E3 DUP3 PUSH2 0x627E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6305 DUP2 PUSH2 0x62CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x6366 PUSH1 0x22 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x6371 DUP3 PUSH2 0x630C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6393 DUP2 PUSH2 0x635A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x63F4 PUSH1 0x27 DUP4 PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP PUSH2 0x63FF DUP3 PUSH2 0x639A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6421 DUP2 PUSH2 0x63E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xFF06046C08D0CD853C758C631FA806BB26088007 0xB1 0x23 PUSH6 0x805C4921E936 SWAP12 PUSH7 0x64736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"948:8997:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3029:213:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2495:98:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4781:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3592:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5540:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4834:129:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5259:145;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7543:223:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2457:61;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3264:113:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6368:214:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6191:234:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3785:248:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7086::25;;;:::i;:::-;;4236:659;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4905:246;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2355:254:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2875:1274:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3157:126:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6616:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1858:84:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2909:160:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3756:125:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5456:920:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3014:126:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6609:244:25;;;:::i;:::-;;4500:861:19;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;4295:239:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3329:145:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2114:129:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2706:102:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3362:243:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2450:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6912:427:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4077:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6805:585:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2316:637:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2358:62:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5684:147:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4324:149:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2225:62:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2686:148:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3029:213:0;3114:4;3152:43;3137:58;;;:11;:58;;;;:98;;;;3199:36;3223:11;3199:23;:36::i;:::-;3137:98;3130:105;;3029:213;;;:::o;2495:98:8:-;2549:13;2581:5;2574:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2495:98;:::o;4781:197::-;4864:4;4880:13;4896:12;:10;:12::i;:::-;4880:28;;4918:32;4927:5;4934:7;4943:6;4918:8;:32::i;:::-;4967:4;4960:11;;;4781:197;;;;:::o;3592:106::-;3653:7;3679:12;;3672:19;;3592:106;:::o;5540:256::-;5637:4;5653:15;5671:12;:10;:12::i;:::-;5653:30;;5693:38;5709:4;5715:7;5724:6;5693:15;:38::i;:::-;5741:27;5751:4;5757:2;5761:6;5741:9;:27::i;:::-;5785:4;5778:11;;;5540:256;;;;;:::o;4834:129:0:-;4908:7;4934:6;:12;4941:4;4934:12;;;;;;;;;;;:22;;;4927:29;;4834:129;;;:::o;5259:145::-;5342:18;5355:4;5342:12;:18::i;:::-;2928:16;2939:4;2928:10;:16::i;:::-;5372:25:::1;5383:4;5389:7;5372:10;:25::i;:::-;5259:145:::0;;;:::o;7543:223:25:-;7593:5;7601:30;7612:18;7601:30;;:10;:30::i;:::-;7650;7661:18;7650:30;;:10;:30::i;:::-;7702;7713:18;7702:30;;:10;:30::i;:::-;7758:1;7751:8;;7543:223;:::o;2457:61::-;2516:1;2507:2;:11;;;;:::i;:::-;2494:10;:24;;;;:::i;:::-;2457:61;:::o;3264:113:10:-;3324:7;3350:20;:18;:20::i;:::-;3343:27;;3264:113;:::o;6368:214:0:-;6474:12;:10;:12::i;:::-;6463:23;;:7;:23;;;6455:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6549:26;6561:4;6567:7;6549:11;:26::i;:::-;6368:214;;:::o;6191:234:8:-;6279:4;6295:13;6311:12;:10;:12::i;:::-;6295:28;;6333:64;6342:5;6349:7;6386:10;6358:25;6368:5;6375:7;6358:9;:25::i;:::-;:38;;;;:::i;:::-;6333:8;:64::i;:::-;6414:4;6407:11;;;6191:234;;;;:::o;3785:248:11:-;3881:7;3920;:5;:7::i;:::-;3908:19;;:9;:19;3900:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3974:52;3993:12;:21;4006:7;3993:21;;;;;;;;;;;;;;;4016:9;3974:18;:52::i;:::-;3967:59;;3785:248;;;;:::o;7086::25:-;1600:30;1611:18;1600:30;;:10;:30::i;:::-;2263:24:::1;2928:16:0;2939:4;2928:10;:16::i;:::-;1517:30:25::2;1528:18;1517:30;;:10;:30::i;:::-;7167::::3;7178:18;7167:30;;:10;:30::i;:::-;7216;7227:18;7216:30;;:10;:30::i;:::-;7268;7279:18;7268:30;;:10;:30::i;:::-;7317:10;:8;:10::i;:::-;1653:1:::1;7086:248::o:0;4236:659::-;1930:30;1941:18;1930:30;;:10;:30::i;:::-;2396:24:::1;2928:16:0;2939:4;2928:10;:16::i;:::-;1847:30:25::2;1858:18;1847:30;;:10;:30::i;:::-;4386::::3;4397:18;4386:30;;:10;:30::i;:::-;4435;4446:18;4435:30;;:10;:30::i;:::-;4487;4498:18;4487:30;;:10;:30::i;:::-;4537;4548:18;4537:30;;:10;:30::i;:::-;2516:1;2507:2;:11;;;;:::i;:::-;2494:10;:24;;;;:::i;:::-;4623:6;4607:13;:11;:13::i;:::-;:22;;;;:::i;:::-;:36;;4586:130;;;;;;;;;;;;:::i;:::-;;;;;;;;;4717:30;4728:18;4717:30;;:10;:30::i;:::-;4770;4781:18;4770:30;;:10;:30::i;:::-;4822;4833:18;4822:30;;:10;:30::i;:::-;4871:17;4877:2;4881:6;4871:5;:17::i;:::-;1983:1:::1;4236:659:::0;;:::o;4905:246::-;4967:30;4978:18;4967:30;;:10;:30::i;:::-;5016;5027:18;5016:30;;:10;:30::i;:::-;5068;5079:18;5068:30;;:10;:30::i;:::-;5117:27;5123:12;:10;:12::i;:::-;5137:6;5117:5;:27::i;:::-;4905:246;:::o;2355:254:11:-;2415:13;2508:12;2497:7;:5;:7::i;:::-;:23;;;2489:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;2564:38;;;;;;;;;;;;;;;;;;;2355:254;:::o;2875:1274:25:-;2095:30;2106:18;2095:30;;:10;:30::i;:::-;3279:19:6::1;3302:13:::0;::::1;;;;;;;;;;3301:14;3279:36;;3347:14;:34;;;;;3380:1;3365:12;::::0;::::1;;;;;;;;:16;;;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;;3452:1;3436:12;::::0;::::1;;;;;;;;:17;;;3387:66;3346:108;3325:201;;;;;;;;;;;;:::i;:::-;;;;;;;;;3551:1;3536:12;::::0;:16:::1;;;;;;;;;;;;;;;;;;3566:14;3562:65;;;3612:4;3596:13;;:20;;;;;;;;;;;;;;;;;;3562:65;2012:30:25::2;2023:18;2012:30;;:10;:30::i;:::-;3032::::3;3043:18;3032:30;;:10;:30::i;:::-;3081;3092:18;3081:30;;:10;:30::i;:::-;3133;3144:18;3133:30;;:10;:30::i;:::-;3182:26;3195:4;3201:6;3182:12;:26::i;:::-;3210:30;3221:18;3210:30;;:10;:30::i;:::-;3262;3273:18;3262:30;;:10;:30::i;:::-;3311:24;3330:4;3311:18;:24::i;:::-;3337:30;3348:18;3337:30;;:10;:30::i;:::-;3389;3400:18;3389:30;;:10;:30::i;:::-;3438:17;:15;:17::i;:::-;3457:30;3468:18;3457:30;;:10;:30::i;:::-;3509;3520:18;3509:30;;:10;:30::i;:::-;3558:22;:20;:22::i;:::-;3582:30;3593:18;3582:30;;:10;:30::i;:::-;3634;3645:18;3634:30;;:10;:30::i;:::-;3683:44;2495:4:0;3694:18:25::0;::::3;3714:12;:10;:12::i;:::-;3683:10;:44::i;:::-;3729:30;3740:18;3729:30;;:10;:30::i;:::-;3781;3792:18;3781:30;;:10;:30::i;:::-;3830:37;2263:24;3854:12;:10;:12::i;:::-;3830:10;:37::i;:::-;3869:30;3880:18;3869:30;;:10;:30::i;:::-;3921;3932:18;3921:30;;:10;:30::i;:::-;3970:37;2396:24;3994:12;:10;:12::i;:::-;3970:10;:37::i;:::-;4010:30;4021:18;4010:30;;:10;:30::i;:::-;4062;4073:18;4062:30;;:10;:30::i;:::-;4111:31;4117:12;:10;:12::i;:::-;2516:1;2507:2;:11;;;;:::i;:::-;2494:10;:24;;;;:::i;:::-;4111:5;:31::i;:::-;3651:14:6::1;3647:99;;;3697:5;3681:13:::0;::::1;:21;;;;;;;;;;;;;;;;;;3721:14;3733:1;3721:14;;;;;;:::i;:::-;;;;;;;;3647:99;3269:483;2875:1274:25::0;;:::o;3157:126:11:-;3231:7;3257:10;:19;3268:7;3257:19;;;;;;;;;;;;;;;;;;;;;;;;;3250:26;;3157:126;;;:::o;6616:112::-;6687:34;6697:12;:10;:12::i;:::-;6711:9;6687;:34::i;:::-;6616:112;:::o;1858:84:7:-;1905:4;1928:7;;;;;;;;;;;1921:14;;1858:84;:::o;2909:160:11:-;2979:6;3004:58;3033:12;:21;3046:7;3033:21;;;;;;;;;;;;;;;:28;;;;3004;:58::i;:::-;2997:65;;2909:160;;;:::o;3756:125:8:-;3830:7;3856:9;:18;3866:7;3856:18;;;;;;;;;;;;;;;;3849:25;;3756:125;;;:::o;5456:920:25:-;5517:30;5528:18;5517:30;;:10;:30::i;:::-;5566;5577:18;5566:30;;:10;:30::i;:::-;5618;5629:18;5618:30;;:10;:30::i;:::-;5667:24;5694:32;5704:7;5713:12;:10;:12::i;:::-;5694:9;:32::i;:::-;5667:59;;5728:30;5739:18;5728:30;;:10;:30::i;:::-;5780;5791:18;5780:30;;:10;:30::i;:::-;5830;5841:18;5830:30;;:10;:30::i;:::-;5907:6;5887:16;:26;;5879:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;5955:30;5966:18;5955:30;;:10;:30::i;:::-;6007;6018:18;6007:30;;:10;:30::i;:::-;6071;6082:18;6071:30;;:10;:30::i;:::-;6127;6138:18;6127:30;;:10;:30::i;:::-;6176:58;6185:7;6194:12;:10;:12::i;:::-;6227:6;6208:16;:25;6176:8;:58::i;:::-;6246:30;6257:18;6246:30;;:10;:30::i;:::-;6298;6309:18;6298:30;;:10;:30::i;:::-;6347:22;6353:7;6362:6;6347:5;:22::i;:::-;5516:860;5456:920;;:::o;3014:126:10:-;3083:7;3109:24;:7;:14;3117:5;3109:14;;;;;;;;;;;;;;;:22;:24::i;:::-;3102:31;;3014:126;;;:::o;6609:244:25:-;1765:30;1776:18;1765:30;;:10;:30::i;:::-;2263:24:::1;2928:16:0;2939:4;2928:10;:16::i;:::-;1682:30:25::2;1693:18;1682:30;;:10;:30::i;:::-;6688::::3;6699:18;6688:30;;:10;:30::i;:::-;6737;6748:18;6737:30;;:10;:30::i;:::-;6789;6800:18;6789:30;;:10;:30::i;:::-;6838:8;:6;:8::i;:::-;1818:1:::1;6609:244::o:0;4500:861:19:-;4615:13;4642:18;4674:21;4709:15;4738:25;4777:12;4803:27;5081:1;5066:16;;:11;;:16;:39;;;;;5104:1;5086:19;;:14;;:19;5066:39;5058:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;5193:13;:11;:13::i;:::-;5220:16;:14;:16::i;:::-;5250:13;5285:4;5312:1;5304:10;;5342:1;5328:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5142:212;;;;;;;;;;;;;;;;;;;;;4500:861;;;;;;;:::o;4295:239:11:-;4380:7;4419;:5;:7::i;:::-;4407:19;;:9;:19;4399:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;4473:54;4492:23;4517:9;4473:18;:54::i;:::-;4466:61;;4295:239;;;:::o;3329:145:0:-;3415:4;3438:6;:12;3445:4;3438:12;;;;;;;;;;;:20;;:29;3459:7;3438:29;;;;;;;;;;;;;;;;;;;;;;;;;3431:36;;3329:145;;;;:::o;2114:129:11:-;2169:6;2194:42;2223:12;2194:28;:42::i;:::-;2187:49;;2114:129;:::o;2706:102:8:-;2762:13;2794:7;2787:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2706:102;:::o;3362:243:11:-;3435:7;3454:11;3468:12;:21;3481:7;3468:21;;;;;;;;;;;;;;;:28;;;;3454:42;;3544:1;3537:3;:8;:51;;3552:12;:21;3565:7;3552:21;;;;;;;;;;;;;;;3580:1;3574:3;:7;3552:30;;;;;;;;:::i;:::-;;;;;;;;;:36;;;;;;;;;;;;3537:51;;;3548:1;3537:51;3530:58;;;;;3362:243;;;:::o;2450:49:0:-;2495:4;2450:49;;;:::o;6912:427:8:-;7005:4;7021:13;7037:12;:10;:12::i;:::-;7021:28;;7059:24;7086:25;7096:5;7103:7;7086:9;:25::i;:::-;7059:52;;7149:15;7129:16;:35;;7121:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;7240:60;7249:5;7256:7;7284:15;7265:16;:34;7240:8;:60::i;:::-;7328:4;7321:11;;;;6912:427;;;;:::o;4077:189::-;4156:4;4172:13;4188:12;:10;:12::i;:::-;4172:28;;4210;4220:5;4227:2;4231:6;4210:9;:28::i;:::-;4255:4;4248:11;;;4077:189;;;;:::o;6805:585:11:-;7024:6;7005:15;:25;;6997:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;7074:14;7091:180;7129:87;1736:71;7189:9;7200:5;7207:6;7156:58;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7146:69;;;;;;7129:16;:87::i;:::-;7230:1;7245;7260;7091:24;:180::i;:::-;7074:197;;7298:17;7308:6;7298:9;:17::i;:::-;7289:5;:26;7281:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7355:28;7365:6;7373:9;7355;:28::i;:::-;6987:403;6805:585;;;;;;:::o;2316:637:10:-;2551:8;2532:15;:27;;2524:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2604:18;1351:95;2664:5;2671:7;2680:5;2687:16;2697:5;2687:9;:16::i;:::-;2705:8;2635:79;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2625:90;;;;;;2604:111;;2726:12;2741:28;2758:10;2741:16;:28::i;:::-;2726:43;;2780:14;2797:39;2822:4;2828:1;2831;2834;2797:24;:39::i;:::-;2780:56;;2864:5;2854:15;;:6;:15;;;2846:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2915:31;2924:5;2931:7;2940:5;2915:8;:31::i;:::-;2514:439;;;2316:637;;;;;;;:::o;2358:62:25:-;2396:24;2358:62;:::o;5684:147:0:-;5768:18;5781:4;5768:12;:18::i;:::-;2928:16;2939:4;2928:10;:16::i;:::-;5798:26:::1;5810:4;5816:7;5798:11;:26::i;:::-;5684:147:::0;;;:::o;4324:149:8:-;4413:7;4439:11;:18;4451:5;4439:18;;;;;;;;;;;;;;;:27;4458:7;4439:27;;;;;;;;;;;;;;;;4432:34;;4324:149;;;;:::o;2225:62:25:-;2263:24;2225:62;:::o;2686:148:11:-;2765:17;;:::i;:::-;2801:12;:21;2814:7;2801:21;;;;;;;;;;;;;;;2823:3;2801:26;;;;;;;;;;:::i;:::-;;;;;;;;;2794:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2686:148;;;;:::o;1060:166:20:-;1145:4;1183:36;1168:51;;;:11;:51;;;;1161:58;;1060:166;;;:::o;850:96:15:-;903:7;929:10;922:17;;850:96;:::o;10794:340:8:-;10912:1;10895:19;;:5;:19;;;10887:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10992:1;10973:21;;:7;:21;;;10965:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11074:6;11044:11;:18;11056:5;11044:18;;;;;;;;;;;;;;;:27;11063:7;11044:27;;;;;;;;;;;;;;;:36;;;;11111:7;11095:32;;11104:5;11095:32;;;11120:6;11095:32;;;;;;:::i;:::-;;;;;;;;10794:340;;;:::o;11415:411::-;11515:24;11542:25;11552:5;11559:7;11542:9;:25::i;:::-;11515:52;;11601:17;11581:16;:37;11577:243;;11662:6;11642:16;:26;;11634:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11744:51;11753:5;11760:7;11788:6;11769:16;:25;11744:8;:51::i;:::-;11577:243;11505:321;11415:411;;;:::o;7793:788::-;7905:1;7889:18;;:4;:18;;;7881:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7981:1;7967:16;;:2;:16;;;7959:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;8034:38;8055:4;8061:2;8065:6;8034:20;:38::i;:::-;8083:19;8105:9;:15;8115:4;8105:15;;;;;;;;;;;;;;;;8083:37;;8153:6;8138:11;:21;;8130:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;8268:6;8254:11;:20;8236:9;:15;8246:4;8236:15;;;;;;;;;;;;;;;:38;;;;8468:6;8451:9;:13;8461:2;8451:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8515:2;8500:26;;8509:4;8500:26;;;8519:6;8500:26;;;;;;:::i;:::-;;;;;;;;8537:37;8557:4;8563:2;8567:6;8537:19;:37::i;:::-;7871:710;7793:788;;;:::o;3768:103:0:-;3834:30;3845:4;3851:12;:10;:12::i;:::-;3834:10;:30::i;:::-;3768:103;:::o;7917:233::-;8000:22;8008:4;8014:7;8000;:22::i;:::-;7995:149;;8070:4;8038:6;:12;8045:4;8038:12;;;;;;;;;;;:20;;:29;8059:7;8038:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;8120:12;:10;:12::i;:::-;8093:40;;8111:7;8093:40;;8105:4;8093:40;;;;;;;;;;7995:149;7917:233;;:::o;1091:56:25:-;;:::o;3304:109:19:-;3357:7;3383:23;:21;:23::i;:::-;3376:30;;3304:109;:::o;8321:234:0:-;8404:22;8412:4;8418:7;8404;:22::i;:::-;8400:149;;;8474:5;8442:6;:12;8449:4;8442:12;;;;;;;;;;;:20;;:29;8463:7;8442:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8525:12;:10;:12::i;:::-;8498:40;;8516:7;8498:40;;8510:4;8498:40;;;;;;;;;;8400:149;8321:234;;:::o;4618:1917:11:-;4715:7;5812:14;5829:5;:12;;;;5812:29;;5852:11;5877:12;5892:6;5877:21;;5922:1;5913:6;:10;5909:253;;;5939:11;5962:28;5983:6;5962:20;:28::i;:::-;5953:6;:37;;;;:::i;:::-;5939:51;;6046:9;6008:25;6022:5;6029:3;6008:13;:25::i;:::-;:35;;;;;;;;;;;;:47;;;6004:148;;;6082:3;6075:10;;6004:148;;;6136:1;6130:3;:7;;;;:::i;:::-;6124:13;;6004:148;5925:237;5909:253;6172;6185:4;6179:3;:10;6172:253;;;6205:11;6219:34;6243:3;6248:4;6219:23;:34::i;:::-;6205:48;;6309:9;6271:25;6285:5;6292:3;6271:13;:25::i;:::-;:35;;;;;;;;;;;;:47;;;6267:148;;;6345:3;6338:10;;6267:148;;;6399:1;6393:3;:7;;;;:::i;:::-;6387:13;;6267:148;6191:234;6172:253;;;6474:1;6466:4;:9;:52;;6482:30;6496:5;6510:1;6503:4;:8;6482:13;:30::i;:::-;:36;;;;;;;;;;;;6466:52;;;6478:1;6466:52;6459:59;;;;;;;4618:1917;;;;:::o;2676:117:7:-;1729:16;:14;:16::i;:::-;2744:5:::1;2734:7;;:15;;;;;;;;;;;;;;;;;;2764:22;2773:12;:10;:12::i;:::-;2764:22;;;;;;:::i;:::-;;;;;;;;2676:117::o:0;8535:338:25:-;8693:30;8704:18;8693:30;;:10;:30::i;:::-;8742;8753:18;8742:30;;:10;:30::i;:::-;8794;8805:18;8794:30;;:10;:30::i;:::-;8843:23;8855:2;8859:6;8843:11;:23::i;:::-;8535:338;;:::o;7955:313::-;8083:30;8094:18;8083:30;;:10;:30::i;:::-;8132;8143:18;8132:30;;:10;:30::i;:::-;8184;8195:18;8184:30;;:10;:30::i;:::-;8233:28;8245:7;8254:6;8233:11;:28::i;:::-;7955:313;;:::o;1423:320:14:-;1483:4;1735:1;1713:7;:19;;;:23;1706:30;;1423:320;;;:::o;2118:147:8:-;5374:13:6;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2220:38:8::1;2243:5;2250:7;2220:22;:38::i;:::-;2118:147:::0;;:::o;2043:125:10:-;5374:13:6;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2127:34:10::1;2151:4;2127:34;;;;;;;;;;;;;;;;::::0;:23:::1;:34::i;:::-;2043:125:::0;:::o;1063:97:7:-;5374:13:6;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1126:27:7::1;:25;:27::i;:::-;1063:97::o:0;2151:65:0:-;5374:13:6;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2151:65:0:o;8783:380:11:-;8867:23;8893:20;8903:9;8893;:20::i;:::-;8867:46;;8923:24;8950:20;8960:9;8950;:20::i;:::-;8923:47;;9004:9;8980:10;:21;8991:9;8980:21;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;9073:9;9029:54;;9056:15;9029:54;;9045:9;9029:54;;;;;;;;;;;;9094:62;9111:15;9128:9;9139:16;9094;:62::i;:::-;8857:306;;8783:380;;:::o;15275:187:23:-;15331:6;15366:16;15357:25;;:5;:25;;15349:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;15449:5;15435:20;;15275:187;;;:::o;838:112:16:-;903:7;929;:14;;;922:21;;838:112;;;:::o;2429:115:7:-;1482:19;:17;:19::i;:::-;2498:4:::1;2488:7;;:14;;;;;;;;;;;;;;;;;;2517:20;2524:12;:10;:12::i;:::-;2517:20;;;;;;:::i;:::-;;;;;;;;2429:115::o:0;5585:98:19:-;5639:13;5671:5;5664:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5585:98;:::o;5910:104::-;5967:13;5999:8;5992:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5910:104;:::o;14251:187:23:-;14307:6;14342:16;14333:25;;:5;:25;;14325:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;14425:5;14411:20;;14251:187;;;:::o;4236:176:19:-;4313:7;4339:66;4372:20;:18;:20::i;:::-;4394:10;4339:32;:66::i;:::-;4332:73;;4236:176;;;:::o;6620:232:18:-;6705:7;6725:17;6744:18;6766:25;6777:4;6783:1;6786;6789;6766:10;:25::i;:::-;6724:67;;;;6801:18;6813:5;6801:11;:18::i;:::-;6836:9;6829:16;;;;6620:232;;;;;;:::o;3508:214:10:-;3568:15;3595:41;3639:7;:14;3647:5;3639:14;;;;;;;;;;;;;;;3595:58;;3673:15;:5;:13;:15::i;:::-;3663:25;;3698:17;:5;:15;:17::i;:::-;3585:137;3508:214;;;:::o;8992:396:25:-;1435:30;1446:18;1435:30;;:10;:30::i;:::-;1482:19:7::1;:17;:19::i;:::-;1352:30:25::2;1363:18;1352:30;;:10;:30::i;:::-;9187::::3;9198:18;9187:30;;:10;:30::i;:::-;9236;9247:18;9236:30;;:10;:30::i;:::-;9288;9299:18;9288:30;;:10;:30::i;:::-;9337:44;9364:4;9370:2;9374:6;9337:26;:44::i;:::-;8992:396:::0;;;:::o;9506:436::-;9742:30;9753:18;9742:30;;:10;:30::i;:::-;9791;9802:18;9791:30;;:10;:30::i;:::-;9843;9854:18;9843:30;;:10;:30::i;:::-;9892:43;9918:4;9924:2;9928:6;9892:25;:43::i;:::-;9506:436;;;:::o;4152:501:0:-;4240:22;4248:4;4254:7;4240;:22::i;:::-;4235:412;;4423:39;4454:7;4423:30;:39::i;:::-;4533:49;4572:4;4564:13;;4579:2;4533:30;:49::i;:::-;4330:274;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4278:358;;;;;;;;;;;:::i;:::-;;;;;;;;4235:412;4152:501;;:::o;3419:192:19:-;3474:7;1913:95;3533:17;:15;:17::i;:::-;3552:20;:18;:20::i;:::-;3574:13;3597:4;3510:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3500:104;;;;;;3493:111;;3419:192;:::o;6541:1642:22:-;6589:7;6617:1;6612;:6;6608:45;;6641:1;6634:8;;;;6608:45;7332:14;7366:1;7355:7;7360:1;7355:4;:7::i;:::-;:12;;7349:1;:19;;7332:36;;7827:1;7816:6;7812:1;:10;;;;;:::i;:::-;;;7803:6;:19;7802:26;;7793:35;;7876:1;7865:6;7861:1;:10;;;;;:::i;:::-;;;7852:6;:19;7851:26;;7842:35;;7925:1;7914:6;7910:1;:10;;;;;:::i;:::-;;;7901:6;:19;7900:26;;7891:35;;7974:1;7963:6;7959:1;:10;;;;;:::i;:::-;;;7950:6;:19;7949:26;;7940:35;;8023:1;8012:6;8008:1;:10;;;;;:::i;:::-;;;7999:6;:19;7998:26;;7989:35;;8072:1;8061:6;8057:1;:10;;;;;:::i;:::-;;;8048:6;:19;8047:26;;8038:35;;8121:1;8110:6;8106:1;:10;;;;;:::i;:::-;;;8097:6;:19;8096:26;;8087:35;;8143:23;8147:6;8159;8155:1;:10;;;;;:::i;:::-;;;8143:3;:23::i;:::-;8136:30;;;6541:1642;;;;:::o;10925:239:11:-;11011:25;11081:10;11078:1;11071:21;11144:3;11137:4;11134:1;11124:18;11120:28;11105:43;;10925:239;;;;:::o;816:153:22:-;878:7;961:1;956;952;:5;951:11;;;;:::i;:::-;946:1;942;:5;941:21;;;;:::i;:::-;934:28;;816:153;;;;:::o;2188:106:7:-;2254:8;:6;:8::i;:::-;2246:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2188:106::o;7684:285:11:-;7768:28;7780:7;7789:6;7768:11;:28::i;:::-;7831:12;:10;:12::i;:::-;7814:29;;:13;:11;:13::i;:::-;:29;;7806:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;7907:55;7924:23;7949:4;7955:6;7907:16;:55::i;:::-;;;7684:285;;:::o;8058:190::-;8142:28;8154:7;8163:6;8142:11;:28::i;:::-;8181:60;8198:23;8223:9;8234:6;8181:16;:60::i;:::-;;;8058:190;;:::o;2271:159:8:-;5374:13:6;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2391:5:8::1;2383;:13;;;;;;:::i;:::-;;2416:7;2406;:17;;;;;;:::i;:::-;;2271:159:::0;;:::o;2951:267:19:-;5374:13:6;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;3071:4:19::1;3063:5;:12;;;;;;:::i;:::-;;3096:7;3085:8;:18;;;;;;:::i;:::-;;3182:1;3168:15:::0;::::1;:11;:15;;;;3210:1;3193:18:::0;::::1;:14;:18;;;;2951:267:::0;;:::o;1166:95:7:-;5374:13:6;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1249:5:7::1;1239:7;;:15;;;;;;;;;;;;;;;;;;1166:95::o:0;9169:597:11:-;9266:3;9259:10;;:3;:10;;;;:24;;;;;9282:1;9273:6;:10;9259:24;9255:505;;;9318:1;9303:17;;:3;:17;;;9299:221;;9341:17;9360;9381:54;9398:12;:17;9411:3;9398:17;;;;;;;;;;;;;;;9417:9;9428:6;9381:16;:54::i;:::-;9340:95;;;;9479:3;9458:47;;;9484:9;9495;9458:47;;;;;;;:::i;:::-;;;;;;;;9322:198;;9299:221;9553:1;9538:17;;:3;:17;;;9534:216;;9576:17;9595;9616:49;9633:12;:17;9646:3;9633:17;;;;;;;;;;;;;;;9652:4;9658:6;9616:16;:49::i;:::-;9575:90;;;;9709:3;9688:47;;;9714:9;9725;9688:47;;;;;;;:::i;:::-;;;;;;;;9557:193;;9534:216;9255:505;9169:597;;;:::o;2010:106:7:-;2080:8;:6;:8::i;:::-;2079:9;2071:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2010:106::o;8369:397:18:-;8462:12;8569:4;8563:11;8599:10;8594:3;8587:23;8646:15;8639:4;8634:3;8630:14;8623:39;8698:10;8691:4;8686:3;8682:14;8675:34;8745:4;8740:3;8730:20;8722:28;;8538:222;8369:397;;;;:::o;5031:1456::-;5119:7;5128:12;6043:66;6038:1;6030:10;;:79;6026:161;;;6141:1;6145:30;6125:51;;;;;;6026:161;6281:14;6298:24;6308:4;6314:1;6317;6320;6298:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6281:41;;6354:1;6336:20;;:6;:20;;;6332:101;;6388:1;6392:29;6372:50;;;;;;;6332:101;6451:6;6459:20;6443:37;;;;;5031:1456;;;;;;;;:::o;592:511::-;669:20;660:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;656:441;705:7;656:441;765:29;756:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;752:345;;810:34;;;;;;;;;;:::i;:::-;;;;;;;;752:345;874:35;865:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;861:236;;925:41;;;;;;;;;;:::i;:::-;;;;;;;;861:236;996:30;987:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;983:114;;1042:44;;;;;;;;;;:::i;:::-;;;;;;;;983:114;592:511;;:::o;956:123:16:-;1061:1;1043:7;:14;;;:19;;;;;;;;;;;956:123;:::o;12410:91:8:-;;;;:::o;8388:224:11:-;8495:43;8521:4;8527:2;8531:6;8495:25;:43::i;:::-;8549:56;8566:15;8576:4;8566:9;:15::i;:::-;8583:13;8593:2;8583:9;:13::i;:::-;8598:6;8549:16;:56::i;:::-;8388:224;;;:::o;2473:149:17:-;2531:13;2563:52;2591:4;2575:22;;376:2;2563:52;;:11;:52::i;:::-;2556:59;;2473:149;;;:::o;1884:437::-;1959:13;1984:19;2029:1;2020:6;2016:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2006:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1984:47;;2041:15;:6;2048:1;2041:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2066;:6;2073:1;2066:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2096:9;2121:1;2112:6;2108:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2096:26;;2091:128;2128:1;2124;:5;2091:128;;;2162:8;2179:3;2171:5;:11;2162:21;;;;;;;:::i;:::-;;;;;2150:6;2157:1;2150:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;2207:1;2197:11;;;;;2131:3;;;;:::i;:::-;;;2091:128;;;;2245:1;2236:5;:10;2228:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2307:6;2293:21;;;1884:437;;;;:::o;6229:630:19:-;6279:7;6298:18;6319:13;:11;:13::i;:::-;6298:34;;6367:1;6352:4;6346:18;:22;6342:511;;;6407:4;6391:22;;;;;;6384:29;;;;;6342:511;6667:18;6688:11;;6667:32;;6731:1;6717:15;;:10;:15;6713:130;;6759:10;6752:17;;;;;;6713:130;6815:13;6808:20;;;;6229:630;;:::o;7080:666::-;7133:7;7152:21;7176:16;:14;:16::i;:::-;7152:40;;7230:1;7212:7;7206:21;:25;7202:538;;;7270:7;7254:25;;;;;;7247:32;;;;;7202:538;7542:21;7566:14;;7542:38;;7615:1;7598:18;;:13;:18;7594:136;;7643:13;7636:20;;;;;;7594:136;7702:13;7695:20;;;;7080:666;;:::o;8644:983:22:-;8696:7;8715:14;8732:1;8715:18;;8786:1;8780:3;8771:5;:12;;:16;8767:99;;;8817:3;8807:13;;;;;8848:3;8838:13;;;;8767:99;8897:1;8892:2;8883:5;:11;;:15;8879:96;;;8928:2;8918:12;;;;;8958:2;8948:12;;;;8879:96;9006:1;9001:2;8992:5;:11;;:15;8988:96;;;9037:2;9027:12;;;;;9067:2;9057:12;;;;8988:96;9115:1;9110:2;9101:5;:11;;:15;9097:96;;;9146:2;9136:12;;;;;9176:2;9166:12;;;;9097:96;9223:1;9219;9210:5;:10;;:14;9206:93;;;9254:1;9244:11;;;;;9283:1;9273:11;;;;9206:93;9329:1;9325;9316:5;:10;;:14;9312:93;;;9360:1;9350:11;;;;;9389:1;9379:11;;;;9312:93;9435:1;9431;9422:5;:10;;:14;9418:93;;;9466:1;9456:11;;;;;9495:1;9485:11;;;;9418:93;9541:1;9537;9528:5;:10;;:14;9524:64;;;9572:1;9562:11;;;;9524:64;9614:6;9607:13;;;8644:983;;;:::o;599:104::-;657:7;687:1;683;:5;:13;;695:1;683:13;;;691:1;683:13;676:20;;599:104;;;;:::o;8857:535:8:-;8959:1;8940:21;;:7;:21;;;8932:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;9008:49;9037:1;9041:7;9050:6;9008:20;:49::i;:::-;9084:6;9068:12;;:22;;;;;;;:::i;:::-;;;;;;;;9258:6;9236:9;:18;9246:7;9236:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;9310:7;9289:37;;9306:1;9289:37;;;9319:6;9289:37;;;;;;:::i;:::-;;;;;;;;9337:48;9365:1;9369:7;9378:6;9337:19;:48::i;:::-;8857:535;;:::o;7492:103:11:-;7545:7;7571:17;7564:24;;7492:103;:::o;10579:96::-;10637:7;10667:1;10663;:5;;;;:::i;:::-;10656:12;;10579:96;;;;:::o;9772:801::-;9942:17;9961;9990:11;10004:5;:12;;;;9990:26;;10051:25;10086:1;10079:3;:8;:59;;10109:29;10123:5;10136:1;10130:3;:7;10109:13;:29::i;:::-;10079:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10090:16;;;;;;;;10101:1;10090:16;;;;;;10104:1;10090:16;;;;;10079:59;10051:87;;10165:7;:13;;;10153:25;;;;10204:20;10207:9;10218:5;10204:2;:20;;:::i;:::-;10192:32;;10249:1;10243:3;:7;:39;;;;;10275:7;:5;:7::i;:::-;10254:28;;:7;:17;;;:28;;;10243:39;10239:318;;;10340:40;10370:9;10340:29;:40::i;:::-;10302:29;10316:5;10329:1;10323:3;:7;10302:13;:29::i;:::-;:35;;;:78;;;;;;;;;;;;;;;;;;10239:318;;;10419:5;10430:111;;;;;;;;10453:37;10482:7;:5;:7::i;:::-;10453:37;;:28;:37::i;:::-;10430:111;;;;;;10499:40;10529:9;10499:29;:40::i;:::-;10430:111;;;;;10419:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10239:318;10027:540;9980:593;9772:801;;;;;;:::o;9712:659:8:-;9814:1;9795:21;;:7;:21;;;9787:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9865:49;9886:7;9903:1;9907:6;9865:20;:49::i;:::-;9925:22;9950:9;:18;9960:7;9950:18;;;;;;;;;;;;;;;;9925:43;;10004:6;9986:14;:24;;9978:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;10121:6;10104:14;:23;10083:9;:18;10093:7;10083:18;;;;;;;;;;;;;;;:44;;;;10236:6;10220:12;;:22;;;;;;;;;;;10294:1;10268:37;;10277:7;10268:37;;;10298:6;10268:37;;;;;;:::i;:::-;;;;;;;;10316:48;10336:7;10353:1;10357:6;10316:19;:48::i;:::-;9777:594;9712:659;;:::o;10681:101:11:-;10744:7;10774:1;10770;:5;;;;:::i;:::-;10763:12;;10681:101;;;;:::o;13089:90:8:-;;;;:::o;2847:192:23:-;2904:7;2940:17;2931:26;;:5;:26;;2923:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3026:5;3011:21;;2847:192;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:26:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:126::-;2897:7;2937:42;2930:5;2926:54;2915:65;;2860:126;;;:::o;2992:96::-;3029:7;3058:24;3076:5;3058:24;:::i;:::-;3047:35;;2992:96;;;:::o;3094:122::-;3167:24;3185:5;3167:24;:::i;:::-;3160:5;3157:35;3147:63;;3206:1;3203;3196:12;3147:63;3094:122;:::o;3222:139::-;3268:5;3306:6;3293:20;3284:29;;3322:33;3349:5;3322:33;:::i;:::-;3222:139;;;;:::o;3367:77::-;3404:7;3433:5;3422:16;;3367:77;;;:::o;3450:122::-;3523:24;3541:5;3523:24;:::i;:::-;3516:5;3513:35;3503:63;;3562:1;3559;3552:12;3503:63;3450:122;:::o;3578:139::-;3624:5;3662:6;3649:20;3640:29;;3678:33;3705:5;3678:33;:::i;:::-;3578:139;;;;:::o;3723:474::-;3791:6;3799;3848:2;3836:9;3827:7;3823:23;3819:32;3816:119;;;3854:79;;:::i;:::-;3816:119;3974:1;3999:53;4044:7;4035:6;4024:9;4020:22;3999:53;:::i;:::-;3989:63;;3945:117;4101:2;4127:53;4172:7;4163:6;4152:9;4148:22;4127:53;:::i;:::-;4117:63;;4072:118;3723:474;;;;;:::o;4203:118::-;4290:24;4308:5;4290:24;:::i;:::-;4285:3;4278:37;4203:118;;:::o;4327:222::-;4420:4;4458:2;4447:9;4443:18;4435:26;;4471:71;4539:1;4528:9;4524:17;4515:6;4471:71;:::i;:::-;4327:222;;;;:::o;4555:619::-;4632:6;4640;4648;4697:2;4685:9;4676:7;4672:23;4668:32;4665:119;;;4703:79;;:::i;:::-;4665:119;4823:1;4848:53;4893:7;4884:6;4873:9;4869:22;4848:53;:::i;:::-;4838:63;;4794:117;4950:2;4976:53;5021:7;5012:6;5001:9;4997:22;4976:53;:::i;:::-;4966:63;;4921:118;5078:2;5104:53;5149:7;5140:6;5129:9;5125:22;5104:53;:::i;:::-;5094:63;;5049:118;4555:619;;;;;:::o;5180:77::-;5217:7;5246:5;5235:16;;5180:77;;;:::o;5263:122::-;5336:24;5354:5;5336:24;:::i;:::-;5329:5;5326:35;5316:63;;5375:1;5372;5365:12;5316:63;5263:122;:::o;5391:139::-;5437:5;5475:6;5462:20;5453:29;;5491:33;5518:5;5491:33;:::i;:::-;5391:139;;;;:::o;5536:329::-;5595:6;5644:2;5632:9;5623:7;5619:23;5615:32;5612:119;;;5650:79;;:::i;:::-;5612:119;5770:1;5795:53;5840:7;5831:6;5820:9;5816:22;5795:53;:::i;:::-;5785:63;;5741:117;5536:329;;;;:::o;5871:118::-;5958:24;5976:5;5958:24;:::i;:::-;5953:3;5946:37;5871:118;;:::o;5995:222::-;6088:4;6126:2;6115:9;6111:18;6103:26;;6139:71;6207:1;6196:9;6192:17;6183:6;6139:71;:::i;:::-;5995:222;;;;:::o;6223:474::-;6291:6;6299;6348:2;6336:9;6327:7;6323:23;6319:32;6316:119;;;6354:79;;:::i;:::-;6316:119;6474:1;6499:53;6544:7;6535:6;6524:9;6520:22;6499:53;:::i;:::-;6489:63;;6445:117;6601:2;6627:53;6672:7;6663:6;6652:9;6648:22;6627:53;:::i;:::-;6617:63;;6572:118;6223:474;;;;;:::o;6703:86::-;6738:7;6778:4;6771:5;6767:16;6756:27;;6703:86;;;:::o;6795:112::-;6878:22;6894:5;6878:22;:::i;:::-;6873:3;6866:35;6795:112;;:::o;6913:214::-;7002:4;7040:2;7029:9;7025:18;7017:26;;7053:67;7117:1;7106:9;7102:17;7093:6;7053:67;:::i;:::-;6913:214;;;;:::o;7133:329::-;7192:6;7241:2;7229:9;7220:7;7216:23;7212:32;7209:119;;;7247:79;;:::i;:::-;7209:119;7367:1;7392:53;7437:7;7428:6;7417:9;7413:22;7392:53;:::i;:::-;7382:63;;7338:117;7133:329;;;;:::o;7468:117::-;7577:1;7574;7567:12;7591:117;7700:1;7697;7690:12;7714:180;7762:77;7759:1;7752:88;7859:4;7856:1;7849:15;7883:4;7880:1;7873:15;7900:281;7983:27;8005:4;7983:27;:::i;:::-;7975:6;7971:40;8113:6;8101:10;8098:22;8077:18;8065:10;8062:34;8059:62;8056:88;;;8124:18;;:::i;:::-;8056:88;8164:10;8160:2;8153:22;7943:238;7900:281;;:::o;8187:129::-;8221:6;8248:20;;:::i;:::-;8238:30;;8277:33;8305:4;8297:6;8277:33;:::i;:::-;8187:129;;;:::o;8322:308::-;8384:4;8474:18;8466:6;8463:30;8460:56;;;8496:18;;:::i;:::-;8460:56;8534:29;8556:6;8534:29;:::i;:::-;8526:37;;8618:4;8612;8608:15;8600:23;;8322:308;;;:::o;8636:146::-;8733:6;8728:3;8723;8710:30;8774:1;8765:6;8760:3;8756:16;8749:27;8636:146;;;:::o;8788:425::-;8866:5;8891:66;8907:49;8949:6;8907:49;:::i;:::-;8891:66;:::i;:::-;8882:75;;8980:6;8973:5;8966:21;9018:4;9011:5;9007:16;9056:3;9047:6;9042:3;9038:16;9035:25;9032:112;;;9063:79;;:::i;:::-;9032:112;9153:54;9200:6;9195:3;9190;9153:54;:::i;:::-;8872:341;8788:425;;;;;:::o;9233:340::-;9289:5;9338:3;9331:4;9323:6;9319:17;9315:27;9305:122;;9346:79;;:::i;:::-;9305:122;9463:6;9450:20;9488:79;9563:3;9555:6;9548:4;9540:6;9536:17;9488:79;:::i;:::-;9479:88;;9295:278;9233:340;;;;:::o;9579:834::-;9667:6;9675;9724:2;9712:9;9703:7;9699:23;9695:32;9692:119;;;9730:79;;:::i;:::-;9692:119;9878:1;9867:9;9863:17;9850:31;9908:18;9900:6;9897:30;9894:117;;;9930:79;;:::i;:::-;9894:117;10035:63;10090:7;10081:6;10070:9;10066:22;10035:63;:::i;:::-;10025:73;;9821:287;10175:2;10164:9;10160:18;10147:32;10206:18;10198:6;10195:30;10192:117;;;10228:79;;:::i;:::-;10192:117;10333:63;10388:7;10379:6;10368:9;10364:22;10333:63;:::i;:::-;10323:73;;10118:288;9579:834;;;;;:::o;10419:329::-;10478:6;10527:2;10515:9;10506:7;10502:23;10498:32;10495:119;;;10533:79;;:::i;:::-;10495:119;10653:1;10678:53;10723:7;10714:6;10703:9;10699:22;10678:53;:::i;:::-;10668:63;;10624:117;10419:329;;;;:::o;10754:118::-;10841:24;10859:5;10841:24;:::i;:::-;10836:3;10829:37;10754:118;;:::o;10878:222::-;10971:4;11009:2;10998:9;10994:18;10986:26;;11022:71;11090:1;11079:9;11075:17;11066:6;11022:71;:::i;:::-;10878:222;;;;:::o;11106:93::-;11142:7;11182:10;11175:5;11171:22;11160:33;;11106:93;;;:::o;11205:115::-;11290:23;11307:5;11290:23;:::i;:::-;11285:3;11278:36;11205:115;;:::o;11326:218::-;11417:4;11455:2;11444:9;11440:18;11432:26;;11468:69;11534:1;11523:9;11519:17;11510:6;11468:69;:::i;:::-;11326:218;;;;:::o;11550:149::-;11586:7;11626:66;11619:5;11615:78;11604:89;;11550:149;;;:::o;11705:115::-;11790:23;11807:5;11790:23;:::i;:::-;11785:3;11778:36;11705:115;;:::o;11826:114::-;11893:6;11927:5;11921:12;11911:22;;11826:114;;;:::o;11946:184::-;12045:11;12079:6;12074:3;12067:19;12119:4;12114:3;12110:14;12095:29;;11946:184;;;;:::o;12136:132::-;12203:4;12226:3;12218:11;;12256:4;12251:3;12247:14;12239:22;;12136:132;;;:::o;12274:108::-;12351:24;12369:5;12351:24;:::i;:::-;12346:3;12339:37;12274:108;;:::o;12388:179::-;12457:10;12478:46;12520:3;12512:6;12478:46;:::i;:::-;12556:4;12551:3;12547:14;12533:28;;12388:179;;;;:::o;12573:113::-;12643:4;12675;12670:3;12666:14;12658:22;;12573:113;;;:::o;12722:732::-;12841:3;12870:54;12918:5;12870:54;:::i;:::-;12940:86;13019:6;13014:3;12940:86;:::i;:::-;12933:93;;13050:56;13100:5;13050:56;:::i;:::-;13129:7;13160:1;13145:284;13170:6;13167:1;13164:13;13145:284;;;13246:6;13240:13;13273:63;13332:3;13317:13;13273:63;:::i;:::-;13266:70;;13359:60;13412:6;13359:60;:::i;:::-;13349:70;;13205:224;13192:1;13189;13185:9;13180:14;;13145:284;;;13149:14;13445:3;13438:10;;12846:608;;;12722:732;;;;:::o;13460:1215::-;13809:4;13847:3;13836:9;13832:19;13824:27;;13861:69;13927:1;13916:9;13912:17;13903:6;13861:69;:::i;:::-;13977:9;13971:4;13967:20;13962:2;13951:9;13947:18;13940:48;14005:78;14078:4;14069:6;14005:78;:::i;:::-;13997:86;;14130:9;14124:4;14120:20;14115:2;14104:9;14100:18;14093:48;14158:78;14231:4;14222:6;14158:78;:::i;:::-;14150:86;;14246:72;14314:2;14303:9;14299:18;14290:6;14246:72;:::i;:::-;14328:73;14396:3;14385:9;14381:19;14372:6;14328:73;:::i;:::-;14411;14479:3;14468:9;14464:19;14455:6;14411:73;:::i;:::-;14532:9;14526:4;14522:20;14516:3;14505:9;14501:19;14494:49;14560:108;14663:4;14654:6;14560:108;:::i;:::-;14552:116;;13460:1215;;;;;;;;;;:::o;14681:97::-;14717:7;14757:14;14750:5;14746:26;14735:37;;14681:97;;;:::o;14784:115::-;14869:23;14886:5;14869:23;:::i;:::-;14864:3;14857:36;14784:115;;:::o;14905:218::-;14996:4;15034:2;15023:9;15019:18;15011:26;;15047:69;15113:1;15102:9;15098:17;15089:6;15047:69;:::i;:::-;14905:218;;;;:::o;15129:118::-;15200:22;15216:5;15200:22;:::i;:::-;15193:5;15190:33;15180:61;;15237:1;15234;15227:12;15180:61;15129:118;:::o;15253:135::-;15297:5;15335:6;15322:20;15313:29;;15351:31;15376:5;15351:31;:::i;:::-;15253:135;;;;:::o;15394:1053::-;15496:6;15504;15512;15520;15528;15536;15585:3;15573:9;15564:7;15560:23;15556:33;15553:120;;;15592:79;;:::i;:::-;15553:120;15712:1;15737:53;15782:7;15773:6;15762:9;15758:22;15737:53;:::i;:::-;15727:63;;15683:117;15839:2;15865:53;15910:7;15901:6;15890:9;15886:22;15865:53;:::i;:::-;15855:63;;15810:118;15967:2;15993:53;16038:7;16029:6;16018:9;16014:22;15993:53;:::i;:::-;15983:63;;15938:118;16095:2;16121:51;16164:7;16155:6;16144:9;16140:22;16121:51;:::i;:::-;16111:61;;16066:116;16221:3;16248:53;16293:7;16284:6;16273:9;16269:22;16248:53;:::i;:::-;16238:63;;16192:119;16350:3;16377:53;16422:7;16413:6;16402:9;16398:22;16377:53;:::i;:::-;16367:63;;16321:119;15394:1053;;;;;;;;:::o;16453:1199::-;16564:6;16572;16580;16588;16596;16604;16612;16661:3;16649:9;16640:7;16636:23;16632:33;16629:120;;;16668:79;;:::i;:::-;16629:120;16788:1;16813:53;16858:7;16849:6;16838:9;16834:22;16813:53;:::i;:::-;16803:63;;16759:117;16915:2;16941:53;16986:7;16977:6;16966:9;16962:22;16941:53;:::i;:::-;16931:63;;16886:118;17043:2;17069:53;17114:7;17105:6;17094:9;17090:22;17069:53;:::i;:::-;17059:63;;17014:118;17171:2;17197:53;17242:7;17233:6;17222:9;17218:22;17197:53;:::i;:::-;17187:63;;17142:118;17299:3;17326:51;17369:7;17360:6;17349:9;17345:22;17326:51;:::i;:::-;17316:61;;17270:117;17426:3;17453:53;17498:7;17489:6;17478:9;17474:22;17453:53;:::i;:::-;17443:63;;17397:119;17555:3;17582:53;17627:7;17618:6;17607:9;17603:22;17582:53;:::i;:::-;17572:63;;17526:119;16453:1199;;;;;;;;;;:::o;17658:474::-;17726:6;17734;17783:2;17771:9;17762:7;17758:23;17754:32;17751:119;;;17789:79;;:::i;:::-;17751:119;17909:1;17934:53;17979:7;17970:6;17959:9;17955:22;17934:53;:::i;:::-;17924:63;;17880:117;18036:2;18062:53;18107:7;18098:6;18087:9;18083:22;18062:53;:::i;:::-;18052:63;;18007:118;17658:474;;;;;:::o;18138:120::-;18210:23;18227:5;18210:23;:::i;:::-;18203:5;18200:34;18190:62;;18248:1;18245;18238:12;18190:62;18138:120;:::o;18264:137::-;18309:5;18347:6;18334:20;18325:29;;18363:32;18389:5;18363:32;:::i;:::-;18264:137;;;;:::o;18407:472::-;18474:6;18482;18531:2;18519:9;18510:7;18506:23;18502:32;18499:119;;;18537:79;;:::i;:::-;18499:119;18657:1;18682:53;18727:7;18718:6;18707:9;18703:22;18682:53;:::i;:::-;18672:63;;18628:117;18784:2;18810:52;18854:7;18845:6;18834:9;18830:22;18810:52;:::i;:::-;18800:62;;18755:117;18407:472;;;;;:::o;18885:105::-;18960:23;18977:5;18960:23;:::i;:::-;18955:3;18948:36;18885:105;;:::o;18996:142::-;19033:7;19073:58;19066:5;19062:70;19051:81;;18996:142;;;:::o;19144:108::-;19221:24;19239:5;19221:24;:::i;:::-;19216:3;19209:37;19144:108;;:::o;19348:517::-;19501:4;19496:3;19492:14;19593:4;19586:5;19582:16;19576:23;19612:61;19667:4;19662:3;19658:14;19644:12;19612:61;:::i;:::-;19516:167;19766:4;19759:5;19755:16;19749:23;19785:63;19842:4;19837:3;19833:14;19819:12;19785:63;:::i;:::-;19693:165;19470:395;19348:517;;:::o;19871:334::-;20020:4;20058:2;20047:9;20043:18;20035:26;;20071:127;20195:1;20184:9;20180:17;20171:6;20071:127;:::i;:::-;19871:334;;;;:::o;20211:180::-;20259:77;20256:1;20249:88;20356:4;20353:1;20346:15;20380:4;20377:1;20370:15;20397:320;20441:6;20478:1;20472:4;20468:12;20458:22;;20525:1;20519:4;20515:12;20546:18;20536:81;;20602:4;20594:6;20590:17;20580:27;;20536:81;20664:2;20656:6;20653:14;20633:18;20630:38;20627:84;;20683:18;;:::i;:::-;20627:84;20448:269;20397:320;;;:::o;20723:180::-;20771:77;20768:1;20761:88;20868:4;20865:1;20858:15;20892:4;20889:1;20882:15;20909:102;20951:8;20998:5;20995:1;20991:13;20970:34;;20909:102;;;:::o;21017:848::-;21078:5;21085:4;21109:6;21100:15;;21133:5;21124:14;;21147:712;21168:1;21158:8;21155:15;21147:712;;;21263:4;21258:3;21254:14;21248:4;21245:24;21242:50;;;21272:18;;:::i;:::-;21242:50;21322:1;21312:8;21308:16;21305:451;;;21737:4;21730:5;21726:16;21717:25;;21305:451;21787:4;21781;21777:15;21769:23;;21817:32;21840:8;21817:32;:::i;:::-;21805:44;;21147:712;;;21017:848;;;;;;;:::o;21871:1073::-;21925:5;22116:8;22106:40;;22137:1;22128:10;;22139:5;;22106:40;22165:4;22155:36;;22182:1;22173:10;;22184:5;;22155:36;22251:4;22299:1;22294:27;;;;22335:1;22330:191;;;;22244:277;;22294:27;22312:1;22303:10;;22314:5;;;22330:191;22375:3;22365:8;22362:17;22359:43;;;22382:18;;:::i;:::-;22359:43;22431:8;22428:1;22424:16;22415:25;;22466:3;22459:5;22456:14;22453:40;;;22473:18;;:::i;:::-;22453:40;22506:5;;;22244:277;;22630:2;22620:8;22617:16;22611:3;22605:4;22602:13;22598:36;22580:2;22570:8;22567:16;22562:2;22556:4;22553:12;22549:35;22533:111;22530:246;;;22686:8;22680:4;22676:19;22667:28;;22721:3;22714:5;22711:14;22708:40;;;22728:18;;:::i;:::-;22708:40;22761:5;;22530:246;22801:42;22839:3;22829:8;22823:4;22820:1;22801:42;:::i;:::-;22786:57;;;;22875:4;22870:3;22866:14;22859:5;22856:25;22853:51;;;22884:18;;:::i;:::-;22853:51;22933:4;22926:5;22922:16;22913:25;;21871:1073;;;;;;:::o;22950:285::-;23010:5;23034:23;23052:4;23034:23;:::i;:::-;23026:31;;23078:27;23096:8;23078:27;:::i;:::-;23066:39;;23124:104;23161:66;23151:8;23145:4;23124:104;:::i;:::-;23115:113;;22950:285;;;;:::o;23241:410::-;23281:7;23304:20;23322:1;23304:20;:::i;:::-;23299:25;;23338:20;23356:1;23338:20;:::i;:::-;23333:25;;23393:1;23390;23386:9;23415:30;23433:11;23415:30;:::i;:::-;23404:41;;23594:1;23585:7;23581:15;23578:1;23575:22;23555:1;23548:9;23528:83;23505:139;;23624:18;;:::i;:::-;23505:139;23289:362;23241:410;;;;:::o;23657:234::-;23797:34;23793:1;23785:6;23781:14;23774:58;23866:17;23861:2;23853:6;23849:15;23842:42;23657:234;:::o;23897:366::-;24039:3;24060:67;24124:2;24119:3;24060:67;:::i;:::-;24053:74;;24136:93;24225:3;24136:93;:::i;:::-;24254:2;24249:3;24245:12;24238:19;;23897:366;;;:::o;24269:419::-;24435:4;24473:2;24462:9;24458:18;24450:26;;24522:9;24516:4;24512:20;24508:1;24497:9;24493:17;24486:47;24550:131;24676:4;24550:131;:::i;:::-;24542:139;;24269:419;;;:::o;24694:191::-;24734:3;24753:20;24771:1;24753:20;:::i;:::-;24748:25;;24787:20;24805:1;24787:20;:::i;:::-;24782:25;;24830:1;24827;24823:9;24816:16;;24851:3;24848:1;24845:10;24842:36;;;24858:18;;:::i;:::-;24842:36;24694:191;;;;:::o;24891:175::-;25031:27;25027:1;25019:6;25015:14;25008:51;24891:175;:::o;25072:366::-;25214:3;25235:67;25299:2;25294:3;25235:67;:::i;:::-;25228:74;;25311:93;25400:3;25311:93;:::i;:::-;25429:2;25424:3;25420:12;25413:19;;25072:366;;;:::o;25444:419::-;25610:4;25648:2;25637:9;25633:18;25625:26;;25697:9;25691:4;25687:20;25683:1;25672:9;25668:17;25661:47;25725:131;25851:4;25725:131;:::i;:::-;25717:139;;25444:419;;;:::o;25869:234::-;26009:34;26005:1;25997:6;25993:14;25986:58;26078:17;26073:2;26065:6;26061:15;26054:42;25869:234;:::o;26109:366::-;26251:3;26272:67;26336:2;26331:3;26272:67;:::i;:::-;26265:74;;26348:93;26437:3;26348:93;:::i;:::-;26466:2;26461:3;26457:12;26450:19;;26109:366;;;:::o;26481:419::-;26647:4;26685:2;26674:9;26670:18;26662:26;;26734:9;26728:4;26724:20;26720:1;26709:9;26705:17;26698:47;26762:131;26888:4;26762:131;:::i;:::-;26754:139;;26481:419;;;:::o;26906:179::-;27046:31;27042:1;27034:6;27030:14;27023:55;26906:179;:::o;27091:366::-;27233:3;27254:67;27318:2;27313:3;27254:67;:::i;:::-;27247:74;;27330:93;27419:3;27330:93;:::i;:::-;27448:2;27443:3;27439:12;27432:19;;27091:366;;;:::o;27463:419::-;27629:4;27667:2;27656:9;27652:18;27644:26;;27716:9;27710:4;27706:20;27702:1;27691:9;27687:17;27680:47;27744:131;27870:4;27744:131;:::i;:::-;27736:139;;27463:419;;;:::o;27888:233::-;28028:34;28024:1;28016:6;28012:14;28005:58;28097:16;28092:2;28084:6;28080:15;28073:41;27888:233;:::o;28127:366::-;28269:3;28290:67;28354:2;28349:3;28290:67;:::i;:::-;28283:74;;28366:93;28455:3;28366:93;:::i;:::-;28484:2;28479:3;28475:12;28468:19;;28127:366;;;:::o;28499:419::-;28665:4;28703:2;28692:9;28688:18;28680:26;;28752:9;28746:4;28742:20;28738:1;28727:9;28723:17;28716:47;28780:131;28906:4;28780:131;:::i;:::-;28772:139;;28499:419;;;:::o;28924:85::-;28969:7;28998:5;28987:16;;28924:85;;;:::o;29015:60::-;29043:3;29064:5;29057:12;;29015:60;;;:::o;29081:154::-;29137:9;29170:59;29186:42;29195:32;29221:5;29195:32;:::i;:::-;29186:42;:::i;:::-;29170:59;:::i;:::-;29157:72;;29081:154;;;:::o;29241:143::-;29334:43;29371:5;29334:43;:::i;:::-;29329:3;29322:56;29241:143;;:::o;29390:234::-;29489:4;29527:2;29516:9;29512:18;29504:26;;29540:77;29614:1;29603:9;29599:17;29590:6;29540:77;:::i;:::-;29390:234;;;;:::o;29630:223::-;29770:34;29766:1;29758:6;29754:14;29747:58;29839:6;29834:2;29826:6;29822:15;29815:31;29630:223;:::o;29859:366::-;30001:3;30022:67;30086:2;30081:3;30022:67;:::i;:::-;30015:74;;30098:93;30187:3;30098:93;:::i;:::-;30216:2;30211:3;30207:12;30200:19;;29859:366;;;:::o;30231:419::-;30397:4;30435:2;30424:9;30420:18;30412:26;;30484:9;30478:4;30474:20;30470:1;30459:9;30455:17;30448:47;30512:131;30638:4;30512:131;:::i;:::-;30504:139;;30231:419;;;:::o;30656:171::-;30796:23;30792:1;30784:6;30780:14;30773:47;30656:171;:::o;30833:366::-;30975:3;30996:67;31060:2;31055:3;30996:67;:::i;:::-;30989:74;;31072:93;31161:3;31072:93;:::i;:::-;31190:2;31185:3;31181:12;31174:19;;30833:366;;;:::o;31205:419::-;31371:4;31409:2;31398:9;31394:18;31386:26;;31458:9;31452:4;31448:20;31444:1;31433:9;31429:17;31422:47;31486:131;31612:4;31486:131;:::i;:::-;31478:139;;31205:419;;;:::o;31630:180::-;31678:77;31675:1;31668:88;31775:4;31772:1;31765:15;31799:4;31796:1;31789:15;31816:224;31956:34;31952:1;31944:6;31940:14;31933:58;32025:7;32020:2;32012:6;32008:15;32001:32;31816:224;:::o;32046:366::-;32188:3;32209:67;32273:2;32268:3;32209:67;:::i;:::-;32202:74;;32285:93;32374:3;32285:93;:::i;:::-;32403:2;32398:3;32394:12;32387:19;;32046:366;;;:::o;32418:419::-;32584:4;32622:2;32611:9;32607:18;32599:26;;32671:9;32665:4;32661:20;32657:1;32646:9;32642:17;32635:47;32699:131;32825:4;32699:131;:::i;:::-;32691:139;;32418:419;;;:::o;32843:179::-;32983:31;32979:1;32971:6;32967:14;32960:55;32843:179;:::o;33028:366::-;33170:3;33191:67;33255:2;33250:3;33191:67;:::i;:::-;33184:74;;33267:93;33356:3;33267:93;:::i;:::-;33385:2;33380:3;33376:12;33369:19;;33028:366;;;:::o;33400:419::-;33566:4;33604:2;33593:9;33589:18;33581:26;;33653:9;33647:4;33643:20;33639:1;33628:9;33624:17;33617:47;33681:131;33807:4;33681:131;:::i;:::-;33673:139;;33400:419;;;:::o;33825:553::-;34002:4;34040:3;34029:9;34025:19;34017:27;;34054:71;34122:1;34111:9;34107:17;34098:6;34054:71;:::i;:::-;34135:72;34203:2;34192:9;34188:18;34179:6;34135:72;:::i;:::-;34217;34285:2;34274:9;34270:18;34261:6;34217:72;:::i;:::-;34299;34367:2;34356:9;34352:18;34343:6;34299:72;:::i;:::-;33825:553;;;;;;;:::o;34384:175::-;34524:27;34520:1;34512:6;34508:14;34501:51;34384:175;:::o;34565:366::-;34707:3;34728:67;34792:2;34787:3;34728:67;:::i;:::-;34721:74;;34804:93;34893:3;34804:93;:::i;:::-;34922:2;34917:3;34913:12;34906:19;;34565:366;;;:::o;34937:419::-;35103:4;35141:2;35130:9;35126:18;35118:26;;35190:9;35184:4;35180:20;35176:1;35165:9;35161:17;35154:47;35218:131;35344:4;35218:131;:::i;:::-;35210:139;;34937:419;;;:::o;35362:179::-;35502:31;35498:1;35490:6;35486:14;35479:55;35362:179;:::o;35547:366::-;35689:3;35710:67;35774:2;35769:3;35710:67;:::i;:::-;35703:74;;35786:93;35875:3;35786:93;:::i;:::-;35904:2;35899:3;35895:12;35888:19;;35547:366;;;:::o;35919:419::-;36085:4;36123:2;36112:9;36108:18;36100:26;;36172:9;36166:4;36162:20;36158:1;36147:9;36143:17;36136:47;36200:131;36326:4;36200:131;:::i;:::-;36192:139;;35919:419;;;:::o;36344:775::-;36577:4;36615:3;36604:9;36600:19;36592:27;;36629:71;36697:1;36686:9;36682:17;36673:6;36629:71;:::i;:::-;36710:72;36778:2;36767:9;36763:18;36754:6;36710:72;:::i;:::-;36792;36860:2;36849:9;36845:18;36836:6;36792:72;:::i;:::-;36874;36942:2;36931:9;36927:18;36918:6;36874:72;:::i;:::-;36956:73;37024:3;37013:9;37009:19;37000:6;36956:73;:::i;:::-;37039;37107:3;37096:9;37092:19;37083:6;37039:73;:::i;:::-;36344:775;;;;;;;;;:::o;37125:180::-;37265:32;37261:1;37253:6;37249:14;37242:56;37125:180;:::o;37311:366::-;37453:3;37474:67;37538:2;37533:3;37474:67;:::i;:::-;37467:74;;37550:93;37639:3;37550:93;:::i;:::-;37668:2;37663:3;37659:12;37652:19;;37311:366;;;:::o;37683:419::-;37849:4;37887:2;37876:9;37872:18;37864:26;;37936:9;37930:4;37926:20;37922:1;37911:9;37907:17;37900:47;37964:131;38090:4;37964:131;:::i;:::-;37956:139;;37683:419;;;:::o;38108:223::-;38248:34;38244:1;38236:6;38232:14;38225:58;38317:6;38312:2;38304:6;38300:15;38293:31;38108:223;:::o;38337:366::-;38479:3;38500:67;38564:2;38559:3;38500:67;:::i;:::-;38493:74;;38576:93;38665:3;38576:93;:::i;:::-;38694:2;38689:3;38685:12;38678:19;;38337:366;;;:::o;38709:419::-;38875:4;38913:2;38902:9;38898:18;38890:26;;38962:9;38956:4;38952:20;38948:1;38937:9;38933:17;38926:47;38990:131;39116:4;38990:131;:::i;:::-;38982:139;;38709:419;;;:::o;39134:221::-;39274:34;39270:1;39262:6;39258:14;39251:58;39343:4;39338:2;39330:6;39326:15;39319:29;39134:221;:::o;39361:366::-;39503:3;39524:67;39588:2;39583:3;39524:67;:::i;:::-;39517:74;;39600:93;39689:3;39600:93;:::i;:::-;39718:2;39713:3;39709:12;39702:19;;39361:366;;;:::o;39733:419::-;39899:4;39937:2;39926:9;39922:18;39914:26;;39986:9;39980:4;39976:20;39972:1;39961:9;39957:17;39950:47;40014:131;40140:4;40014:131;:::i;:::-;40006:139;;39733:419;;;:::o;40158:179::-;40298:31;40294:1;40286:6;40282:14;40275:55;40158:179;:::o;40343:366::-;40485:3;40506:67;40570:2;40565:3;40506:67;:::i;:::-;40499:74;;40582:93;40671:3;40582:93;:::i;:::-;40700:2;40695:3;40691:12;40684:19;;40343:366;;;:::o;40715:419::-;40881:4;40919:2;40908:9;40904:18;40896:26;;40968:9;40962:4;40958:20;40954:1;40943:9;40939:17;40932:47;40996:131;41122:4;40996:131;:::i;:::-;40988:139;;40715:419;;;:::o;41140:224::-;41280:34;41276:1;41268:6;41264:14;41257:58;41349:7;41344:2;41336:6;41332:15;41325:32;41140:224;:::o;41370:366::-;41512:3;41533:67;41597:2;41592:3;41533:67;:::i;:::-;41526:74;;41609:93;41698:3;41609:93;:::i;:::-;41727:2;41722:3;41718:12;41711:19;;41370:366;;;:::o;41742:419::-;41908:4;41946:2;41935:9;41931:18;41923:26;;41995:9;41989:4;41985:20;41981:1;41970:9;41966:17;41959:47;42023:131;42149:4;42023:131;:::i;:::-;42015:139;;41742:419;;;:::o;42167:222::-;42307:34;42303:1;42295:6;42291:14;42284:58;42376:5;42371:2;42363:6;42359:15;42352:30;42167:222;:::o;42395:366::-;42537:3;42558:67;42622:2;42617:3;42558:67;:::i;:::-;42551:74;;42634:93;42723:3;42634:93;:::i;:::-;42752:2;42747:3;42743:12;42736:19;;42395:366;;;:::o;42767:419::-;42933:4;42971:2;42960:9;42956:18;42948:26;;43020:9;43014:4;43010:20;43006:1;42995:9;42991:17;42984:47;43048:131;43174:4;43048:131;:::i;:::-;43040:139;;42767:419;;;:::o;43192:225::-;43332:34;43328:1;43320:6;43316:14;43309:58;43401:8;43396:2;43388:6;43384:15;43377:33;43192:225;:::o;43423:366::-;43565:3;43586:67;43650:2;43645:3;43586:67;:::i;:::-;43579:74;;43662:93;43751:3;43662:93;:::i;:::-;43780:2;43775:3;43771:12;43764:19;;43423:366;;;:::o;43795:419::-;43961:4;43999:2;43988:9;43984:18;43976:26;;44048:9;44042:4;44038:20;44034:1;44023:9;44019:17;44012:47;44076:131;44202:4;44076:131;:::i;:::-;44068:139;;43795:419;;;:::o;44220:194::-;44260:4;44280:20;44298:1;44280:20;:::i;:::-;44275:25;;44314:20;44332:1;44314:20;:::i;:::-;44309:25;;44358:1;44355;44351:9;44343:17;;44382:1;44376:4;44373:11;44370:37;;;44387:18;;:::i;:::-;44370:37;44220:194;;;;:::o;44420:230::-;44560:34;44556:1;44548:6;44544:14;44537:58;44629:13;44624:2;44616:6;44612:15;44605:38;44420:230;:::o;44656:366::-;44798:3;44819:67;44883:2;44878:3;44819:67;:::i;:::-;44812:74;;44895:93;44984:3;44895:93;:::i;:::-;45013:2;45008:3;45004:12;44997:19;;44656:366;;;:::o;45028:419::-;45194:4;45232:2;45221:9;45217:18;45209:26;;45281:9;45275:4;45271:20;45267:1;45256:9;45252:17;45245:47;45309:131;45435:4;45309:131;:::i;:::-;45301:139;;45028:419;;;:::o;45453:225::-;45593:34;45589:1;45581:6;45577:14;45570:58;45662:8;45657:2;45649:6;45645:15;45638:33;45453:225;:::o;45684:366::-;45826:3;45847:67;45911:2;45906:3;45847:67;:::i;:::-;45840:74;;45923:93;46012:3;45923:93;:::i;:::-;46041:2;46036:3;46032:12;46025:19;;45684:366;;;:::o;46056:419::-;46222:4;46260:2;46249:9;46245:18;46237:26;;46309:9;46303:4;46299:20;46295:1;46284:9;46280:17;46273:47;46337:131;46463:4;46337:131;:::i;:::-;46329:139;;46056:419;;;:::o;46481:225::-;46621:34;46617:1;46609:6;46605:14;46598:58;46690:8;46685:2;46677:6;46673:15;46666:33;46481:225;:::o;46712:366::-;46854:3;46875:67;46939:2;46934:3;46875:67;:::i;:::-;46868:74;;46951:93;47040:3;46951:93;:::i;:::-;47069:2;47064:3;47060:12;47053:19;;46712:366;;;:::o;47084:419::-;47250:4;47288:2;47277:9;47273:18;47265:26;;47337:9;47331:4;47327:20;47323:1;47312:9;47308:17;47301:47;47365:131;47491:4;47365:131;:::i;:::-;47357:139;;47084:419;;;:::o;47509:148::-;47611:11;47648:3;47633:18;;47509:148;;;;:::o;47663:173::-;47803:25;47799:1;47791:6;47787:14;47780:49;47663:173;:::o;47842:402::-;48002:3;48023:85;48105:2;48100:3;48023:85;:::i;:::-;48016:92;;48117:93;48206:3;48117:93;:::i;:::-;48235:2;48230:3;48226:12;48219:19;;47842:402;;;:::o;48250:390::-;48356:3;48384:39;48417:5;48384:39;:::i;:::-;48439:89;48521:6;48516:3;48439:89;:::i;:::-;48432:96;;48537:65;48595:6;48590:3;48583:4;48576:5;48572:16;48537:65;:::i;:::-;48627:6;48622:3;48618:16;48611:23;;48360:280;48250:390;;;;:::o;48646:167::-;48786:19;48782:1;48774:6;48770:14;48763:43;48646:167;:::o;48819:402::-;48979:3;49000:85;49082:2;49077:3;49000:85;:::i;:::-;48993:92;;49094:93;49183:3;49094:93;:::i;:::-;49212:2;49207:3;49203:12;49196:19;;48819:402;;;:::o;49227:967::-;49609:3;49631:148;49775:3;49631:148;:::i;:::-;49624:155;;49796:95;49887:3;49878:6;49796:95;:::i;:::-;49789:102;;49908:148;50052:3;49908:148;:::i;:::-;49901:155;;50073:95;50164:3;50155:6;50073:95;:::i;:::-;50066:102;;50185:3;50178:10;;49227:967;;;;;:::o;50200:664::-;50405:4;50443:3;50432:9;50428:19;50420:27;;50457:71;50525:1;50514:9;50510:17;50501:6;50457:71;:::i;:::-;50538:72;50606:2;50595:9;50591:18;50582:6;50538:72;:::i;:::-;50620;50688:2;50677:9;50673:18;50664:6;50620:72;:::i;:::-;50702;50770:2;50759:9;50755:18;50746:6;50702:72;:::i;:::-;50784:73;50852:3;50841:9;50837:19;50828:6;50784:73;:::i;:::-;50200:664;;;;;;;;:::o;50870:180::-;50918:77;50915:1;50908:88;51015:4;51012:1;51005:15;51039:4;51036:1;51029:15;51056:185;51096:1;51113:20;51131:1;51113:20;:::i;:::-;51108:25;;51147:20;51165:1;51147:20;:::i;:::-;51142:25;;51186:1;51176:35;;51191:18;;:::i;:::-;51176:35;51233:1;51230;51226:9;51221:14;;51056:185;;;;:::o;51247:170::-;51387:22;51383:1;51375:6;51371:14;51364:46;51247:170;:::o;51423:366::-;51565:3;51586:67;51650:2;51645:3;51586:67;:::i;:::-;51579:74;;51662:93;51751:3;51662:93;:::i;:::-;51780:2;51775:3;51771:12;51764:19;;51423:366;;;:::o;51795:419::-;51961:4;51999:2;51988:9;51984:18;51976:26;;52048:9;52042:4;52038:20;52034:1;52023:9;52019:17;52012:47;52076:131;52202:4;52076:131;:::i;:::-;52068:139;;51795:419;;;:::o;52220:235::-;52360:34;52356:1;52348:6;52344:14;52337:58;52429:18;52424:2;52416:6;52412:15;52405:43;52220:235;:::o;52461:366::-;52603:3;52624:67;52688:2;52683:3;52624:67;:::i;:::-;52617:74;;52700:93;52789:3;52700:93;:::i;:::-;52818:2;52813:3;52809:12;52802:19;;52461:366;;;:::o;52833:419::-;52999:4;53037:2;53026:9;53022:18;53014:26;;53086:9;53080:4;53076:20;53072:1;53061:9;53057:17;53050:47;53114:131;53240:4;53114:131;:::i;:::-;53106:139;;52833:419;;;:::o;53258:141::-;53307:4;53330:3;53322:11;;53353:3;53350:1;53343:14;53387:4;53384:1;53374:18;53366:26;;53258:141;;;:::o;53405:93::-;53442:6;53489:2;53484;53477:5;53473:14;53469:23;53459:33;;53405:93;;;:::o;53504:107::-;53548:8;53598:5;53592:4;53588:16;53567:37;;53504:107;;;;:::o;53617:393::-;53686:6;53736:1;53724:10;53720:18;53759:97;53789:66;53778:9;53759:97;:::i;:::-;53877:39;53907:8;53896:9;53877:39;:::i;:::-;53865:51;;53949:4;53945:9;53938:5;53934:21;53925:30;;53998:4;53988:8;53984:19;53977:5;53974:30;53964:40;;53693:317;;53617:393;;;;;:::o;54016:142::-;54066:9;54099:53;54117:34;54126:24;54144:5;54126:24;:::i;:::-;54117:34;:::i;:::-;54099:53;:::i;:::-;54086:66;;54016:142;;;:::o;54164:75::-;54207:3;54228:5;54221:12;;54164:75;;;:::o;54245:269::-;54355:39;54386:7;54355:39;:::i;:::-;54416:91;54465:41;54489:16;54465:41;:::i;:::-;54457:6;54450:4;54444:11;54416:91;:::i;:::-;54410:4;54403:105;54321:193;54245:269;;;:::o;54520:73::-;54565:3;54520:73;:::o;54599:189::-;54676:32;;:::i;:::-;54717:65;54775:6;54767;54761:4;54717:65;:::i;:::-;54652:136;54599:189;;:::o;54794:186::-;54854:120;54871:3;54864:5;54861:14;54854:120;;;54925:39;54962:1;54955:5;54925:39;:::i;:::-;54898:1;54891:5;54887:13;54878:22;;54854:120;;;54794:186;;:::o;54986:543::-;55087:2;55082:3;55079:11;55076:446;;;55121:38;55153:5;55121:38;:::i;:::-;55205:29;55223:10;55205:29;:::i;:::-;55195:8;55191:44;55388:2;55376:10;55373:18;55370:49;;;55409:8;55394:23;;55370:49;55432:80;55488:22;55506:3;55488:22;:::i;:::-;55478:8;55474:37;55461:11;55432:80;:::i;:::-;55091:431;;55076:446;54986:543;;;:::o;55535:117::-;55589:8;55639:5;55633:4;55629:16;55608:37;;55535:117;;;;:::o;55658:169::-;55702:6;55735:51;55783:1;55779:6;55771:5;55768:1;55764:13;55735:51;:::i;:::-;55731:56;55816:4;55810;55806:15;55796:25;;55709:118;55658:169;;;;:::o;55832:295::-;55908:4;56054:29;56079:3;56073:4;56054:29;:::i;:::-;56046:37;;56116:3;56113:1;56109:11;56103:4;56100:21;56092:29;;55832:295;;;;:::o;56132:1395::-;56249:37;56282:3;56249:37;:::i;:::-;56351:18;56343:6;56340:30;56337:56;;;56373:18;;:::i;:::-;56337:56;56417:38;56449:4;56443:11;56417:38;:::i;:::-;56502:67;56562:6;56554;56548:4;56502:67;:::i;:::-;56596:1;56620:4;56607:17;;56652:2;56644:6;56641:14;56669:1;56664:618;;;;57326:1;57343:6;57340:77;;;57392:9;57387:3;57383:19;57377:26;57368:35;;57340:77;57443:67;57503:6;57496:5;57443:67;:::i;:::-;57437:4;57430:81;57299:222;56634:887;;56664:618;56716:4;56712:9;56704:6;56700:22;56750:37;56782:4;56750:37;:::i;:::-;56809:1;56823:208;56837:7;56834:1;56831:14;56823:208;;;56916:9;56911:3;56907:19;56901:26;56893:6;56886:42;56967:1;56959:6;56955:14;56945:24;;57014:2;57003:9;56999:18;56986:31;;56860:4;56857:1;56853:12;56848:17;;56823:208;;;57059:6;57050:7;57047:19;57044:179;;;57117:9;57112:3;57108:19;57102:26;57160:48;57202:4;57194:6;57190:17;57179:9;57160:48;:::i;:::-;57152:6;57145:64;57067:156;57044:179;57269:1;57265;57257:6;57253:14;57249:22;57243:4;57236:36;56671:611;;;56634:887;;56224:1303;;;56132:1395;;:::o;57533:332::-;57654:4;57692:2;57681:9;57677:18;57669:26;;57705:71;57773:1;57762:9;57758:17;57749:6;57705:71;:::i;:::-;57786:72;57854:2;57843:9;57839:18;57830:6;57786:72;:::i;:::-;57533:332;;;;;:::o;57871:166::-;58011:18;58007:1;57999:6;57995:14;57988:42;57871:166;:::o;58043:366::-;58185:3;58206:67;58270:2;58265:3;58206:67;:::i;:::-;58199:74;;58282:93;58371:3;58282:93;:::i;:::-;58400:2;58395:3;58391:12;58384:19;;58043:366;;;:::o;58415:419::-;58581:4;58619:2;58608:9;58604:18;58596:26;;58668:9;58662:4;58658:20;58654:1;58643:9;58639:17;58632:47;58696:131;58822:4;58696:131;:::i;:::-;58688:139;;58415:419;;;:::o;58840:545::-;59013:4;59051:3;59040:9;59036:19;59028:27;;59065:71;59133:1;59122:9;59118:17;59109:6;59065:71;:::i;:::-;59146:68;59210:2;59199:9;59195:18;59186:6;59146:68;:::i;:::-;59224:72;59292:2;59281:9;59277:18;59268:6;59224:72;:::i;:::-;59306;59374:2;59363:9;59359:18;59350:6;59306:72;:::i;:::-;58840:545;;;;;;;:::o;59391:180::-;59439:77;59436:1;59429:88;59536:4;59533:1;59526:15;59560:4;59557:1;59550:15;59577:174;59717:26;59713:1;59705:6;59701:14;59694:50;59577:174;:::o;59757:366::-;59899:3;59920:67;59984:2;59979:3;59920:67;:::i;:::-;59913:74;;59996:93;60085:3;59996:93;:::i;:::-;60114:2;60109:3;60105:12;60098:19;;59757:366;;;:::o;60129:419::-;60295:4;60333:2;60322:9;60318:18;60310:26;;60382:9;60376:4;60372:20;60368:1;60357:9;60353:17;60346:47;60410:131;60536:4;60410:131;:::i;:::-;60402:139;;60129:419;;;:::o;60554:181::-;60694:33;60690:1;60682:6;60678:14;60671:57;60554:181;:::o;60741:366::-;60883:3;60904:67;60968:2;60963:3;60904:67;:::i;:::-;60897:74;;60980:93;61069:3;60980:93;:::i;:::-;61098:2;61093:3;61089:12;61082:19;;60741:366;;;:::o;61113:419::-;61279:4;61317:2;61306:9;61302:18;61294:26;;61366:9;61360:4;61356:20;61352:1;61341:9;61337:17;61330:47;61394:131;61520:4;61394:131;:::i;:::-;61386:139;;61113:419;;;:::o;61538:221::-;61678:34;61674:1;61666:6;61662:14;61655:58;61747:4;61742:2;61734:6;61730:15;61723:29;61538:221;:::o;61765:366::-;61907:3;61928:67;61992:2;61987:3;61928:67;:::i;:::-;61921:74;;62004:93;62093:3;62004:93;:::i;:::-;62122:2;62117:3;62113:12;62106:19;;61765:366;;;:::o;62137:419::-;62303:4;62341:2;62330:9;62326:18;62318:26;;62390:9;62384:4;62380:20;62376:1;62365:9;62361:17;62354:47;62418:131;62544:4;62418:131;:::i;:::-;62410:139;;62137:419;;;:::o;62562:171::-;62601:3;62624:24;62642:5;62624:24;:::i;:::-;62615:33;;62670:4;62663:5;62660:15;62657:41;;62678:18;;:::i;:::-;62657:41;62725:1;62718:5;62714:13;62707:20;;62562:171;;;:::o;62739:182::-;62879:34;62875:1;62867:6;62863:14;62856:58;62739:182;:::o;62927:366::-;63069:3;63090:67;63154:2;63149:3;63090:67;:::i;:::-;63083:74;;63166:93;63255:3;63166:93;:::i;:::-;63284:2;63279:3;63275:12;63268:19;;62927:366;;;:::o;63299:419::-;63465:4;63503:2;63492:9;63488:18;63480:26;;63552:9;63546:4;63542:20;63538:1;63527:9;63523:17;63516:47;63580:131;63706:4;63580:131;:::i;:::-;63572:139;;63299:419;;;:::o;63724:181::-;63864:33;63860:1;63852:6;63848:14;63841:57;63724:181;:::o;63911:366::-;64053:3;64074:67;64138:2;64133:3;64074:67;:::i;:::-;64067:74;;64150:93;64239:3;64150:93;:::i;:::-;64268:2;64263:3;64259:12;64252:19;;63911:366;;;:::o;64283:419::-;64449:4;64487:2;64476:9;64472:18;64464:26;;64536:9;64530:4;64526:20;64522:1;64511:9;64507:17;64500:47;64564:131;64690:4;64564:131;:::i;:::-;64556:139;;64283:419;;;:::o;64708:220::-;64848:34;64844:1;64836:6;64832:14;64825:58;64917:3;64912:2;64904:6;64900:15;64893:28;64708:220;:::o;64934:366::-;65076:3;65097:67;65161:2;65156:3;65097:67;:::i;:::-;65090:74;;65173:93;65262:3;65173:93;:::i;:::-;65291:2;65286:3;65282:12;65275:19;;64934:366;;;:::o;65306:419::-;65472:4;65510:2;65499:9;65495:18;65487:26;;65559:9;65553:4;65549:20;65545:1;65534:9;65530:17;65523:47;65587:131;65713:4;65587:131;:::i;:::-;65579:139;;65306:419;;;:::o;65731:221::-;65871:34;65867:1;65859:6;65855:14;65848:58;65940:4;65935:2;65927:6;65923:15;65916:29;65731:221;:::o;65958:366::-;66100:3;66121:67;66185:2;66180:3;66121:67;:::i;:::-;66114:74;;66197:93;66286:3;66197:93;:::i;:::-;66315:2;66310:3;66306:12;66299:19;;65958:366;;;:::o;66330:419::-;66496:4;66534:2;66523:9;66519:18;66511:26;;66583:9;66577:4;66573:20;66569:1;66558:9;66554:17;66547:47;66611:131;66737:4;66611:131;:::i;:::-;66603:139;;66330:419;;;:::o;66755:226::-;66895:34;66891:1;66883:6;66879:14;66872:58;66964:9;66959:2;66951:6;66947:15;66940:34;66755:226;:::o;66987:366::-;67129:3;67150:67;67214:2;67209:3;67150:67;:::i;:::-;67143:74;;67226:93;67315:3;67226:93;:::i;:::-;67344:2;67339:3;67335:12;67328:19;;66987:366;;;:::o;67359:419::-;67525:4;67563:2;67552:9;67548:18;67540:26;;67612:9;67606:4;67602:20;67598:1;67587:9;67583:17;67576:47;67640:131;67766:4;67640:131;:::i;:::-;67632:139;;67359:419;;;:::o"},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","DEFAULT_ADMIN_ROLE()":"a217fddf","DOMAIN_SEPARATOR()":"3644e515","MAX_SUPPLY()":"32cb6b0c","MINTER_ROLE()":"d5391393","PAUSER_ROLE()":"e63ab1e9","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getRoleAdmin(bytes32)":"248a9ca3","getVotes(address)":"9ab24eb0","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","increaseAllowance(address,uint256)":"39509351","initialize(string,string)":"4cd88b76","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20VotesUpgradeable.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is a fixed supply of {ERC20} token including functionalities:  - To pause and unpause the contract  - To burn and mint tokens  - To restrict functionality access for only specific roles  - To be upgraded\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"decimals()\":{\"details\":\"Returns the number of decimals `6` used to get its user representation. See {ERC20-decimals}\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `timepoint` must be in the past\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `timepoint`. Requirements: - `timepoint` must be in the past\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(string,string)\":{\"details\":\"Initializes name and symbol of the token contract Grants `DEFAULT_ADMIN_ROLE`, `PAUSER_ROLE` and `MINTER_ROLE` to the account that deploys the contract. Mints the `MAX_SUPPLY` of `MPX` Token on contract deployment.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"pause()\":{\"details\":\"Pauses all token transfers. See {Pausable-_pause}. Requirements: - The caller must have the `PAUSER_ROLE`. - The contract must not be in paused state \"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers. See {Pausable-_unpause}. Requirements: - The caller must have the `PAUSER_ROLE`. - The contract must be in paused state \"}},\"title\":\"MindplexUpgradeableToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract represents an {ERC20} utility token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MindplexUpgradeableToken.sol\":\"MindplexUpgradeableToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709\",\"dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol\":{\"keccak256\":\"0x2d600bbef9320309cd2a86c1d087eb9d6dbcc00430713ee54bbc5c5a2a11ba31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52a5380b861d676adef15f33f8f643e236a1acb2d9456beb4065307eaa22bc2a\",\"dweb:/ipfs/QmdwSfxrafQubVvCoQCU5T7bbPR8JDWU1WotSDXSiUdm33\"]},\"@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol\":{\"keccak256\":\"0xe562dab443278837fa50faddb76743399e942181881db8dccaea3bd1712994db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79ebe0e661396045cefe94f4256398cf632756d779a6871319db374c9eb128c9\",\"dweb:/ipfs/QmfCTCivb9fFhyCX8hzushzcKunvKL2N9RDsnRNdvbd11M\"]},\"@openzeppelin/contracts-upgradeable/interfaces/IERC5805Upgradeable.sol\":{\"keccak256\":\"0x19848eec9045c8b91f1ab6b1853966443e3e36bcbc307593ed37a9f0df179d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a07972c1330ee99a5d051b393260e01412ac4c14c7bc4d75d80b7cce291a6412\",\"dweb:/ipfs/QmQx1ZiAo4AbSobN41c1xUEtyX1QejydWCmY7Sj3H5aDNv\"]},\"@openzeppelin/contracts-upgradeable/interfaces/IERC6372Upgradeable.sol\":{\"keccak256\":\"0x3026befd6d69d1b46960bdc35a2ad37c0e1352f26983ee3728dd61fd32aa308a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2001b7209fd4920ec7674f194db7fe163dfea7a7af2dd25fe6c0e5a94dc595c\",\"dweb:/ipfs/QmXX2zTFyiNWoDxivV3trKcKWifAENMqNAB34NgjWq5feX\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee\",\"dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x3988ac03e4819acd4b5adf41de7d43c1471748ddc2d73d2c7aca1e3827402e5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1cabb782a72f8d9f5b7df868144e78c048be74b5bdc0799a5f2580267be4d32\",\"dweb:/ipfs/QmRoUEeKUgp6DeuZAx3a3C1Gy2ySmZfVu639a1TvEBA3SA\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol\":{\"keccak256\":\"0x435286e01fcfb0bed104e44b9bf9d8abfe9f7b0a8f576e5bbef5eb91fe55e1d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22e9068747b6a7d9de3730525e09a369f65991c88377499582c1b8fe92961a27\",\"dweb:/ipfs/QmafdiqMV6eGdZbm9wJRr2ExhhAZ5uXNtyqqwvmgyzwEaF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce6e5ae4633559c2aad156be884a96f7a9beb8dd31b1b630a6de55972e3af622\",\"dweb:/ipfs/QmQasz4sQoexkrvB7wCQAY6NbMoCtPS7AqomymRoJGYz85\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0xeb8d6be406a373771724922eb41b5d593bc8e2dc705daa22cd1145cfc8f5a3a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dcf8f1b2f1869895bffaa1d83ea0e3ab5b42275c97248eda76441e64b343b66\",\"dweb:/ipfs/QmRqs6vX3dnVkRtdXmrxP7a677eaNnTUjY48DT96q6dMcZ\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"contracts/MindplexUpgradeableToken.sol\":{\"keccak256\":\"0xa2e270e75ede092ca1e2de297a7f0398eea44dcf68b91b215a5e46332a5af09c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec875ab5fb835e6e2b0b60c8db24ae3b70e95800ae88472d24ae90ea171506fc\",\"dweb:/ipfs/QmcQSvkq5NBFzWpJinedxqL7jUN8TKJGoPQnF7DKMXPsWz\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":542,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":545,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2898,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":3895,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":39,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"_roles","offset":0,"slot":"101","type":"t_mapping(t_bytes32,t_struct(RoleData)34_storage)"},{"astId":334,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"},{"astId":850,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"_balances","offset":0,"slot":"151","type":"t_mapping(t_address,t_uint256)"},{"astId":856,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"_allowances","offset":0,"slot":"152","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":858,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"_totalSupply","offset":0,"slot":"153","type":"t_uint256"},{"astId":860,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"_name","offset":0,"slot":"154","type":"t_string_storage"},{"astId":862,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"_symbol","offset":0,"slot":"155","type":"t_string_storage"},{"astId":1442,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"__gap","offset":0,"slot":"156","type":"t_array(t_uint256)45_storage"},{"astId":3586,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"_hashedName","offset":0,"slot":"201","type":"t_bytes32"},{"astId":3589,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"_hashedVersion","offset":0,"slot":"202","type":"t_bytes32"},{"astId":3591,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"_name","offset":0,"slot":"203","type":"t_string_storage"},{"astId":3593,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"_version","offset":0,"slot":"204","type":"t_string_storage"},{"astId":3851,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"__gap","offset":0,"slot":"205","type":"t_array(t_uint256)48_storage"},{"astId":1547,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"_nonces","offset":0,"slot":"253","type":"t_mapping(t_address,t_struct(Counter)2905_storage)"},{"astId":1555,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","offset":0,"slot":"254","type":"t_bytes32"},{"astId":1711,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"__gap","offset":0,"slot":"255","type":"t_array(t_uint256)49_storage"},{"astId":1753,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"_delegates","offset":0,"slot":"304","type":"t_mapping(t_address,t_address)"},{"astId":1759,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"_checkpoints","offset":0,"slot":"305","type":"t_mapping(t_address,t_array(t_struct(Checkpoint)1744_storage)dyn_storage)"},{"astId":1763,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"_totalSupplyCheckpoints","offset":0,"slot":"306","type":"t_array(t_struct(Checkpoint)1744_storage)dyn_storage"},{"astId":2465,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"__gap","offset":0,"slot":"307","type":"t_array(t_uint256)47_storage"},{"astId":725,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"_paused","offset":0,"slot":"354","type":"t_bool"},{"astId":830,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"__gap","offset":0,"slot":"355","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(Checkpoint)1744_storage)dyn_storage":{"base":"t_struct(Checkpoint)1744_storage","encoding":"dynamic_array","label":"struct ERC20VotesUpgradeable.Checkpoint[]","numberOfBytes":"32"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)47_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[47]","numberOfBytes":"1504"},"t_array(t_uint256)48_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[48]","numberOfBytes":"1536"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_array(t_struct(Checkpoint)1744_storage)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])","numberOfBytes":"32","value":"t_array(t_struct(Checkpoint)1744_storage)dyn_storage"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Counter)2905_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct CountersUpgradeable.Counter)","numberOfBytes":"32","value":"t_struct(Counter)2905_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_struct(RoleData)34_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)34_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Checkpoint)1744_storage":{"encoding":"inplace","label":"struct ERC20VotesUpgradeable.Checkpoint","members":[{"astId":1741,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"fromBlock","offset":0,"slot":"0","type":"t_uint32"},{"astId":1743,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"votes","offset":4,"slot":"0","type":"t_uint224"}],"numberOfBytes":"32"},"t_struct(Counter)2905_storage":{"encoding":"inplace","label":"struct CountersUpgradeable.Counter","members":[{"astId":2904,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_struct(RoleData)34_storage":{"encoding":"inplace","label":"struct AccessControlUpgradeable.RoleData","members":[{"astId":31,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":33,"contract":"contracts/MindplexUpgradeableToken.sol:MindplexUpgradeableToken","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_uint224":{"encoding":"inplace","label":"uint224","numberOfBytes":"28"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}}}}}
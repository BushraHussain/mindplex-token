{"id":"85f64d44ee5e9bf2768ea6e1ba836a93","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.0;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n *\n * _Available since v4.5._\n */\ninterface IVotes {\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     */\n    function getPastVotes(address account, uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) external;\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5805.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../governance/utils/IVotes.sol\";\nimport \"./IERC6372.sol\";\n\ninterface IERC5805 is IERC6372, IVotes {}\n"},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC6372.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC6372 {\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() external view returns (uint48);\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() external view returns (string memory);\n}\n"},"@openzeppelin/contracts/security/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Permit.sol\";\nimport \"../ERC20.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\nimport \"../../../utils/cryptography/EIP712.sol\";\nimport \"../../../utils/Counters.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * _Available since v3.4._\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712 {\n    using Counters for Counters.Counter;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private constant _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    /**\n     * @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n     * However, to ensure consistency with the upgradeable transpiler, we will continue\n     * to reserve a slot.\n     * @custom:oz-renamed-from _PERMIT_TYPEHASH\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private _PERMIT_TYPEHASH_DEPRECATED_SLOT;\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @dev See {IERC20Permit-permit}.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\n\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @dev See {IERC20Permit-nonces}.\n     */\n    function nonces(address owner) public view virtual override returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @dev See {IERC20Permit-DOMAIN_SEPARATOR}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev \"Consume a nonce\": return the current value and increment.\n     *\n     * _Available since v4.1._\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        Counters.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/ERC20Votes.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC20Permit.sol\";\nimport \"../../../interfaces/IERC5805.sol\";\nimport \"../../../utils/math/Math.sol\";\nimport \"../../../utils/math/SafeCast.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\n\n/**\n * @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n * and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n *\n * NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n * power can be queried through the public accessors {getVotes} and {getPastVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n *\n * _Available since v4.2._\n */\nabstract contract ERC20Votes is ERC20Permit, IERC5805 {\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint224 votes;\n    }\n\n    bytes32 private constant _DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address => address) private _delegates;\n    mapping(address => Checkpoint[]) private _checkpoints;\n    Checkpoint[] private _totalSupplyCheckpoints;\n\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() public view virtual override returns (uint48) {\n        return SafeCast.toUint48(block.number);\n    }\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() public view virtual override returns (string memory) {\n        // Check that the clock was not modified\n        require(clock() == block.number, \"ERC20Votes: broken clock mode\");\n        return \"mode=blocknumber&from=default\";\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoint memory) {\n        return _checkpoints[account][pos];\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account) public view virtual returns (uint32) {\n        return SafeCast.toUint32(_checkpoints[account].length);\n    }\n\n    /**\n     * @dev Get the address `account` is currently delegating to.\n     */\n    function delegates(address account) public view virtual override returns (address) {\n        return _delegates[account];\n    }\n\n    /**\n     * @dev Gets the current votes balance for `account`\n     */\n    function getVotes(address account) public view virtual override returns (uint256) {\n        uint256 pos = _checkpoints[account].length;\n        unchecked {\n            return pos == 0 ? 0 : _checkpoints[account][pos - 1].votes;\n        }\n    }\n\n    /**\n     * @dev Retrieve the number of votes for `account` at the end of `timepoint`.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past\n     */\n    function getPastVotes(address account, uint256 timepoint) public view virtual override returns (uint256) {\n        require(timepoint < clock(), \"ERC20Votes: future lookup\");\n        return _checkpointsLookup(_checkpoints[account], timepoint);\n    }\n\n    /**\n     * @dev Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances.\n     * It is NOT the sum of all the delegated votes!\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past\n     */\n    function getPastTotalSupply(uint256 timepoint) public view virtual override returns (uint256) {\n        require(timepoint < clock(), \"ERC20Votes: future lookup\");\n        return _checkpointsLookup(_totalSupplyCheckpoints, timepoint);\n    }\n\n    /**\n     * @dev Lookup a value in a list of (sorted) checkpoints.\n     */\n    function _checkpointsLookup(Checkpoint[] storage ckpts, uint256 timepoint) private view returns (uint256) {\n        // We run a binary search to look for the last (most recent) checkpoint taken before (or at) `timepoint`.\n        //\n        // Initially we check if the block is recent to narrow the search range.\n        // During the loop, the index of the wanted checkpoint remains in the range [low-1, high).\n        // With each iteration, either `low` or `high` is moved towards the middle of the range to maintain the invariant.\n        // - If the middle checkpoint is after `timepoint`, we look in [low, mid)\n        // - If the middle checkpoint is before or equal to `timepoint`, we look in [mid+1, high)\n        // Once we reach a single value (when low == high), we've found the right checkpoint at the index high-1, if not\n        // out of bounds (in which case we're looking too far in the past and the result is 0).\n        // Note that if the latest checkpoint available is exactly for `timepoint`, we end up with an index that is\n        // past the end of the array, so we technically don't find a checkpoint after `timepoint`, but it works out\n        // the same.\n        uint256 length = ckpts.length;\n\n        uint256 low = 0;\n        uint256 high = length;\n\n        if (length > 5) {\n            uint256 mid = length - Math.sqrt(length);\n            if (_unsafeAccess(ckpts, mid).fromBlock > timepoint) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(ckpts, mid).fromBlock > timepoint) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        unchecked {\n            return high == 0 ? 0 : _unsafeAccess(ckpts, high - 1).votes;\n        }\n    }\n\n    /**\n     * @dev Delegate votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual override {\n        _delegate(_msgSender(), delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= expiry, \"ERC20Votes: signature expired\");\n        address signer = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(_DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        require(nonce == _useNonce(signer), \"ERC20Votes: invalid nonce\");\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1).\n     */\n    function _maxSupply() internal view virtual returns (uint224) {\n        return type(uint224).max;\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been increased.\n     */\n    function _mint(address account, uint256 amount) internal virtual override {\n        super._mint(account, amount);\n        require(totalSupply() <= _maxSupply(), \"ERC20Votes: total supply risks overflowing votes\");\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _add, amount);\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been decreased.\n     */\n    function _burn(address account, uint256 amount) internal virtual override {\n        super._burn(account, amount);\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _subtract, amount);\n    }\n\n    /**\n     * @dev Move voting power when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual override {\n        super._afterTokenTransfer(from, to, amount);\n\n        _moveVotingPower(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Change delegation for `delegator` to `delegatee`.\n     *\n     * Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}.\n     */\n    function _delegate(address delegator, address delegatee) internal virtual {\n        address currentDelegate = delegates(delegator);\n        uint256 delegatorBalance = balanceOf(delegator);\n        _delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveVotingPower(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveVotingPower(address src, address dst, uint256 amount) private {\n        if (src != dst && amount > 0) {\n            if (src != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[src], _subtract, amount);\n                emit DelegateVotesChanged(src, oldWeight, newWeight);\n            }\n\n            if (dst != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[dst], _add, amount);\n                emit DelegateVotesChanged(dst, oldWeight, newWeight);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        Checkpoint[] storage ckpts,\n        function(uint256, uint256) view returns (uint256) op,\n        uint256 delta\n    ) private returns (uint256 oldWeight, uint256 newWeight) {\n        uint256 pos = ckpts.length;\n\n        unchecked {\n            Checkpoint memory oldCkpt = pos == 0 ? Checkpoint(0, 0) : _unsafeAccess(ckpts, pos - 1);\n\n            oldWeight = oldCkpt.votes;\n            newWeight = op(oldWeight, delta);\n\n            if (pos > 0 && oldCkpt.fromBlock == clock()) {\n                _unsafeAccess(ckpts, pos - 1).votes = SafeCast.toUint224(newWeight);\n            } else {\n                ckpts.push(Checkpoint({fromBlock: SafeCast.toUint32(clock()), votes: SafeCast.toUint224(newWeight)}));\n            }\n        }\n    }\n\n    function _add(uint256 a, uint256 b) private pure returns (uint256) {\n        return a + b;\n    }\n\n    function _subtract(uint256 a, uint256 b) private pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(Checkpoint[] storage ckpts, uint256 pos) private pure returns (Checkpoint storage result) {\n        assembly {\n            mstore(0, ckpts.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./ECDSA.sol\";\nimport \"../ShortStrings.sol\";\nimport \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * _Available since v3.4._\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant _TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {EIP-5267}.\n     *\n     * _Available since v4.9._\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        override\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _name.toStringWithFallback(_nameFallback),\n            _version.toStringWithFallback(_versionFallback),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 248 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 240 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 232 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 224 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 216 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 208 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 200 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 192 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 184 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 176 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 168 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 160 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 152 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 144 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 136 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 128 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 120 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 112 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 104 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 96 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 88 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 80 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 72 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 64 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 56 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 48 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 40 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 32 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 24 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 16 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 8 bits\");\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant _FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(_FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/MindplexToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\nfunction c_78df1d9b(bytes8 c__78df1d9b) pure {}\nfunction c_true78df1d9b(bytes8 c__78df1d9b) pure returns (bool){ return true; }\nfunction c_false78df1d9b(bytes8 c__78df1d9b) pure returns (bool){ return false; }\n\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n/**\n *  @title Mindplex Token\n *  @notice This contract represents an {ERC20} utility token\n *  @dev This contract is a fixed supply of {ERC20} token including functionalities:\n *  - To pause and unpause the contract\n *  - To burn and mint tokens\n *  - To restrict functionality access for only specific roles\n*/\ncontract MindplexToken is \n    ERC20Burnable, \n    ERC20Votes,\n    Pausable, \n    AccessControl \n{\nfunction c_f3f67bc5(bytes8 c__f3f67bc5) internal pure {}\nfunction c_truef3f67bc5(bytes8 c__f3f67bc5) internal pure returns (bool){ return true; }\nfunction c_falsef3f67bc5(bytes8 c__f3f67bc5) internal pure returns (bool){ return false; }\nmodifier c_modf2554e1c{ c_f3f67bc5(0xe7799f75aa74b71b); /* modifier-post */ \n _; }\nmodifier c_mod2dddccc6{ c_f3f67bc5(0x2f5ad4669bd321e0); /* modifier-pre */ \n _; }\nmodifier c_mod30931bea{ c_f3f67bc5(0x276455260c16655d); /* modifier-post */ \n _; }\nmodifier c_mod0765129f{ c_f3f67bc5(0xe92d42db38907ad6); /* modifier-pre */ \n _; }\nmodifier c_mod4e17ff09{ c_f3f67bc5(0xaf518162f0bae077); /* modifier-post */ \n _; }\nmodifier c_mod015d3da5{ c_f3f67bc5(0xe425eb11adc8483d); /* modifier-pre */ \n _; }\nmodifier c_mod13bb5bd1{ c_f3f67bc5(0x8398169f875f39bd); /* modifier-post */ \n _; }\nmodifier c_modaec0bfb9{ c_f3f67bc5(0x8191c84fdd98c68e); /* modifier-pre */ \n _; }\nmodifier c_mod97dc6440{ c_f3f67bc5(0x5c94a4b4954cf765); /* modifier-post */ \n _; }\nmodifier c_mod41d44f3b{ c_f3f67bc5(0xf4e7492f9daf180e); /* modifier-pre */ \n _; }\n\n    // Role that has the access to pause and unpause this contract\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    // Role that has the access to mint tokens on this contract \n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    // Max supply of the token\n    uint256 public constant MAX_SUPPLY = 1000000000 * 10**uint256(6);\n\n    //------------------------------- Constructor -----------------------------// \n\n    constructor(\n        string memory name_, \n        string memory symbol_\n    ) \n        ERC20(name_, symbol_)\n        ERC20Permit(name_)\n    {c_f3f67bc5(0xeba0d8436219ed85); /* function */ \n \nc_f3f67bc5(0x58bf939d88f9fe1e); /* line */ \n        c_f3f67bc5(0x6e9e60f73b8a55de); /* statement */ \n_grantRole(DEFAULT_ADMIN_ROLE, _msgSender());\nc_f3f67bc5(0xf7c2d9a9bbf50a6b); /* line */ \n        c_f3f67bc5(0xb99ff1082264cb44); /* statement */ \n_grantRole(PAUSER_ROLE, _msgSender());\nc_f3f67bc5(0xdbf0a4666bc2d4e3); /* line */ \n        c_f3f67bc5(0xe7ee6ba8480c9826); /* statement */ \n_grantRole(MINTER_ROLE, _msgSender());\nc_f3f67bc5(0x12c6de024a999eae); /* line */ \n        c_f3f67bc5(0x689918b0a1b78f1a); /* statement */ \n_mint(_msgSender(), MAX_SUPPLY);\n    }\n\n    //------------------------------- EXTERNAL -----------------------------// \n\n    function mint(\n        address to, \n        uint256 amount\n    ) \n        external \n         c_mod41d44f3b whenNotPaused c_mod97dc6440 \n         c_modaec0bfb9 onlyRole(MINTER_ROLE) c_mod13bb5bd1  \n    {c_f3f67bc5(0xd186fc3c7d5c0857); /* function */ \n\nc_f3f67bc5(0xbbccc91f5edd3dfd); /* line */ \n        c_f3f67bc5(0xe04a6d1d34b3bc53); /* requirePre */ \nc_f3f67bc5(0x4093e13d06852552); /* statement */ \nrequire(\n            totalSupply() + amount <= MAX_SUPPLY,\n            \"Token to be minted should not exceed Max supply\"\n        );c_f3f67bc5(0x9dbeb46d1393cd3f); /* requirePost */ \n \nc_f3f67bc5(0xd1fb9ed397c21e55); /* line */ \n        c_f3f67bc5(0x197095a704d8fbc6); /* statement */ \n_mint(to, amount);\n    }\n\n    /**\n     * @dev Pauses all token transfers.\n     *\n     * See {Pausable-_pause}.\n     *\n     * Requirements:\n     *\n     * - The caller must have the `PAUSER_ROLE`.\n     * - The contract must not be in paused state \n    */\n    function pause() external  c_mod015d3da5 onlyRole(PAUSER_ROLE) c_mod4e17ff09  {c_f3f67bc5(0xb53283ada1a9a05a); /* function */ \n\nc_f3f67bc5(0xadffed96f4d632c2); /* line */ \n        c_f3f67bc5(0xc6dbfa490cfdb469); /* statement */ \n_pause();\n    }\n\n    /**\n     * @dev Unpauses all token transfers.\n     *\n     * See {Pausable-_unpause}.\n     *\n     * Requirements:\n     *\n     * - The caller must have the `PAUSER_ROLE`.\n     * - The contract must be in paused state \n    */\n    function unpause() external  c_mod0765129f onlyRole(PAUSER_ROLE) c_mod30931bea  {c_f3f67bc5(0x036e936efaed435c); /* function */ \n\nc_f3f67bc5(0x2aa604e1c28f718f); /* line */ \n        c_f3f67bc5(0x552e728a203151f4); /* statement */ \n_unpause();\n    }\n\n    //------------------------------- PUBLIC -----------------------------// \n\n    /**\n    * @dev Returns the number of decimals `6` used to get its user representation.\n    * See {ERC20-decimals}\n    */\n    function decimals() public pure override returns (uint8) {c_f3f67bc5(0x11a8dfff866ee397); /* function */ \n\nc_f3f67bc5(0x0d43225a74de2d3a); /* line */ \n        c_f3f67bc5(0x2ac7bc60210945db); /* statement */ \nreturn 6;\n    }\n\n    //------------------------------- INTERNAL -----------------------------// \n\n    /**\n     * @dev See {ERC20-_beforeTokenTransfer}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n    */\n    function _beforeTokenTransfer(\n        address from, \n        address to, \n        uint256 amount\n    ) \n        internal \n        override\n         c_mod2dddccc6 whenNotPaused c_modf2554e1c  \n    {c_f3f67bc5(0xfc80a80801390eff); /* function */ \n\nc_f3f67bc5(0x7ee51835770edb09); /* line */ \n        c_f3f67bc5(0xd598313a3f39905e); /* statement */ \nsuper._beforeTokenTransfer(from, to, amount);\n    }\n\n    /**\n     * @dev Move voting power when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n    */\n    function _afterTokenTransfer(\n        address from, \n        address to, \n        uint256 amount\n    ) \n        internal \n        override(ERC20, ERC20Votes)\n    {c_f3f67bc5(0x3fcd046526a50e6b); /* function */ \n\nc_f3f67bc5(0xd352e7a2ac74bdd0); /* line */ \n        c_f3f67bc5(0xcfeac663810cc1d7); /* statement */ \nsuper._afterTokenTransfer(from, to, amount);\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been increased.\n     */\n    function _mint(\n        address account, \n        uint256 amount\n    ) \n        internal \n        override(ERC20, ERC20Votes) \n    {c_f3f67bc5(0x387313e8392f8078); /* function */ \n\nc_f3f67bc5(0xa8d134d5181650e3); /* line */ \n        c_f3f67bc5(0x5a4458da72185b20); /* statement */ \nsuper._mint(account, amount);\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been decreased.\n     */\n    function _burn(\n        address account, \n        uint256 amount\n    ) \n        internal \n        override(ERC20, ERC20Votes) \n    {c_f3f67bc5(0x9a48b9048b924447); /* function */ \n\nc_f3f67bc5(0x25868aeced47b2e3); /* line */ \n        c_f3f67bc5(0xa9ff7514cae174a3); /* statement */ \nsuper._burn(account, amount);\n    }\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}},"metadata":{"useLiteralContent":false}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n --> contracts/MindplexToken.sol:4:25:\n  |\n4 | function c_true78df1d9b(bytes8 c__78df1d9b) pure returns (bool){ return true; }\n  |                         ^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":147,"file":"contracts/MindplexToken.sol","start":129},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n --> contracts/MindplexToken.sol:5:26:\n  |\n5 | function c_false78df1d9b(bytes8 c__78df1d9b) pure returns (bool){ return false; }\n  |                          ^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":228,"file":"contracts/MindplexToken.sol","start":210},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/MindplexToken.sol:27:25:\n   |\n27 | function c_truef3f67bc5(bytes8 c__f3f67bc5) internal pure returns (bool){ return true; }\n   |                         ^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":1042,"file":"contracts/MindplexToken.sol","start":1024},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/MindplexToken.sol:28:26:\n   |\n28 | function c_falsef3f67bc5(bytes8 c__f3f67bc5) internal pure returns (bool){ return false; }\n   |                          ^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":1132,"file":"contracts/MindplexToken.sol","start":1114},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[315],"Context":[2321],"ERC165":[3544],"IAccessControl":[388],"IERC165":[3556],"Math":[4422],"SignedMath":[6068],"Strings":[2950]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":389,"src":"133:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":2322,"src":"164:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":2951,"src":"195:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":3545,"src":"226:43:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Context","nameLocations":["1967:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2321,"src":"1967:7:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"1967:7:0"},{"baseName":{"id":9,"name":"IAccessControl","nameLocations":["1976:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":388,"src":"1976:14:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1976:14:0"},{"baseName":{"id":11,"name":"ERC165","nameLocations":["1992:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":3544,"src":"1992:6:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1992:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"271:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":315,"linearizedBaseContracts":[315,3544,3556,388,2321],"name":"AccessControl","nameLocation":"1950:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":19,"members":[{"constant":false,"id":16,"mutability":"mutable","name":"members","nameLocation":"2056:7:0","nodeType":"VariableDeclaration","scope":19,"src":"2031:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":15,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2031:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":14,"name":"bool","nodeType":"ElementaryTypeName","src":"2050:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"adminRole","nameLocation":"2081:9:0","nodeType":"VariableDeclaration","scope":19,"src":"2073:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2073:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2012:8:0","nodeType":"StructDefinition","scope":315,"src":"2005:92:0","visibility":"public"},{"constant":false,"id":24,"mutability":"mutable","name":"_roles","nameLocation":"2140:6:0","nodeType":"VariableDeclaration","scope":315,"src":"2103:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":23,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2103:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"RoleData","nameLocations":["2122:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":19,"src":"2122:8:0"},"referencedDeclaration":19,"src":"2122:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":27,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2177:18:0","nodeType":"VariableDeclaration","scope":315,"src":"2153:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2198:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":37,"nodeType":"Block","src":"2621:44:0","statements":[{"expression":{"arguments":[{"id":33,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2642:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":32,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":92,"src":"2631:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2631:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"2631:16:0"},{"id":36,"nodeType":"PlaceholderStatement","src":"2657:1:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"2209:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":38,"name":"onlyRole","nameLocation":"2598:8:0","nodeType":"ModifierDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"role","nameLocation":"2615:4:0","nodeType":"VariableDeclaration","scope":38,"src":"2607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2606:14:0"},"src":"2589:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[3543],"body":{"id":59,"nodeType":"Block","src":"2823:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2840:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":49,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2860:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}],"id":48,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2855:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$388","typeString":"type(contract IAccessControl)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2876:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2855:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2840:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":55,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2915:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":53,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2891:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$315_$","typeString":"type(contract super AccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2897:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3543,"src":"2891:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2891:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2840:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":46,"id":58,"nodeType":"Return","src":"2833:94:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2671:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":60,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2741:17:0","nodeType":"FunctionDefinition","overrides":{"id":43,"nodeType":"OverrideSpecifier","overrides":[],"src":"2799:8:0"},"parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"interfaceId","nameLocation":"2766:11:0","nodeType":"VariableDeclaration","scope":60,"src":"2759:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":40,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2759:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2758:20:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60,"src":"2817:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"2817:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2816:6:0"},"scope":315,"src":"2732:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[355],"body":{"id":78,"nodeType":"Block","src":"3113:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":71,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3130:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":73,"indexExpression":{"id":72,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3137:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3143:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"3130:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":76,"indexExpression":{"id":75,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3151:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":70,"id":77,"nodeType":"Return","src":"3123:36:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"2940:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3030:7:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"3089:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"role","nameLocation":"3046:4:0","nodeType":"VariableDeclaration","scope":79,"src":"3038:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3038:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"account","nameLocation":"3060:7:0","nodeType":"VariableDeclaration","scope":79,"src":"3052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"3052:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3037:31:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"3107:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":68,"name":"bool","nodeType":"ElementaryTypeName","src":"3107:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3106:6:0"},"scope":315,"src":"3021:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":91,"nodeType":"Block","src":"3516:47:0","statements":[{"expression":{"arguments":[{"id":86,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3537:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"3543:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3543:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":85,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":131,"src":"3526:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3526:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":90,"nodeType":"ExpressionStatement","src":"3526:30:0"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"3172:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":92,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3469:10:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"role","nameLocation":"3488:4:0","nodeType":"VariableDeclaration","scope":92,"src":"3480:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3480:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3479:14:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"3516:0:0"},"scope":315,"src":"3460:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":130,"nodeType":"Block","src":"3917:406:0","statements":[{"condition":{"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3931:23:0","subExpression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"3940:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":102,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3946:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3932:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3932:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"3927:390:0","trueBody":{"id":128,"nodeType":"Block","src":"3956:361:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4064:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":113,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4135:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":111,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"4115:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2950_$","typeString":"type(library Strings)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4123:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":2924,"src":"4115:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4115:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4169:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":120,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"4242:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4234:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"4234:7:0","typeDescriptions":{}}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4234:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4249:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":116,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"4214:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2950_$","typeString":"type(library Strings)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4222:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":2904,"src":"4214:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4022:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4026:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"4022:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4022:252:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3994:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":106,"name":"string","nodeType":"ElementaryTypeName","src":"3994:6:0","typeDescriptions":{}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3994:298:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":105,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3970:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3970:336:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"3970:336:0"}]}}]},"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"3569:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3853:10:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"role","nameLocation":"3872:4:0","nodeType":"VariableDeclaration","scope":131,"src":"3864:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3864:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"account","nameLocation":"3886:7:0","nodeType":"VariableDeclaration","scope":131,"src":"3878:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"3878:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3863:31:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3917:0:0"},"scope":315,"src":"3844:479:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[363],"body":{"id":145,"nodeType":"Block","src":"4587:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":140,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4604:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":142,"indexExpression":{"id":141,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4611:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4604:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4617:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4604:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":139,"id":144,"nodeType":"Return","src":"4597:29:0"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"4329:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":146,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4513:12:0","nodeType":"FunctionDefinition","overrides":{"id":136,"nodeType":"OverrideSpecifier","overrides":[],"src":"4560:8:0"},"parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"role","nameLocation":"4534:4:0","nodeType":"VariableDeclaration","scope":146,"src":"4526:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4526:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4525:14:0"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":146,"src":"4578:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4578:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4577:9:0"},"scope":315,"src":"4504:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[371],"body":{"id":165,"nodeType":"Block","src":"5032:42:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5053:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"5059:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5042:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5042:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"ExpressionStatement","src":"5042:25:0"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"4639:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5025:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5012:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5012:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["5003:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5003:8:0"},"nodeType":"ModifierInvocation","src":"5003:28:0"}],"name":"grantRole","nameLocation":"4938:9:0","nodeType":"FunctionDefinition","overrides":{"id":153,"nodeType":"OverrideSpecifier","overrides":[],"src":"4994:8:0"},"parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"role","nameLocation":"4956:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4948:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4948:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"account","nameLocation":"4970:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4962:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"4962:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4947:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"5032:0:0"},"scope":315,"src":"4929:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[379],"body":{"id":185,"nodeType":"Block","src":"5458:43:0","statements":[{"expression":{"arguments":[{"id":181,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5480:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":182,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5486:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":180,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"5468:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5468:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"5468:26:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"5080:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":186,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":176,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5451:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":175,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5438:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5438:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":178,"kind":"modifierInvocation","modifierName":{"id":174,"name":"onlyRole","nameLocations":["5429:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5429:8:0"},"nodeType":"ModifierInvocation","src":"5429:28:0"}],"name":"revokeRole","nameLocation":"5363:10:0","nodeType":"FunctionDefinition","overrides":{"id":173,"nodeType":"OverrideSpecifier","overrides":[],"src":"5420:8:0"},"parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5382:4:0","nodeType":"VariableDeclaration","scope":186,"src":"5374:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5374:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"account","nameLocation":"5396:7:0","nodeType":"VariableDeclaration","scope":186,"src":"5388:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5373:31:0"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"5458:0:0"},"scope":315,"src":"5354:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[387],"body":{"id":208,"nodeType":"Block","src":"6115:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":196,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":197,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"6144:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6144:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6133:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6158:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6125:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6125:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"6125:83:0"},{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"6231:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6237:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"6219:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6219:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"6219:26:0"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"5507:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":209,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6047:12:0","nodeType":"FunctionDefinition","overrides":{"id":193,"nodeType":"OverrideSpecifier","overrides":[],"src":"6106:8:0"},"parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"role","nameLocation":"6068:4:0","nodeType":"VariableDeclaration","scope":209,"src":"6060:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6060:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"account","nameLocation":"6082:7:0","nodeType":"VariableDeclaration","scope":209,"src":"6074:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"6074:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6059:31:0"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"6115:0:0"},"scope":315,"src":"6038:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":222,"nodeType":"Block","src":"7005:42:0","statements":[{"expression":{"arguments":[{"id":218,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"7026:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":219,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7032:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"7015:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7015:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":221,"nodeType":"ExpressionStatement","src":"7015:25:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"6258:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":223,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6946:10:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6965:4:0","nodeType":"VariableDeclaration","scope":223,"src":"6957:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6957:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"account","nameLocation":"6979:7:0","nodeType":"VariableDeclaration","scope":223,"src":"6971:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6971:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6956:31:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"7005:0:0"},"scope":315,"src":"6937:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":250,"nodeType":"Block","src":"7245:174:0","statements":[{"assignments":[232],"declarations":[{"constant":false,"id":232,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7263:17:0","nodeType":"VariableDeclaration","scope":250,"src":"7255:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7255:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":236,"initialValue":{"arguments":[{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7296:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":233,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"7283:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7283:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7255:46:0"},{"expression":{"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":237,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7311:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":239,"indexExpression":{"id":238,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7318:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7311:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7324:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7311:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":241,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7336:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7311:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":243,"nodeType":"ExpressionStatement","src":"7311:34:0"},{"eventCall":{"arguments":[{"id":245,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7377:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":246,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7383:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":247,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7402:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":244,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7360:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7360:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":249,"nodeType":"EmitStatement","src":"7355:57:0"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"7053:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":251,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7181:13:0","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"role","nameLocation":"7203:4:0","nodeType":"VariableDeclaration","scope":251,"src":"7195:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"adminRole","nameLocation":"7217:9:0","nodeType":"VariableDeclaration","scope":251,"src":"7209:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7209:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7194:33:0"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"7245:0:0"},"scope":315,"src":"7172:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"7655:165:0","statements":[{"condition":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7669:23:0","subExpression":{"arguments":[{"id":260,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7678:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":261,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7684:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":259,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7670:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7670:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":281,"nodeType":"IfStatement","src":"7665:149:0","trueBody":{"id":280,"nodeType":"Block","src":"7694:120:0","statements":[{"expression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":264,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7708:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":266,"indexExpression":{"id":265,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7715:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7708:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7721:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7708:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":269,"indexExpression":{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7729:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7708:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7740:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7708:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":272,"nodeType":"ExpressionStatement","src":"7708:36:0"},{"eventCall":{"arguments":[{"id":274,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7775:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7781:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":276,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"7790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":273,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"7763:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"EmitStatement","src":"7758:45:0"}]}}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"7425:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7596:10:0","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"role","nameLocation":"7615:4:0","nodeType":"VariableDeclaration","scope":283,"src":"7607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"account","nameLocation":"7629:7:0","nodeType":"VariableDeclaration","scope":283,"src":"7621:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"7621:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7606:31:0"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"7655:0:0"},"scope":315,"src":"7587:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"8060:165:0","statements":[{"condition":{"arguments":[{"id":292,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8082:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8088:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"8074:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8074:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":312,"nodeType":"IfStatement","src":"8070:149:0","trueBody":{"id":311,"nodeType":"Block","src":"8098:121:0","statements":[{"expression":{"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":295,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"8112:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":297,"indexExpression":{"id":296,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8119:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8112:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8125:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"8112:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":300,"indexExpression":{"id":299,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8112:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8144:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8112:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":303,"nodeType":"ExpressionStatement","src":"8112:37:0"},{"eventCall":{"arguments":[{"id":305,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8180:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":306,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8186:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":307,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"8195:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8195:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":304,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"8168:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8168:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"EmitStatement","src":"8163:45:0"}]}}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"7826:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"8000:11:0","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"role","nameLocation":"8020:4:0","nodeType":"VariableDeclaration","scope":314,"src":"8012:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8012:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"account","nameLocation":"8034:7:0","nodeType":"VariableDeclaration","scope":314,"src":"8026:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"8026:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8011:31:0"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"8060:0:0"},"scope":315,"src":"7991:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":316,"src":"1932:6295:0","usedErrors":[],"usedEvents":[327,336,345]}],"src":"108:8120:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[388]},"id":389,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"119:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":388,"linearizedBaseContracts":[388],"name":"IAccessControl","nameLocation":"219:14:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"240:292:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":327,"name":"RoleAdminChanged","nameLocation":"543:16:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:1","nodeType":"VariableDeclaration","scope":327,"src":"560:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:1","nodeType":"VariableDeclaration","scope":327,"src":"582:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:1","nodeType":"VariableDeclaration","scope":327,"src":"617:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:1"},"src":"537:110:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"653:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":336,"name":"RoleGranted","nameLocation":"876:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:1","nodeType":"VariableDeclaration","scope":336,"src":"888:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:1","nodeType":"VariableDeclaration","scope":336,"src":"910:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:1","nodeType":"VariableDeclaration","scope":336,"src":"935:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:1"},"src":"870:89:1"},{"anonymous":false,"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"965:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":345,"name":"RoleRevoked","nameLocation":"1251:11:1","nodeType":"EventDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1263:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1285:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":343,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:1","nodeType":"VariableDeclaration","scope":345,"src":"1310:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:1"},"src":"1245:89:1"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1340:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":355,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:1","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"1446:4:1","nodeType":"VariableDeclaration","scope":355,"src":"1438:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"account","nameLocation":"1460:7:1","nodeType":"VariableDeclaration","scope":355,"src":"1452:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:1"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":355,"src":"1492:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":352,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:1"},"scope":388,"src":"1421:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"1504:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":363,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"role","nameLocation":"1723:4:1","nodeType":"VariableDeclaration","scope":363,"src":"1715:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:1"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"1752:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:1"},"scope":388,"src":"1693:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"1767:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":371,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:1","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"role","nameLocation":"2038:4:1","nodeType":"VariableDeclaration","scope":371,"src":"2030:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"account","nameLocation":"2052:7:1","nodeType":"VariableDeclaration","scope":371,"src":"2044:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:1"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"2069:0:1"},"scope":388,"src":"2011:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"2076:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":379,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:1","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"role","nameLocation":"2332:4:1","nodeType":"VariableDeclaration","scope":379,"src":"2324:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"account","nameLocation":"2346:7:1","nodeType":"VariableDeclaration","scope":379,"src":"2338:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:1"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"2363:0:1"},"scope":388,"src":"2304:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2370:480:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":387,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:1","nodeType":"FunctionDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"role","nameLocation":"2885:4:1","nodeType":"VariableDeclaration","scope":387,"src":"2877:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"account","nameLocation":"2899:7:1","nodeType":"VariableDeclaration","scope":387,"src":"2891:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:1"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[],"src":"2916:0:1"},"scope":388,"src":"2855:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":389,"src":"209:2710:1","usedErrors":[],"usedEvents":[327,336,345]}],"src":"94:2826:1"},"id":1},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","exportedSymbols":{"IVotes":[466]},"id":467,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":390,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotes","contractDependencies":[],"contractKind":"interface","documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"135:132:2","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n _Available since v4.5._"},"fullyImplemented":false,"id":466,"linearizedBaseContracts":[466],"name":"IVotes","nameLocation":"278:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"291:71:2","text":" @dev Emitted when an account changes their delegate."},"eventSelector":"3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f","id":400,"name":"DelegateChanged","nameLocation":"373:15:2","nodeType":"EventDefinition","parameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"405:9:2","nodeType":"VariableDeclaration","scope":400,"src":"389:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":393,"name":"address","nodeType":"ElementaryTypeName","src":"389:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":396,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"432:12:2","nodeType":"VariableDeclaration","scope":400,"src":"416:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"416:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":398,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"462:10:2","nodeType":"VariableDeclaration","scope":400,"src":"446:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"446:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"388:85:2"},"src":"367:107:2"},{"anonymous":false,"documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"480:124:2","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes."},"eventSelector":"dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724","id":409,"name":"DelegateVotesChanged","nameLocation":"615:20:2","nodeType":"EventDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"652:8:2","nodeType":"VariableDeclaration","scope":409,"src":"636:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":402,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":405,"indexed":false,"mutability":"mutable","name":"previousBalance","nameLocation":"670:15:2","nodeType":"VariableDeclaration","scope":409,"src":"662:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":404,"name":"uint256","nodeType":"ElementaryTypeName","src":"662:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":407,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"695:10:2","nodeType":"VariableDeclaration","scope":409,"src":"687:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":406,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:71:2"},"src":"609:98:2"},{"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"713:79:2","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":417,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"806:8:2","nodeType":"FunctionDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"account","nameLocation":"823:7:2","nodeType":"VariableDeclaration","scope":417,"src":"815:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"815:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"814:17:2"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":417,"src":"855:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"855:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"854:9:2"},"scope":466,"src":"797:67:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":418,"nodeType":"StructuredDocumentation","src":"870:230:2","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block."},"functionSelector":"3a46b1a8","id":427,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"1114:12:2","nodeType":"FunctionDefinition","parameters":{"id":423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"account","nameLocation":"1135:7:2","nodeType":"VariableDeclaration","scope":427,"src":"1127:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"1127:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":422,"mutability":"mutable","name":"timepoint","nameLocation":"1152:9:2","nodeType":"VariableDeclaration","scope":427,"src":"1144:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":421,"name":"uint256","nodeType":"ElementaryTypeName","src":"1144:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1126:36:2"},"returnParameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"1186:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":424,"name":"uint256","nodeType":"ElementaryTypeName","src":"1186:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1185:9:2"},"scope":466,"src":"1105:90:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"1201:481:2","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":435,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1696:18:2","nodeType":"FunctionDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"timepoint","nameLocation":"1723:9:2","nodeType":"VariableDeclaration","scope":435,"src":"1715:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1715:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1714:19:2"},"returnParameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":435,"src":"1757:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":432,"name":"uint256","nodeType":"ElementaryTypeName","src":"1757:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1756:9:2"},"scope":466,"src":"1687:79:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"1772:71:2","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":443,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1857:9:2","nodeType":"FunctionDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":438,"mutability":"mutable","name":"account","nameLocation":"1875:7:2","nodeType":"VariableDeclaration","scope":443,"src":"1867:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":437,"name":"address","nodeType":"ElementaryTypeName","src":"1867:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1866:17:2"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":443,"src":"1907:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1906:9:2"},"scope":466,"src":"1848:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"1922:71:2","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":449,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"2007:8:2","nodeType":"FunctionDefinition","parameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"delegatee","nameLocation":"2024:9:2","nodeType":"VariableDeclaration","scope":449,"src":"2016:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":445,"name":"address","nodeType":"ElementaryTypeName","src":"2016:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2015:19:2"},"returnParameters":{"id":448,"nodeType":"ParameterList","parameters":[],"src":"2043:0:2"},"scope":466,"src":"1998:46:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":450,"nodeType":"StructuredDocumentation","src":"2050:67:2","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":465,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"2131:13:2","nodeType":"FunctionDefinition","parameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"delegatee","nameLocation":"2153:9:2","nodeType":"VariableDeclaration","scope":465,"src":"2145:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":451,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"nonce","nameLocation":"2172:5:2","nodeType":"VariableDeclaration","scope":465,"src":"2164:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"2164:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"expiry","nameLocation":"2187:6:2","nodeType":"VariableDeclaration","scope":465,"src":"2179:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":458,"mutability":"mutable","name":"v","nameLocation":"2201:1:2","nodeType":"VariableDeclaration","scope":465,"src":"2195:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":457,"name":"uint8","nodeType":"ElementaryTypeName","src":"2195:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":460,"mutability":"mutable","name":"r","nameLocation":"2212:1:2","nodeType":"VariableDeclaration","scope":465,"src":"2204:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2204:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":462,"mutability":"mutable","name":"s","nameLocation":"2223:1:2","nodeType":"VariableDeclaration","scope":465,"src":"2215:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":461,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2215:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2144:81:2"},"returnParameters":{"id":464,"nodeType":"ParameterList","parameters":[],"src":"2234:0:2"},"scope":466,"src":"2122:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":467,"src":"268:1969:2","usedErrors":[],"usedEvents":[400,409]}],"src":"110:2128:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[491]},"id":492,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":468,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":491,"linearizedBaseContracts":[491],"name":"IERC5267","nameLocation":"142:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"157:84:3","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":471,"name":"EIP712DomainChanged","nameLocation":"252:19:3","nodeType":"EventDefinition","parameters":{"id":470,"nodeType":"ParameterList","parameters":[],"src":"271:2:3"},"src":"246:28:3"},{"documentation":{"id":472,"nodeType":"StructuredDocumentation","src":"280:140:3","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":490,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"434:12:3","nodeType":"FunctionDefinition","parameters":{"id":473,"nodeType":"ParameterList","parameters":[],"src":"446:2:3"},"returnParameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"fields","nameLocation":"516:6:3","nodeType":"VariableDeclaration","scope":490,"src":"509:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":474,"name":"bytes1","nodeType":"ElementaryTypeName","src":"509:6:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":477,"mutability":"mutable","name":"name","nameLocation":"550:4:3","nodeType":"VariableDeclaration","scope":490,"src":"536:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":476,"name":"string","nodeType":"ElementaryTypeName","src":"536:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"version","nameLocation":"582:7:3","nodeType":"VariableDeclaration","scope":490,"src":"568:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":478,"name":"string","nodeType":"ElementaryTypeName","src":"568:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":481,"mutability":"mutable","name":"chainId","nameLocation":"611:7:3","nodeType":"VariableDeclaration","scope":490,"src":"603:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":480,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":483,"mutability":"mutable","name":"verifyingContract","nameLocation":"640:17:3","nodeType":"VariableDeclaration","scope":490,"src":"632:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"632:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":485,"mutability":"mutable","name":"salt","nameLocation":"679:4:3","nodeType":"VariableDeclaration","scope":490,"src":"671:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"671:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":488,"mutability":"mutable","name":"extensions","nameLocation":"714:10:3","nodeType":"VariableDeclaration","scope":490,"src":"697:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":486,"name":"uint256","nodeType":"ElementaryTypeName","src":"697:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":487,"nodeType":"ArrayTypeName","src":"697:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"495:239:3"},"scope":491,"src":"425:310:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":492,"src":"132:605:3","usedErrors":[],"usedEvents":[471]}],"src":"107:631:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","exportedSymbols":{"IERC5805":[500],"IERC6372":[515],"IVotes":[466]},"id":501,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":493,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:4"},{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","file":"../governance/utils/IVotes.sol","id":494,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":501,"sourceUnit":467,"src":"132:40:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","file":"./IERC6372.sol","id":495,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":501,"sourceUnit":516,"src":"173:24:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":496,"name":"IERC6372","nameLocations":["221:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":515,"src":"221:8:4"},"id":497,"nodeType":"InheritanceSpecifier","src":"221:8:4"},{"baseName":{"id":498,"name":"IVotes","nameLocations":["231:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":466,"src":"231:6:4"},"id":499,"nodeType":"InheritanceSpecifier","src":"231:6:4"}],"canonicalName":"IERC5805","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":500,"linearizedBaseContracts":[500,466,515],"name":"IERC5805","nameLocation":"209:8:4","nodeType":"ContractDefinition","nodes":[],"scope":501,"src":"199:41:4","usedErrors":[],"usedEvents":[400,409]}],"src":"107:134:4"},"id":4},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","exportedSymbols":{"IERC6372":[515]},"id":516,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":502,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6372","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":515,"linearizedBaseContracts":[515],"name":"IERC6372","nameLocation":"142:8:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":503,"nodeType":"StructuredDocumentation","src":"157:133:5","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":508,"implemented":false,"kind":"function","modifiers":[],"name":"clock","nameLocation":"304:5:5","nodeType":"FunctionDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[],"src":"309:2:5"},"returnParameters":{"id":507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":508,"src":"335:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":505,"name":"uint48","nodeType":"ElementaryTypeName","src":"335:6:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"334:8:5"},"scope":515,"src":"295:48:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"349:48:5","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":514,"implemented":false,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"464:10:5","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"474:2:5"},"returnParameters":{"id":513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":514,"src":"500:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":511,"name":"string","nodeType":"ElementaryTypeName","src":"500:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"499:15:5"},"scope":515,"src":"455:60:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":516,"src":"132:385:5","usedErrors":[],"usedEvents":[]}],"src":"107:411:5"},"id":5},"@openzeppelin/contracts/security/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","exportedSymbols":{"Context":[2321],"Pausable":[623]},"id":624,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":517,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:6"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":518,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":624,"sourceUnit":2322,"src":"130:30:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":520,"name":"Context","nameLocations":["632:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2321,"src":"632:7:6"},"id":521,"nodeType":"InheritanceSpecifier","src":"632:7:6"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":519,"nodeType":"StructuredDocumentation","src":"162:439:6","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":623,"linearizedBaseContracts":[623,2321],"name":"Pausable","nameLocation":"620:8:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":522,"nodeType":"StructuredDocumentation","src":"646:73:6","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":526,"name":"Paused","nameLocation":"730:6:6","nodeType":"EventDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"745:7:6","nodeType":"VariableDeclaration","scope":526,"src":"737:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":523,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"736:17:6"},"src":"724:30:6"},{"anonymous":false,"documentation":{"id":527,"nodeType":"StructuredDocumentation","src":"760:70:6","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":531,"name":"Unpaused","nameLocation":"841:8:6","nodeType":"EventDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"858:7:6","nodeType":"VariableDeclaration","scope":531,"src":"850:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"850:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"849:17:6"},"src":"835:32:6"},{"constant":false,"id":533,"mutability":"mutable","name":"_paused","nameLocation":"886:7:6","nodeType":"VariableDeclaration","scope":623,"src":"873:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":532,"name":"bool","nodeType":"ElementaryTypeName","src":"873:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":541,"nodeType":"Block","src":"986:32:6","statements":[{"expression":{"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":537,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"996:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1006:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"996:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":540,"nodeType":"ExpressionStatement","src":"996:15:6"}]},"documentation":{"id":534,"nodeType":"StructuredDocumentation","src":"900:67:6","text":" @dev Initializes the contract in unpaused state."},"id":542,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":535,"nodeType":"ParameterList","parameters":[],"src":"983:2:6"},"returnParameters":{"id":536,"nodeType":"ParameterList","parameters":[],"src":"986:0:6"},"scope":623,"src":"972:46:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":549,"nodeType":"Block","src":"1229:47:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":545,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"1239:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1239:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":547,"nodeType":"ExpressionStatement","src":"1239:19:6"},{"id":548,"nodeType":"PlaceholderStatement","src":"1268:1:6"}]},"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"1024:175:6","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":550,"name":"whenNotPaused","nameLocation":"1213:13:6","nodeType":"ModifierDefinition","parameters":{"id":544,"nodeType":"ParameterList","parameters":[],"src":"1226:2:6"},"src":"1204:72:6","virtual":false,"visibility":"internal"},{"body":{"id":557,"nodeType":"Block","src":"1476:44:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":553,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"1486:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1486:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":555,"nodeType":"ExpressionStatement","src":"1486:16:6"},{"id":556,"nodeType":"PlaceholderStatement","src":"1512:1:6"}]},"documentation":{"id":551,"nodeType":"StructuredDocumentation","src":"1282:167:6","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":558,"name":"whenPaused","nameLocation":"1463:10:6","nodeType":"ModifierDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[],"src":"1473:2:6"},"src":"1454:66:6","virtual":false,"visibility":"internal"},{"body":{"id":566,"nodeType":"Block","src":"1668:31:6","statements":[{"expression":{"id":564,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"1685:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":563,"id":565,"nodeType":"Return","src":"1678:14:6"}]},"documentation":{"id":559,"nodeType":"StructuredDocumentation","src":"1526:84:6","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":567,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1624:6:6","nodeType":"FunctionDefinition","parameters":{"id":560,"nodeType":"ParameterList","parameters":[],"src":"1630:2:6"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":567,"src":"1662:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":561,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:6"},"scope":623,"src":"1615:84:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":578,"nodeType":"Block","src":"1818:55:6","statements":[{"expression":{"arguments":[{"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1836:9:6","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":572,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"1837:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1837:8:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:18:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":571,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1828:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":577,"nodeType":"ExpressionStatement","src":"1828:38:6"}]},"documentation":{"id":568,"nodeType":"StructuredDocumentation","src":"1705:57:6","text":" @dev Throws if the contract is paused."},"id":579,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1776:17:6","nodeType":"FunctionDefinition","parameters":{"id":569,"nodeType":"ParameterList","parameters":[],"src":"1793:2:6"},"returnParameters":{"id":570,"nodeType":"ParameterList","parameters":[],"src":"1818:0:6"},"scope":623,"src":"1767:106:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":589,"nodeType":"Block","src":"1993:58:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":584,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"2011:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2011:8:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2021:22:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":583,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2003:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2003:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":588,"nodeType":"ExpressionStatement","src":"2003:41:6"}]},"documentation":{"id":580,"nodeType":"StructuredDocumentation","src":"1879:61:6","text":" @dev Throws if the contract is not paused."},"id":590,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"1954:14:6","nodeType":"FunctionDefinition","parameters":{"id":581,"nodeType":"ParameterList","parameters":[],"src":"1968:2:6"},"returnParameters":{"id":582,"nodeType":"ParameterList","parameters":[],"src":"1993:0:6"},"scope":623,"src":"1945:106:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"2235:66:6","statements":[{"expression":{"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":596,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"2245:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2255:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2245:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":599,"nodeType":"ExpressionStatement","src":"2245:14:6"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":601,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"2281:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":600,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"2274:6:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":604,"nodeType":"EmitStatement","src":"2269:25:6"}]},"documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"2057:124:6","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":606,"implemented":true,"kind":"function","modifiers":[{"id":594,"kind":"modifierInvocation","modifierName":{"id":593,"name":"whenNotPaused","nameLocations":["2221:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":550,"src":"2221:13:6"},"nodeType":"ModifierInvocation","src":"2221:13:6"}],"name":"_pause","nameLocation":"2195:6:6","nodeType":"FunctionDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[],"src":"2201:2:6"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[],"src":"2235:0:6"},"scope":623,"src":"2186:115:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":621,"nodeType":"Block","src":"2481:69:6","statements":[{"expression":{"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":612,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"2491:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2501:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2491:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":615,"nodeType":"ExpressionStatement","src":"2491:15:6"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":617,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"2530:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2530:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":616,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"2521:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2521:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":620,"nodeType":"EmitStatement","src":"2516:27:6"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"2307:121:6","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":622,"implemented":true,"kind":"function","modifiers":[{"id":610,"kind":"modifierInvocation","modifierName":{"id":609,"name":"whenPaused","nameLocations":["2470:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":558,"src":"2470:10:6"},"nodeType":"ModifierInvocation","src":"2470:10:6"}],"name":"_unpause","nameLocation":"2442:8:6","nodeType":"FunctionDefinition","parameters":{"id":608,"nodeType":"ParameterList","parameters":[],"src":"2450:2:6"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[],"src":"2481:0:6"},"scope":623,"src":"2433:117:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":624,"src":"602:1950:6","usedErrors":[],"usedEvents":[526,531]}],"src":"105:2448:6"},"id":6},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2321],"ERC20":[1210],"IERC20":[1288],"IERC20Metadata":[2263]},"id":1211,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":625,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":626,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1211,"sourceUnit":1289,"src":"130:22:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":627,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1211,"sourceUnit":2264,"src":"153:41:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":628,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1211,"sourceUnit":2322,"src":"195:33:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":630,"name":"Context","nameLocations":["1550:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2321,"src":"1550:7:7"},"id":631,"nodeType":"InheritanceSpecifier","src":"1550:7:7"},{"baseName":{"id":632,"name":"IERC20","nameLocations":["1559:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1288,"src":"1559:6:7"},"id":633,"nodeType":"InheritanceSpecifier","src":"1559:6:7"},{"baseName":{"id":634,"name":"IERC20Metadata","nameLocations":["1567:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":2263,"src":"1567:14:7"},"id":635,"nodeType":"InheritanceSpecifier","src":"1567:14:7"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":629,"nodeType":"StructuredDocumentation","src":"230:1301:7","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1210,"linearizedBaseContracts":[1210,2263,1288,2321],"name":"ERC20","nameLocation":"1541:5:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":639,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:7","nodeType":"VariableDeclaration","scope":1210,"src":"1588:45:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":638,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":636,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":637,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":645,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:7","nodeType":"VariableDeclaration","scope":1210,"src":"1640:67:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":644,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":643,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":642,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":647,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:7","nodeType":"VariableDeclaration","scope":1210,"src":"1714:28:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":646,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":649,"mutability":"mutable","name":"_name","nameLocation":"1764:5:7","nodeType":"VariableDeclaration","scope":1210,"src":"1749:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":648,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":651,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:7","nodeType":"VariableDeclaration","scope":1210,"src":"1775:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":650,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":667,"nodeType":"Block","src":"2036:57:7","statements":[{"expression":{"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":659,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"2046:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":660,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"2054:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":662,"nodeType":"ExpressionStatement","src":"2046:13:7"},{"expression":{"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":663,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"2069:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":664,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"2079:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":666,"nodeType":"ExpressionStatement","src":"2069:17:7"}]},"documentation":{"id":652,"nodeType":"StructuredDocumentation","src":"1804:171:7","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":668,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"name_","nameLocation":"2006:5:7","nodeType":"VariableDeclaration","scope":668,"src":"1992:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":653,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":656,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:7","nodeType":"VariableDeclaration","scope":668,"src":"2013:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":655,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:7"},"returnParameters":{"id":658,"nodeType":"ParameterList","parameters":[],"src":"2036:0:7"},"scope":1210,"src":"1980:113:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2250],"body":{"id":677,"nodeType":"Block","src":"2227:29:7","statements":[{"expression":{"id":675,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"2244:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":674,"id":676,"nodeType":"Return","src":"2237:12:7"}]},"documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"2099:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":678,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:7","nodeType":"FunctionDefinition","overrides":{"id":671,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:7"},"parameters":{"id":670,"nodeType":"ParameterList","parameters":[],"src":"2171:2:7"},"returnParameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":678,"src":"2212:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":672,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:7"},"scope":1210,"src":"2158:98:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2256],"body":{"id":687,"nodeType":"Block","src":"2440:31:7","statements":[{"expression":{"id":685,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"2457:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":684,"id":686,"nodeType":"Return","src":"2450:14:7"}]},"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"2262:102:7","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":688,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:7","nodeType":"FunctionDefinition","overrides":{"id":681,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:7"},"parameters":{"id":680,"nodeType":"ParameterList","parameters":[],"src":"2384:2:7"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":688,"src":"2425:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":682,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:7"},"scope":1210,"src":"2369:102:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2262],"body":{"id":697,"nodeType":"Block","src":"3169:26:7","statements":[{"expression":{"hexValue":"3138","id":695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":694,"id":696,"nodeType":"Return","src":"3179:9:7"}]},"documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"2477:622:7","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":698,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:7","nodeType":"FunctionDefinition","overrides":{"id":691,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:7"},"parameters":{"id":690,"nodeType":"ParameterList","parameters":[],"src":"3121:2:7"},"returnParameters":{"id":694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":698,"src":"3162:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":692,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:7"},"scope":1210,"src":"3104:91:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1237],"body":{"id":707,"nodeType":"Block","src":"3325:36:7","statements":[{"expression":{"id":705,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"3342:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":704,"id":706,"nodeType":"Return","src":"3335:19:7"}]},"documentation":{"id":699,"nodeType":"StructuredDocumentation","src":"3201:49:7","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":708,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:7","nodeType":"FunctionDefinition","overrides":{"id":701,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:7"},"parameters":{"id":700,"nodeType":"ParameterList","parameters":[],"src":"3275:2:7"},"returnParameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":708,"src":"3316:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":702,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:7"},"scope":1210,"src":"3255:106:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1245],"body":{"id":721,"nodeType":"Block","src":"3502:42:7","statements":[{"expression":{"baseExpression":{"id":717,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"3519:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":719,"indexExpression":{"id":718,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"3529:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":716,"id":720,"nodeType":"Return","src":"3512:25:7"}]},"documentation":{"id":709,"nodeType":"StructuredDocumentation","src":"3367:47:7","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":722,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:7","nodeType":"FunctionDefinition","overrides":{"id":713,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:7"},"parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"account","nameLocation":"3446:7:7","nodeType":"VariableDeclaration","scope":722,"src":"3438:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:7"},"returnParameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":722,"src":"3493:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:7"},"scope":1210,"src":"3419:125:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1255],"body":{"id":746,"nodeType":"Block","src":"3825:104:7","statements":[{"assignments":[734],"declarations":[{"constant":false,"id":734,"mutability":"mutable","name":"owner","nameLocation":"3843:5:7","nodeType":"VariableDeclaration","scope":746,"src":"3835:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":737,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":735,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"3851:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:7"},{"expression":{"arguments":[{"id":739,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"3883:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":740,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"3890:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":741,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"3894:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":738,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"3873:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3873:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":743,"nodeType":"ExpressionStatement","src":"3873:28:7"},{"expression":{"hexValue":"74727565","id":744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":732,"id":745,"nodeType":"Return","src":"3911:11:7"}]},"documentation":{"id":723,"nodeType":"StructuredDocumentation","src":"3550:185:7","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":747,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:7","nodeType":"FunctionDefinition","overrides":{"id":729,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:7"},"parameters":{"id":728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"to","nameLocation":"3766:2:7","nodeType":"VariableDeclaration","scope":747,"src":"3758:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":727,"mutability":"mutable","name":"amount","nameLocation":"3778:6:7","nodeType":"VariableDeclaration","scope":747,"src":"3770:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":726,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:7"},"returnParameters":{"id":732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":747,"src":"3819:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":730,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:7"},"scope":1210,"src":"3740:189:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1265],"body":{"id":764,"nodeType":"Block","src":"4085:51:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":758,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"4102:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":760,"indexExpression":{"id":759,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"4114:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":762,"indexExpression":{"id":761,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"4121:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":757,"id":763,"nodeType":"Return","src":"4095:34:7"}]},"documentation":{"id":748,"nodeType":"StructuredDocumentation","src":"3935:47:7","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":765,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:7","nodeType":"FunctionDefinition","overrides":{"id":754,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:7"},"parameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"owner","nameLocation":"4014:5:7","nodeType":"VariableDeclaration","scope":765,"src":"4006:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":752,"mutability":"mutable","name":"spender","nameLocation":"4029:7:7","nodeType":"VariableDeclaration","scope":765,"src":"4021:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":751,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:7"},"returnParameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":765,"src":"4076:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":755,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:7"},"scope":1210,"src":"3987:149:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1275],"body":{"id":789,"nodeType":"Block","src":"4533:108:7","statements":[{"assignments":[777],"declarations":[{"constant":false,"id":777,"mutability":"mutable","name":"owner","nameLocation":"4551:5:7","nodeType":"VariableDeclaration","scope":789,"src":"4543:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":776,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":780,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":778,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"4559:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4559:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:7"},{"expression":{"arguments":[{"id":782,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"4590:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":783,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"4597:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":784,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"4606:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":781,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"4581:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4581:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":786,"nodeType":"ExpressionStatement","src":"4581:32:7"},{"expression":{"hexValue":"74727565","id":787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":775,"id":788,"nodeType":"Return","src":"4623:11:7"}]},"documentation":{"id":766,"nodeType":"StructuredDocumentation","src":"4142:297:7","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":790,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:7","nodeType":"FunctionDefinition","overrides":{"id":772,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:7"},"parameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":768,"mutability":"mutable","name":"spender","nameLocation":"4469:7:7","nodeType":"VariableDeclaration","scope":790,"src":"4461:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":767,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":770,"mutability":"mutable","name":"amount","nameLocation":"4486:6:7","nodeType":"VariableDeclaration","scope":790,"src":"4478:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:7"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":790,"src":"4527:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":773,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:7"},"scope":1210,"src":"4444:197:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1287],"body":{"id":822,"nodeType":"Block","src":"5306:153:7","statements":[{"assignments":[804],"declarations":[{"constant":false,"id":804,"mutability":"mutable","name":"spender","nameLocation":"5324:7:7","nodeType":"VariableDeclaration","scope":822,"src":"5316:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":803,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":807,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":805,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"5334:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5334:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:7"},{"expression":{"arguments":[{"id":809,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"5372:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":810,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"5378:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":811,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"5387:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":808,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"5356:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5356:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":813,"nodeType":"ExpressionStatement","src":"5356:38:7"},{"expression":{"arguments":[{"id":815,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"5414:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":816,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"5420:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":817,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"5424:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":814,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"5404:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":819,"nodeType":"ExpressionStatement","src":"5404:27:7"},{"expression":{"hexValue":"74727565","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":802,"id":821,"nodeType":"Return","src":"5441:11:7"}]},"documentation":{"id":791,"nodeType":"StructuredDocumentation","src":"4647:551:7","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":823,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:7","nodeType":"FunctionDefinition","overrides":{"id":799,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:7"},"parameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":793,"mutability":"mutable","name":"from","nameLocation":"5233:4:7","nodeType":"VariableDeclaration","scope":823,"src":"5225:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":792,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":795,"mutability":"mutable","name":"to","nameLocation":"5247:2:7","nodeType":"VariableDeclaration","scope":823,"src":"5239:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":797,"mutability":"mutable","name":"amount","nameLocation":"5259:6:7","nodeType":"VariableDeclaration","scope":823,"src":"5251:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":796,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:7"},"returnParameters":{"id":802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":823,"src":"5300:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":800,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:7"},"scope":1210,"src":"5203:256:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":851,"nodeType":"Block","src":"5948:140:7","statements":[{"assignments":[834],"declarations":[{"constant":false,"id":834,"mutability":"mutable","name":"owner","nameLocation":"5966:5:7","nodeType":"VariableDeclaration","scope":851,"src":"5958:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":837,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":835,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"5974:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:7"},{"expression":{"arguments":[{"id":839,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"6005:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":840,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"6012:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":842,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"6031:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":843,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"6038:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":841,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"6021:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":845,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"6049:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":838,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"5996:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5996:64:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":848,"nodeType":"ExpressionStatement","src":"5996:64:7"},{"expression":{"hexValue":"74727565","id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":832,"id":850,"nodeType":"Return","src":"6070:11:7"}]},"documentation":{"id":824,"nodeType":"StructuredDocumentation","src":"5465:384:7","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":852,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:7","nodeType":"FunctionDefinition","parameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":826,"mutability":"mutable","name":"spender","nameLocation":"5889:7:7","nodeType":"VariableDeclaration","scope":852,"src":"5881:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":828,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:7","nodeType":"VariableDeclaration","scope":852,"src":"5898:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:7"},"returnParameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":852,"src":"5942:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":830,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:7"},"scope":1210,"src":"5854:234:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":892,"nodeType":"Block","src":"6674:328:7","statements":[{"assignments":[863],"declarations":[{"constant":false,"id":863,"mutability":"mutable","name":"owner","nameLocation":"6692:5:7","nodeType":"VariableDeclaration","scope":892,"src":"6684:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":866,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":864,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"6700:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6700:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:7"},{"assignments":[868],"declarations":[{"constant":false,"id":868,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:7","nodeType":"VariableDeclaration","scope":892,"src":"6722:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":867,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":873,"initialValue":{"arguments":[{"id":870,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"6759:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":871,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"6766:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":869,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"6749:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":875,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"6792:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":876,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"6812:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":874,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6784:85:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":880,"nodeType":"ExpressionStatement","src":"6784:85:7"},{"id":889,"nodeType":"UncheckedBlock","src":"6879:95:7","statements":[{"expression":{"arguments":[{"id":882,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"6912:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":883,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"6919:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":884,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"6928:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":885,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"6947:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":881,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"6903:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":888,"nodeType":"ExpressionStatement","src":"6903:60:7"}]},{"expression":{"hexValue":"74727565","id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":861,"id":891,"nodeType":"Return","src":"6984:11:7"}]},"documentation":{"id":853,"nodeType":"StructuredDocumentation","src":"6094:476:7","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":893,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:7","nodeType":"FunctionDefinition","parameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":855,"mutability":"mutable","name":"spender","nameLocation":"6610:7:7","nodeType":"VariableDeclaration","scope":893,"src":"6602:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":854,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":857,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:7","nodeType":"VariableDeclaration","scope":893,"src":"6619:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:7"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":893,"src":"6668:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":859,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:7"},"scope":1210,"src":"6575:427:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":969,"nodeType":"Block","src":"7534:710:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":904,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"7552:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":905,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:7","typeDescriptions":{}}},"id":908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7560:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":903,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":912,"nodeType":"ExpressionStatement","src":"7544:68:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":914,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"7630:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":915,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:7","typeDescriptions":{}}},"id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7636:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":913,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:64:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":922,"nodeType":"ExpressionStatement","src":"7622:64:7"},{"expression":{"arguments":[{"id":924,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"7718:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":925,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"7724:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":926,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"7728:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":923,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"7697:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":928,"nodeType":"ExpressionStatement","src":"7697:38:7"},{"assignments":[930],"declarations":[{"constant":false,"id":930,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:7","nodeType":"VariableDeclaration","scope":969,"src":"7746:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":929,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":934,"initialValue":{"baseExpression":{"id":931,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"7768:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":933,"indexExpression":{"id":932,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"7778:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":936,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"7801:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":937,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"7816:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":935,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7793:72:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":941,"nodeType":"ExpressionStatement","src":"7793:72:7"},{"id":956,"nodeType":"UncheckedBlock","src":"7875:273:7","statements":[{"expression":{"id":948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":942,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"7899:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":944,"indexExpression":{"id":943,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"7909:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":945,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"7917:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":946,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"7931:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":949,"nodeType":"ExpressionStatement","src":"7899:38:7"},{"expression":{"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":950,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"8114:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":952,"indexExpression":{"id":951,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"8124:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":953,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"8131:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":955,"nodeType":"ExpressionStatement","src":"8114:23:7"}]},{"eventCall":{"arguments":[{"id":958,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"8172:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":959,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"8178:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":960,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"8182:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":957,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8163:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8163:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":962,"nodeType":"EmitStatement","src":"8158:31:7"},{"expression":{"arguments":[{"id":964,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"8220:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":965,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"8226:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":966,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"8230:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":963,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"8200:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8200:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":968,"nodeType":"ExpressionStatement","src":"8200:37:7"}]},"documentation":{"id":894,"nodeType":"StructuredDocumentation","src":"7008:443:7","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":970,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:7","nodeType":"FunctionDefinition","parameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":896,"mutability":"mutable","name":"from","nameLocation":"7483:4:7","nodeType":"VariableDeclaration","scope":970,"src":"7475:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":898,"mutability":"mutable","name":"to","nameLocation":"7497:2:7","nodeType":"VariableDeclaration","scope":970,"src":"7489:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":897,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":900,"mutability":"mutable","name":"amount","nameLocation":"7509:6:7","nodeType":"VariableDeclaration","scope":970,"src":"7501:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":899,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:7"},"returnParameters":{"id":902,"nodeType":"ParameterList","parameters":[],"src":"7534:0:7"},"scope":1210,"src":"7456:788:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1026,"nodeType":"Block","src":"8585:470:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":979,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"8603:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:7","typeDescriptions":{}}},"id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":978,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8595:65:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":987,"nodeType":"ExpressionStatement","src":"8595:65:7"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":989,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:7","typeDescriptions":{}}},"id":992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":993,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"8704:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":994,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"8713:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":988,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"8671:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8671:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":996,"nodeType":"ExpressionStatement","src":"8671:49:7"},{"expression":{"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":997,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"8731:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":998,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"8747:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1000,"nodeType":"ExpressionStatement","src":"8731:22:7"},{"id":1007,"nodeType":"UncheckedBlock","src":"8763:175:7","statements":[{"expression":{"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1001,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"8899:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1003,"indexExpression":{"id":1002,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"8909:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1004,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"8921:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1006,"nodeType":"ExpressionStatement","src":"8899:28:7"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1009,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:7","typeDescriptions":{}}},"id":1012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8961:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1013,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"8973:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1014,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"8982:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1008,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8952:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1016,"nodeType":"EmitStatement","src":"8947:42:7"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1018,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:7","typeDescriptions":{}}},"id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9020:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1022,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"9032:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1023,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"9041:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1017,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"9000:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9000:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1025,"nodeType":"ExpressionStatement","src":"9000:48:7"}]},"documentation":{"id":971,"nodeType":"StructuredDocumentation","src":"8250:265:7","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":1027,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:7","nodeType":"FunctionDefinition","parameters":{"id":976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":973,"mutability":"mutable","name":"account","nameLocation":"8543:7:7","nodeType":"VariableDeclaration","scope":1027,"src":"8535:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":972,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":975,"mutability":"mutable","name":"amount","nameLocation":"8560:6:7","nodeType":"VariableDeclaration","scope":1027,"src":"8552:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":974,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:7"},"returnParameters":{"id":977,"nodeType":"ParameterList","parameters":[],"src":"8585:0:7"},"scope":1210,"src":"8520:535:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1098,"nodeType":"Block","src":"9440:594:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1036,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"9458:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:7","typeDescriptions":{}}},"id":1040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9469:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":1042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":1035,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:67:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1044,"nodeType":"ExpressionStatement","src":"9450:67:7"},{"expression":{"arguments":[{"id":1046,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"9549:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1047,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:7","typeDescriptions":{}}},"id":1050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9558:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1051,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"9570:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1045,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"9528:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9528:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1053,"nodeType":"ExpressionStatement","src":"9528:49:7"},{"assignments":[1055],"declarations":[{"constant":false,"id":1055,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:7","nodeType":"VariableDeclaration","scope":1098,"src":"9588:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1059,"initialValue":{"baseExpression":{"id":1056,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"9613:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1058,"indexExpression":{"id":1057,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"9623:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1061,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"9649:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1062,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"9667:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":1060,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9641:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1066,"nodeType":"ExpressionStatement","src":"9641:71:7"},{"id":1079,"nodeType":"UncheckedBlock","src":"9722:194:7","statements":[{"expression":{"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1067,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"9746:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1069,"indexExpression":{"id":1068,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"9756:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1070,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"9767:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1071,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"9784:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1074,"nodeType":"ExpressionStatement","src":"9746:44:7"},{"expression":{"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1075,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"9883:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1076,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"9899:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1078,"nodeType":"ExpressionStatement","src":"9883:22:7"}]},{"eventCall":{"arguments":[{"id":1081,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"9940:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1082,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:7","typeDescriptions":{}}},"id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9949:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1086,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"9961:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1080,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"9931:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9931:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1088,"nodeType":"EmitStatement","src":"9926:42:7"},{"expression":{"arguments":[{"id":1090,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"9999:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:7","typeDescriptions":{}}},"id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10008:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1095,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"10020:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1089,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"9979:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9979:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1097,"nodeType":"ExpressionStatement","src":"9979:48:7"}]},"documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"9061:309:7","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":1099,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:7","nodeType":"FunctionDefinition","parameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"account","nameLocation":"9398:7:7","nodeType":"VariableDeclaration","scope":1099,"src":"9390:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1032,"mutability":"mutable","name":"amount","nameLocation":"9415:6:7","nodeType":"VariableDeclaration","scope":1099,"src":"9407:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:7"},"returnParameters":{"id":1034,"nodeType":"ParameterList","parameters":[],"src":"9440:0:7"},"scope":1210,"src":"9375:659:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1143,"nodeType":"Block","src":"10540:257:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1110,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"10558:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1111,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:7","typeDescriptions":{}}},"id":1114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10567:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":1109,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10550:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1118,"nodeType":"ExpressionStatement","src":"10550:68:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1120,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"10636:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:7","typeDescriptions":{}}},"id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":1119,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10628:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1128,"nodeType":"ExpressionStatement","src":"10628:68:7"},{"expression":{"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1129,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"10707:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1132,"indexExpression":{"id":1130,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"10719:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1133,"indexExpression":{"id":1131,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"10726:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1134,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"10737:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1136,"nodeType":"ExpressionStatement","src":"10707:36:7"},{"eventCall":{"arguments":[{"id":1138,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"10767:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1139,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"10774:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1140,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"10783:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1137,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"10758:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10758:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1142,"nodeType":"EmitStatement","src":"10753:37:7"}]},"documentation":{"id":1100,"nodeType":"StructuredDocumentation","src":"10040:412:7","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":1144,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:7","nodeType":"FunctionDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"owner","nameLocation":"10483:5:7","nodeType":"VariableDeclaration","scope":1144,"src":"10475:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1101,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1104,"mutability":"mutable","name":"spender","nameLocation":"10498:7:7","nodeType":"VariableDeclaration","scope":1144,"src":"10490:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"amount","nameLocation":"10515:6:7","nodeType":"VariableDeclaration","scope":1144,"src":"10507:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:7"},"returnParameters":{"id":1108,"nodeType":"ParameterList","parameters":[],"src":"10540:0:7"},"scope":1210,"src":"10457:340:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1186,"nodeType":"Block","src":"11168:321:7","statements":[{"assignments":[1155],"declarations":[{"constant":false,"id":1155,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:7","nodeType":"VariableDeclaration","scope":1186,"src":"11178:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1154,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1160,"initialValue":{"arguments":[{"id":1157,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"11215:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1158,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"11222:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1156,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"11205:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11205:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1161,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"11244:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1163,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1162,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11278:3:7","memberName":"max","nodeType":"MemberAccess","src":"11264:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1185,"nodeType":"IfStatement","src":"11240:243:7","trueBody":{"id":1184,"nodeType":"Block","src":"11283:200:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1169,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"11305:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1170,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"11325:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":1168,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1174,"nodeType":"ExpressionStatement","src":"11297:68:7"},{"id":1183,"nodeType":"UncheckedBlock","src":"11379:94:7","statements":[{"expression":{"arguments":[{"id":1176,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"11416:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1177,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"11423:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1178,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"11432:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1179,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"11451:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1175,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"11407:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11407:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1182,"nodeType":"ExpressionStatement","src":"11407:51:7"}]}]}}]},"documentation":{"id":1145,"nodeType":"StructuredDocumentation","src":"10803:270:7","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":1187,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:7","nodeType":"FunctionDefinition","parameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"owner","nameLocation":"11111:5:7","nodeType":"VariableDeclaration","scope":1187,"src":"11103:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"spender","nameLocation":"11126:7:7","nodeType":"VariableDeclaration","scope":1187,"src":"11118:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1148,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"amount","nameLocation":"11143:6:7","nodeType":"VariableDeclaration","scope":1187,"src":"11135:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1150,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:7"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[],"src":"11168:0:7"},"scope":1210,"src":"11078:411:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1197,"nodeType":"Block","src":"12162:2:7","statements":[]},"documentation":{"id":1188,"nodeType":"StructuredDocumentation","src":"11495:573:7","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1198,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:7","nodeType":"FunctionDefinition","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1190,"mutability":"mutable","name":"from","nameLocation":"12111:4:7","nodeType":"VariableDeclaration","scope":1198,"src":"12103:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1189,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1192,"mutability":"mutable","name":"to","nameLocation":"12125:2:7","nodeType":"VariableDeclaration","scope":1198,"src":"12117:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1191,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1194,"mutability":"mutable","name":"amount","nameLocation":"12137:6:7","nodeType":"VariableDeclaration","scope":1198,"src":"12129:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1193,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:7"},"returnParameters":{"id":1196,"nodeType":"ParameterList","parameters":[],"src":"12162:0:7"},"scope":1210,"src":"12073:91:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1208,"nodeType":"Block","src":"12840:2:7","statements":[]},"documentation":{"id":1199,"nodeType":"StructuredDocumentation","src":"12170:577:7","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1209,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:7","nodeType":"FunctionDefinition","parameters":{"id":1206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"from","nameLocation":"12789:4:7","nodeType":"VariableDeclaration","scope":1209,"src":"12781:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1200,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1203,"mutability":"mutable","name":"to","nameLocation":"12803:2:7","nodeType":"VariableDeclaration","scope":1209,"src":"12795:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1202,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1205,"mutability":"mutable","name":"amount","nameLocation":"12815:6:7","nodeType":"VariableDeclaration","scope":1209,"src":"12807:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1204,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:7"},"returnParameters":{"id":1207,"nodeType":"ParameterList","parameters":[],"src":"12840:0:7"},"scope":1210,"src":"12752:90:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1211,"src":"1532:11312:7","usedErrors":[],"usedEvents":[1222,1231]}],"src":"105:12740:7"},"id":7},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1288]},"id":1289,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1212,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1213,"nodeType":"StructuredDocumentation","src":"131:70:8","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1288,"linearizedBaseContracts":[1288],"name":"IERC20","nameLocation":"212:6:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1214,"nodeType":"StructuredDocumentation","src":"225:158:8","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1222,"name":"Transfer","nameLocation":"394:8:8","nodeType":"EventDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:8","nodeType":"VariableDeclaration","scope":1222,"src":"403:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1215,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1218,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:8","nodeType":"VariableDeclaration","scope":1222,"src":"425:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1220,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:8","nodeType":"VariableDeclaration","scope":1222,"src":"445:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:8"},"src":"388:72:8"},{"anonymous":false,"documentation":{"id":1223,"nodeType":"StructuredDocumentation","src":"466:148:8","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1231,"name":"Approval","nameLocation":"625:8:8","nodeType":"EventDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:8","nodeType":"VariableDeclaration","scope":1231,"src":"634:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1227,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:8","nodeType":"VariableDeclaration","scope":1231,"src":"657:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1229,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:8","nodeType":"VariableDeclaration","scope":1231,"src":"682:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1228,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:8"},"src":"619:78:8"},{"documentation":{"id":1232,"nodeType":"StructuredDocumentation","src":"703:66:8","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1237,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:8","nodeType":"FunctionDefinition","parameters":{"id":1233,"nodeType":"ParameterList","parameters":[],"src":"794:2:8"},"returnParameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1237,"src":"820:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1234,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:8"},"scope":1288,"src":"774:55:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1238,"nodeType":"StructuredDocumentation","src":"835:72:8","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1245,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:8","nodeType":"FunctionDefinition","parameters":{"id":1241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"account","nameLocation":"939:7:8","nodeType":"VariableDeclaration","scope":1245,"src":"931:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:8"},"returnParameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1245,"src":"971:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1242,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:8"},"scope":1288,"src":"912:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"986:202:8","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1255,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:8","nodeType":"FunctionDefinition","parameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"mutability":"mutable","name":"to","nameLocation":"1219:2:8","nodeType":"VariableDeclaration","scope":1255,"src":"1211:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1250,"mutability":"mutable","name":"amount","nameLocation":"1231:6:8","nodeType":"VariableDeclaration","scope":1255,"src":"1223:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:8"},"returnParameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1255,"src":"1257:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1252,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:8"},"scope":1288,"src":"1193:70:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1256,"nodeType":"StructuredDocumentation","src":"1269:264:8","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1265,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:8","nodeType":"FunctionDefinition","parameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1258,"mutability":"mutable","name":"owner","nameLocation":"1565:5:8","nodeType":"VariableDeclaration","scope":1265,"src":"1557:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1257,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1260,"mutability":"mutable","name":"spender","nameLocation":"1580:7:8","nodeType":"VariableDeclaration","scope":1265,"src":"1572:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1259,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:8"},"returnParameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1265,"src":"1612:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1262,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:8"},"scope":1288,"src":"1538:83:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1266,"nodeType":"StructuredDocumentation","src":"1627:642:8","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1275,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:8","nodeType":"FunctionDefinition","parameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1268,"mutability":"mutable","name":"spender","nameLocation":"2299:7:8","nodeType":"VariableDeclaration","scope":1275,"src":"2291:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1267,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1270,"mutability":"mutable","name":"amount","nameLocation":"2316:6:8","nodeType":"VariableDeclaration","scope":1275,"src":"2308:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1269,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:8"},"returnParameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1275,"src":"2342:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1272,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:8"},"scope":1288,"src":"2274:74:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1276,"nodeType":"StructuredDocumentation","src":"2354:287:8","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1287,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:8","nodeType":"FunctionDefinition","parameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"from","nameLocation":"2676:4:8","nodeType":"VariableDeclaration","scope":1287,"src":"2668:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1280,"mutability":"mutable","name":"to","nameLocation":"2690:2:8","nodeType":"VariableDeclaration","scope":1287,"src":"2682:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1279,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1282,"mutability":"mutable","name":"amount","nameLocation":"2702:6:8","nodeType":"VariableDeclaration","scope":1287,"src":"2694:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:8"},"returnParameters":{"id":1286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1287,"src":"2728:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1284,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:8"},"scope":1288,"src":"2646:88:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1289,"src":"202:2534:8","usedErrors":[],"usedEvents":[1222,1231]}],"src":"106:2631:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[2321],"ERC20":[1210],"ERC20Burnable":[1332],"IERC20":[1288],"IERC20Metadata":[2263]},"id":1333,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1290,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1291,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1333,"sourceUnit":1211,"src":"149:22:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":1292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1333,"sourceUnit":2322,"src":"172:36:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1294,"name":"Context","nameLocations":["454:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":2321,"src":"454:7:9"},"id":1295,"nodeType":"InheritanceSpecifier","src":"454:7:9"},{"baseName":{"id":1296,"name":"ERC20","nameLocations":["463:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":1210,"src":"463:5:9"},"id":1297,"nodeType":"InheritanceSpecifier","src":"463:5:9"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1293,"nodeType":"StructuredDocumentation","src":"210:208:9","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":1332,"linearizedBaseContracts":[1332,1210,2263,1288,2321],"name":"ERC20Burnable","nameLocation":"437:13:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1309,"nodeType":"Block","src":"623:44:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1304,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"639:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"639:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1306,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"653:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1303,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"633:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"633:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1308,"nodeType":"ExpressionStatement","src":"633:27:9"}]},"documentation":{"id":1298,"nodeType":"StructuredDocumentation","src":"475:98:9","text":" @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1310,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"587:4:9","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"amount","nameLocation":"600:6:9","nodeType":"VariableDeclaration","scope":1310,"src":"592:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"591:16:9"},"returnParameters":{"id":1302,"nodeType":"ParameterList","parameters":[],"src":"623:0:9"},"scope":1332,"src":"578:89:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1330,"nodeType":"Block","src":"1039:95:9","statements":[{"expression":{"arguments":[{"id":1319,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"1065:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1320,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"1074:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1074:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1322,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"1088:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1318,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"1049:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1049:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1324,"nodeType":"ExpressionStatement","src":"1049:46:9"},{"expression":{"arguments":[{"id":1326,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"1111:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1327,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"1120:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1325,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"1105:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1105:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1329,"nodeType":"ExpressionStatement","src":"1105:22:9"}]},"documentation":{"id":1311,"nodeType":"StructuredDocumentation","src":"673:295:9","text":" @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."},"functionSelector":"79cc6790","id":1331,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"982:8:9","nodeType":"FunctionDefinition","parameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"account","nameLocation":"999:7:9","nodeType":"VariableDeclaration","scope":1331,"src":"991:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1312,"name":"address","nodeType":"ElementaryTypeName","src":"991:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1315,"mutability":"mutable","name":"amount","nameLocation":"1016:6:9","nodeType":"VariableDeclaration","scope":1331,"src":"1008:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1008:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"990:33:9"},"returnParameters":{"id":1317,"nodeType":"ParameterList","parameters":[],"src":"1039:0:9"},"scope":1332,"src":"973:161:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1333,"src":"419:717:9","usedErrors":[],"usedEvents":[1222,1231]}],"src":"124:1013:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"Context":[2321],"Counters":[2395],"ECDSA":[3316],"EIP712":[3520],"ERC20":[1210],"ERC20Permit":[1504],"IERC20":[1288],"IERC20Metadata":[2263],"IERC20Permit":[2299],"IERC5267":[491],"Math":[4422],"ShortString":[2400],"ShortStrings":[2611],"SignedMath":[6068],"StorageSlot":[2721],"Strings":[2950]},"id":1505,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1334,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"122:23:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":1335,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1505,"sourceUnit":2300,"src":"147:28:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1336,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1505,"sourceUnit":1211,"src":"176:22:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1337,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1505,"sourceUnit":3317,"src":"199:47:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1338,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1505,"sourceUnit":3521,"src":"247:48:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"../../../utils/Counters.sol","id":1339,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1505,"sourceUnit":2396,"src":"296:37:10","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1341,"name":"ERC20","nameLocations":["886:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":1210,"src":"886:5:10"},"id":1342,"nodeType":"InheritanceSpecifier","src":"886:5:10"},{"baseName":{"id":1343,"name":"IERC20Permit","nameLocations":["893:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2299,"src":"893:12:10"},"id":1344,"nodeType":"InheritanceSpecifier","src":"893:12:10"},{"baseName":{"id":1345,"name":"EIP712","nameLocations":["907:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":3520,"src":"907:6:10"},"id":1346,"nodeType":"InheritanceSpecifier","src":"907:6:10"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"335:517:10","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._"},"fullyImplemented":true,"id":1504,"linearizedBaseContracts":[1504,3520,491,2299,1210,2263,1288,2321],"name":"ERC20Permit","nameLocation":"871:11:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1350,"libraryName":{"id":1347,"name":"Counters","nameLocations":["926:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":2395,"src":"926:8:10"},"nodeType":"UsingForDirective","src":"920:36:10","typeName":{"id":1349,"nodeType":"UserDefinedTypeName","pathNode":{"id":1348,"name":"Counters.Counter","nameLocations":["939:8:10","948:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2327,"src":"939:16:10"},"referencedDeclaration":2327,"src":"939:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2327_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":1355,"mutability":"mutable","name":"_nonces","nameLocation":"1007:7:10","nodeType":"VariableDeclaration","scope":1504,"src":"962:52:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2327_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"typeName":{"id":1354,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"970:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"962:36:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2327_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1353,"nodeType":"UserDefinedTypeName","pathNode":{"id":1352,"name":"Counters.Counter","nameLocations":["981:8:10","990:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2327,"src":"981:16:10"},"referencedDeclaration":2327,"src":"981:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2327_storage_ptr","typeString":"struct Counters.Counter"}}},"visibility":"private"},{"constant":true,"id":1360,"mutability":"constant","name":"_PERMIT_TYPEHASH","nameLocation":"1098:16:10","nodeType":"VariableDeclaration","scope":1504,"src":"1073:147:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1073:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1135:84:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1357,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1125:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1125:95:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"documentation":{"id":1361,"nodeType":"StructuredDocumentation","src":"1226:254:10","text":" @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n However, to ensure consistency with the upgradeable transpiler, we will continue\n to reserve a slot.\n @custom:oz-renamed-from _PERMIT_TYPEHASH"},"id":1363,"mutability":"mutable","name":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","nameLocation":"1553:32:10","nodeType":"VariableDeclaration","scope":1504,"src":"1537:48:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1362,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1537:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":1373,"nodeType":"Block","src":"1867:2:10","statements":[]},"documentation":{"id":1364,"nodeType":"StructuredDocumentation","src":"1592:220:10","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":1374,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1369,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"1856:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1862:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1371,"kind":"baseConstructorSpecifier","modifierName":{"id":1368,"name":"EIP712","nameLocations":["1849:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":3520,"src":"1849:6:10"},"nodeType":"ModifierInvocation","src":"1849:17:10"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1366,"mutability":"mutable","name":"name","nameLocation":"1843:4:10","nodeType":"VariableDeclaration","scope":1374,"src":"1829:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1365,"name":"string","nodeType":"ElementaryTypeName","src":"1829:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1828:20:10"},"returnParameters":{"id":1372,"nodeType":"ParameterList","parameters":[],"src":"1867:0:10"},"scope":1504,"src":"1817:52:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2284],"body":{"id":1446,"nodeType":"Block","src":"2128:428:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1394,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2146:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2152:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"2146:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1396,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"2165:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2146:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","id":1398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2175:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""},"value":"ERC20Permit: expired deadline"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""}],"id":1393,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2138:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2138:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1400,"nodeType":"ExpressionStatement","src":"2138:69:10"},{"assignments":[1402],"declarations":[{"constant":false,"id":1402,"mutability":"mutable","name":"structHash","nameLocation":"2226:10:10","nodeType":"VariableDeclaration","scope":1446,"src":"2218:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1401,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2218:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1416,"initialValue":{"arguments":[{"arguments":[{"id":1406,"name":"_PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"2260:16:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1407,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"2278:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1408,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"2285:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"2294:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1411,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"2311:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1410,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"2301:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2301:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1413,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"2319:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1404,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2249:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2253:6:10","memberName":"encode","nodeType":"MemberAccess","src":"2249:10:10","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:79:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1403,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2239:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2239:90:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2218:111:10"},{"assignments":[1418],"declarations":[{"constant":false,"id":1418,"mutability":"mutable","name":"hash","nameLocation":"2348:4:10","nodeType":"VariableDeclaration","scope":1446,"src":"2340:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1417,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2340:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1422,"initialValue":{"arguments":[{"id":1420,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"2372:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1419,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"2355:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2340:43:10"},{"assignments":[1424],"declarations":[{"constant":false,"id":1424,"mutability":"mutable","name":"signer","nameLocation":"2402:6:10","nodeType":"VariableDeclaration","scope":1446,"src":"2394:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1423,"name":"address","nodeType":"ElementaryTypeName","src":"2394:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1432,"initialValue":{"arguments":[{"id":1427,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"2425:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1428,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"2431:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1429,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"2434:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1430,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"2437:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1425,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"2411:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3316_$","typeString":"type(library ECDSA)"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2417:7:10","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3251,"src":"2411:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2411:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2394:45:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1434,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"2457:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1435,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"2467:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2457:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2474:32:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""},"value":"ERC20Permit: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""}],"id":1433,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2449:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1439,"nodeType":"ExpressionStatement","src":"2449:58:10"},{"expression":{"arguments":[{"id":1441,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"2527:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1442,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"2534:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"2543:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1440,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"2518:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2518:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1445,"nodeType":"ExpressionStatement","src":"2518:31:10"}]},"documentation":{"id":1375,"nodeType":"StructuredDocumentation","src":"1875:50:10","text":" @dev See {IERC20Permit-permit}."},"functionSelector":"d505accf","id":1447,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1939:6:10","nodeType":"FunctionDefinition","overrides":{"id":1391,"nodeType":"OverrideSpecifier","overrides":[],"src":"2119:8:10"},"parameters":{"id":1390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"owner","nameLocation":"1963:5:10","nodeType":"VariableDeclaration","scope":1447,"src":"1955:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1376,"name":"address","nodeType":"ElementaryTypeName","src":"1955:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1379,"mutability":"mutable","name":"spender","nameLocation":"1986:7:10","nodeType":"VariableDeclaration","scope":1447,"src":"1978:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1378,"name":"address","nodeType":"ElementaryTypeName","src":"1978:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1381,"mutability":"mutable","name":"value","nameLocation":"2011:5:10","nodeType":"VariableDeclaration","scope":1447,"src":"2003:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1380,"name":"uint256","nodeType":"ElementaryTypeName","src":"2003:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1383,"mutability":"mutable","name":"deadline","nameLocation":"2034:8:10","nodeType":"VariableDeclaration","scope":1447,"src":"2026:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1382,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1385,"mutability":"mutable","name":"v","nameLocation":"2058:1:10","nodeType":"VariableDeclaration","scope":1447,"src":"2052:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1384,"name":"uint8","nodeType":"ElementaryTypeName","src":"2052:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"r","nameLocation":"2077:1:10","nodeType":"VariableDeclaration","scope":1447,"src":"2069:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2069:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1389,"mutability":"mutable","name":"s","nameLocation":"2096:1:10","nodeType":"VariableDeclaration","scope":1447,"src":"2088:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2088:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1945:158:10"},"returnParameters":{"id":1392,"nodeType":"ParameterList","parameters":[],"src":"2128:0:10"},"scope":1504,"src":"1930:626:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2292],"body":{"id":1462,"nodeType":"Block","src":"2695:48:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":1456,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"2712:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2327_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1458,"indexExpression":{"id":1457,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"2720:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2712:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2327_storage","typeString":"struct Counters.Counter storage ref"}},"id":1459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2727:7:10","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2339,"src":"2712:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2327_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2327_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2712:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1455,"id":1461,"nodeType":"Return","src":"2705:31:10"}]},"documentation":{"id":1448,"nodeType":"StructuredDocumentation","src":"2562:50:10","text":" @dev See {IERC20Permit-nonces}."},"functionSelector":"7ecebe00","id":1463,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2626:6:10","nodeType":"FunctionDefinition","overrides":{"id":1452,"nodeType":"OverrideSpecifier","overrides":[],"src":"2668:8:10"},"parameters":{"id":1451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1450,"mutability":"mutable","name":"owner","nameLocation":"2641:5:10","nodeType":"VariableDeclaration","scope":1463,"src":"2633:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1449,"name":"address","nodeType":"ElementaryTypeName","src":"2633:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2632:15:10"},"returnParameters":{"id":1455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1463,"src":"2686:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1453,"name":"uint256","nodeType":"ElementaryTypeName","src":"2686:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2685:9:10"},"scope":1504,"src":"2617:126:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2298],"body":{"id":1473,"nodeType":"Block","src":"2936:44:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1470,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"2953:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2953:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1469,"id":1472,"nodeType":"Return","src":"2946:27:10"}]},"documentation":{"id":1464,"nodeType":"StructuredDocumentation","src":"2749:60:10","text":" @dev See {IERC20Permit-DOMAIN_SEPARATOR}."},"functionSelector":"3644e515","id":1474,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2876:16:10","nodeType":"FunctionDefinition","overrides":{"id":1466,"nodeType":"OverrideSpecifier","overrides":[],"src":"2909:8:10"},"parameters":{"id":1465,"nodeType":"ParameterList","parameters":[],"src":"2892:2:10"},"returnParameters":{"id":1469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1474,"src":"2927:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2927:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2926:9:10"},"scope":1504,"src":"2867:113:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1502,"nodeType":"Block","src":"3188:126:10","statements":[{"assignments":[1486],"declarations":[{"constant":false,"id":1486,"mutability":"mutable","name":"nonce","nameLocation":"3223:5:10","nodeType":"VariableDeclaration","scope":1502,"src":"3198:30:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2327_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1485,"nodeType":"UserDefinedTypeName","pathNode":{"id":1484,"name":"Counters.Counter","nameLocations":["3198:8:10","3207:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2327,"src":"3198:16:10"},"referencedDeclaration":2327,"src":"3198:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2327_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"id":1490,"initialValue":{"baseExpression":{"id":1487,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"3231:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2327_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1489,"indexExpression":{"id":1488,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"3239:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3231:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2327_storage","typeString":"struct Counters.Counter storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3198:47:10"},{"expression":{"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1491,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"3255:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1492,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"3265:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2327_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1493,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3271:7:10","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2339,"src":"3265:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2327_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2327_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3255:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1496,"nodeType":"ExpressionStatement","src":"3255:25:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1497,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"3290:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2327_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1499,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3296:9:10","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":2353,"src":"3290:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$2327_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$2327_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3290:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1501,"nodeType":"ExpressionStatement","src":"3290:17:10"}]},"documentation":{"id":1475,"nodeType":"StructuredDocumentation","src":"2986:120:10","text":" @dev \"Consume a nonce\": return the current value and increment.\n _Available since v4.1._"},"id":1503,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"3120:9:10","nodeType":"FunctionDefinition","parameters":{"id":1478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1477,"mutability":"mutable","name":"owner","nameLocation":"3138:5:10","nodeType":"VariableDeclaration","scope":1503,"src":"3130:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1476,"name":"address","nodeType":"ElementaryTypeName","src":"3130:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3129:15:10"},"returnParameters":{"id":1481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1480,"mutability":"mutable","name":"current","nameLocation":"3179:7:10","nodeType":"VariableDeclaration","scope":1503,"src":"3171:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1479,"name":"uint256","nodeType":"ElementaryTypeName","src":"3171:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3170:17:10"},"scope":1504,"src":"3111:203:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1505,"src":"853:2463:10","usedErrors":[2408,2410],"usedEvents":[471,1222,1231]}],"src":"122:3195:10"},"id":10},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","exportedSymbols":{"Context":[2321],"Counters":[2395],"ECDSA":[3316],"EIP712":[3520],"ERC20":[1210],"ERC20Permit":[1504],"ERC20Votes":[2238],"IERC20":[1288],"IERC20Metadata":[2263],"IERC20Permit":[2299],"IERC5267":[491],"IERC5805":[500],"IERC6372":[515],"IVotes":[466],"Math":[4422],"SafeCast":[5963],"ShortString":[2400],"ShortStrings":[2611],"SignedMath":[6068],"StorageSlot":[2721],"Strings":[2950]},"id":2239,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1506,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"121:23:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"./ERC20Permit.sol","id":1507,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2239,"sourceUnit":1505,"src":"146:27:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","file":"../../../interfaces/IERC5805.sol","id":1508,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2239,"sourceUnit":501,"src":"174:42:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../../../utils/math/Math.sol","id":1509,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2239,"sourceUnit":4423,"src":"217:38:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../../../utils/math/SafeCast.sol","id":1510,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2239,"sourceUnit":5964,"src":"256:42:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1511,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2239,"sourceUnit":3317,"src":"299:47:11","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1513,"name":"ERC20Permit","nameLocations":["1275:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1504,"src":"1275:11:11"},"id":1514,"nodeType":"InheritanceSpecifier","src":"1275:11:11"},{"baseName":{"id":1515,"name":"IERC5805","nameLocations":["1288:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":500,"src":"1288:8:11"},"id":1516,"nodeType":"InheritanceSpecifier","src":"1288:8:11"}],"canonicalName":"ERC20Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":1512,"nodeType":"StructuredDocumentation","src":"348:894:11","text":" @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n power can be queried through the public accessors {getVotes} and {getPastVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n _Available since v4.2._"},"fullyImplemented":true,"id":2238,"internalFunctionIDs":{"2208":1,"2222":2},"linearizedBaseContracts":[2238,500,466,515,1504,3520,491,2299,1210,2263,1288,2321],"name":"ERC20Votes","nameLocation":"1261:10:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC20Votes.Checkpoint","id":1521,"members":[{"constant":false,"id":1518,"mutability":"mutable","name":"fromBlock","nameLocation":"1338:9:11","nodeType":"VariableDeclaration","scope":1521,"src":"1331:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1517,"name":"uint32","nodeType":"ElementaryTypeName","src":"1331:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1520,"mutability":"mutable","name":"votes","nameLocation":"1365:5:11","nodeType":"VariableDeclaration","scope":1521,"src":"1357:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1519,"name":"uint224","nodeType":"ElementaryTypeName","src":"1357:7:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint","nameLocation":"1310:10:11","nodeType":"StructDefinition","scope":2238,"src":"1303:74:11","visibility":"public"},{"constant":true,"id":1526,"mutability":"constant","name":"_DELEGATION_TYPEHASH","nameLocation":"1408:20:11","nodeType":"VariableDeclaration","scope":2238,"src":"1383:127:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1383:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1449:60:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":1523,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1439:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1439:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1530,"mutability":"mutable","name":"_delegates","nameLocation":"1553:10:11","nodeType":"VariableDeclaration","scope":2238,"src":"1517:46:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":1529,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1527,"name":"address","nodeType":"ElementaryTypeName","src":"1525:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1517:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1536,"mutability":"mutable","name":"_checkpoints","nameLocation":"1610:12:11","nodeType":"VariableDeclaration","scope":2238,"src":"1569:53:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint[])"},"typeName":{"id":1535,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1531,"name":"address","nodeType":"ElementaryTypeName","src":"1577:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1569:32:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":1533,"nodeType":"UserDefinedTypeName","pathNode":{"id":1532,"name":"Checkpoint","nameLocations":["1588:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1521,"src":"1588:10:11"},"referencedDeclaration":1521,"src":"1588:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1521_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1534,"nodeType":"ArrayTypeName","src":"1588:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}}},"visibility":"private"},{"constant":false,"id":1540,"mutability":"mutable","name":"_totalSupplyCheckpoints","nameLocation":"1649:23:11","nodeType":"VariableDeclaration","scope":2238,"src":"1628:44:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1538,"nodeType":"UserDefinedTypeName","pathNode":{"id":1537,"name":"Checkpoint","nameLocations":["1628:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1521,"src":"1628:10:11"},"referencedDeclaration":1521,"src":"1628:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1521_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1539,"nodeType":"ArrayTypeName","src":"1628:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"private"},{"baseFunctions":[508],"body":{"id":1553,"nodeType":"Block","src":"1880:55:11","statements":[{"expression":{"arguments":[{"expression":{"id":1549,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1915:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1921:6:11","memberName":"number","nodeType":"MemberAccess","src":"1915:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1547,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"1897:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5963_$","typeString":"type(library SafeCast)"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1906:8:11","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":5075,"src":"1897:17:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1897:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":1546,"id":1552,"nodeType":"Return","src":"1890:38:11"}]},"documentation":{"id":1541,"nodeType":"StructuredDocumentation","src":"1679:133:11","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":1554,"implemented":true,"kind":"function","modifiers":[],"name":"clock","nameLocation":"1826:5:11","nodeType":"FunctionDefinition","overrides":{"id":1543,"nodeType":"OverrideSpecifier","overrides":[],"src":"1854:8:11"},"parameters":{"id":1542,"nodeType":"ParameterList","parameters":[],"src":"1831:2:11"},"returnParameters":{"id":1546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1554,"src":"1872:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1544,"name":"uint48","nodeType":"ElementaryTypeName","src":"1872:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"1871:8:11"},"scope":2238,"src":"1817:118:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[514],"body":{"id":1572,"nodeType":"Block","src":"2122:179:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1562,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"2189:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2189:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1564,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2200:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2206:6:11","memberName":"number","nodeType":"MemberAccess","src":"2200:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a2062726f6b656e20636c6f636b206d6f6465","id":1567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2214:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df","typeString":"literal_string \"ERC20Votes: broken clock mode\""},"value":"ERC20Votes: broken clock mode"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df","typeString":"literal_string \"ERC20Votes: broken clock mode\""}],"id":1561,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2181:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:65:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1569,"nodeType":"ExpressionStatement","src":"2181:65:11"},{"expression":{"hexValue":"6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2263:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f79d44e499ce83a99049e0b7ebf2d6f56e249303be3c14798235137af5ea536","typeString":"literal_string \"mode=blocknumber&from=default\""},"value":"mode=blocknumber&from=default"},"functionReturnParameters":1560,"id":1571,"nodeType":"Return","src":"2256:38:11"}]},"documentation":{"id":1555,"nodeType":"StructuredDocumentation","src":"1941:48:11","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":1573,"implemented":true,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"2056:10:11","nodeType":"FunctionDefinition","overrides":{"id":1557,"nodeType":"OverrideSpecifier","overrides":[],"src":"2089:8:11"},"parameters":{"id":1556,"nodeType":"ParameterList","parameters":[],"src":"2066:2:11"},"returnParameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1573,"src":"2107:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1558,"name":"string","nodeType":"ElementaryTypeName","src":"2107:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2106:15:11"},"scope":2238,"src":"2047:254:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1590,"nodeType":"Block","src":"2476:50:11","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1584,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"2493:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1586,"indexExpression":{"id":1585,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"2506:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2493:21:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1588,"indexExpression":{"id":1587,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"2515:3:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2493:26:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1521_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"functionReturnParameters":1583,"id":1589,"nodeType":"Return","src":"2486:33:11"}]},"documentation":{"id":1574,"nodeType":"StructuredDocumentation","src":"2307:66:11","text":" @dev Get the `pos`-th checkpoint for `account`."},"functionSelector":"f1127ed8","id":1591,"implemented":true,"kind":"function","modifiers":[],"name":"checkpoints","nameLocation":"2387:11:11","nodeType":"FunctionDefinition","parameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1576,"mutability":"mutable","name":"account","nameLocation":"2407:7:11","nodeType":"VariableDeclaration","scope":1591,"src":"2399:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1575,"name":"address","nodeType":"ElementaryTypeName","src":"2399:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1578,"mutability":"mutable","name":"pos","nameLocation":"2423:3:11","nodeType":"VariableDeclaration","scope":1591,"src":"2416:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1577,"name":"uint32","nodeType":"ElementaryTypeName","src":"2416:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2398:29:11"},"returnParameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1591,"src":"2457:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1521_memory_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":1581,"nodeType":"UserDefinedTypeName","pathNode":{"id":1580,"name":"Checkpoint","nameLocations":["2457:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1521,"src":"2457:10:11"},"referencedDeclaration":1521,"src":"2457:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1521_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"src":"2456:19:11"},"scope":2238,"src":"2378:148:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1607,"nodeType":"Block","src":"2679:71:11","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1601,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"2714:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1603,"indexExpression":{"id":1602,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"2727:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2714:21:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2736:6:11","memberName":"length","nodeType":"MemberAccess","src":"2714:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1599,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"2696:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5963_$","typeString":"type(library SafeCast)"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2705:8:11","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":5125,"src":"2696:17:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2696:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":1598,"id":1606,"nodeType":"Return","src":"2689:54:11"}]},"documentation":{"id":1592,"nodeType":"StructuredDocumentation","src":"2532:64:11","text":" @dev Get number of checkpoints for `account`."},"functionSelector":"6fcfff45","id":1608,"implemented":true,"kind":"function","modifiers":[],"name":"numCheckpoints","nameLocation":"2610:14:11","nodeType":"FunctionDefinition","parameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"account","nameLocation":"2633:7:11","nodeType":"VariableDeclaration","scope":1608,"src":"2625:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1593,"name":"address","nodeType":"ElementaryTypeName","src":"2625:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2624:17:11"},"returnParameters":{"id":1598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1608,"src":"2671:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1596,"name":"uint32","nodeType":"ElementaryTypeName","src":"2671:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2670:8:11"},"scope":2238,"src":"2601:149:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[443],"body":{"id":1621,"nodeType":"Block","src":"2921:43:11","statements":[{"expression":{"baseExpression":{"id":1617,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"2938:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1619,"indexExpression":{"id":1618,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"2949:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2938:19:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1616,"id":1620,"nodeType":"Return","src":"2931:26:11"}]},"documentation":{"id":1609,"nodeType":"StructuredDocumentation","src":"2756:77:11","text":" @dev Get the address `account` is currently delegating to."},"functionSelector":"587cde1e","id":1622,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"2847:9:11","nodeType":"FunctionDefinition","overrides":{"id":1613,"nodeType":"OverrideSpecifier","overrides":[],"src":"2894:8:11"},"parameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1611,"mutability":"mutable","name":"account","nameLocation":"2865:7:11","nodeType":"VariableDeclaration","scope":1622,"src":"2857:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1610,"name":"address","nodeType":"ElementaryTypeName","src":"2857:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2856:17:11"},"returnParameters":{"id":1616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1622,"src":"2912:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1614,"name":"address","nodeType":"ElementaryTypeName","src":"2912:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2911:9:11"},"scope":2238,"src":"2838:126:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[417],"body":{"id":1653,"nodeType":"Block","src":"3125:161:11","statements":[{"assignments":[1632],"declarations":[{"constant":false,"id":1632,"mutability":"mutable","name":"pos","nameLocation":"3143:3:11","nodeType":"VariableDeclaration","scope":1653,"src":"3135:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1631,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1637,"initialValue":{"expression":{"baseExpression":{"id":1633,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"3149:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1635,"indexExpression":{"id":1634,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"3162:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3149:21:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3171:6:11","memberName":"length","nodeType":"MemberAccess","src":"3149:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3135:42:11"},{"id":1652,"nodeType":"UncheckedBlock","src":"3187:93:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1638,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"3218:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3225:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3218:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"baseExpression":{"baseExpression":{"id":1642,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"3233:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1644,"indexExpression":{"id":1643,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"3246:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3233:21:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1648,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1645,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"3255:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3261:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3255:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3233:30:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1521_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"id":1649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3264:5:11","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1520,"src":"3233:36:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3218:51:11","trueExpression":{"hexValue":"30","id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3229:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1630,"id":1651,"nodeType":"Return","src":"3211:58:11"}]}]},"documentation":{"id":1623,"nodeType":"StructuredDocumentation","src":"2970:68:11","text":" @dev Gets the current votes balance for `account`"},"functionSelector":"9ab24eb0","id":1654,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"3052:8:11","nodeType":"FunctionDefinition","overrides":{"id":1627,"nodeType":"OverrideSpecifier","overrides":[],"src":"3098:8:11"},"parameters":{"id":1626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1625,"mutability":"mutable","name":"account","nameLocation":"3069:7:11","nodeType":"VariableDeclaration","scope":1654,"src":"3061:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1624,"name":"address","nodeType":"ElementaryTypeName","src":"3061:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3060:17:11"},"returnParameters":{"id":1630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1654,"src":"3116:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"3116:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3115:9:11"},"scope":2238,"src":"3043:243:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[427],"body":{"id":1680,"nodeType":"Block","src":"3571:143:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1666,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"3589:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1667,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"3601:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3589:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20667574757265206c6f6f6b7570","id":1670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3610:27:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""},"value":"ERC20Votes: future lookup"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""}],"id":1665,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3581:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3581:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1672,"nodeType":"ExpressionStatement","src":"3581:57:11"},{"expression":{"arguments":[{"baseExpression":{"id":1674,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"3674:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1676,"indexExpression":{"id":1675,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"3687:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3674:21:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1677,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"3697:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1673,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"3655:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3655:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1664,"id":1679,"nodeType":"Return","src":"3648:59:11"}]},"documentation":{"id":1655,"nodeType":"StructuredDocumentation","src":"3292:169:11","text":" @dev Retrieve the number of votes for `account` at the end of `timepoint`.\n Requirements:\n - `timepoint` must be in the past"},"functionSelector":"3a46b1a8","id":1681,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"3475:12:11","nodeType":"FunctionDefinition","overrides":{"id":1661,"nodeType":"OverrideSpecifier","overrides":[],"src":"3544:8:11"},"parameters":{"id":1660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1657,"mutability":"mutable","name":"account","nameLocation":"3496:7:11","nodeType":"VariableDeclaration","scope":1681,"src":"3488:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1656,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1659,"mutability":"mutable","name":"timepoint","nameLocation":"3513:9:11","nodeType":"VariableDeclaration","scope":1681,"src":"3505:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1658,"name":"uint256","nodeType":"ElementaryTypeName","src":"3505:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3487:36:11"},"returnParameters":{"id":1664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1681,"src":"3562:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1662,"name":"uint256","nodeType":"ElementaryTypeName","src":"3562:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3561:9:11"},"scope":2238,"src":"3466:248:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[435],"body":{"id":1703,"nodeType":"Block","src":"4070:145:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1691,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"4088:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1692,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"4100:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4100:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4088:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20667574757265206c6f6f6b7570","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4109:27:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""},"value":"ERC20Votes: future lookup"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""}],"id":1690,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4080:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4080:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1697,"nodeType":"ExpressionStatement","src":"4080:57:11"},{"expression":{"arguments":[{"id":1699,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"4173:23:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1700,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"4198:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1698,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"4154:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:54:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1689,"id":1702,"nodeType":"Return","src":"4147:61:11"}]},"documentation":{"id":1682,"nodeType":"StructuredDocumentation","src":"3720:251:11","text":" @dev Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances.\n It is NOT the sum of all the delegated votes!\n Requirements:\n - `timepoint` must be in the past"},"functionSelector":"8e539e8c","id":1704,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"3985:18:11","nodeType":"FunctionDefinition","overrides":{"id":1686,"nodeType":"OverrideSpecifier","overrides":[],"src":"4043:8:11"},"parameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"timepoint","nameLocation":"4012:9:11","nodeType":"VariableDeclaration","scope":1704,"src":"4004:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"4004:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4003:19:11"},"returnParameters":{"id":1689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1704,"src":"4061:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1687,"name":"uint256","nodeType":"ElementaryTypeName","src":"4061:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4060:9:11"},"scope":2238,"src":"3976:239:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1810,"nodeType":"Block","src":"4405:1789:11","statements":[{"assignments":[1717],"declarations":[{"constant":false,"id":1717,"mutability":"mutable","name":"length","nameLocation":"5501:6:11","nodeType":"VariableDeclaration","scope":1810,"src":"5493:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1716,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1720,"initialValue":{"expression":{"id":1718,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"5510:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5516:6:11","memberName":"length","nodeType":"MemberAccess","src":"5510:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5493:29:11"},{"assignments":[1722],"declarations":[{"constant":false,"id":1722,"mutability":"mutable","name":"low","nameLocation":"5541:3:11","nodeType":"VariableDeclaration","scope":1810,"src":"5533:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1721,"name":"uint256","nodeType":"ElementaryTypeName","src":"5533:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1724,"initialValue":{"hexValue":"30","id":1723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5547:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5533:15:11"},{"assignments":[1726],"declarations":[{"constant":false,"id":1726,"mutability":"mutable","name":"high","nameLocation":"5566:4:11","nodeType":"VariableDeclaration","scope":1810,"src":"5558:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1725,"name":"uint256","nodeType":"ElementaryTypeName","src":"5558:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1728,"initialValue":{"id":1727,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"5573:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5558:21:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1729,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"5594:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":1730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5603:1:11","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"5594:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1762,"nodeType":"IfStatement","src":"5590:242:11","trueBody":{"id":1761,"nodeType":"Block","src":"5606:226:11","statements":[{"assignments":[1733],"declarations":[{"constant":false,"id":1733,"mutability":"mutable","name":"mid","nameLocation":"5628:3:11","nodeType":"VariableDeclaration","scope":1761,"src":"5620:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1732,"name":"uint256","nodeType":"ElementaryTypeName","src":"5620:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1740,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1734,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"5634:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":1737,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"5653:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1735,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"5643:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4422_$","typeString":"type(library Math)"}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5648:4:11","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":3926,"src":"5643:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5634:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5620:40:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1742,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"5692:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"id":1743,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"5699:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1741,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"5678:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1521_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5678:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1521_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5704:9:11","memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1518,"src":"5678:35:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1746,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"5716:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5678:47:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1759,"nodeType":"Block","src":"5776:46:11","statements":[{"expression":{"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1753,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"5794:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1754,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"5800:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5806:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5800:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5794:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1758,"nodeType":"ExpressionStatement","src":"5794:13:11"}]},"id":1760,"nodeType":"IfStatement","src":"5674:148:11","trueBody":{"id":1752,"nodeType":"Block","src":"5727:43:11","statements":[{"expression":{"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1748,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"5745:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1749,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"5752:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5745:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1751,"nodeType":"ExpressionStatement","src":"5745:10:11"}]}}]}},{"body":{"id":1794,"nodeType":"Block","src":"5861:223:11","statements":[{"assignments":[1767],"declarations":[{"constant":false,"id":1767,"mutability":"mutable","name":"mid","nameLocation":"5883:3:11","nodeType":"VariableDeclaration","scope":1794,"src":"5875:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1766,"name":"uint256","nodeType":"ElementaryTypeName","src":"5875:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1773,"initialValue":{"arguments":[{"id":1770,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"5902:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1771,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"5907:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1768,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"5889:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4422_$","typeString":"type(library Math)"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5894:7:11","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3622,"src":"5889:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5875:37:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1775,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"5944:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"id":1776,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"5951:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1774,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"5930:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1521_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5930:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1521_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1778,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5956:9:11","memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1518,"src":"5930:35:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1779,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"5968:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5930:47:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1792,"nodeType":"Block","src":"6028:46:11","statements":[{"expression":{"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1786,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"6046:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1787,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"6052:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6058:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6052:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6046:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1791,"nodeType":"ExpressionStatement","src":"6046:13:11"}]},"id":1793,"nodeType":"IfStatement","src":"5926:148:11","trueBody":{"id":1785,"nodeType":"Block","src":"5979:43:11","statements":[{"expression":{"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1781,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"5997:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1782,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"6004:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5997:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1784,"nodeType":"ExpressionStatement","src":"5997:10:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1763,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"5849:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1764,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"5855:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5849:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1795,"nodeType":"WhileStatement","src":"5842:242:11"},{"id":1809,"nodeType":"UncheckedBlock","src":"6094:94:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1796,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"6125:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6133:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6125:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"id":1801,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"6155:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1802,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"6162:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6169:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6162:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1800,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"6141:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1521_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6141:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1521_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1806,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6172:5:11","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1520,"src":"6141:36:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6125:52:11","trueExpression":{"hexValue":"30","id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6137:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1715,"id":1808,"nodeType":"Return","src":"6118:59:11"}]}]},"documentation":{"id":1705,"nodeType":"StructuredDocumentation","src":"4221:73:11","text":" @dev Lookup a value in a list of (sorted) checkpoints."},"id":1811,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpointsLookup","nameLocation":"4308:18:11","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"ckpts","nameLocation":"4348:5:11","nodeType":"VariableDeclaration","scope":1811,"src":"4327:26:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1707,"nodeType":"UserDefinedTypeName","pathNode":{"id":1706,"name":"Checkpoint","nameLocations":["4327:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1521,"src":"4327:10:11"},"referencedDeclaration":1521,"src":"4327:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1521_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1708,"nodeType":"ArrayTypeName","src":"4327:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":1711,"mutability":"mutable","name":"timepoint","nameLocation":"4363:9:11","nodeType":"VariableDeclaration","scope":1811,"src":"4355:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1710,"name":"uint256","nodeType":"ElementaryTypeName","src":"4355:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4326:47:11"},"returnParameters":{"id":1715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1811,"src":"4396:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1713,"name":"uint256","nodeType":"ElementaryTypeName","src":"4396:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4395:9:11"},"scope":2238,"src":"4299:1895:11","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[449],"body":{"id":1824,"nodeType":"Block","src":"6336:51:11","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1819,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"6356:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6356:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1821,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"6370:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1818,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"6346:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1823,"nodeType":"ExpressionStatement","src":"6346:34:11"}]},"documentation":{"id":1812,"nodeType":"StructuredDocumentation","src":"6200:70:11","text":" @dev Delegate votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":1825,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"6284:8:11","nodeType":"FunctionDefinition","overrides":{"id":1816,"nodeType":"OverrideSpecifier","overrides":[],"src":"6327:8:11"},"parameters":{"id":1815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1814,"mutability":"mutable","name":"delegatee","nameLocation":"6301:9:11","nodeType":"VariableDeclaration","scope":1825,"src":"6293:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1813,"name":"address","nodeType":"ElementaryTypeName","src":"6293:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6292:19:11"},"returnParameters":{"id":1817,"nodeType":"ParameterList","parameters":[],"src":"6336:0:11"},"scope":2238,"src":"6275:112:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[465],"body":{"id":1884,"nodeType":"Block","src":"6646:392:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1843,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6664:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6670:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"6664:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1845,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"6683:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6664:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a207369676e61747572652065787069726564","id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6691:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""},"value":"ERC20Votes: signature expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""}],"id":1842,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6656:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:67:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1849,"nodeType":"ExpressionStatement","src":"6656:67:11"},{"assignments":[1851],"declarations":[{"constant":false,"id":1851,"mutability":"mutable","name":"signer","nameLocation":"6741:6:11","nodeType":"VariableDeclaration","scope":1884,"src":"6733:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"6733:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1869,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":1858,"name":"_DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"6815:20:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1859,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"6837:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1860,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"6848:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1861,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"6855:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1856,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6804:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6808:6:11","memberName":"encode","nodeType":"MemberAccess","src":"6804:10:11","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6804:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1855,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6794:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6794:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1854,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"6777:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6777:87:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1865,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"6878:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1866,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"6893:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1867,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"6908:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1852,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"6750:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3316_$","typeString":"type(library ECDSA)"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6756:7:11","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3251,"src":"6750:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6750:169:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6733:186:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1871,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"6937:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1873,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"6956:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1872,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"6946:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6946:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6937:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20696e76616c6964206e6f6e6365","id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6965:27:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""},"value":"ERC20Votes: invalid nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""}],"id":1870,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6929:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1878,"nodeType":"ExpressionStatement","src":"6929:64:11"},{"expression":{"arguments":[{"id":1880,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"7013:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1881,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"7021:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1879,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"7003:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7003:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1883,"nodeType":"ExpressionStatement","src":"7003:28:11"}]},"documentation":{"id":1826,"nodeType":"StructuredDocumentation","src":"6393:66:11","text":" @dev Delegates votes from signer to `delegatee`"},"functionSelector":"c3cda520","id":1885,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"6473:13:11","nodeType":"FunctionDefinition","overrides":{"id":1840,"nodeType":"OverrideSpecifier","overrides":[],"src":"6637:8:11"},"parameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"delegatee","nameLocation":"6504:9:11","nodeType":"VariableDeclaration","scope":1885,"src":"6496:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1827,"name":"address","nodeType":"ElementaryTypeName","src":"6496:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1830,"mutability":"mutable","name":"nonce","nameLocation":"6531:5:11","nodeType":"VariableDeclaration","scope":1885,"src":"6523:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1829,"name":"uint256","nodeType":"ElementaryTypeName","src":"6523:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1832,"mutability":"mutable","name":"expiry","nameLocation":"6554:6:11","nodeType":"VariableDeclaration","scope":1885,"src":"6546:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"6546:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1834,"mutability":"mutable","name":"v","nameLocation":"6576:1:11","nodeType":"VariableDeclaration","scope":1885,"src":"6570:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1833,"name":"uint8","nodeType":"ElementaryTypeName","src":"6570:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"r","nameLocation":"6595:1:11","nodeType":"VariableDeclaration","scope":1885,"src":"6587:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6587:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"s","nameLocation":"6614:1:11","nodeType":"VariableDeclaration","scope":1885,"src":"6606:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1837,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6606:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6486:135:11"},"returnParameters":{"id":1841,"nodeType":"ParameterList","parameters":[],"src":"6646:0:11"},"scope":2238,"src":"6464:574:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1897,"nodeType":"Block","src":"7202:41:11","statements":[{"expression":{"expression":{"arguments":[{"id":1893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7224:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":1892,"name":"uint224","nodeType":"ElementaryTypeName","src":"7224:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":1891,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7219:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7219:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":1895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7233:3:11","memberName":"max","nodeType":"MemberAccess","src":"7219:17:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1890,"id":1896,"nodeType":"Return","src":"7212:24:11"}]},"documentation":{"id":1886,"nodeType":"StructuredDocumentation","src":"7044:91:11","text":" @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1)."},"id":1898,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"7149:10:11","nodeType":"FunctionDefinition","parameters":{"id":1887,"nodeType":"ParameterList","parameters":[],"src":"7159:2:11"},"returnParameters":{"id":1890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1898,"src":"7193:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1888,"name":"uint224","nodeType":"ElementaryTypeName","src":"7193:7:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"7192:9:11"},"scope":2238,"src":"7140:103:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1027],"body":{"id":1929,"nodeType":"Block","src":"7406:211:11","statements":[{"expression":{"arguments":[{"id":1910,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"7428:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1911,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"7437:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1907,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7416:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$2238_$","typeString":"type(contract super ERC20Votes)"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7422:5:11","memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":1027,"src":"7416:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7416:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1913,"nodeType":"ExpressionStatement","src":"7416:28:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1915,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"7462:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7462:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1917,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"7479:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint224_$","typeString":"function () view returns (uint224)"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7479:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"7462:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f766572666c6f77696e6720766f746573","id":1920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7493:50:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""},"value":"ERC20Votes: total supply risks overflowing votes"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""}],"id":1914,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7454:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7454:90:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1922,"nodeType":"ExpressionStatement","src":"7454:90:11"},{"expression":{"arguments":[{"id":1924,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"7572:23:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1925,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"7597:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1926,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"7603:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1923,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"7555:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7555:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":1928,"nodeType":"ExpressionStatement","src":"7555:55:11"}]},"documentation":{"id":1899,"nodeType":"StructuredDocumentation","src":"7249:78:11","text":" @dev Snapshots the totalSupply after it has been increased."},"id":1930,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7341:5:11","nodeType":"FunctionDefinition","overrides":{"id":1905,"nodeType":"OverrideSpecifier","overrides":[],"src":"7397:8:11"},"parameters":{"id":1904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1901,"mutability":"mutable","name":"account","nameLocation":"7355:7:11","nodeType":"VariableDeclaration","scope":1930,"src":"7347:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1900,"name":"address","nodeType":"ElementaryTypeName","src":"7347:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1903,"mutability":"mutable","name":"amount","nameLocation":"7372:6:11","nodeType":"VariableDeclaration","scope":1930,"src":"7364:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1902,"name":"uint256","nodeType":"ElementaryTypeName","src":"7364:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7346:33:11"},"returnParameters":{"id":1906,"nodeType":"ParameterList","parameters":[],"src":"7406:0:11"},"scope":2238,"src":"7332:285:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1099],"body":{"id":1952,"nodeType":"Block","src":"7780:116:11","statements":[{"expression":{"arguments":[{"id":1942,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"7802:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1943,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"7811:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1939,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7790:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$2238_$","typeString":"type(contract super ERC20Votes)"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7796:5:11","memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":1099,"src":"7790:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7790:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1945,"nodeType":"ExpressionStatement","src":"7790:28:11"},{"expression":{"arguments":[{"id":1947,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"7846:23:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1948,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"7871:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1949,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"7882:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1946,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"7829:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7829:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":1951,"nodeType":"ExpressionStatement","src":"7829:60:11"}]},"documentation":{"id":1931,"nodeType":"StructuredDocumentation","src":"7623:78:11","text":" @dev Snapshots the totalSupply after it has been decreased."},"id":1953,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7715:5:11","nodeType":"FunctionDefinition","overrides":{"id":1937,"nodeType":"OverrideSpecifier","overrides":[],"src":"7771:8:11"},"parameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1933,"mutability":"mutable","name":"account","nameLocation":"7729:7:11","nodeType":"VariableDeclaration","scope":1953,"src":"7721:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1932,"name":"address","nodeType":"ElementaryTypeName","src":"7721:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1935,"mutability":"mutable","name":"amount","nameLocation":"7746:6:11","nodeType":"VariableDeclaration","scope":1953,"src":"7738:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1934,"name":"uint256","nodeType":"ElementaryTypeName","src":"7738:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7720:33:11"},"returnParameters":{"id":1938,"nodeType":"ParameterList","parameters":[],"src":"7780:0:11"},"scope":2238,"src":"7706:190:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1209],"body":{"id":1982,"nodeType":"Block","src":"8133:127:11","statements":[{"expression":{"arguments":[{"id":1967,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"8169:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1968,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"8175:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1969,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"8179:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1964,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"8143:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$2238_$","typeString":"type(contract super ERC20Votes)"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8149:19:11","memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1209,"src":"8143:25:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8143:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1971,"nodeType":"ExpressionStatement","src":"8143:43:11"},{"expression":{"arguments":[{"arguments":[{"id":1974,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"8224:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1973,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"8214:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8214:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1977,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"8241:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1976,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"8231:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8231:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1979,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"8246:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1972,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"8197:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8197:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1981,"nodeType":"ExpressionStatement","src":"8197:56:11"}]},"documentation":{"id":1954,"nodeType":"StructuredDocumentation","src":"7902:129:11","text":" @dev Move voting power when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":1983,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"8045:19:11","nodeType":"FunctionDefinition","overrides":{"id":1962,"nodeType":"OverrideSpecifier","overrides":[],"src":"8124:8:11"},"parameters":{"id":1961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1956,"mutability":"mutable","name":"from","nameLocation":"8073:4:11","nodeType":"VariableDeclaration","scope":1983,"src":"8065:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1955,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1958,"mutability":"mutable","name":"to","nameLocation":"8087:2:11","nodeType":"VariableDeclaration","scope":1983,"src":"8079:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1957,"name":"address","nodeType":"ElementaryTypeName","src":"8079:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1960,"mutability":"mutable","name":"amount","nameLocation":"8099:6:11","nodeType":"VariableDeclaration","scope":1983,"src":"8091:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1959,"name":"uint256","nodeType":"ElementaryTypeName","src":"8091:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8064:42:11"},"returnParameters":{"id":1963,"nodeType":"ParameterList","parameters":[],"src":"8133:0:11"},"scope":2238,"src":"8036:224:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2021,"nodeType":"Block","src":"8505:306:11","statements":[{"assignments":[1992],"declarations":[{"constant":false,"id":1992,"mutability":"mutable","name":"currentDelegate","nameLocation":"8523:15:11","nodeType":"VariableDeclaration","scope":2021,"src":"8515:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1991,"name":"address","nodeType":"ElementaryTypeName","src":"8515:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1996,"initialValue":{"arguments":[{"id":1994,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"8551:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1993,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"8541:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8541:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8515:46:11"},{"assignments":[1998],"declarations":[{"constant":false,"id":1998,"mutability":"mutable","name":"delegatorBalance","nameLocation":"8579:16:11","nodeType":"VariableDeclaration","scope":2021,"src":"8571:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1997,"name":"uint256","nodeType":"ElementaryTypeName","src":"8571:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2002,"initialValue":{"arguments":[{"id":2000,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"8608:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1999,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"8598:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8598:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8571:47:11"},{"expression":{"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2003,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"8628:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2005,"indexExpression":{"id":2004,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"8639:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8628:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2006,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"8652:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8628:33:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2008,"nodeType":"ExpressionStatement","src":"8628:33:11"},{"eventCall":{"arguments":[{"id":2010,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"8693:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2011,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"8704:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2012,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"8721:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2009,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"8677:15:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8677:54:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2014,"nodeType":"EmitStatement","src":"8672:59:11"},{"expression":{"arguments":[{"id":2016,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"8759:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2017,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"8776:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2018,"name":"delegatorBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"8787:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2015,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"8742:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8742:62:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2020,"nodeType":"ExpressionStatement","src":"8742:62:11"}]},"documentation":{"id":1984,"nodeType":"StructuredDocumentation","src":"8266:160:11","text":" @dev Change delegation for `delegator` to `delegatee`.\n Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}."},"id":2022,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"8440:9:11","nodeType":"FunctionDefinition","parameters":{"id":1989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1986,"mutability":"mutable","name":"delegator","nameLocation":"8458:9:11","nodeType":"VariableDeclaration","scope":2022,"src":"8450:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1985,"name":"address","nodeType":"ElementaryTypeName","src":"8450:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1988,"mutability":"mutable","name":"delegatee","nameLocation":"8477:9:11","nodeType":"VariableDeclaration","scope":2022,"src":"8469:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1987,"name":"address","nodeType":"ElementaryTypeName","src":"8469:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8449:38:11"},"returnParameters":{"id":1990,"nodeType":"ParameterList","parameters":[],"src":"8505:0:11"},"scope":2238,"src":"8431:380:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2092,"nodeType":"Block","src":"8893:521:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2031,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"8907:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2032,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"8914:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8907:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2034,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"8921:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8930:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8921:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8907:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2091,"nodeType":"IfStatement","src":"8903:505:11","trueBody":{"id":2090,"nodeType":"Block","src":"8933:475:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2038,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"8951:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8966:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8958:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2039,"name":"address","nodeType":"ElementaryTypeName","src":"8958:7:11","typeDescriptions":{}}},"id":2042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8958:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8951:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2063,"nodeType":"IfStatement","src":"8947:221:11","trueBody":{"id":2062,"nodeType":"Block","src":"8970:198:11","statements":[{"assignments":[2045,2047],"declarations":[{"constant":false,"id":2045,"mutability":"mutable","name":"oldWeight","nameLocation":"8997:9:11","nodeType":"VariableDeclaration","scope":2062,"src":"8989:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2044,"name":"uint256","nodeType":"ElementaryTypeName","src":"8989:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2047,"mutability":"mutable","name":"newWeight","nameLocation":"9016:9:11","nodeType":"VariableDeclaration","scope":2062,"src":"9008:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2046,"name":"uint256","nodeType":"ElementaryTypeName","src":"9008:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2055,"initialValue":{"arguments":[{"baseExpression":{"id":2049,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"9046:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":2051,"indexExpression":{"id":2050,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"9059:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9046:17:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":2052,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"9065:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":2053,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"9076:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2048,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"9029:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9029:54:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8988:95:11"},{"eventCall":{"arguments":[{"id":2057,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"9127:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2058,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"9132:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2059,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"9143:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2056,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"9106:20:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9106:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2061,"nodeType":"EmitStatement","src":"9101:52:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2064,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"9186:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9193:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2065,"name":"address","nodeType":"ElementaryTypeName","src":"9193:7:11","typeDescriptions":{}}},"id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9193:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9186:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2089,"nodeType":"IfStatement","src":"9182:216:11","trueBody":{"id":2088,"nodeType":"Block","src":"9205:193:11","statements":[{"assignments":[2071,2073],"declarations":[{"constant":false,"id":2071,"mutability":"mutable","name":"oldWeight","nameLocation":"9232:9:11","nodeType":"VariableDeclaration","scope":2088,"src":"9224:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2070,"name":"uint256","nodeType":"ElementaryTypeName","src":"9224:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2073,"mutability":"mutable","name":"newWeight","nameLocation":"9251:9:11","nodeType":"VariableDeclaration","scope":2088,"src":"9243:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2072,"name":"uint256","nodeType":"ElementaryTypeName","src":"9243:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2081,"initialValue":{"arguments":[{"baseExpression":{"id":2075,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"9281:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":2077,"indexExpression":{"id":2076,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"9294:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9281:17:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":2078,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"9300:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":2079,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"9306:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2074,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"9264:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9264:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9223:90:11"},{"eventCall":{"arguments":[{"id":2083,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"9357:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2084,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"9362:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2085,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"9373:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2082,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"9336:20:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9336:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2087,"nodeType":"EmitStatement","src":"9331:52:11"}]}}]}}]},"id":2093,"implemented":true,"kind":"function","modifiers":[],"name":"_moveVotingPower","nameLocation":"8826:16:11","nodeType":"FunctionDefinition","parameters":{"id":2029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"src","nameLocation":"8851:3:11","nodeType":"VariableDeclaration","scope":2093,"src":"8843:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2023,"name":"address","nodeType":"ElementaryTypeName","src":"8843:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2026,"mutability":"mutable","name":"dst","nameLocation":"8864:3:11","nodeType":"VariableDeclaration","scope":2093,"src":"8856:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2025,"name":"address","nodeType":"ElementaryTypeName","src":"8856:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2028,"mutability":"mutable","name":"amount","nameLocation":"8877:6:11","nodeType":"VariableDeclaration","scope":2093,"src":"8869:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2027,"name":"uint256","nodeType":"ElementaryTypeName","src":"8869:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8842:42:11"},"returnParameters":{"id":2030,"nodeType":"ParameterList","parameters":[],"src":"8893:0:11"},"scope":2238,"src":"8817:597:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2193,"nodeType":"Block","src":"9628:560:11","statements":[{"assignments":[2117],"declarations":[{"constant":false,"id":2117,"mutability":"mutable","name":"pos","nameLocation":"9646:3:11","nodeType":"VariableDeclaration","scope":2193,"src":"9638:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2116,"name":"uint256","nodeType":"ElementaryTypeName","src":"9638:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2120,"initialValue":{"expression":{"id":2118,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"9652:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9658:6:11","memberName":"length","nodeType":"MemberAccess","src":"9652:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9638:26:11"},{"id":2192,"nodeType":"UncheckedBlock","src":"9675:507:11","statements":[{"assignments":[2123],"declarations":[{"constant":false,"id":2123,"mutability":"mutable","name":"oldCkpt","nameLocation":"9717:7:11","nodeType":"VariableDeclaration","scope":2192,"src":"9699:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1521_memory_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":2122,"nodeType":"UserDefinedTypeName","pathNode":{"id":2121,"name":"Checkpoint","nameLocations":["9699:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1521,"src":"9699:10:11"},"referencedDeclaration":1521,"src":"9699:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1521_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"id":2138,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2124,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"9727:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9734:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9727:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2132,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"9771:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2133,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"9778:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9784:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9778:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2131,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"9757:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1521_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9757:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1521_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9727:59:11","trueExpression":{"arguments":[{"hexValue":"30","id":2128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9749:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9752:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2127,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"9738:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$1521_storage_ptr_$","typeString":"type(struct ERC20Votes.Checkpoint storage pointer)"}},"id":2130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9738:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1521_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1521_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"nodeType":"VariableDeclarationStatement","src":"9699:87:11"},{"expression":{"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2139,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"9801:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2140,"name":"oldCkpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"9813:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1521_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"id":2141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9821:5:11","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1520,"src":"9813:13:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"9801:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2143,"nodeType":"ExpressionStatement","src":"9801:25:11"},{"expression":{"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2144,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"9840:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2146,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"9855:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2147,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"9866:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2145,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"9852:2:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9852:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9840:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2150,"nodeType":"ExpressionStatement","src":"9840:32:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2151,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"9891:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9897:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9891:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2154,"name":"oldCkpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"9902:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1521_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"id":2155,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9910:9:11","memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1518,"src":"9902:17:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2156,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"9923:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9923:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"9902:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9891:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2190,"nodeType":"Block","src":"10038:134:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2180,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"10108:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10108:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":2178,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"10090:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5963_$","typeString":"type(library SafeCast)"}},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10099:8:11","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":5125,"src":"10090:17:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10090:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":2185,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"10144:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2183,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"10125:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5963_$","typeString":"type(library SafeCast)"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10134:9:11","memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":4525,"src":"10125:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10125:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":2177,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"10067:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$1521_storage_ptr_$","typeString":"type(struct ERC20Votes.Checkpoint storage pointer)"}},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["10079:9:11","10118:5:11"],"names":["fromBlock","votes"],"nodeType":"FunctionCall","src":"10067:89:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1521_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint_$1521_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}],"expression":{"id":2174,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"10056:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10062:4:11","memberName":"push","nodeType":"MemberAccess","src":"10056:10:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$1521_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,struct ERC20Votes.Checkpoint storage ref)"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:101:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2189,"nodeType":"ExpressionStatement","src":"10056:101:11"}]},"id":2191,"nodeType":"IfStatement","src":"9887:285:11","trueBody":{"id":2173,"nodeType":"Block","src":"9932:100:11","statements":[{"expression":{"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2161,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"9964:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2162,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"9971:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9977:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9971:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2160,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"9950:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1521_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9950:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1521_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":2166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9980:5:11","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1520,"src":"9950:35:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2169,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"10007:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2167,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"9988:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5963_$","typeString":"type(library SafeCast)"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9997:9:11","memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":4525,"src":"9988:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9988:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"9950:67:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":2172,"nodeType":"ExpressionStatement","src":"9950:67:11"}]}}]}]},"id":2194,"implemented":true,"kind":"function","modifiers":[],"name":"_writeCheckpoint","nameLocation":"9429:16:11","nodeType":"FunctionDefinition","parameters":{"id":2110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2097,"mutability":"mutable","name":"ckpts","nameLocation":"9476:5:11","nodeType":"VariableDeclaration","scope":2194,"src":"9455:26:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":2095,"nodeType":"UserDefinedTypeName","pathNode":{"id":2094,"name":"Checkpoint","nameLocations":["9455:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1521,"src":"9455:10:11"},"referencedDeclaration":1521,"src":"9455:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1521_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":2096,"nodeType":"ArrayTypeName","src":"9455:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":2107,"mutability":"mutable","name":"op","nameLocation":"9541:2:11","nodeType":"VariableDeclaration","scope":2194,"src":"9491:52:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"typeName":{"id":2106,"nodeType":"FunctionTypeName","parameterTypes":{"id":2102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2106,"src":"9500:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2098,"name":"uint256","nodeType":"ElementaryTypeName","src":"9500:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2106,"src":"9509:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2100,"name":"uint256","nodeType":"ElementaryTypeName","src":"9509:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9499:18:11"},"returnParameterTypes":{"id":2105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2106,"src":"9532:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2103,"name":"uint256","nodeType":"ElementaryTypeName","src":"9532:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9531:9:11"},"src":"9491:52:11","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":2109,"mutability":"mutable","name":"delta","nameLocation":"9561:5:11","nodeType":"VariableDeclaration","scope":2194,"src":"9553:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2108,"name":"uint256","nodeType":"ElementaryTypeName","src":"9553:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9445:127:11"},"returnParameters":{"id":2115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2112,"mutability":"mutable","name":"oldWeight","nameLocation":"9598:9:11","nodeType":"VariableDeclaration","scope":2194,"src":"9590:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2111,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2114,"mutability":"mutable","name":"newWeight","nameLocation":"9617:9:11","nodeType":"VariableDeclaration","scope":2194,"src":"9609:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2113,"name":"uint256","nodeType":"ElementaryTypeName","src":"9609:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:38:11"},"scope":2238,"src":"9420:768:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2207,"nodeType":"Block","src":"10261:29:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2203,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"10278:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2204,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"10282:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10278:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2202,"id":2206,"nodeType":"Return","src":"10271:12:11"}]},"id":2208,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"10203:4:11","nodeType":"FunctionDefinition","parameters":{"id":2199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2196,"mutability":"mutable","name":"a","nameLocation":"10216:1:11","nodeType":"VariableDeclaration","scope":2208,"src":"10208:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2195,"name":"uint256","nodeType":"ElementaryTypeName","src":"10208:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2198,"mutability":"mutable","name":"b","nameLocation":"10227:1:11","nodeType":"VariableDeclaration","scope":2208,"src":"10219:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2197,"name":"uint256","nodeType":"ElementaryTypeName","src":"10219:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10207:22:11"},"returnParameters":{"id":2202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2208,"src":"10252:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2200,"name":"uint256","nodeType":"ElementaryTypeName","src":"10252:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10251:9:11"},"scope":2238,"src":"10194:96:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2221,"nodeType":"Block","src":"10368:29:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2217,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"10385:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2218,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"10389:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10385:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2216,"id":2220,"nodeType":"Return","src":"10378:12:11"}]},"id":2222,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"10305:9:11","nodeType":"FunctionDefinition","parameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2210,"mutability":"mutable","name":"a","nameLocation":"10323:1:11","nodeType":"VariableDeclaration","scope":2222,"src":"10315:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2209,"name":"uint256","nodeType":"ElementaryTypeName","src":"10315:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2212,"mutability":"mutable","name":"b","nameLocation":"10334:1:11","nodeType":"VariableDeclaration","scope":2222,"src":"10326:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2211,"name":"uint256","nodeType":"ElementaryTypeName","src":"10326:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10314:22:11"},"returnParameters":{"id":2216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2222,"src":"10359:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2214,"name":"uint256","nodeType":"ElementaryTypeName","src":"10359:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10358:9:11"},"scope":2238,"src":"10296:101:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2236,"nodeType":"Block","src":"10653:126:11","statements":[{"AST":{"nodeType":"YulBlock","src":"10672:101:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10693:1:11","type":"","value":"0"},{"name":"ckpts.slot","nodeType":"YulIdentifier","src":"10696:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10686:6:11"},"nodeType":"YulFunctionCall","src":"10686:21:11"},"nodeType":"YulExpressionStatement","src":"10686:21:11"},{"nodeType":"YulAssignment","src":"10720:43:11","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10749:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10752:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"10739:9:11"},"nodeType":"YulFunctionCall","src":"10739:18:11"},{"name":"pos","nodeType":"YulIdentifier","src":"10759:3:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10735:3:11"},"nodeType":"YulFunctionCall","src":"10735:28:11"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"10720:11:11"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":2227,"isOffset":false,"isSlot":true,"src":"10696:10:11","suffix":"slot","valueSize":1},{"declaration":2229,"isOffset":false,"isSlot":false,"src":"10759:3:11","valueSize":1},{"declaration":2233,"isOffset":false,"isSlot":true,"src":"10720:11:11","suffix":"slot","valueSize":1}],"id":2235,"nodeType":"InlineAssembly","src":"10663:110:11"}]},"documentation":{"id":2223,"nodeType":"StructuredDocumentation","src":"10403:132:11","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":2237,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"10549:13:11","nodeType":"FunctionDefinition","parameters":{"id":2230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2227,"mutability":"mutable","name":"ckpts","nameLocation":"10584:5:11","nodeType":"VariableDeclaration","scope":2237,"src":"10563:26:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":2225,"nodeType":"UserDefinedTypeName","pathNode":{"id":2224,"name":"Checkpoint","nameLocations":["10563:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1521,"src":"10563:10:11"},"referencedDeclaration":1521,"src":"10563:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1521_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":2226,"nodeType":"ArrayTypeName","src":"10563:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1521_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":2229,"mutability":"mutable","name":"pos","nameLocation":"10599:3:11","nodeType":"VariableDeclaration","scope":2237,"src":"10591:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2228,"name":"uint256","nodeType":"ElementaryTypeName","src":"10591:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10562:41:11"},"returnParameters":{"id":2234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2233,"mutability":"mutable","name":"result","nameLocation":"10645:6:11","nodeType":"VariableDeclaration","scope":2237,"src":"10626:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1521_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":2232,"nodeType":"UserDefinedTypeName","pathNode":{"id":2231,"name":"Checkpoint","nameLocations":["10626:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1521,"src":"10626:10:11"},"referencedDeclaration":1521,"src":"10626:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1521_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"src":"10625:27:11"},"scope":2238,"src":"10540:239:11","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2239,"src":"1243:9538:11","usedErrors":[2408,2410],"usedEvents":[400,409,471,1222,1231]}],"src":"121:10661:11"},"id":11},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1288],"IERC20Metadata":[2263]},"id":2264,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2240,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2241,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2264,"sourceUnit":1289,"src":"135:23:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2243,"name":"IERC20","nameLocations":["305:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1288,"src":"305:6:12"},"id":2244,"nodeType":"InheritanceSpecifier","src":"305:6:12"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2242,"nodeType":"StructuredDocumentation","src":"160:116:12","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":2263,"linearizedBaseContracts":[2263,1288],"name":"IERC20Metadata","nameLocation":"287:14:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2245,"nodeType":"StructuredDocumentation","src":"318:54:12","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2250,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:12","nodeType":"FunctionDefinition","parameters":{"id":2246,"nodeType":"ParameterList","parameters":[],"src":"390:2:12"},"returnParameters":{"id":2249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2250,"src":"416:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2247,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:12"},"scope":2263,"src":"377:54:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2251,"nodeType":"StructuredDocumentation","src":"437:56:12","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2256,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:12","nodeType":"FunctionDefinition","parameters":{"id":2252,"nodeType":"ParameterList","parameters":[],"src":"513:2:12"},"returnParameters":{"id":2255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2256,"src":"539:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2253,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:12"},"scope":2263,"src":"498:56:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2257,"nodeType":"StructuredDocumentation","src":"560:65:12","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2262,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:12","nodeType":"FunctionDefinition","parameters":{"id":2258,"nodeType":"ParameterList","parameters":[],"src":"647:2:12"},"returnParameters":{"id":2261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2262,"src":"673:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2259,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:12"},"scope":2263,"src":"630:50:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2264,"src":"277:405:12","usedErrors":[],"usedEvents":[1222,1231]}],"src":"110:573:12"},"id":12},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[2299]},"id":2300,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2265,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":2266,"nodeType":"StructuredDocumentation","src":"148:480:13","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":2299,"linearizedBaseContracts":[2299],"name":"IERC20Permit","nameLocation":"639:12:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2267,"nodeType":"StructuredDocumentation","src":"658:792:13","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":2284,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1464:6:13","nodeType":"FunctionDefinition","parameters":{"id":2282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2269,"mutability":"mutable","name":"owner","nameLocation":"1488:5:13","nodeType":"VariableDeclaration","scope":2284,"src":"1480:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2268,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2271,"mutability":"mutable","name":"spender","nameLocation":"1511:7:13","nodeType":"VariableDeclaration","scope":2284,"src":"1503:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2270,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2273,"mutability":"mutable","name":"value","nameLocation":"1536:5:13","nodeType":"VariableDeclaration","scope":2284,"src":"1528:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2272,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2275,"mutability":"mutable","name":"deadline","nameLocation":"1559:8:13","nodeType":"VariableDeclaration","scope":2284,"src":"1551:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2274,"name":"uint256","nodeType":"ElementaryTypeName","src":"1551:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2277,"mutability":"mutable","name":"v","nameLocation":"1583:1:13","nodeType":"VariableDeclaration","scope":2284,"src":"1577:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2276,"name":"uint8","nodeType":"ElementaryTypeName","src":"1577:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2279,"mutability":"mutable","name":"r","nameLocation":"1602:1:13","nodeType":"VariableDeclaration","scope":2284,"src":"1594:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2278,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1594:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2281,"mutability":"mutable","name":"s","nameLocation":"1621:1:13","nodeType":"VariableDeclaration","scope":2284,"src":"1613:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1613:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1470:158:13"},"returnParameters":{"id":2283,"nodeType":"ParameterList","parameters":[],"src":"1637:0:13"},"scope":2299,"src":"1455:183:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2285,"nodeType":"StructuredDocumentation","src":"1644:294:13","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":2292,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1952:6:13","nodeType":"FunctionDefinition","parameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2287,"mutability":"mutable","name":"owner","nameLocation":"1967:5:13","nodeType":"VariableDeclaration","scope":2292,"src":"1959:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2286,"name":"address","nodeType":"ElementaryTypeName","src":"1959:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1958:15:13"},"returnParameters":{"id":2291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2292,"src":"1997:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2289,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:9:13"},"scope":2299,"src":"1943:63:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2293,"nodeType":"StructuredDocumentation","src":"2012:128:13","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":2298,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2207:16:13","nodeType":"FunctionDefinition","parameters":{"id":2294,"nodeType":"ParameterList","parameters":[],"src":"2223:2:13"},"returnParameters":{"id":2297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2298,"src":"2249:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2249:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2248:9:13"},"scope":2299,"src":"2198:60:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2300,"src":"629:1631:13","usedErrors":[],"usedEvents":[]}],"src":"123:2138:13"},"id":13},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2321]},"id":2322,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2301,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:14"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2302,"nodeType":"StructuredDocumentation","src":"111:496:14","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2321,"linearizedBaseContracts":[2321],"name":"Context","nameLocation":"626:7:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2310,"nodeType":"Block","src":"702:34:14","statements":[{"expression":{"expression":{"id":2307,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:14","memberName":"sender","nodeType":"MemberAccess","src":"719:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2306,"id":2309,"nodeType":"Return","src":"712:17:14"}]},"id":2311,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:14","nodeType":"FunctionDefinition","parameters":{"id":2303,"nodeType":"ParameterList","parameters":[],"src":"659:2:14"},"returnParameters":{"id":2306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2311,"src":"693:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2304,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:14"},"scope":2321,"src":"640:96:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2319,"nodeType":"Block","src":"809:32:14","statements":[{"expression":{"expression":{"id":2316,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:14","memberName":"data","nodeType":"MemberAccess","src":"826:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2315,"id":2318,"nodeType":"Return","src":"819:15:14"}]},"id":2320,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:14","nodeType":"FunctionDefinition","parameters":{"id":2312,"nodeType":"ParameterList","parameters":[],"src":"759:2:14"},"returnParameters":{"id":2315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2320,"src":"793:14:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2313,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:14"},"scope":2321,"src":"742:99:14","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2322,"src":"608:235:14","usedErrors":[],"usedEvents":[]}],"src":"86:758:14"},"id":14},"@openzeppelin/contracts/utils/Counters.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[2395]},"id":2396,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2323,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":2324,"nodeType":"StructuredDocumentation","src":"112:311:15","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":2395,"linearizedBaseContracts":[2395],"name":"Counters","nameLocation":"432:8:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":2327,"members":[{"constant":false,"id":2326,"mutability":"mutable","name":"_value","nameLocation":"794:6:15","nodeType":"VariableDeclaration","scope":2327,"src":"786:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2325,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:15","nodeType":"StructDefinition","scope":2395,"src":"447:374:15","visibility":"public"},{"body":{"id":2338,"nodeType":"Block","src":"901:38:15","statements":[{"expression":{"expression":{"id":2335,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"918:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2327_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"926:6:15","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2326,"src":"918:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2334,"id":2337,"nodeType":"Return","src":"911:21:15"}]},"id":2339,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:15","nodeType":"FunctionDefinition","parameters":{"id":2331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2330,"mutability":"mutable","name":"counter","nameLocation":"860:7:15","nodeType":"VariableDeclaration","scope":2339,"src":"844:23:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2327_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2329,"nodeType":"UserDefinedTypeName","pathNode":{"id":2328,"name":"Counter","nameLocations":["844:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2327,"src":"844:7:15"},"referencedDeclaration":2327,"src":"844:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2327_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:15"},"returnParameters":{"id":2334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2339,"src":"892:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2332,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:15"},"scope":2395,"src":"827:112:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2352,"nodeType":"Block","src":"998:70:15","statements":[{"id":2351,"nodeType":"UncheckedBlock","src":"1008:54:15","statements":[{"expression":{"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2345,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"1032:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2327_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2347,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1040:6:15","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2326,"src":"1032:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2350,"nodeType":"ExpressionStatement","src":"1032:19:15"}]}]},"id":2353,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:15","nodeType":"FunctionDefinition","parameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2342,"mutability":"mutable","name":"counter","nameLocation":"980:7:15","nodeType":"VariableDeclaration","scope":2353,"src":"964:23:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2327_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2341,"nodeType":"UserDefinedTypeName","pathNode":{"id":2340,"name":"Counter","nameLocations":["964:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2327,"src":"964:7:15"},"referencedDeclaration":2327,"src":"964:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2327_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:15"},"returnParameters":{"id":2344,"nodeType":"ParameterList","parameters":[],"src":"998:0:15"},"scope":2395,"src":"945:123:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2380,"nodeType":"Block","src":"1127:176:15","statements":[{"assignments":[2360],"declarations":[{"constant":false,"id":2360,"mutability":"mutable","name":"value","nameLocation":"1145:5:15","nodeType":"VariableDeclaration","scope":2380,"src":"1137:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2359,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2363,"initialValue":{"expression":{"id":2361,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"1153:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2327_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1161:6:15","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2326,"src":"1153:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"1185:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":2368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":2364,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1177:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2370,"nodeType":"ExpressionStatement","src":"1177:49:15"},{"id":2379,"nodeType":"UncheckedBlock","src":"1236:61:15","statements":[{"expression":{"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2371,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"1260:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2327_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2373,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1268:6:15","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2326,"src":"1260:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"1277:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2378,"nodeType":"ExpressionStatement","src":"1260:26:15"}]}]},"id":2381,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:15","nodeType":"FunctionDefinition","parameters":{"id":2357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2356,"mutability":"mutable","name":"counter","nameLocation":"1109:7:15","nodeType":"VariableDeclaration","scope":2381,"src":"1093:23:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2327_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2355,"nodeType":"UserDefinedTypeName","pathNode":{"id":2354,"name":"Counter","nameLocations":["1093:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2327,"src":"1093:7:15"},"referencedDeclaration":2327,"src":"1093:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2327_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:15"},"returnParameters":{"id":2358,"nodeType":"ParameterList","parameters":[],"src":"1127:0:15"},"scope":2395,"src":"1074:229:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2393,"nodeType":"Block","src":"1358:35:15","statements":[{"expression":{"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2387,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"1368:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2327_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2389,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1376:6:15","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2326,"src":"1368:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2392,"nodeType":"ExpressionStatement","src":"1368:18:15"}]},"id":2394,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:15","nodeType":"FunctionDefinition","parameters":{"id":2385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2384,"mutability":"mutable","name":"counter","nameLocation":"1340:7:15","nodeType":"VariableDeclaration","scope":2394,"src":"1324:23:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2327_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2383,"nodeType":"UserDefinedTypeName","pathNode":{"id":2382,"name":"Counter","nameLocations":["1324:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2327,"src":"1324:7:15"},"referencedDeclaration":2327,"src":"1324:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2327_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:15"},"returnParameters":{"id":2386,"nodeType":"ParameterList","parameters":[],"src":"1358:0:15"},"scope":2395,"src":"1309:84:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2396,"src":"424:971:15","usedErrors":[],"usedEvents":[]}],"src":"87:1309:15"},"id":15},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[2400],"ShortStrings":[2611],"StorageSlot":[2721]},"id":2612,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2397,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"106:23:16"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2398,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2612,"sourceUnit":2722,"src":"131:27:16","symbolAliases":[],"unitAlias":""},{"canonicalName":"ShortString","id":2400,"name":"ShortString","nameLocation":"333:11:16","nodeType":"UserDefinedValueTypeDefinition","src":"328:28:16","underlyingType":{"id":2399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"348:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":2401,"nodeType":"StructuredDocumentation","src":"358:876:16","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2611,"linearizedBaseContracts":[2611],"name":"ShortStrings","nameLocation":"1243:12:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2404,"mutability":"constant","name":"_FALLBACK_SENTINEL","nameLocation":"1350:18:16","nodeType":"VariableDeclaration","scope":2611,"src":"1325:112:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1325:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":2403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:66:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":2408,"name":"StringTooLong","nameLocation":"1450:13:16","nodeType":"ErrorDefinition","parameters":{"id":2407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"str","nameLocation":"1471:3:16","nodeType":"VariableDeclaration","scope":2408,"src":"1464:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2405,"name":"string","nodeType":"ElementaryTypeName","src":"1464:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1463:12:16"},"src":"1444:32:16"},{"errorSelector":"b3512b0c","id":2410,"name":"InvalidShortString","nameLocation":"1487:18:16","nodeType":"ErrorDefinition","parameters":{"id":2409,"nodeType":"ParameterList","parameters":[],"src":"1505:2:16"},"src":"1481:27:16"},{"body":{"id":2453,"nodeType":"Block","src":"1767:208:16","statements":[{"assignments":[2420],"declarations":[{"constant":false,"id":2420,"mutability":"mutable","name":"bstr","nameLocation":"1790:4:16","nodeType":"VariableDeclaration","scope":2453,"src":"1777:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2419,"name":"bytes","nodeType":"ElementaryTypeName","src":"1777:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2425,"initialValue":{"arguments":[{"id":2423,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"1803:3:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1797:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2421,"name":"bytes","nodeType":"ElementaryTypeName","src":"1797:5:16","typeDescriptions":{}}},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1797:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1777:30:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2426,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"1821:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1826:6:16","memberName":"length","nodeType":"MemberAccess","src":"1821:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1835:2:16","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1821:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2435,"nodeType":"IfStatement","src":"1817:72:16","trueBody":{"id":2434,"nodeType":"Block","src":"1839:50:16","statements":[{"errorCall":{"arguments":[{"id":2431,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"1874:3:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2430,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"1860:13:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1860:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2433,"nodeType":"RevertStatement","src":"1853:25:16"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2444,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"1946:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1938:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2442,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1938:7:16","typeDescriptions":{}}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1938:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1930:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2440,"name":"uint256","nodeType":"ElementaryTypeName","src":"1930:7:16","typeDescriptions":{}}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1930:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2447,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"1955:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1960:6:16","memberName":"length","nodeType":"MemberAccess","src":"1955:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1930:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1922:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1922:7:16","typeDescriptions":{}}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1922:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2436,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"1905:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2400_$","typeString":"type(ShortString)"}},"id":2437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1917:4:16","memberName":"wrap","nodeType":"MemberAccess","src":"1905:16:16","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2400_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1905:63:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}},"functionReturnParameters":2418,"id":2452,"nodeType":"Return","src":"1898:70:16"}]},"documentation":{"id":2411,"nodeType":"StructuredDocumentation","src":"1514:170:16","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":2454,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1698:13:16","nodeType":"FunctionDefinition","parameters":{"id":2414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2413,"mutability":"mutable","name":"str","nameLocation":"1726:3:16","nodeType":"VariableDeclaration","scope":2454,"src":"1712:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2412,"name":"string","nodeType":"ElementaryTypeName","src":"1712:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1711:19:16"},"returnParameters":{"id":2418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2454,"src":"1754:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"},"typeName":{"id":2416,"nodeType":"UserDefinedTypeName","pathNode":{"id":2415,"name":"ShortString","nameLocations":["1754:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2400,"src":"1754:11:16"},"referencedDeclaration":2400,"src":"1754:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}},"visibility":"internal"}],"src":"1753:13:16"},"scope":2611,"src":"1689:286:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2479,"nodeType":"Block","src":"2133:331:16","statements":[{"assignments":[2464],"declarations":[{"constant":false,"id":2464,"mutability":"mutable","name":"len","nameLocation":"2151:3:16","nodeType":"VariableDeclaration","scope":2479,"src":"2143:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2463,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2468,"initialValue":{"arguments":[{"id":2466,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"2168:4:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}],"id":2465,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"2157:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2400_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2157:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2143:30:16"},{"assignments":[2470],"declarations":[{"constant":false,"id":2470,"mutability":"mutable","name":"str","nameLocation":"2275:3:16","nodeType":"VariableDeclaration","scope":2479,"src":"2261:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2469,"name":"string","nodeType":"ElementaryTypeName","src":"2261:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2475,"initialValue":{"arguments":[{"hexValue":"3332","id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2292:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2281:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2471,"name":"string","nodeType":"ElementaryTypeName","src":"2285:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2261:34:16"},{"AST":{"nodeType":"YulBlock","src":"2357:81:16","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2378:3:16"},{"name":"len","nodeType":"YulIdentifier","src":"2383:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2371:6:16"},"nodeType":"YulFunctionCall","src":"2371:16:16"},"nodeType":"YulExpressionStatement","src":"2371:16:16"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2411:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"2416:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2407:3:16"},"nodeType":"YulFunctionCall","src":"2407:14:16"},{"name":"sstr","nodeType":"YulIdentifier","src":"2423:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2400:6:16"},"nodeType":"YulFunctionCall","src":"2400:28:16"},"nodeType":"YulExpressionStatement","src":"2400:28:16"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2464,"isOffset":false,"isSlot":false,"src":"2383:3:16","valueSize":1},{"declaration":2458,"isOffset":false,"isSlot":false,"src":"2423:4:16","valueSize":1},{"declaration":2470,"isOffset":false,"isSlot":false,"src":"2378:3:16","valueSize":1},{"declaration":2470,"isOffset":false,"isSlot":false,"src":"2411:3:16","valueSize":1}],"id":2476,"nodeType":"InlineAssembly","src":"2348:90:16"},{"expression":{"id":2477,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"2454:3:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2462,"id":2478,"nodeType":"Return","src":"2447:10:16"}]},"documentation":{"id":2455,"nodeType":"StructuredDocumentation","src":"1981:73:16","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2480,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2068:8:16","nodeType":"FunctionDefinition","parameters":{"id":2459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2458,"mutability":"mutable","name":"sstr","nameLocation":"2089:4:16","nodeType":"VariableDeclaration","scope":2480,"src":"2077:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"},"typeName":{"id":2457,"nodeType":"UserDefinedTypeName","pathNode":{"id":2456,"name":"ShortString","nameLocations":["2077:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2400,"src":"2077:11:16"},"referencedDeclaration":2400,"src":"2077:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}},"visibility":"internal"}],"src":"2076:18:16"},"returnParameters":{"id":2462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2480,"src":"2118:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2460,"name":"string","nodeType":"ElementaryTypeName","src":"2118:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2117:15:16"},"scope":2611,"src":"2059:405:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2511,"nodeType":"Block","src":"2606:175:16","statements":[{"assignments":[2490],"declarations":[{"constant":false,"id":2490,"mutability":"mutable","name":"result","nameLocation":"2624:6:16","nodeType":"VariableDeclaration","scope":2511,"src":"2616:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2489,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2500,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2495,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"2660:4:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}],"expression":{"id":2493,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"2641:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2400_$","typeString":"type(ShortString)"}},"id":2494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2653:6:16","memberName":"unwrap","nodeType":"MemberAccess","src":"2641:18:16","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2400_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2641:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2633:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2491,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:16","typeDescriptions":{}}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2669:4:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2633:40:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2616:57:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2501,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"2687:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2696:2:16","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2687:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2508,"nodeType":"IfStatement","src":"2683:69:16","trueBody":{"id":2507,"nodeType":"Block","src":"2700:52:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2504,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"2721:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2721:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2506,"nodeType":"RevertStatement","src":"2714:27:16"}]}},{"expression":{"id":2509,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"2768:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2488,"id":2510,"nodeType":"Return","src":"2761:13:16"}]},"documentation":{"id":2481,"nodeType":"StructuredDocumentation","src":"2470:61:16","text":" @dev Return the length of a `ShortString`."},"id":2512,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2545:10:16","nodeType":"FunctionDefinition","parameters":{"id":2485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2484,"mutability":"mutable","name":"sstr","nameLocation":"2568:4:16","nodeType":"VariableDeclaration","scope":2512,"src":"2556:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"},"typeName":{"id":2483,"nodeType":"UserDefinedTypeName","pathNode":{"id":2482,"name":"ShortString","nameLocations":["2556:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2400,"src":"2556:11:16"},"referencedDeclaration":2400,"src":"2556:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}},"visibility":"internal"}],"src":"2555:18:16"},"returnParameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2512,"src":"2597:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2486,"name":"uint256","nodeType":"ElementaryTypeName","src":"2597:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2596:9:16"},"scope":2611,"src":"2536:245:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2551,"nodeType":"Block","src":"3004:232:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"3024:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3018:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2523,"name":"bytes","nodeType":"ElementaryTypeName","src":"3018:5:16","typeDescriptions":{}}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3018:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3031:6:16","memberName":"length","nodeType":"MemberAccess","src":"3018:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3040:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3018:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2549,"nodeType":"Block","src":"3102:128:16","statements":[{"expression":{"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2538,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"3142:5:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2535,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"3116:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2721_$","typeString":"type(library StorageSlot)"}},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3128:13:16","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2698,"src":"3116:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2629_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2629_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2540,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3149:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2628,"src":"3116:38:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"3157:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3116:46:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2543,"nodeType":"ExpressionStatement","src":"3116:46:16"},{"expression":{"arguments":[{"id":2546,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"3200:18:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2544,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"3183:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2400_$","typeString":"type(ShortString)"}},"id":2545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3195:4:16","memberName":"wrap","nodeType":"MemberAccess","src":"3183:16:16","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2400_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3183:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}},"functionReturnParameters":2522,"id":2548,"nodeType":"Return","src":"3176:43:16"}]},"id":2550,"nodeType":"IfStatement","src":"3014:216:16","trueBody":{"id":2534,"nodeType":"Block","src":"3044:52:16","statements":[{"expression":{"arguments":[{"id":2531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"3079:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2530,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"3065:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2400_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3065:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}},"functionReturnParameters":2522,"id":2533,"nodeType":"Return","src":"3058:27:16"}]}}]},"documentation":{"id":2513,"nodeType":"StructuredDocumentation","src":"2787:103:16","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2552,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2904:25:16","nodeType":"FunctionDefinition","parameters":{"id":2518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"value","nameLocation":"2944:5:16","nodeType":"VariableDeclaration","scope":2552,"src":"2930:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2514,"name":"string","nodeType":"ElementaryTypeName","src":"2930:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2517,"mutability":"mutable","name":"store","nameLocation":"2966:5:16","nodeType":"VariableDeclaration","scope":2552,"src":"2951:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2516,"name":"string","nodeType":"ElementaryTypeName","src":"2951:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2929:43:16"},"returnParameters":{"id":2522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2552,"src":"2991:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"},"typeName":{"id":2520,"nodeType":"UserDefinedTypeName","pathNode":{"id":2519,"name":"ShortString","nameLocations":["2991:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2400,"src":"2991:11:16"},"referencedDeclaration":2400,"src":"2991:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}},"visibility":"internal"}],"src":"2990:13:16"},"scope":2611,"src":"2895:341:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2578,"nodeType":"Block","src":"3476:159:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"3509:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}],"expression":{"id":2563,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"3490:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2400_$","typeString":"type(ShortString)"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3502:6:16","memberName":"unwrap","nodeType":"MemberAccess","src":"3490:18:16","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2400_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3490:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2567,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"3519:18:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3490:47:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2576,"nodeType":"Block","src":"3592:37:16","statements":[{"expression":{"id":2574,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"3613:5:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2562,"id":2575,"nodeType":"Return","src":"3606:12:16"}]},"id":2577,"nodeType":"IfStatement","src":"3486:143:16","trueBody":{"id":2573,"nodeType":"Block","src":"3539:47:16","statements":[{"expression":{"arguments":[{"id":2570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"3569:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}],"id":2569,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"3560:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2400_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2562,"id":2572,"nodeType":"Return","src":"3553:22:16"}]}}]},"documentation":{"id":2553,"nodeType":"StructuredDocumentation","src":"3242:120:16","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":2579,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3376:20:16","nodeType":"FunctionDefinition","parameters":{"id":2559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2556,"mutability":"mutable","name":"value","nameLocation":"3409:5:16","nodeType":"VariableDeclaration","scope":2579,"src":"3397:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"},"typeName":{"id":2555,"nodeType":"UserDefinedTypeName","pathNode":{"id":2554,"name":"ShortString","nameLocations":["3397:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2400,"src":"3397:11:16"},"referencedDeclaration":2400,"src":"3397:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2558,"mutability":"mutable","name":"store","nameLocation":"3431:5:16","nodeType":"VariableDeclaration","scope":2579,"src":"3416:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2557,"name":"string","nodeType":"ElementaryTypeName","src":"3416:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3396:41:16"},"returnParameters":{"id":2562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2579,"src":"3461:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2560,"name":"string","nodeType":"ElementaryTypeName","src":"3461:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3460:15:16"},"scope":2611,"src":"3367:268:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2609,"nodeType":"Block","src":"4108:175:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"4141:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}],"expression":{"id":2590,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"4122:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2400_$","typeString":"type(ShortString)"}},"id":2591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4134:6:16","memberName":"unwrap","nodeType":"MemberAccess","src":"4122:18:16","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2400_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4122:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2594,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"4151:18:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4122:47:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2607,"nodeType":"Block","src":"4226:51:16","statements":[{"expression":{"expression":{"arguments":[{"id":2603,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"4253:5:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4247:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2601,"name":"bytes","nodeType":"ElementaryTypeName","src":"4247:5:16","typeDescriptions":{}}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4247:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4260:6:16","memberName":"length","nodeType":"MemberAccess","src":"4247:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2589,"id":2606,"nodeType":"Return","src":"4240:26:16"}]},"id":2608,"nodeType":"IfStatement","src":"4118:159:16","trueBody":{"id":2600,"nodeType":"Block","src":"4171:49:16","statements":[{"expression":{"arguments":[{"id":2597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"4203:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}],"id":2596,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"4192:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2400_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2589,"id":2599,"nodeType":"Return","src":"4185:24:16"}]}}]},"documentation":{"id":2580,"nodeType":"StructuredDocumentation","src":"3641:357:16","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2610,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4012:22:16","nodeType":"FunctionDefinition","parameters":{"id":2586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2583,"mutability":"mutable","name":"value","nameLocation":"4047:5:16","nodeType":"VariableDeclaration","scope":2610,"src":"4035:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"},"typeName":{"id":2582,"nodeType":"UserDefinedTypeName","pathNode":{"id":2581,"name":"ShortString","nameLocations":["4035:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2400,"src":"4035:11:16"},"referencedDeclaration":2400,"src":"4035:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2585,"mutability":"mutable","name":"store","nameLocation":"4069:5:16","nodeType":"VariableDeclaration","scope":2610,"src":"4054:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2584,"name":"string","nodeType":"ElementaryTypeName","src":"4054:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4034:41:16"},"returnParameters":{"id":2589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2610,"src":"4099:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2587,"name":"uint256","nodeType":"ElementaryTypeName","src":"4099:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4098:9:16"},"scope":2611,"src":"4003:280:16","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2612,"src":"1235:3050:16","usedErrors":[2408,2410],"usedEvents":[]}],"src":"106:4180:16"},"id":16},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2721]},"id":2722,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2613,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2614,"nodeType":"StructuredDocumentation","src":"218:1201:17","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":2721,"linearizedBaseContracts":[2721],"name":"StorageSlot","nameLocation":"1428:11:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2617,"members":[{"constant":false,"id":2616,"mutability":"mutable","name":"value","nameLocation":"1483:5:17","nodeType":"VariableDeclaration","scope":2617,"src":"1475:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2615,"name":"address","nodeType":"ElementaryTypeName","src":"1475:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1453:11:17","nodeType":"StructDefinition","scope":2721,"src":"1446:49:17","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2620,"members":[{"constant":false,"id":2619,"mutability":"mutable","name":"value","nameLocation":"1535:5:17","nodeType":"VariableDeclaration","scope":2620,"src":"1530:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2618,"name":"bool","nodeType":"ElementaryTypeName","src":"1530:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1508:11:17","nodeType":"StructDefinition","scope":2721,"src":"1501:46:17","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2623,"members":[{"constant":false,"id":2622,"mutability":"mutable","name":"value","nameLocation":"1590:5:17","nodeType":"VariableDeclaration","scope":2623,"src":"1582:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2621,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1582:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1560:11:17","nodeType":"StructDefinition","scope":2721,"src":"1553:49:17","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2626,"members":[{"constant":false,"id":2625,"mutability":"mutable","name":"value","nameLocation":"1645:5:17","nodeType":"VariableDeclaration","scope":2626,"src":"1637:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2624,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1615:11:17","nodeType":"StructDefinition","scope":2721,"src":"1608:49:17","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2629,"members":[{"constant":false,"id":2628,"mutability":"mutable","name":"value","nameLocation":"1698:5:17","nodeType":"VariableDeclaration","scope":2629,"src":"1691:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2627,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1670:10:17","nodeType":"StructDefinition","scope":2721,"src":"1663:47:17","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2632,"members":[{"constant":false,"id":2631,"mutability":"mutable","name":"value","nameLocation":"1749:5:17","nodeType":"VariableDeclaration","scope":2632,"src":"1743:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2630,"name":"bytes","nodeType":"ElementaryTypeName","src":"1743:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1723:9:17","nodeType":"StructDefinition","scope":2721,"src":"1716:45:17","visibility":"public"},{"body":{"id":2642,"nodeType":"Block","src":"1943:106:17","statements":[{"AST":{"nodeType":"YulBlock","src":"2005:38:17","statements":[{"nodeType":"YulAssignment","src":"2019:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"2029:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2019:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2639,"isOffset":false,"isSlot":true,"src":"2019:6:17","suffix":"slot","valueSize":1},{"declaration":2635,"isOffset":false,"isSlot":false,"src":"2029:4:17","valueSize":1}],"id":2641,"nodeType":"InlineAssembly","src":"1996:47:17"}]},"documentation":{"id":2633,"nodeType":"StructuredDocumentation","src":"1767:87:17","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2643,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1868:14:17","nodeType":"FunctionDefinition","parameters":{"id":2636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2635,"mutability":"mutable","name":"slot","nameLocation":"1891:4:17","nodeType":"VariableDeclaration","scope":2643,"src":"1883:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1882:14:17"},"returnParameters":{"id":2640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2639,"mutability":"mutable","name":"r","nameLocation":"1940:1:17","nodeType":"VariableDeclaration","scope":2643,"src":"1920:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2617_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2638,"nodeType":"UserDefinedTypeName","pathNode":{"id":2637,"name":"AddressSlot","nameLocations":["1920:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2617,"src":"1920:11:17"},"referencedDeclaration":2617,"src":"1920:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2617_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1919:23:17"},"scope":2721,"src":"1859:190:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2653,"nodeType":"Block","src":"2231:106:17","statements":[{"AST":{"nodeType":"YulBlock","src":"2293:38:17","statements":[{"nodeType":"YulAssignment","src":"2307:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"2317:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2307:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2650,"isOffset":false,"isSlot":true,"src":"2307:6:17","suffix":"slot","valueSize":1},{"declaration":2646,"isOffset":false,"isSlot":false,"src":"2317:4:17","valueSize":1}],"id":2652,"nodeType":"InlineAssembly","src":"2284:47:17"}]},"documentation":{"id":2644,"nodeType":"StructuredDocumentation","src":"2055:87:17","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2654,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2156:14:17","nodeType":"FunctionDefinition","parameters":{"id":2647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2646,"mutability":"mutable","name":"slot","nameLocation":"2179:4:17","nodeType":"VariableDeclaration","scope":2654,"src":"2171:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2171:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2170:14:17"},"returnParameters":{"id":2651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2650,"mutability":"mutable","name":"r","nameLocation":"2228:1:17","nodeType":"VariableDeclaration","scope":2654,"src":"2208:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2620_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2649,"nodeType":"UserDefinedTypeName","pathNode":{"id":2648,"name":"BooleanSlot","nameLocations":["2208:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2620,"src":"2208:11:17"},"referencedDeclaration":2620,"src":"2208:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2620_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2207:23:17"},"scope":2721,"src":"2147:190:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2664,"nodeType":"Block","src":"2519:106:17","statements":[{"AST":{"nodeType":"YulBlock","src":"2581:38:17","statements":[{"nodeType":"YulAssignment","src":"2595:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"2605:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2595:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2661,"isOffset":false,"isSlot":true,"src":"2595:6:17","suffix":"slot","valueSize":1},{"declaration":2657,"isOffset":false,"isSlot":false,"src":"2605:4:17","valueSize":1}],"id":2663,"nodeType":"InlineAssembly","src":"2572:47:17"}]},"documentation":{"id":2655,"nodeType":"StructuredDocumentation","src":"2343:87:17","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2665,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2444:14:17","nodeType":"FunctionDefinition","parameters":{"id":2658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2657,"mutability":"mutable","name":"slot","nameLocation":"2467:4:17","nodeType":"VariableDeclaration","scope":2665,"src":"2459:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2656,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2459:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2458:14:17"},"returnParameters":{"id":2662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2661,"mutability":"mutable","name":"r","nameLocation":"2516:1:17","nodeType":"VariableDeclaration","scope":2665,"src":"2496:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2623_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2660,"nodeType":"UserDefinedTypeName","pathNode":{"id":2659,"name":"Bytes32Slot","nameLocations":["2496:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2623,"src":"2496:11:17"},"referencedDeclaration":2623,"src":"2496:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2623_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2495:23:17"},"scope":2721,"src":"2435:190:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2675,"nodeType":"Block","src":"2807:106:17","statements":[{"AST":{"nodeType":"YulBlock","src":"2869:38:17","statements":[{"nodeType":"YulAssignment","src":"2883:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"2893:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2883:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2672,"isOffset":false,"isSlot":true,"src":"2883:6:17","suffix":"slot","valueSize":1},{"declaration":2668,"isOffset":false,"isSlot":false,"src":"2893:4:17","valueSize":1}],"id":2674,"nodeType":"InlineAssembly","src":"2860:47:17"}]},"documentation":{"id":2666,"nodeType":"StructuredDocumentation","src":"2631:87:17","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2676,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2732:14:17","nodeType":"FunctionDefinition","parameters":{"id":2669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2668,"mutability":"mutable","name":"slot","nameLocation":"2755:4:17","nodeType":"VariableDeclaration","scope":2676,"src":"2747:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2747:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2746:14:17"},"returnParameters":{"id":2673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2672,"mutability":"mutable","name":"r","nameLocation":"2804:1:17","nodeType":"VariableDeclaration","scope":2676,"src":"2784:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2626_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2671,"nodeType":"UserDefinedTypeName","pathNode":{"id":2670,"name":"Uint256Slot","nameLocations":["2784:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2626,"src":"2784:11:17"},"referencedDeclaration":2626,"src":"2784:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2626_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2783:23:17"},"scope":2721,"src":"2723:190:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2686,"nodeType":"Block","src":"3092:106:17","statements":[{"AST":{"nodeType":"YulBlock","src":"3154:38:17","statements":[{"nodeType":"YulAssignment","src":"3168:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"3178:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3168:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2683,"isOffset":false,"isSlot":true,"src":"3168:6:17","suffix":"slot","valueSize":1},{"declaration":2679,"isOffset":false,"isSlot":false,"src":"3178:4:17","valueSize":1}],"id":2685,"nodeType":"InlineAssembly","src":"3145:47:17"}]},"documentation":{"id":2677,"nodeType":"StructuredDocumentation","src":"2919:86:17","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2687,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3019:13:17","nodeType":"FunctionDefinition","parameters":{"id":2680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2679,"mutability":"mutable","name":"slot","nameLocation":"3041:4:17","nodeType":"VariableDeclaration","scope":2687,"src":"3033:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2678,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3033:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3032:14:17"},"returnParameters":{"id":2684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2683,"mutability":"mutable","name":"r","nameLocation":"3089:1:17","nodeType":"VariableDeclaration","scope":2687,"src":"3070:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2629_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2682,"nodeType":"UserDefinedTypeName","pathNode":{"id":2681,"name":"StringSlot","nameLocations":["3070:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":2629,"src":"3070:10:17"},"referencedDeclaration":2629,"src":"3070:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2629_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3069:22:17"},"scope":2721,"src":"3010:188:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2697,"nodeType":"Block","src":"3400:112:17","statements":[{"AST":{"nodeType":"YulBlock","src":"3462:44:17","statements":[{"nodeType":"YulAssignment","src":"3476:20:17","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3486:10:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3476:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2694,"isOffset":false,"isSlot":true,"src":"3476:6:17","suffix":"slot","valueSize":1},{"declaration":2690,"isOffset":false,"isSlot":true,"src":"3486:10:17","suffix":"slot","valueSize":1}],"id":2696,"nodeType":"InlineAssembly","src":"3453:53:17"}]},"documentation":{"id":2688,"nodeType":"StructuredDocumentation","src":"3204:101:17","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2698,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3319:13:17","nodeType":"FunctionDefinition","parameters":{"id":2691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2690,"mutability":"mutable","name":"store","nameLocation":"3348:5:17","nodeType":"VariableDeclaration","scope":2698,"src":"3333:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2689,"name":"string","nodeType":"ElementaryTypeName","src":"3333:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3332:22:17"},"returnParameters":{"id":2695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2694,"mutability":"mutable","name":"r","nameLocation":"3397:1:17","nodeType":"VariableDeclaration","scope":2698,"src":"3378:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2629_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2693,"nodeType":"UserDefinedTypeName","pathNode":{"id":2692,"name":"StringSlot","nameLocations":["3378:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":2629,"src":"3378:10:17"},"referencedDeclaration":2629,"src":"3378:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2629_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3377:22:17"},"scope":2721,"src":"3310:202:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2708,"nodeType":"Block","src":"3688:106:17","statements":[{"AST":{"nodeType":"YulBlock","src":"3750:38:17","statements":[{"nodeType":"YulAssignment","src":"3764:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"3774:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3764:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2705,"isOffset":false,"isSlot":true,"src":"3764:6:17","suffix":"slot","valueSize":1},{"declaration":2701,"isOffset":false,"isSlot":false,"src":"3774:4:17","valueSize":1}],"id":2707,"nodeType":"InlineAssembly","src":"3741:47:17"}]},"documentation":{"id":2699,"nodeType":"StructuredDocumentation","src":"3518:85:17","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2709,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3617:12:17","nodeType":"FunctionDefinition","parameters":{"id":2702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2701,"mutability":"mutable","name":"slot","nameLocation":"3638:4:17","nodeType":"VariableDeclaration","scope":2709,"src":"3630:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2700,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3630:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3629:14:17"},"returnParameters":{"id":2706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2705,"mutability":"mutable","name":"r","nameLocation":"3685:1:17","nodeType":"VariableDeclaration","scope":2709,"src":"3667:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2632_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2704,"nodeType":"UserDefinedTypeName","pathNode":{"id":2703,"name":"BytesSlot","nameLocations":["3667:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2632,"src":"3667:9:17"},"referencedDeclaration":2632,"src":"3667:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2632_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3666:21:17"},"scope":2721,"src":"3608:186:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2719,"nodeType":"Block","src":"3991:112:17","statements":[{"AST":{"nodeType":"YulBlock","src":"4053:44:17","statements":[{"nodeType":"YulAssignment","src":"4067:20:17","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4077:10:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4067:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2716,"isOffset":false,"isSlot":true,"src":"4067:6:17","suffix":"slot","valueSize":1},{"declaration":2712,"isOffset":false,"isSlot":true,"src":"4077:10:17","suffix":"slot","valueSize":1}],"id":2718,"nodeType":"InlineAssembly","src":"4044:53:17"}]},"documentation":{"id":2710,"nodeType":"StructuredDocumentation","src":"3800:99:17","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2720,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3913:12:17","nodeType":"FunctionDefinition","parameters":{"id":2713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2712,"mutability":"mutable","name":"store","nameLocation":"3940:5:17","nodeType":"VariableDeclaration","scope":2720,"src":"3926:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2711,"name":"bytes","nodeType":"ElementaryTypeName","src":"3926:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3925:21:17"},"returnParameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2716,"mutability":"mutable","name":"r","nameLocation":"3988:1:17","nodeType":"VariableDeclaration","scope":2720,"src":"3970:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2632_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2715,"nodeType":"UserDefinedTypeName","pathNode":{"id":2714,"name":"BytesSlot","nameLocations":["3970:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2632,"src":"3970:9:17"},"referencedDeclaration":2632,"src":"3970:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2632_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3969:21:17"},"scope":2721,"src":"3904:199:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2722,"src":"1420:2685:17","usedErrors":[],"usedEvents":[]}],"src":"193:3913:17"},"id":17},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4422],"SignedMath":[6068],"Strings":[2950]},"id":2951,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2723,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:18"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2724,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2951,"sourceUnit":4423,"src":"126:25:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2725,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2951,"sourceUnit":6069,"src":"152:31:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2726,"nodeType":"StructuredDocumentation","src":"185:34:18","text":" @dev String operations."},"fullyImplemented":true,"id":2950,"linearizedBaseContracts":[2950],"name":"Strings","nameLocation":"228:7:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2729,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:18","nodeType":"VariableDeclaration","scope":2950,"src":"242:54:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2727,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2732,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:18","nodeType":"VariableDeclaration","scope":2950,"src":"302:43:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2730,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:18","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2779,"nodeType":"Block","src":"518:625:18","statements":[{"id":2778,"nodeType":"UncheckedBlock","src":"528:609:18","statements":[{"assignments":[2741],"declarations":[{"constant":false,"id":2741,"mutability":"mutable","name":"length","nameLocation":"560:6:18","nodeType":"VariableDeclaration","scope":2778,"src":"552:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2740,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2748,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"580:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2742,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"569:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4422_$","typeString":"type(library Math)"}},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:18","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4259,"src":"569:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:18"},{"assignments":[2750],"declarations":[{"constant":false,"id":2750,"mutability":"mutable","name":"buffer","nameLocation":"618:6:18","nodeType":"VariableDeclaration","scope":2778,"src":"604:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2749,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2755,"initialValue":{"arguments":[{"id":2753,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"638:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2751,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:18"},{"assignments":[2757],"declarations":[{"constant":false,"id":2757,"mutability":"mutable","name":"ptr","nameLocation":"667:3:18","nodeType":"VariableDeclaration","scope":2778,"src":"659:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2756,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2758,"nodeType":"VariableDeclarationStatement","src":"659:11:18"},{"AST":{"nodeType":"YulBlock","src":"740:67:18","statements":[{"nodeType":"YulAssignment","src":"758:35:18","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:18","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:18"},"nodeType":"YulFunctionCall","src":"777:15:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:18"},"nodeType":"YulFunctionCall","src":"765:28:18"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2750,"isOffset":false,"isSlot":false,"src":"769:6:18","valueSize":1},{"declaration":2741,"isOffset":false,"isSlot":false,"src":"785:6:18","valueSize":1},{"declaration":2757,"isOffset":false,"isSlot":false,"src":"758:3:18","valueSize":1}],"id":2759,"nodeType":"InlineAssembly","src":"731:76:18"},{"body":{"id":2774,"nodeType":"Block","src":"833:267:18","statements":[{"expression":{"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:18","subExpression":{"id":2761,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"851:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2763,"nodeType":"ExpressionStatement","src":"851:5:18"},{"AST":{"nodeType":"YulBlock","src":"934:84:18","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:18","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:18"},"nodeType":"YulFunctionCall","src":"974:14:18"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:18"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:18"},"nodeType":"YulFunctionCall","src":"969:30:18"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:18"},"nodeType":"YulFunctionCall","src":"956:44:18"},"nodeType":"YulExpressionStatement","src":"956:44:18"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2729,"isOffset":false,"isSlot":false,"src":"990:8:18","valueSize":1},{"declaration":2757,"isOffset":false,"isSlot":false,"src":"964:3:18","valueSize":1},{"declaration":2735,"isOffset":false,"isSlot":false,"src":"978:5:18","valueSize":1}],"id":2764,"nodeType":"InlineAssembly","src":"925:93:18"},{"expression":{"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"1035:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2768,"nodeType":"ExpressionStatement","src":"1035:11:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"1068:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2773,"nodeType":"IfStatement","src":"1064:21:18","trueBody":{"id":2772,"nodeType":"Break","src":"1080:5:18"}}]},"condition":{"hexValue":"74727565","id":2760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2775,"nodeType":"WhileStatement","src":"820:280:18"},{"expression":{"id":2776,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"1120:6:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2739,"id":2777,"nodeType":"Return","src":"1113:13:18"}]}]},"documentation":{"id":2733,"nodeType":"StructuredDocumentation","src":"352:90:18","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2780,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:18","nodeType":"FunctionDefinition","parameters":{"id":2736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2735,"mutability":"mutable","name":"value","nameLocation":"473:5:18","nodeType":"VariableDeclaration","scope":2780,"src":"465:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2734,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:18"},"returnParameters":{"id":2739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2780,"src":"503:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2737,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:18"},"scope":2950,"src":"447:696:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2807,"nodeType":"Block","src":"1313:103:18","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"1354:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:18","trueExpression":{"hexValue":"2d","id":2795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"1400:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2799,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6068,"src":"1385:10:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6068_$","typeString":"type(library SignedMath)"}},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:18","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6067,"src":"1385:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2798,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[2780,2808],"referencedDeclaration":2780,"src":"1376:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2790,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2788,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:18","typeDescriptions":{}}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2787,"id":2806,"nodeType":"Return","src":"1323:86:18"}]},"documentation":{"id":2781,"nodeType":"StructuredDocumentation","src":"1149:89:18","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2808,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:18","nodeType":"FunctionDefinition","parameters":{"id":2784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2783,"mutability":"mutable","name":"value","nameLocation":"1268:5:18","nodeType":"VariableDeclaration","scope":2808,"src":"1261:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2782,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:18"},"returnParameters":{"id":2787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2808,"src":"1298:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2785,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:18"},"scope":2950,"src":"1243:173:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2827,"nodeType":"Block","src":"1595:100:18","statements":[{"id":2826,"nodeType":"UncheckedBlock","src":"1605:84:18","statements":[{"expression":{"arguments":[{"id":2817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"1648:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"1667:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2818,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"1655:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4422_$","typeString":"type(library Math)"}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:18","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4382,"src":"1655:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2816,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2828,2904,2924],"referencedDeclaration":2904,"src":"1636:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2815,"id":2825,"nodeType":"Return","src":"1629:49:18"}]}]},"documentation":{"id":2809,"nodeType":"StructuredDocumentation","src":"1422:94:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2828,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:18","nodeType":"FunctionDefinition","parameters":{"id":2812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2811,"mutability":"mutable","name":"value","nameLocation":"1550:5:18","nodeType":"VariableDeclaration","scope":2828,"src":"1542:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2810,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:18"},"returnParameters":{"id":2815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2828,"src":"1580:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2813,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:18"},"scope":2950,"src":"1521:174:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2903,"nodeType":"Block","src":"1908:347:18","statements":[{"assignments":[2839],"declarations":[{"constant":false,"id":2839,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:18","nodeType":"VariableDeclaration","scope":2903,"src":"1918:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2838,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2848,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2843,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"1954:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2840,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:18"},{"expression":{"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2849,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"1975:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2851,"indexExpression":{"hexValue":"30","id":2850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2854,"nodeType":"ExpressionStatement","src":"1975:15:18"},{"expression":{"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2855,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"2000:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2857,"indexExpression":{"hexValue":"31","id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2860,"nodeType":"ExpressionStatement","src":"2000:15:18"},{"body":{"id":2889,"nodeType":"Block","src":"2070:83:18","statements":[{"expression":{"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2875,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"2084:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2877,"indexExpression":{"id":2876,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"2091:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2878,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"2096:8:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2882,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"2105:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2884,"nodeType":"ExpressionStatement","src":"2084:33:18"},{"expression":{"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"2131:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2888,"nodeType":"ExpressionStatement","src":"2131:11:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2869,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"2058:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2890,"initializationExpression":{"assignments":[2862],"declarations":[{"constant":false,"id":2862,"mutability":"mutable","name":"i","nameLocation":"2038:1:18","nodeType":"VariableDeclaration","scope":2890,"src":"2030:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2861,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2868,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2864,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"2046:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:18"},"loopExpression":{"expression":{"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:18","subExpression":{"id":2872,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"2067:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2874,"nodeType":"ExpressionStatement","src":"2065:3:18"},"nodeType":"ForStatement","src":"2025:128:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"2170:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2891,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2897,"nodeType":"ExpressionStatement","src":"2162:55:18"},{"expression":{"arguments":[{"id":2900,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"2241:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2898,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:18","typeDescriptions":{}}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2837,"id":2902,"nodeType":"Return","src":"2227:21:18"}]},"documentation":{"id":2829,"nodeType":"StructuredDocumentation","src":"1701:112:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2904,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:18","nodeType":"FunctionDefinition","parameters":{"id":2834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2831,"mutability":"mutable","name":"value","nameLocation":"1847:5:18","nodeType":"VariableDeclaration","scope":2904,"src":"1839:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2830,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2833,"mutability":"mutable","name":"length","nameLocation":"1862:6:18","nodeType":"VariableDeclaration","scope":2904,"src":"1854:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2832,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:18"},"returnParameters":{"id":2837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2904,"src":"1893:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2835,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:18"},"scope":2950,"src":"1818:437:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2923,"nodeType":"Block","src":"2480:76:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2917,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"2525:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2915,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:18","typeDescriptions":{}}},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2913,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:18","typeDescriptions":{}}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2920,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"2533:15:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2912,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2828,2904,2924],"referencedDeclaration":2904,"src":"2497:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2911,"id":2922,"nodeType":"Return","src":"2490:59:18"}]},"documentation":{"id":2905,"nodeType":"StructuredDocumentation","src":"2261:141:18","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2924,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:18","nodeType":"FunctionDefinition","parameters":{"id":2908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2907,"mutability":"mutable","name":"addr","nameLocation":"2436:4:18","nodeType":"VariableDeclaration","scope":2924,"src":"2428:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2906,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:18"},"returnParameters":{"id":2911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2924,"src":"2465:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2909,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:18"},"scope":2950,"src":"2407:149:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2948,"nodeType":"Block","src":"2711:66:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2937,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"2744:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2935,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:18","typeDescriptions":{}}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2934,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2943,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"2767:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2941,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:18","typeDescriptions":{}}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2940,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2933,"id":2947,"nodeType":"Return","src":"2721:49:18"}]},"documentation":{"id":2925,"nodeType":"StructuredDocumentation","src":"2562:66:18","text":" @dev Returns true if the two strings are equal."},"id":2949,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:18","nodeType":"FunctionDefinition","parameters":{"id":2930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2927,"mutability":"mutable","name":"a","nameLocation":"2662:1:18","nodeType":"VariableDeclaration","scope":2949,"src":"2648:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2926,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2929,"mutability":"mutable","name":"b","nameLocation":"2679:1:18","nodeType":"VariableDeclaration","scope":2949,"src":"2665:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2928,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:18"},"returnParameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2949,"src":"2705:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2931,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:18"},"scope":2950,"src":"2633:144:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2951,"src":"220:2559:18","usedErrors":[],"usedEvents":[]}],"src":"101:2679:18"},"id":18},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3316],"Math":[4422],"SignedMath":[6068],"Strings":[2950]},"id":3317,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2952,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:19"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2953,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3317,"sourceUnit":2951,"src":"137:24:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2954,"nodeType":"StructuredDocumentation","src":"163:205:19","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3316,"linearizedBaseContracts":[3316],"name":"ECDSA","nameLocation":"377:5:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2960,"members":[{"id":2955,"name":"NoError","nameLocation":"417:7:19","nodeType":"EnumValue","src":"417:7:19"},{"id":2956,"name":"InvalidSignature","nameLocation":"434:16:19","nodeType":"EnumValue","src":"434:16:19"},{"id":2957,"name":"InvalidSignatureLength","nameLocation":"460:22:19","nodeType":"EnumValue","src":"460:22:19"},{"id":2958,"name":"InvalidSignatureS","nameLocation":"492:17:19","nodeType":"EnumValue","src":"492:17:19"},{"id":2959,"name":"InvalidSignatureV","nameLocation":"519:17:19","nodeType":"EnumValue","src":"519:17:19"}],"name":"RecoverError","nameLocation":"394:12:19","nodeType":"EnumDefinition","src":"389:175:19"},{"body":{"id":3003,"nodeType":"Block","src":"624:457:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2966,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"638:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2967,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"647:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2960_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"660:7:19","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2955,"src":"647:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2972,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"734:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2973,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"743:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2960_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"756:16:19","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2956,"src":"743:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2981,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"843:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2982,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"852:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2960_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"865:22:19","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2957,"src":"852:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2990,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"965:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2991,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"974:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2960_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"987:17:19","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2958,"src":"974:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2999,"nodeType":"IfStatement","src":"961:114:19","trueBody":{"id":2998,"nodeType":"Block","src":"1006:69:19","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":2995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":2994,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:19","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2997,"nodeType":"ExpressionStatement","src":"1020:44:19"}]}},"id":3000,"nodeType":"IfStatement","src":"839:236:19","trueBody":{"id":2989,"nodeType":"Block","src":"889:66:19","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":2985,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:19","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2988,"nodeType":"ExpressionStatement","src":"903:41:19"}]}},"id":3001,"nodeType":"IfStatement","src":"730:345:19","trueBody":{"id":2980,"nodeType":"Block","src":"774:59:19","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":2977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":2976,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:19","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2979,"nodeType":"ExpressionStatement","src":"788:34:19"}]}},"id":3002,"nodeType":"IfStatement","src":"634:441:19","trueBody":{"id":2971,"nodeType":"Block","src":"669:55:19","statements":[{"functionReturnParameters":2965,"id":2970,"nodeType":"Return","src":"683:7:19"}]}}]},"id":3004,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:19","nodeType":"FunctionDefinition","parameters":{"id":2964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2963,"mutability":"mutable","name":"error","nameLocation":"604:5:19","nodeType":"VariableDeclaration","scope":3004,"src":"591:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2962,"nodeType":"UserDefinedTypeName","pathNode":{"id":2961,"name":"RecoverError","nameLocations":["591:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2960,"src":"591:12:19"},"referencedDeclaration":2960,"src":"591:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:19"},"returnParameters":{"id":2965,"nodeType":"ParameterList","parameters":[],"src":"624:0:19"},"scope":3316,"src":"570:511:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3049,"nodeType":"Block","src":"2249:626:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3017,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"2263:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:6:19","memberName":"length","nodeType":"MemberAccess","src":"2263:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:19","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3047,"nodeType":"Block","src":"2788:81:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3039,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:19","typeDescriptions":{}}},"id":3042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3043,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"2822:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2960_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:22:19","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2957,"src":"2822:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"}}],"id":3045,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2960_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3016,"id":3046,"nodeType":"Return","src":"2802:56:19"}]},"id":3048,"nodeType":"IfStatement","src":"2259:610:19","trueBody":{"id":3038,"nodeType":"Block","src":"2287:495:19","statements":[{"assignments":[3022],"declarations":[{"constant":false,"id":3022,"mutability":"mutable","name":"r","nameLocation":"2309:1:19","nodeType":"VariableDeclaration","scope":3038,"src":"2301:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3021,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3023,"nodeType":"VariableDeclarationStatement","src":"2301:9:19"},{"assignments":[3025],"declarations":[{"constant":false,"id":3025,"mutability":"mutable","name":"s","nameLocation":"2332:1:19","nodeType":"VariableDeclaration","scope":3038,"src":"2324:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3024,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3026,"nodeType":"VariableDeclarationStatement","src":"2324:9:19"},{"assignments":[3028],"declarations":[{"constant":false,"id":3028,"mutability":"mutable","name":"v","nameLocation":"2353:1:19","nodeType":"VariableDeclaration","scope":3038,"src":"2347:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3027,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3029,"nodeType":"VariableDeclarationStatement","src":"2347:7:19"},{"AST":{"nodeType":"YulBlock","src":"2555:171:19","statements":[{"nodeType":"YulAssignment","src":"2573:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:19"},"nodeType":"YulFunctionCall","src":"2584:20:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:19"},"nodeType":"YulFunctionCall","src":"2578:27:19"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:19"}]},{"nodeType":"YulAssignment","src":"2622:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:19"},"nodeType":"YulFunctionCall","src":"2633:20:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:19"},"nodeType":"YulFunctionCall","src":"2627:27:19"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:19"}]},{"nodeType":"YulAssignment","src":"2671:41:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:19","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:19"},"nodeType":"YulFunctionCall","src":"2690:20:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:19"},"nodeType":"YulFunctionCall","src":"2684:27:19"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:19"},"nodeType":"YulFunctionCall","src":"2676:36:19"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":3022,"isOffset":false,"isSlot":false,"src":"2573:1:19","valueSize":1},{"declaration":3025,"isOffset":false,"isSlot":false,"src":"2622:1:19","valueSize":1},{"declaration":3009,"isOffset":false,"isSlot":false,"src":"2588:9:19","valueSize":1},{"declaration":3009,"isOffset":false,"isSlot":false,"src":"2637:9:19","valueSize":1},{"declaration":3009,"isOffset":false,"isSlot":false,"src":"2694:9:19","valueSize":1},{"declaration":3028,"isOffset":false,"isSlot":false,"src":"2671:1:19","valueSize":1}],"id":3030,"nodeType":"InlineAssembly","src":"2546:180:19"},{"expression":{"arguments":[{"id":3032,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"2757:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3033,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"2763:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3034,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"2766:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3035,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"2769:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3031,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3050,3124,3218],"referencedDeclaration":3218,"src":"2746:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2960_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2960_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3016,"id":3037,"nodeType":"Return","src":"2739:32:19"}]}}]},"documentation":{"id":3005,"nodeType":"StructuredDocumentation","src":"1087:1053:19","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":3050,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:19","nodeType":"FunctionDefinition","parameters":{"id":3010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3007,"mutability":"mutable","name":"hash","nameLocation":"2173:4:19","nodeType":"VariableDeclaration","scope":3050,"src":"2165:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3006,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3009,"mutability":"mutable","name":"signature","nameLocation":"2192:9:19","nodeType":"VariableDeclaration","scope":3050,"src":"2179:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3008,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:19"},"returnParameters":{"id":3016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3050,"src":"2226:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3011,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3050,"src":"2235:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3014,"nodeType":"UserDefinedTypeName","pathNode":{"id":3013,"name":"RecoverError","nameLocations":["2235:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2960,"src":"2235:12:19"},"referencedDeclaration":2960,"src":"2235:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:19"},"scope":3316,"src":"2145:730:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3076,"nodeType":"Block","src":"3748:140:19","statements":[{"assignments":[3061,3064],"declarations":[{"constant":false,"id":3061,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:19","nodeType":"VariableDeclaration","scope":3076,"src":"3759:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3060,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3064,"mutability":"mutable","name":"error","nameLocation":"3791:5:19","nodeType":"VariableDeclaration","scope":3076,"src":"3778:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3063,"nodeType":"UserDefinedTypeName","pathNode":{"id":3062,"name":"RecoverError","nameLocations":["3778:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2960,"src":"3778:12:19"},"referencedDeclaration":2960,"src":"3778:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":3069,"initialValue":{"arguments":[{"id":3066,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"3811:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3067,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"3817:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3065,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3050,3124,3218],"referencedDeclaration":3050,"src":"3800:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2960_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2960_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:19"},{"expression":{"arguments":[{"id":3071,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"3849:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"}],"id":3070,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"3837:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2960_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3073,"nodeType":"ExpressionStatement","src":"3837:18:19"},{"expression":{"id":3074,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"3872:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3059,"id":3075,"nodeType":"Return","src":"3865:16:19"}]},"documentation":{"id":3051,"nodeType":"StructuredDocumentation","src":"2881:775:19","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":3077,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:19","nodeType":"FunctionDefinition","parameters":{"id":3056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3053,"mutability":"mutable","name":"hash","nameLocation":"3686:4:19","nodeType":"VariableDeclaration","scope":3077,"src":"3678:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3055,"mutability":"mutable","name":"signature","nameLocation":"3705:9:19","nodeType":"VariableDeclaration","scope":3077,"src":"3692:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3054,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:19"},"returnParameters":{"id":3059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3077,"src":"3739:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3057,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:19"},"scope":3316,"src":"3661:227:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3123,"nodeType":"Block","src":"4245:203:19","statements":[{"assignments":[3093],"declarations":[{"constant":false,"id":3093,"mutability":"mutable","name":"s","nameLocation":"4263:1:19","nodeType":"VariableDeclaration","scope":3123,"src":"4255:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3092,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3100,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3094,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"4267:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4280:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4272:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4272:7:19","typeDescriptions":{}}},"id":3098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:75:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4267:80:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4255:92:19"},{"assignments":[3102],"declarations":[{"constant":false,"id":3102,"mutability":"mutable","name":"v","nameLocation":"4363:1:19","nodeType":"VariableDeclaration","scope":3123,"src":"4357:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3101,"name":"uint8","nodeType":"ElementaryTypeName","src":"4357:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3115,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3107,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"4382:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4374:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3105,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:19","typeDescriptions":{}}},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4374:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4389:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4374:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3111,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4373:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4396:2:19","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4373:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4367:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3103,"name":"uint8","nodeType":"ElementaryTypeName","src":"4367:5:19","typeDescriptions":{}}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4367:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4357:42:19"},{"expression":{"arguments":[{"id":3117,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"4427:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3118,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"4433:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3119,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"4436:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3120,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"4439:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3116,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3050,3124,3218],"referencedDeclaration":3218,"src":"4416:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2960_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4416:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2960_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3091,"id":3122,"nodeType":"Return","src":"4409:32:19"}]},"documentation":{"id":3078,"nodeType":"StructuredDocumentation","src":"3894:243:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":3124,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:19","nodeType":"FunctionDefinition","parameters":{"id":3085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3080,"mutability":"mutable","name":"hash","nameLocation":"4170:4:19","nodeType":"VariableDeclaration","scope":3124,"src":"4162:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4162:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3082,"mutability":"mutable","name":"r","nameLocation":"4184:1:19","nodeType":"VariableDeclaration","scope":3124,"src":"4176:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3081,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4176:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3084,"mutability":"mutable","name":"vs","nameLocation":"4195:2:19","nodeType":"VariableDeclaration","scope":3124,"src":"4187:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3083,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4187:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:37:19"},"returnParameters":{"id":3091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3124,"src":"4222:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3086,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3124,"src":"4231:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3089,"nodeType":"UserDefinedTypeName","pathNode":{"id":3088,"name":"RecoverError","nameLocations":["4231:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2960,"src":"4231:12:19"},"referencedDeclaration":2960,"src":"4231:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4221:23:19"},"scope":3316,"src":"4142:306:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3153,"nodeType":"Block","src":"4699:136:19","statements":[{"assignments":[3137,3140],"declarations":[{"constant":false,"id":3137,"mutability":"mutable","name":"recovered","nameLocation":"4718:9:19","nodeType":"VariableDeclaration","scope":3153,"src":"4710:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3136,"name":"address","nodeType":"ElementaryTypeName","src":"4710:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3140,"mutability":"mutable","name":"error","nameLocation":"4742:5:19","nodeType":"VariableDeclaration","scope":3153,"src":"4729:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3139,"nodeType":"UserDefinedTypeName","pathNode":{"id":3138,"name":"RecoverError","nameLocations":["4729:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2960,"src":"4729:12:19"},"referencedDeclaration":2960,"src":"4729:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":3146,"initialValue":{"arguments":[{"id":3142,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"4762:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3143,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"4768:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3144,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"4771:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3141,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3050,3124,3218],"referencedDeclaration":3124,"src":"4751:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2960_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4751:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2960_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4709:65:19"},{"expression":{"arguments":[{"id":3148,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"4796:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"}],"id":3147,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"4784:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2960_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3150,"nodeType":"ExpressionStatement","src":"4784:18:19"},{"expression":{"id":3151,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"4819:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3135,"id":3152,"nodeType":"Return","src":"4812:16:19"}]},"documentation":{"id":3125,"nodeType":"StructuredDocumentation","src":"4454:154:19","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":3154,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4622:7:19","nodeType":"FunctionDefinition","parameters":{"id":3132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3127,"mutability":"mutable","name":"hash","nameLocation":"4638:4:19","nodeType":"VariableDeclaration","scope":3154,"src":"4630:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3126,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4630:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3129,"mutability":"mutable","name":"r","nameLocation":"4652:1:19","nodeType":"VariableDeclaration","scope":3154,"src":"4644:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3131,"mutability":"mutable","name":"vs","nameLocation":"4663:2:19","nodeType":"VariableDeclaration","scope":3154,"src":"4655:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4655:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4629:37:19"},"returnParameters":{"id":3135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3154,"src":"4690:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3133,"name":"address","nodeType":"ElementaryTypeName","src":"4690:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4689:9:19"},"scope":3316,"src":"4613:222:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3217,"nodeType":"Block","src":"5120:1345:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3173,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"6016:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6008:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3171,"name":"uint256","nodeType":"ElementaryTypeName","src":"6008:7:19","typeDescriptions":{}}},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6008:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6008:79:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3186,"nodeType":"IfStatement","src":"6004:161:19","trueBody":{"id":3185,"nodeType":"Block","src":"6089:76:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3177,"name":"address","nodeType":"ElementaryTypeName","src":"6111:7:19","typeDescriptions":{}}},"id":3180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6111:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3181,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"6123:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2960_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6136:17:19","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2958,"src":"6123:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"}}],"id":3183,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6110:44:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2960_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3170,"id":3184,"nodeType":"Return","src":"6103:51:19"}]}},{"assignments":[3188],"declarations":[{"constant":false,"id":3188,"mutability":"mutable","name":"signer","nameLocation":"6267:6:19","nodeType":"VariableDeclaration","scope":3217,"src":"6259:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3187,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3195,"initialValue":{"arguments":[{"id":3190,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"6286:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3191,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"6292:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3192,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"6295:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3193,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"6298:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3189,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6276:9:19","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6276:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6259:41:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3196,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"6314:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6332:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6324:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3197,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:19","typeDescriptions":{}}},"id":3200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6324:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6314:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3211,"nodeType":"IfStatement","src":"6310:101:19","trueBody":{"id":3210,"nodeType":"Block","src":"6336:75:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6366:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6358:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3202,"name":"address","nodeType":"ElementaryTypeName","src":"6358:7:19","typeDescriptions":{}}},"id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6358:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3206,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"6370:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2960_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6383:16:19","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2956,"src":"6370:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"}}],"id":3208,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6357:43:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2960_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3170,"id":3209,"nodeType":"Return","src":"6350:50:19"}]}},{"expression":{"components":[{"id":3212,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"6429:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3213,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"6437:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2960_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6450:7:19","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2955,"src":"6437:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"}}],"id":3215,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6428:30:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2960_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3170,"id":3216,"nodeType":"Return","src":"6421:37:19"}]},"documentation":{"id":3155,"nodeType":"StructuredDocumentation","src":"4841:163:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":3218,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5018:10:19","nodeType":"FunctionDefinition","parameters":{"id":3164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3157,"mutability":"mutable","name":"hash","nameLocation":"5037:4:19","nodeType":"VariableDeclaration","scope":3218,"src":"5029:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3156,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5029:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3159,"mutability":"mutable","name":"v","nameLocation":"5049:1:19","nodeType":"VariableDeclaration","scope":3218,"src":"5043:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3158,"name":"uint8","nodeType":"ElementaryTypeName","src":"5043:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3161,"mutability":"mutable","name":"r","nameLocation":"5060:1:19","nodeType":"VariableDeclaration","scope":3218,"src":"5052:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5052:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3163,"mutability":"mutable","name":"s","nameLocation":"5071:1:19","nodeType":"VariableDeclaration","scope":3218,"src":"5063:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3162,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5063:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5028:45:19"},"returnParameters":{"id":3170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3218,"src":"5097:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3165,"name":"address","nodeType":"ElementaryTypeName","src":"5097:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3218,"src":"5106:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3168,"nodeType":"UserDefinedTypeName","pathNode":{"id":3167,"name":"RecoverError","nameLocations":["5106:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2960,"src":"5106:12:19"},"referencedDeclaration":2960,"src":"5106:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5096:23:19"},"scope":3316,"src":"5009:1456:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3250,"nodeType":"Block","src":"6692:138:19","statements":[{"assignments":[3233,3236],"declarations":[{"constant":false,"id":3233,"mutability":"mutable","name":"recovered","nameLocation":"6711:9:19","nodeType":"VariableDeclaration","scope":3250,"src":"6703:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3232,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3236,"mutability":"mutable","name":"error","nameLocation":"6735:5:19","nodeType":"VariableDeclaration","scope":3250,"src":"6722:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3235,"nodeType":"UserDefinedTypeName","pathNode":{"id":3234,"name":"RecoverError","nameLocations":["6722:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2960,"src":"6722:12:19"},"referencedDeclaration":2960,"src":"6722:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":3243,"initialValue":{"arguments":[{"id":3238,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"6755:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3239,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"6761:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3240,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"6764:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3241,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"6767:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3237,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3050,3124,3218],"referencedDeclaration":3218,"src":"6744:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2960_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6744:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2960_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6702:67:19"},{"expression":{"arguments":[{"id":3245,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"6791:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2960","typeString":"enum ECDSA.RecoverError"}],"id":3244,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"6779:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2960_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6779:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3247,"nodeType":"ExpressionStatement","src":"6779:18:19"},{"expression":{"id":3248,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"6814:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3231,"id":3249,"nodeType":"Return","src":"6807:16:19"}]},"documentation":{"id":3219,"nodeType":"StructuredDocumentation","src":"6471:122:19","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3251,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6607:7:19","nodeType":"FunctionDefinition","parameters":{"id":3228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3221,"mutability":"mutable","name":"hash","nameLocation":"6623:4:19","nodeType":"VariableDeclaration","scope":3251,"src":"6615:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6615:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3223,"mutability":"mutable","name":"v","nameLocation":"6635:1:19","nodeType":"VariableDeclaration","scope":3251,"src":"6629:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3222,"name":"uint8","nodeType":"ElementaryTypeName","src":"6629:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3225,"mutability":"mutable","name":"r","nameLocation":"6646:1:19","nodeType":"VariableDeclaration","scope":3251,"src":"6638:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6638:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3227,"mutability":"mutable","name":"s","nameLocation":"6657:1:19","nodeType":"VariableDeclaration","scope":3251,"src":"6649:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6649:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6614:45:19"},"returnParameters":{"id":3231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3251,"src":"6683:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3229,"name":"address","nodeType":"ElementaryTypeName","src":"6683:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6682:9:19"},"scope":3316,"src":"6598:232:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3260,"nodeType":"Block","src":"7206:310:19","statements":[{"AST":{"nodeType":"YulBlock","src":"7362:148:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7383:4:19","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"7389:34:19","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7376:6:19"},"nodeType":"YulFunctionCall","src":"7376:48:19"},"nodeType":"YulExpressionStatement","src":"7376:48:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7444:4:19","type":"","value":"0x1c"},{"name":"hash","nodeType":"YulIdentifier","src":"7450:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7437:6:19"},"nodeType":"YulFunctionCall","src":"7437:18:19"},"nodeType":"YulExpressionStatement","src":"7437:18:19"},{"nodeType":"YulAssignment","src":"7468:32:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7489:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"7495:4:19","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7479:9:19"},"nodeType":"YulFunctionCall","src":"7479:21:19"},"variableNames":[{"name":"message","nodeType":"YulIdentifier","src":"7468:7:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":3254,"isOffset":false,"isSlot":false,"src":"7450:4:19","valueSize":1},{"declaration":3257,"isOffset":false,"isSlot":false,"src":"7468:7:19","valueSize":1}],"id":3259,"nodeType":"InlineAssembly","src":"7353:157:19"}]},"documentation":{"id":3252,"nodeType":"StructuredDocumentation","src":"6836:279:19","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":3261,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7129:22:19","nodeType":"FunctionDefinition","parameters":{"id":3255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3254,"mutability":"mutable","name":"hash","nameLocation":"7160:4:19","nodeType":"VariableDeclaration","scope":3261,"src":"7152:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7151:14:19"},"returnParameters":{"id":3258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3257,"mutability":"mutable","name":"message","nameLocation":"7197:7:19","nodeType":"VariableDeclaration","scope":3261,"src":"7189:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3256,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7189:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7188:17:19"},"scope":3316,"src":"7120:396:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3282,"nodeType":"Block","src":"7881:116:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7925:32:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":3275,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"7976:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7978:6:19","memberName":"length","nodeType":"MemberAccess","src":"7976:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3273,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"7959:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2950_$","typeString":"type(library Strings)"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7967:8:19","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2780,"src":"7959:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7959:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3278,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"7987:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3270,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7908:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7912:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"7908:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:81:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3269,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7898:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7898:92:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3268,"id":3281,"nodeType":"Return","src":"7891:99:19"}]},"documentation":{"id":3262,"nodeType":"StructuredDocumentation","src":"7522:274:19","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":3283,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7810:22:19","nodeType":"FunctionDefinition","parameters":{"id":3265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3264,"mutability":"mutable","name":"s","nameLocation":"7846:1:19","nodeType":"VariableDeclaration","scope":3283,"src":"7833:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3263,"name":"bytes","nodeType":"ElementaryTypeName","src":"7833:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7832:16:19"},"returnParameters":{"id":3268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3283,"src":"7872:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3266,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7872:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7871:9:19"},"scope":3316,"src":"7801:196:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3294,"nodeType":"Block","src":"8443:290:19","statements":[{"AST":{"nodeType":"YulBlock","src":"8505:222:19","statements":[{"nodeType":"YulVariableDeclaration","src":"8519:22:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8536:4:19","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8530:5:19"},"nodeType":"YulFunctionCall","src":"8530:11:19"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8523:3:19","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8561:3:19"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"8566:10:19","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8554:6:19"},"nodeType":"YulFunctionCall","src":"8554:23:19"},"nodeType":"YulExpressionStatement","src":"8554:23:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8601:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"8606:4:19","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8597:3:19"},"nodeType":"YulFunctionCall","src":"8597:14:19"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"8613:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8590:6:19"},"nodeType":"YulFunctionCall","src":"8590:39:19"},"nodeType":"YulExpressionStatement","src":"8590:39:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8653:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"8658:4:19","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8649:3:19"},"nodeType":"YulFunctionCall","src":"8649:14:19"},{"name":"structHash","nodeType":"YulIdentifier","src":"8665:10:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8642:6:19"},"nodeType":"YulFunctionCall","src":"8642:34:19"},"nodeType":"YulExpressionStatement","src":"8642:34:19"},{"nodeType":"YulAssignment","src":"8689:28:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8707:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"8712:4:19","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8697:9:19"},"nodeType":"YulFunctionCall","src":"8697:20:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8689:4:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":3291,"isOffset":false,"isSlot":false,"src":"8689:4:19","valueSize":1},{"declaration":3286,"isOffset":false,"isSlot":false,"src":"8613:15:19","valueSize":1},{"declaration":3288,"isOffset":false,"isSlot":false,"src":"8665:10:19","valueSize":1}],"id":3293,"nodeType":"InlineAssembly","src":"8496:231:19"}]},"documentation":{"id":3284,"nodeType":"StructuredDocumentation","src":"8003:328:19","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":3295,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8345:15:19","nodeType":"FunctionDefinition","parameters":{"id":3289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3286,"mutability":"mutable","name":"domainSeparator","nameLocation":"8369:15:19","nodeType":"VariableDeclaration","scope":3295,"src":"8361:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3288,"mutability":"mutable","name":"structHash","nameLocation":"8394:10:19","nodeType":"VariableDeclaration","scope":3295,"src":"8386:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8386:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8360:45:19"},"returnParameters":{"id":3292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3291,"mutability":"mutable","name":"data","nameLocation":"8437:4:19","nodeType":"VariableDeclaration","scope":3295,"src":"8429:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3290,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8428:14:19"},"scope":3316,"src":"8336:397:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3314,"nodeType":"Block","src":"9048:80:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9092:10:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3309,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"9104:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3310,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"9115:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3306,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9075:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9079:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"9075:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9075:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3305,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9065:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9065:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3304,"id":3313,"nodeType":"Return","src":"9058:63:19"}]},"documentation":{"id":3296,"nodeType":"StructuredDocumentation","src":"8739:193:19","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":3315,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8946:31:19","nodeType":"FunctionDefinition","parameters":{"id":3301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3298,"mutability":"mutable","name":"validator","nameLocation":"8986:9:19","nodeType":"VariableDeclaration","scope":3315,"src":"8978:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3297,"name":"address","nodeType":"ElementaryTypeName","src":"8978:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3300,"mutability":"mutable","name":"data","nameLocation":"9010:4:19","nodeType":"VariableDeclaration","scope":3315,"src":"8997:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3299,"name":"bytes","nodeType":"ElementaryTypeName","src":"8997:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8977:38:19"},"returnParameters":{"id":3304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3315,"src":"9039:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9039:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9038:9:19"},"scope":3316,"src":"8937:191:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3317,"src":"369:8761:19","usedErrors":[],"usedEvents":[]}],"src":"112:9019:19"},"id":19},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"ECDSA":[3316],"EIP712":[3520],"IERC5267":[491],"Math":[4422],"ShortString":[2400],"ShortStrings":[2611],"SignedMath":[6068],"StorageSlot":[2721],"Strings":[2950]},"id":3521,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3318,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"113:23:20"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":3319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3521,"sourceUnit":3317,"src":"138:21:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3320,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3521,"sourceUnit":2612,"src":"160:29:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3321,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3521,"sourceUnit":492,"src":"190:39:20","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3323,"name":"IERC5267","nameLocations":["1837:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":491,"src":"1837:8:20"},"id":3324,"nodeType":"InheritanceSpecifier","src":"1837:8:20"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3322,"nodeType":"StructuredDocumentation","src":"231:1577:20","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n _Available since v3.4._\n @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"fullyImplemented":true,"id":3520,"linearizedBaseContracts":[3520,491],"name":"EIP712","nameLocation":"1827:6:20","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3326,"libraryName":{"id":3325,"name":"ShortStrings","nameLocations":["1858:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":2611,"src":"1858:12:20"},"nodeType":"UsingForDirective","src":"1852:25:20"},{"constant":true,"id":3331,"mutability":"constant","name":"_TYPE_HASH","nameLocation":"1908:10:20","nodeType":"VariableDeclaration","scope":3520,"src":"1883:141:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3327,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1939:84:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3328,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1929:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:95:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3333,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2249:22:20","nodeType":"VariableDeclaration","scope":3520,"src":"2223:48:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2223:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3335,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2303:14:20","nodeType":"VariableDeclaration","scope":3520,"src":"2277:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3334,"name":"uint256","nodeType":"ElementaryTypeName","src":"2277:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3337,"mutability":"immutable","name":"_cachedThis","nameLocation":"2349:11:20","nodeType":"VariableDeclaration","scope":3520,"src":"2323:37:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3336,"name":"address","nodeType":"ElementaryTypeName","src":"2323:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3339,"mutability":"immutable","name":"_hashedName","nameLocation":"2393:11:20","nodeType":"VariableDeclaration","scope":3520,"src":"2367:37:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2367:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3341,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2436:14:20","nodeType":"VariableDeclaration","scope":3520,"src":"2410:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2410:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3344,"mutability":"immutable","name":"_name","nameLocation":"2487:5:20","nodeType":"VariableDeclaration","scope":3520,"src":"2457:35:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"},"typeName":{"id":3343,"nodeType":"UserDefinedTypeName","pathNode":{"id":3342,"name":"ShortString","nameLocations":["2457:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2400,"src":"2457:11:20"},"referencedDeclaration":2400,"src":"2457:11:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3347,"mutability":"immutable","name":"_version","nameLocation":"2528:8:20","nodeType":"VariableDeclaration","scope":3520,"src":"2498:38:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"},"typeName":{"id":3346,"nodeType":"UserDefinedTypeName","pathNode":{"id":3345,"name":"ShortString","nameLocations":["2498:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2400,"src":"2498:11:20"},"referencedDeclaration":2400,"src":"2498:11:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3349,"mutability":"mutable","name":"_nameFallback","nameLocation":"2557:13:20","nodeType":"VariableDeclaration","scope":3520,"src":"2542:28:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3348,"name":"string","nodeType":"ElementaryTypeName","src":"2542:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3351,"mutability":"mutable","name":"_versionFallback","nameLocation":"2591:16:20","nodeType":"VariableDeclaration","scope":3520,"src":"2576:31:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3350,"name":"string","nodeType":"ElementaryTypeName","src":"2576:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3408,"nodeType":"Block","src":"3233:376:20","statements":[{"expression":{"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3359,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"3243:5:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3362,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"3282:13:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3360,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"3251:4:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3256:25:20","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2552,"src":"3251:30:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2400_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3251:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}},"src":"3243:53:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}},"id":3365,"nodeType":"ExpressionStatement","src":"3243:53:20"},{"expression":{"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3366,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"3306:8:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3369,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"3351:16:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3367,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"3317:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3325:25:20","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2552,"src":"3317:33:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2400_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3317:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}},"src":"3306:62:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}},"id":3372,"nodeType":"ExpressionStatement","src":"3306:62:20"},{"expression":{"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3373,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"3378:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3377,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"3408:4:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3402:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3375,"name":"bytes","nodeType":"ElementaryTypeName","src":"3402:5:20","typeDescriptions":{}}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3402:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3374,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3392:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3392:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3378:36:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3381,"nodeType":"ExpressionStatement","src":"3378:36:20"},{"expression":{"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3382,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"3424:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3386,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"3457:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3451:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3384,"name":"bytes","nodeType":"ElementaryTypeName","src":"3451:5:20","typeDescriptions":{}}},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3451:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3383,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3441:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3441:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3424:42:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3390,"nodeType":"ExpressionStatement","src":"3424:42:20"},{"expression":{"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3391,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"3477:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3392,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3494:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3500:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"3494:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3477:30:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3395,"nodeType":"ExpressionStatement","src":"3477:30:20"},{"expression":{"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3396,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"3517:22:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3397,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"3542:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3517:48:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3400,"nodeType":"ExpressionStatement","src":"3517:48:20"},{"expression":{"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3401,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"3575:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3404,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3597:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3520","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3520","typeString":"contract EIP712"}],"id":3403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3589:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3402,"name":"address","nodeType":"ElementaryTypeName","src":"3589:7:20","typeDescriptions":{}}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3589:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3575:27:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3407,"nodeType":"ExpressionStatement","src":"3575:27:20"}]},"documentation":{"id":3352,"nodeType":"StructuredDocumentation","src":"2614:559:20","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3409,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3354,"mutability":"mutable","name":"name","nameLocation":"3204:4:20","nodeType":"VariableDeclaration","scope":3409,"src":"3190:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3353,"name":"string","nodeType":"ElementaryTypeName","src":"3190:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3356,"mutability":"mutable","name":"version","nameLocation":"3224:7:20","nodeType":"VariableDeclaration","scope":3409,"src":"3210:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3355,"name":"string","nodeType":"ElementaryTypeName","src":"3210:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3189:43:20"},"returnParameters":{"id":3358,"nodeType":"ParameterList","parameters":[],"src":"3233:0:20"},"scope":3520,"src":"3178:431:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3434,"nodeType":"Block","src":"3757:200:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3417,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3779:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3520","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3520","typeString":"contract EIP712"}],"id":3416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3771:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3415,"name":"address","nodeType":"ElementaryTypeName","src":"3771:7:20","typeDescriptions":{}}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3771:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3419,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"3788:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3771:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3421,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3803:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3809:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"3803:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3423,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"3820:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3803:31:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3771:63:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3432,"nodeType":"Block","src":"3896:55:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3429,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"3917:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3917:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3414,"id":3431,"nodeType":"Return","src":"3910:30:20"}]},"id":3433,"nodeType":"IfStatement","src":"3767:184:20","trueBody":{"id":3428,"nodeType":"Block","src":"3836:54:20","statements":[{"expression":{"id":3426,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"3857:22:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3414,"id":3427,"nodeType":"Return","src":"3850:29:20"}]}}]},"documentation":{"id":3410,"nodeType":"StructuredDocumentation","src":"3615:75:20","text":" @dev Returns the domain separator for the current chain."},"id":3435,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3704:18:20","nodeType":"FunctionDefinition","parameters":{"id":3411,"nodeType":"ParameterList","parameters":[],"src":"3722:2:20"},"returnParameters":{"id":3414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3435,"src":"3748:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3412,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3748:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3747:9:20"},"scope":3520,"src":"3695:262:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3455,"nodeType":"Block","src":"4027:116:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":3443,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"4065:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3444,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"4077:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3445,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"4090:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3446,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4106:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4112:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"4106:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3450,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4129:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3520","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3520","typeString":"contract EIP712"}],"id":3449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4121:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3448,"name":"address","nodeType":"ElementaryTypeName","src":"4121:7:20","typeDescriptions":{}}},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4121:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3441,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4054:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4058:6:20","memberName":"encode","nodeType":"MemberAccess","src":"4054:10:20","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4054:81:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3440,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4044:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4044:92:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3439,"id":3454,"nodeType":"Return","src":"4037:99:20"}]},"id":3456,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3972:21:20","nodeType":"FunctionDefinition","parameters":{"id":3436,"nodeType":"ParameterList","parameters":[],"src":"3993:2:20"},"returnParameters":{"id":3439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3456,"src":"4018:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3437,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4018:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4017:9:20"},"scope":3520,"src":"3963:180:20","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3471,"nodeType":"Block","src":"4854:79:20","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3466,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"4893:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4893:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3468,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"4915:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3464,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"4871:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3316_$","typeString":"type(library ECDSA)"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4877:15:20","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3295,"src":"4871:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4871:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3463,"id":3470,"nodeType":"Return","src":"4864:62:20"}]},"documentation":{"id":3457,"nodeType":"StructuredDocumentation","src":"4149:614:20","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3472,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4777:16:20","nodeType":"FunctionDefinition","parameters":{"id":3460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3459,"mutability":"mutable","name":"structHash","nameLocation":"4802:10:20","nodeType":"VariableDeclaration","scope":3472,"src":"4794:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4794:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4793:20:20"},"returnParameters":{"id":3463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3472,"src":"4845:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3461,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4845:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4844:9:20"},"scope":3520,"src":"4768:165:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[490],"body":{"id":3518,"nodeType":"Block","src":"5366:288:20","statements":[{"expression":{"components":[{"hexValue":"0f","id":3492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5397:7:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[{"id":3495,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"5454:13:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3493,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"5427:5:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5433:20:20","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2579,"src":"5427:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2400_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2400_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5427:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":3499,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"5512:16:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3497,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"5482:8:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2400","typeString":"ShortString"}},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5491:20:20","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2579,"src":"5482:29:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2400_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2400_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5482:47:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3501,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5543:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5549:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"5543:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3505,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5578:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3520","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3520","typeString":"contract EIP712"}],"id":3504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5570:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3503,"name":"address","nodeType":"ElementaryTypeName","src":"5570:7:20","typeDescriptions":{}}},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5570:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5605:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5597:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3507,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5597:7:20","typeDescriptions":{}}},"id":3510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5597:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5635:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5621:13:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3511,"name":"uint256","nodeType":"ElementaryTypeName","src":"5625:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3512,"nodeType":"ArrayTypeName","src":"5625:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5621:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3516,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5383:264:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3491,"id":3517,"nodeType":"Return","src":"5376:271:20"}]},"documentation":{"id":3473,"nodeType":"StructuredDocumentation","src":"4939:77:20","text":" @dev See {EIP-5267}.\n _Available since v4.9._"},"functionSelector":"84b0196e","id":3519,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5030:12:20","nodeType":"FunctionDefinition","overrides":{"id":3475,"nodeType":"OverrideSpecifier","overrides":[],"src":"5097:8:20"},"parameters":{"id":3474,"nodeType":"ParameterList","parameters":[],"src":"5042:2:20"},"returnParameters":{"id":3491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3477,"mutability":"mutable","name":"fields","nameLocation":"5143:6:20","nodeType":"VariableDeclaration","scope":3519,"src":"5136:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3476,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5136:6:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3479,"mutability":"mutable","name":"name","nameLocation":"5177:4:20","nodeType":"VariableDeclaration","scope":3519,"src":"5163:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3478,"name":"string","nodeType":"ElementaryTypeName","src":"5163:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3481,"mutability":"mutable","name":"version","nameLocation":"5209:7:20","nodeType":"VariableDeclaration","scope":3519,"src":"5195:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3480,"name":"string","nodeType":"ElementaryTypeName","src":"5195:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3483,"mutability":"mutable","name":"chainId","nameLocation":"5238:7:20","nodeType":"VariableDeclaration","scope":3519,"src":"5230:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3482,"name":"uint256","nodeType":"ElementaryTypeName","src":"5230:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3485,"mutability":"mutable","name":"verifyingContract","nameLocation":"5267:17:20","nodeType":"VariableDeclaration","scope":3519,"src":"5259:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3484,"name":"address","nodeType":"ElementaryTypeName","src":"5259:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3487,"mutability":"mutable","name":"salt","nameLocation":"5306:4:20","nodeType":"VariableDeclaration","scope":3519,"src":"5298:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5298:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3490,"mutability":"mutable","name":"extensions","nameLocation":"5341:10:20","nodeType":"VariableDeclaration","scope":3519,"src":"5324:27:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3488,"name":"uint256","nodeType":"ElementaryTypeName","src":"5324:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3489,"nodeType":"ArrayTypeName","src":"5324:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5122:239:20"},"scope":3520,"src":"5021:633:20","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3521,"src":"1809:3847:20","usedErrors":[2408,2410],"usedEvents":[471]}],"src":"113:5544:20"},"id":20},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3544],"IERC165":[3556]},"id":3545,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3522,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:21"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3523,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3545,"sourceUnit":3557,"src":"124:23:21","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3525,"name":"IERC165","nameLocations":["754:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":3556,"src":"754:7:21"},"id":3526,"nodeType":"InheritanceSpecifier","src":"754:7:21"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3524,"nodeType":"StructuredDocumentation","src":"149:576:21","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":3544,"linearizedBaseContracts":[3544,3556],"name":"ERC165","nameLocation":"744:6:21","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3555],"body":{"id":3542,"nodeType":"Block","src":"920:64:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3535,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"937:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3537,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"957:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3556_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3556_$","typeString":"type(contract IERC165)"}],"id":3536,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3556","typeString":"type(contract IERC165)"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:21","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3534,"id":3541,"nodeType":"Return","src":"930:47:21"}]},"documentation":{"id":3527,"nodeType":"StructuredDocumentation","src":"768:56:21","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3543,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:21","nodeType":"FunctionDefinition","overrides":{"id":3531,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:21"},"parameters":{"id":3530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3529,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:21","nodeType":"VariableDeclaration","scope":3543,"src":"856:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3528,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:21"},"returnParameters":{"id":3534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3543,"src":"914:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3532,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:21"},"scope":3544,"src":"829:155:21","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3545,"src":"726:260:21","usedErrors":[],"usedEvents":[]}],"src":"99:888:21"},"id":21},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3556]},"id":3557,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3546,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:22"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3547,"nodeType":"StructuredDocumentation","src":"125:279:22","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3556,"linearizedBaseContracts":[3556],"name":"IERC165","nameLocation":"415:7:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3548,"nodeType":"StructuredDocumentation","src":"429:340:22","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3555,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:22","nodeType":"FunctionDefinition","parameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3550,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:22","nodeType":"VariableDeclaration","scope":3555,"src":"801:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3549,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:22"},"returnParameters":{"id":3554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3555,"src":"844:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3552,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:22"},"scope":3556,"src":"774:76:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3557,"src":"405:447:22","usedErrors":[],"usedEvents":[]}],"src":"100:753:22"},"id":22},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4422]},"id":4423,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3558,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:23"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3559,"nodeType":"StructuredDocumentation","src":"128:73:23","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4422,"linearizedBaseContracts":[4422],"name":"Math","nameLocation":"210:4:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3563,"members":[{"id":3560,"name":"Down","nameLocation":"245:4:23","nodeType":"EnumValue","src":"245:4:23"},{"id":3561,"name":"Up","nameLocation":"287:2:23","nodeType":"EnumValue","src":"287:2:23"},{"id":3562,"name":"Zero","nameLocation":"318:4:23","nodeType":"EnumValue","src":"318:4:23"}],"name":"Rounding","nameLocation":"226:8:23","nodeType":"EnumDefinition","src":"221:122:23"},{"body":{"id":3580,"nodeType":"Block","src":"480:37:23","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3573,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"497:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3574,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"501:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3577,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"509:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:23","trueExpression":{"id":3576,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"505:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3572,"id":3579,"nodeType":"Return","src":"490:20:23"}]},"documentation":{"id":3564,"nodeType":"StructuredDocumentation","src":"349:59:23","text":" @dev Returns the largest of two numbers."},"id":3581,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:23","nodeType":"FunctionDefinition","parameters":{"id":3569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3566,"mutability":"mutable","name":"a","nameLocation":"434:1:23","nodeType":"VariableDeclaration","scope":3581,"src":"426:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3565,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3568,"mutability":"mutable","name":"b","nameLocation":"445:1:23","nodeType":"VariableDeclaration","scope":3581,"src":"437:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3567,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:23"},"returnParameters":{"id":3572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3581,"src":"471:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3570,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:23"},"scope":4422,"src":"413:104:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3598,"nodeType":"Block","src":"655:37:23","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3591,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"672:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3592,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"676:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3595,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"684:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:23","trueExpression":{"id":3594,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"680:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3590,"id":3597,"nodeType":"Return","src":"665:20:23"}]},"documentation":{"id":3582,"nodeType":"StructuredDocumentation","src":"523:60:23","text":" @dev Returns the smallest of two numbers."},"id":3599,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:23","nodeType":"FunctionDefinition","parameters":{"id":3587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3584,"mutability":"mutable","name":"a","nameLocation":"609:1:23","nodeType":"VariableDeclaration","scope":3599,"src":"601:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3583,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3586,"mutability":"mutable","name":"b","nameLocation":"620:1:23","nodeType":"VariableDeclaration","scope":3599,"src":"612:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3585,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:23"},"returnParameters":{"id":3590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3599,"src":"646:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3588,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:23"},"scope":4422,"src":"588:104:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3621,"nodeType":"Block","src":"876:82:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3609,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"931:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3610,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"935:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3612,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3613,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"941:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3614,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"945:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3616,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3608,"id":3620,"nodeType":"Return","src":"923:28:23"}]},"documentation":{"id":3600,"nodeType":"StructuredDocumentation","src":"698:102:23","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3622,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:23","nodeType":"FunctionDefinition","parameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3602,"mutability":"mutable","name":"a","nameLocation":"830:1:23","nodeType":"VariableDeclaration","scope":3622,"src":"822:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3601,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3604,"mutability":"mutable","name":"b","nameLocation":"841:1:23","nodeType":"VariableDeclaration","scope":3622,"src":"833:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3603,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:23"},"returnParameters":{"id":3608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3622,"src":"867:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3606,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:23"},"scope":4422,"src":"805:153:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3646,"nodeType":"Block","src":"1228:123:23","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3632,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"1316:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3636,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"1330:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3639,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3640,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"1339:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:23","trueExpression":{"hexValue":"30","id":3635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3631,"id":3645,"nodeType":"Return","src":"1309:35:23"}]},"documentation":{"id":3623,"nodeType":"StructuredDocumentation","src":"964:188:23","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":3647,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:23","nodeType":"FunctionDefinition","parameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3625,"mutability":"mutable","name":"a","nameLocation":"1182:1:23","nodeType":"VariableDeclaration","scope":3647,"src":"1174:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3624,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3627,"mutability":"mutable","name":"b","nameLocation":"1193:1:23","nodeType":"VariableDeclaration","scope":3647,"src":"1185:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3626,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:23"},"returnParameters":{"id":3631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3647,"src":"1219:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:23"},"scope":4422,"src":"1157:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3769,"nodeType":"Block","src":"1765:4115:23","statements":[{"id":3768,"nodeType":"UncheckedBlock","src":"1775:4099:23","statements":[{"assignments":[3660],"declarations":[{"constant":false,"id":3660,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:23","nodeType":"VariableDeclaration","scope":3768,"src":"2096:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3659,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3661,"nodeType":"VariableDeclarationStatement","src":"2096:13:23"},{"assignments":[3663],"declarations":[{"constant":false,"id":3663,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:23","nodeType":"VariableDeclaration","scope":3768,"src":"2168:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3662,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3664,"nodeType":"VariableDeclarationStatement","src":"2168:13:23"},{"AST":{"nodeType":"YulBlock","src":"2248:157:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:23"},"nodeType":"YulFunctionCall","src":"2289:6:23"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:23"},"nodeType":"YulFunctionCall","src":"2276:20:23"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:23","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:23"},"nodeType":"YulFunctionCall","src":"2322:9:23"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:23"}]},{"nodeType":"YulAssignment","src":"2348:43:23","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:23"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:23"},"nodeType":"YulFunctionCall","src":"2361:14:23"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:23"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:23"},"nodeType":"YulFunctionCall","src":"2377:13:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:23"},"nodeType":"YulFunctionCall","src":"2357:34:23"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:23"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":3660,"isOffset":false,"isSlot":false,"src":"2313:5:23","valueSize":1},{"declaration":3660,"isOffset":false,"isSlot":false,"src":"2369:5:23","valueSize":1},{"declaration":3660,"isOffset":false,"isSlot":false,"src":"2384:5:23","valueSize":1},{"declaration":3663,"isOffset":false,"isSlot":false,"src":"2348:5:23","valueSize":1},{"declaration":3650,"isOffset":false,"isSlot":false,"src":"2283:1:23","valueSize":1},{"declaration":3650,"isOffset":false,"isSlot":false,"src":"2326:1:23","valueSize":1},{"declaration":3652,"isOffset":false,"isSlot":false,"src":"2286:1:23","valueSize":1},{"declaration":3652,"isOffset":false,"isSlot":false,"src":"2329:1:23","valueSize":1}],"id":3665,"nodeType":"InlineAssembly","src":"2239:166:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3666,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"2486:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3674,"nodeType":"IfStatement","src":"2482:368:23","trueBody":{"id":3673,"nodeType":"Block","src":"2498:352:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3669,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"2816:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3670,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"2824:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3658,"id":3672,"nodeType":"Return","src":"2809:26:23"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3676,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"2960:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3677,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"2974:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":3679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":3675,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3681,"nodeType":"ExpressionStatement","src":"2952:53:23"},{"assignments":[3683],"declarations":[{"constant":false,"id":3683,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:23","nodeType":"VariableDeclaration","scope":3768,"src":"3261:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3682,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3684,"nodeType":"VariableDeclarationStatement","src":"3261:17:23"},{"AST":{"nodeType":"YulBlock","src":"3301:291:23","statements":[{"nodeType":"YulAssignment","src":"3370:38:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:23"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:23"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:23"},"nodeType":"YulFunctionCall","src":"3383:25:23"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:23"}]},{"nodeType":"YulAssignment","src":"3490:41:23","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:23"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:23"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:23"},"nodeType":"YulFunctionCall","src":"3510:20:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:23"},"nodeType":"YulFunctionCall","src":"3499:32:23"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:23"}]},{"nodeType":"YulAssignment","src":"3548:30:23","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:23"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:23"},"nodeType":"YulFunctionCall","src":"3557:21:23"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:23"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":3654,"isOffset":false,"isSlot":false,"src":"3396:11:23","valueSize":1},{"declaration":3660,"isOffset":false,"isSlot":false,"src":"3524:5:23","valueSize":1},{"declaration":3660,"isOffset":false,"isSlot":false,"src":"3548:5:23","valueSize":1},{"declaration":3660,"isOffset":false,"isSlot":false,"src":"3561:5:23","valueSize":1},{"declaration":3663,"isOffset":false,"isSlot":false,"src":"3490:5:23","valueSize":1},{"declaration":3663,"isOffset":false,"isSlot":false,"src":"3503:5:23","valueSize":1},{"declaration":3683,"isOffset":false,"isSlot":false,"src":"3370:9:23","valueSize":1},{"declaration":3683,"isOffset":false,"isSlot":false,"src":"3513:9:23","valueSize":1},{"declaration":3683,"isOffset":false,"isSlot":false,"src":"3568:9:23","valueSize":1},{"declaration":3650,"isOffset":false,"isSlot":false,"src":"3390:1:23","valueSize":1},{"declaration":3652,"isOffset":false,"isSlot":false,"src":"3393:1:23","valueSize":1}],"id":3685,"nodeType":"InlineAssembly","src":"3292:300:23"},{"assignments":[3687],"declarations":[{"constant":false,"id":3687,"mutability":"mutable","name":"twos","nameLocation":"3907:4:23","nodeType":"VariableDeclaration","scope":3768,"src":"3899:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3686,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3695,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3688,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"3914:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:23","subExpression":{"id":3689,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"3930:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3693,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:23"},{"AST":{"nodeType":"YulBlock","src":"3969:362:23","statements":[{"nodeType":"YulAssignment","src":"4034:37:23","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:23"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:23"},"nodeType":"YulFunctionCall","src":"4049:22:23"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:23"}]},{"nodeType":"YulAssignment","src":"4138:25:23","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:23"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:23"},"nodeType":"YulFunctionCall","src":"4147:16:23"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:23"}]},{"nodeType":"YulAssignment","src":"4278:39:23","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:23","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:23"},"nodeType":"YulFunctionCall","src":"4294:12:23"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:23"},"nodeType":"YulFunctionCall","src":"4290:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:23"},"nodeType":"YulFunctionCall","src":"4286:31:23"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:23"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":3654,"isOffset":false,"isSlot":false,"src":"4034:11:23","valueSize":1},{"declaration":3654,"isOffset":false,"isSlot":false,"src":"4053:11:23","valueSize":1},{"declaration":3660,"isOffset":false,"isSlot":false,"src":"4138:5:23","valueSize":1},{"declaration":3660,"isOffset":false,"isSlot":false,"src":"4151:5:23","valueSize":1},{"declaration":3687,"isOffset":false,"isSlot":false,"src":"4066:4:23","valueSize":1},{"declaration":3687,"isOffset":false,"isSlot":false,"src":"4158:4:23","valueSize":1},{"declaration":3687,"isOffset":false,"isSlot":false,"src":"4278:4:23","valueSize":1},{"declaration":3687,"isOffset":false,"isSlot":false,"src":"4301:4:23","valueSize":1},{"declaration":3687,"isOffset":false,"isSlot":false,"src":"4308:4:23","valueSize":1}],"id":3696,"nodeType":"InlineAssembly","src":"3960:371:23"},{"expression":{"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3697,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"4397:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3698,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"4406:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3699,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"4414:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3702,"nodeType":"ExpressionStatement","src":"4397:21:23"},{"assignments":[3704],"declarations":[{"constant":false,"id":3704,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:23","nodeType":"VariableDeclaration","scope":3768,"src":"4736:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3703,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3711,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3706,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"4759:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3708,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:23"},{"expression":{"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3712,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"4992:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3714,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"5007:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3715,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"5021:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3719,"nodeType":"ExpressionStatement","src":"4992:36:23"},{"expression":{"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3720,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"5061:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3722,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"5076:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3723,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"5090:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3727,"nodeType":"ExpressionStatement","src":"5061:36:23"},{"expression":{"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3728,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"5131:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3730,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"5146:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3731,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"5160:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3735,"nodeType":"ExpressionStatement","src":"5131:36:23"},{"expression":{"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3736,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"5201:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3738,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"5216:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3739,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"5230:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3743,"nodeType":"ExpressionStatement","src":"5201:36:23"},{"expression":{"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3744,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"5271:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3746,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"5286:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3747,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"5300:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3751,"nodeType":"ExpressionStatement","src":"5271:36:23"},{"expression":{"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3752,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"5342:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3754,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"5357:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3755,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"5371:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3759,"nodeType":"ExpressionStatement","src":"5342:36:23"},{"expression":{"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3760,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"5812:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3761,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"5821:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3762,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"5829:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3765,"nodeType":"ExpressionStatement","src":"5812:24:23"},{"expression":{"id":3766,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"5857:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3658,"id":3767,"nodeType":"Return","src":"5850:13:23"}]}]},"documentation":{"id":3648,"nodeType":"StructuredDocumentation","src":"1357:305:23","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":3770,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:23","nodeType":"FunctionDefinition","parameters":{"id":3655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3650,"mutability":"mutable","name":"x","nameLocation":"1691:1:23","nodeType":"VariableDeclaration","scope":3770,"src":"1683:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3649,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3652,"mutability":"mutable","name":"y","nameLocation":"1702:1:23","nodeType":"VariableDeclaration","scope":3770,"src":"1694:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3651,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3654,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:23","nodeType":"VariableDeclaration","scope":3770,"src":"1705:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3653,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:23"},"returnParameters":{"id":3658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3657,"mutability":"mutable","name":"result","nameLocation":"1757:6:23","nodeType":"VariableDeclaration","scope":3770,"src":"1749:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3656,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:23"},"scope":4422,"src":"1667:4213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3813,"nodeType":"Block","src":"6122:189:23","statements":[{"assignments":[3786],"declarations":[{"constant":false,"id":3786,"mutability":"mutable","name":"result","nameLocation":"6140:6:23","nodeType":"VariableDeclaration","scope":3813,"src":"6132:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3785,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3792,"initialValue":{"arguments":[{"id":3788,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"6156:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3789,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"6159:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3790,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"6162:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3787,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3770,3814],"referencedDeclaration":3770,"src":"6149:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:23"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3563","typeString":"enum Math.Rounding"},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3793,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"6188:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3563","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3794,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"6200:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3563_$","typeString":"type(enum Math.Rounding)"}},"id":3795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:23","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3561,"src":"6200:11:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3563","typeString":"enum Math.Rounding"}},"src":"6188:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3798,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"6222:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3799,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"6225:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3800,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"6228:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3797,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:23","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3810,"nodeType":"IfStatement","src":"6184:98:23","trueBody":{"id":3809,"nodeType":"Block","src":"6246:36:23","statements":[{"expression":{"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3805,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"6260:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3808,"nodeType":"ExpressionStatement","src":"6260:11:23"}]}},{"expression":{"id":3811,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"6298:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3784,"id":3812,"nodeType":"Return","src":"6291:13:23"}]},"documentation":{"id":3771,"nodeType":"StructuredDocumentation","src":"5886:121:23","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3814,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:23","nodeType":"FunctionDefinition","parameters":{"id":3781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3773,"mutability":"mutable","name":"x","nameLocation":"6036:1:23","nodeType":"VariableDeclaration","scope":3814,"src":"6028:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3772,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3775,"mutability":"mutable","name":"y","nameLocation":"6047:1:23","nodeType":"VariableDeclaration","scope":3814,"src":"6039:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3774,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3777,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:23","nodeType":"VariableDeclaration","scope":3814,"src":"6050:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3776,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3780,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:23","nodeType":"VariableDeclaration","scope":3814,"src":"6071:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3563","typeString":"enum Math.Rounding"},"typeName":{"id":3779,"nodeType":"UserDefinedTypeName","pathNode":{"id":3778,"name":"Rounding","nameLocations":["6071:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":3563,"src":"6071:8:23"},"referencedDeclaration":3563,"src":"6071:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3563","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:23"},"returnParameters":{"id":3784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3814,"src":"6113:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3782,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:23"},"scope":4422,"src":"6012:299:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3925,"nodeType":"Block","src":"6587:1585:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3822,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"6601:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3828,"nodeType":"IfStatement","src":"6597:45:23","trueBody":{"id":3827,"nodeType":"Block","src":"6609:33:23","statements":[{"expression":{"hexValue":"30","id":3825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3821,"id":3826,"nodeType":"Return","src":"6623:8:23"}]}},{"assignments":[3830],"declarations":[{"constant":false,"id":3830,"mutability":"mutable","name":"result","nameLocation":"7329:6:23","nodeType":"VariableDeclaration","scope":3925,"src":"7321:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3829,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3839,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3833,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"7349:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3832,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4094,4130],"referencedDeclaration":4094,"src":"7344:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3837,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:23"},{"id":3924,"nodeType":"UncheckedBlock","src":"7758:408:23","statements":[{"expression":{"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3840,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"7782:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3841,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"7792:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3842,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"7801:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3843,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"7805:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3846,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3850,"nodeType":"ExpressionStatement","src":"7782:35:23"},{"expression":{"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3851,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"7831:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3852,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"7841:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3853,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"7850:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3854,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"7854:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3857,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3861,"nodeType":"ExpressionStatement","src":"7831:35:23"},{"expression":{"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3862,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"7880:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3863,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"7890:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3864,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"7899:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"7903:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3868,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3872,"nodeType":"ExpressionStatement","src":"7880:35:23"},{"expression":{"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3873,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"7929:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3874,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"7939:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3875,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"7948:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3876,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"7952:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3879,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3883,"nodeType":"ExpressionStatement","src":"7929:35:23"},{"expression":{"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3884,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"7978:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3885,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"7988:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3886,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"7997:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3887,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"8001:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3894,"nodeType":"ExpressionStatement","src":"7978:35:23"},{"expression":{"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3895,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"8027:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3896,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"8037:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3897,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"8046:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3898,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"8050:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3901,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3905,"nodeType":"ExpressionStatement","src":"8027:35:23"},{"expression":{"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3906,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"8076:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3907,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"8086:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3908,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"8095:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3909,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"8099:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3912,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3916,"nodeType":"ExpressionStatement","src":"8076:35:23"},{"expression":{"arguments":[{"id":3918,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"8136:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3919,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"8144:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3920,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"8148:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3917,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"8132:3:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3821,"id":3923,"nodeType":"Return","src":"8125:30:23"}]}]},"documentation":{"id":3815,"nodeType":"StructuredDocumentation","src":"6317:208:23","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3926,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:23","nodeType":"FunctionDefinition","parameters":{"id":3818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3817,"mutability":"mutable","name":"a","nameLocation":"6552:1:23","nodeType":"VariableDeclaration","scope":3926,"src":"6544:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3816,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:23"},"returnParameters":{"id":3821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3926,"src":"6578:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3819,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:23"},"scope":4422,"src":"6530:1642:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3961,"nodeType":"Block","src":"8348:161:23","statements":[{"id":3960,"nodeType":"UncheckedBlock","src":"8358:145:23","statements":[{"assignments":[3938],"declarations":[{"constant":false,"id":3938,"mutability":"mutable","name":"result","nameLocation":"8390:6:23","nodeType":"VariableDeclaration","scope":3960,"src":"8382:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3937,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3942,"initialValue":{"arguments":[{"id":3940,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"8404:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3939,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3926,3962],"referencedDeclaration":3926,"src":"8399:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3943,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"8427:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3563","typeString":"enum Math.Rounding"},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3944,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"8437:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3563","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3945,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"8449:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3563_$","typeString":"type(enum Math.Rounding)"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:23","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3561,"src":"8449:11:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3563","typeString":"enum Math.Rounding"}},"src":"8437:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3948,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"8464:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3949,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"8473:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3951,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"8482:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:23","trueExpression":{"hexValue":"31","id":3954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3957,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3936,"id":3959,"nodeType":"Return","src":"8420:72:23"}]}]},"documentation":{"id":3927,"nodeType":"StructuredDocumentation","src":"8178:89:23","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3962,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:23","nodeType":"FunctionDefinition","parameters":{"id":3933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3929,"mutability":"mutable","name":"a","nameLocation":"8294:1:23","nodeType":"VariableDeclaration","scope":3962,"src":"8286:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3928,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3932,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:23","nodeType":"VariableDeclaration","scope":3962,"src":"8297:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3563","typeString":"enum Math.Rounding"},"typeName":{"id":3931,"nodeType":"UserDefinedTypeName","pathNode":{"id":3930,"name":"Rounding","nameLocations":["8297:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":3563,"src":"8297:8:23"},"referencedDeclaration":3563,"src":"8297:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3563","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:23"},"returnParameters":{"id":3936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3962,"src":"8339:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3934,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:23"},"scope":4422,"src":"8272:237:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4093,"nodeType":"Block","src":"8694:922:23","statements":[{"assignments":[3971],"declarations":[{"constant":false,"id":3971,"mutability":"mutable","name":"result","nameLocation":"8712:6:23","nodeType":"VariableDeclaration","scope":4093,"src":"8704:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3970,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3973,"initialValue":{"hexValue":"30","id":3972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:23"},{"id":4090,"nodeType":"UncheckedBlock","src":"8732:855:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"8760:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3988,"nodeType":"IfStatement","src":"8756:99:23","trueBody":{"id":3987,"nodeType":"Block","src":"8778:77:23","statements":[{"expression":{"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"8796:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3982,"nodeType":"ExpressionStatement","src":"8796:13:23"},{"expression":{"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3983,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"8827:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3986,"nodeType":"ExpressionStatement","src":"8827:13:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"8872:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4003,"nodeType":"IfStatement","src":"8868:96:23","trueBody":{"id":4002,"nodeType":"Block","src":"8889:75:23","statements":[{"expression":{"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"8907:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3997,"nodeType":"ExpressionStatement","src":"8907:12:23"},{"expression":{"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3998,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"8937:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4001,"nodeType":"ExpressionStatement","src":"8937:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"8981:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4018,"nodeType":"IfStatement","src":"8977:96:23","trueBody":{"id":4017,"nodeType":"Block","src":"8998:75:23","statements":[{"expression":{"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"9016:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4012,"nodeType":"ExpressionStatement","src":"9016:12:23"},{"expression":{"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4013,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"9046:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4016,"nodeType":"ExpressionStatement","src":"9046:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"9090:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4033,"nodeType":"IfStatement","src":"9086:96:23","trueBody":{"id":4032,"nodeType":"Block","src":"9107:75:23","statements":[{"expression":{"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"9125:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4027,"nodeType":"ExpressionStatement","src":"9125:12:23"},{"expression":{"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4028,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"9155:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4031,"nodeType":"ExpressionStatement","src":"9155:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"9199:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4048,"nodeType":"IfStatement","src":"9195:93:23","trueBody":{"id":4047,"nodeType":"Block","src":"9215:73:23","statements":[{"expression":{"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"9233:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4042,"nodeType":"ExpressionStatement","src":"9233:11:23"},{"expression":{"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4043,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"9262:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4046,"nodeType":"ExpressionStatement","src":"9262:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"9305:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":4050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4063,"nodeType":"IfStatement","src":"9301:93:23","trueBody":{"id":4062,"nodeType":"Block","src":"9321:73:23","statements":[{"expression":{"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"9339:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4057,"nodeType":"ExpressionStatement","src":"9339:11:23"},{"expression":{"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4058,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"9368:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4061,"nodeType":"ExpressionStatement","src":"9368:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"9411:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4078,"nodeType":"IfStatement","src":"9407:93:23","trueBody":{"id":4077,"nodeType":"Block","src":"9427:73:23","statements":[{"expression":{"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"9445:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":4070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4072,"nodeType":"ExpressionStatement","src":"9445:11:23"},{"expression":{"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4073,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"9474:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4076,"nodeType":"ExpressionStatement","src":"9474:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"9517:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4089,"nodeType":"IfStatement","src":"9513:64:23","trueBody":{"id":4088,"nodeType":"Block","src":"9533:44:23","statements":[{"expression":{"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4084,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"9551:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4087,"nodeType":"ExpressionStatement","src":"9551:11:23"}]}}]},{"expression":{"id":4091,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"9603:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3969,"id":4092,"nodeType":"Return","src":"9596:13:23"}]},"documentation":{"id":3963,"nodeType":"StructuredDocumentation","src":"8515:113:23","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":4094,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:23","nodeType":"FunctionDefinition","parameters":{"id":3966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3965,"mutability":"mutable","name":"value","nameLocation":"8655:5:23","nodeType":"VariableDeclaration","scope":4094,"src":"8647:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3964,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:23"},"returnParameters":{"id":3969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4094,"src":"8685:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3967,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:23"},"scope":4422,"src":"8633:983:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4129,"nodeType":"Block","src":"9849:165:23","statements":[{"id":4128,"nodeType":"UncheckedBlock","src":"9859:149:23","statements":[{"assignments":[4106],"declarations":[{"constant":false,"id":4106,"mutability":"mutable","name":"result","nameLocation":"9891:6:23","nodeType":"VariableDeclaration","scope":4128,"src":"9883:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4105,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4110,"initialValue":{"arguments":[{"id":4108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"9905:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4107,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4094,4130],"referencedDeclaration":4094,"src":"9900:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4111,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"9932:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3563","typeString":"enum Math.Rounding"},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4112,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"9942:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3563","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4113,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"9954:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3563_$","typeString":"type(enum Math.Rounding)"}},"id":4114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:23","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3561,"src":"9954:11:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3563","typeString":"enum Math.Rounding"}},"src":"9942:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4117,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"9974:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"9983:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:23","trueExpression":{"hexValue":"31","id":4122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4125,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4104,"id":4127,"nodeType":"Return","src":"9925:72:23"}]}]},"documentation":{"id":4095,"nodeType":"StructuredDocumentation","src":"9622:142:23","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4130,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:23","nodeType":"FunctionDefinition","parameters":{"id":4101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4097,"mutability":"mutable","name":"value","nameLocation":"9791:5:23","nodeType":"VariableDeclaration","scope":4130,"src":"9783:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4096,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4100,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:23","nodeType":"VariableDeclaration","scope":4130,"src":"9798:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3563","typeString":"enum Math.Rounding"},"typeName":{"id":4099,"nodeType":"UserDefinedTypeName","pathNode":{"id":4098,"name":"Rounding","nameLocations":["9798:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":3563,"src":"9798:8:23"},"referencedDeclaration":3563,"src":"9798:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3563","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:23"},"returnParameters":{"id":4104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4130,"src":"9840:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4102,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:23"},"scope":4422,"src":"9769:245:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4258,"nodeType":"Block","src":"10201:854:23","statements":[{"assignments":[4139],"declarations":[{"constant":false,"id":4139,"mutability":"mutable","name":"result","nameLocation":"10219:6:23","nodeType":"VariableDeclaration","scope":4258,"src":"10211:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4138,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4141,"initialValue":{"hexValue":"30","id":4140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:23"},{"id":4255,"nodeType":"UncheckedBlock","src":"10239:787:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"10267:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4158,"nodeType":"IfStatement","src":"10263:103:23","trueBody":{"id":4157,"nodeType":"Block","src":"10286:80:23","statements":[{"expression":{"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"10304:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4152,"nodeType":"ExpressionStatement","src":"10304:17:23"},{"expression":{"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4153,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"10339:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4156,"nodeType":"ExpressionStatement","src":"10339:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"10383:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4175,"nodeType":"IfStatement","src":"10379:103:23","trueBody":{"id":4174,"nodeType":"Block","src":"10402:80:23","statements":[{"expression":{"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"10420:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4169,"nodeType":"ExpressionStatement","src":"10420:17:23"},{"expression":{"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4170,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"10455:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4173,"nodeType":"ExpressionStatement","src":"10455:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"10499:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4192,"nodeType":"IfStatement","src":"10495:103:23","trueBody":{"id":4191,"nodeType":"Block","src":"10518:80:23","statements":[{"expression":{"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"10536:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4186,"nodeType":"ExpressionStatement","src":"10536:17:23"},{"expression":{"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4187,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"10571:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4190,"nodeType":"ExpressionStatement","src":"10571:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"10615:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4209,"nodeType":"IfStatement","src":"10611:100:23","trueBody":{"id":4208,"nodeType":"Block","src":"10633:78:23","statements":[{"expression":{"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"10651:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4203,"nodeType":"ExpressionStatement","src":"10651:16:23"},{"expression":{"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4204,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"10685:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4207,"nodeType":"ExpressionStatement","src":"10685:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"10728:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4226,"nodeType":"IfStatement","src":"10724:100:23","trueBody":{"id":4225,"nodeType":"Block","src":"10746:78:23","statements":[{"expression":{"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"10764:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4220,"nodeType":"ExpressionStatement","src":"10764:16:23"},{"expression":{"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4221,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"10798:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4224,"nodeType":"ExpressionStatement","src":"10798:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"10841:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4243,"nodeType":"IfStatement","src":"10837:100:23","trueBody":{"id":4242,"nodeType":"Block","src":"10859:78:23","statements":[{"expression":{"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"10877:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4237,"nodeType":"ExpressionStatement","src":"10877:16:23"},{"expression":{"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4238,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"10911:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4241,"nodeType":"ExpressionStatement","src":"10911:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"10954:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4254,"nodeType":"IfStatement","src":"10950:66:23","trueBody":{"id":4253,"nodeType":"Block","src":"10972:44:23","statements":[{"expression":{"id":4251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4249,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"10990:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4252,"nodeType":"ExpressionStatement","src":"10990:11:23"}]}}]},{"expression":{"id":4256,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"11042:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4137,"id":4257,"nodeType":"Return","src":"11035:13:23"}]},"documentation":{"id":4131,"nodeType":"StructuredDocumentation","src":"10020:114:23","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":4259,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:23","nodeType":"FunctionDefinition","parameters":{"id":4134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4133,"mutability":"mutable","name":"value","nameLocation":"10162:5:23","nodeType":"VariableDeclaration","scope":4259,"src":"10154:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4132,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:23"},"returnParameters":{"id":4137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4259,"src":"10192:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4135,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:23"},"scope":4422,"src":"10139:916:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4294,"nodeType":"Block","src":"11290:167:23","statements":[{"id":4293,"nodeType":"UncheckedBlock","src":"11300:151:23","statements":[{"assignments":[4271],"declarations":[{"constant":false,"id":4271,"mutability":"mutable","name":"result","nameLocation":"11332:6:23","nodeType":"VariableDeclaration","scope":4293,"src":"11324:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4270,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4275,"initialValue":{"arguments":[{"id":4273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"11347:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4272,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4259,4295],"referencedDeclaration":4259,"src":"11341:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4276,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"11374:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3563","typeString":"enum Math.Rounding"},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4277,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"11384:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3563","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4278,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"11396:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3563_$","typeString":"type(enum Math.Rounding)"}},"id":4279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:23","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3561,"src":"11396:11:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3563","typeString":"enum Math.Rounding"}},"src":"11384:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4282,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"11417:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"11426:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:23","trueExpression":{"hexValue":"31","id":4287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4290,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4269,"id":4292,"nodeType":"Return","src":"11367:73:23"}]}]},"documentation":{"id":4260,"nodeType":"StructuredDocumentation","src":"11061:143:23","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4295,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:23","nodeType":"FunctionDefinition","parameters":{"id":4266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4262,"mutability":"mutable","name":"value","nameLocation":"11232:5:23","nodeType":"VariableDeclaration","scope":4295,"src":"11224:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4261,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4265,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:23","nodeType":"VariableDeclaration","scope":4295,"src":"11239:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3563","typeString":"enum Math.Rounding"},"typeName":{"id":4264,"nodeType":"UserDefinedTypeName","pathNode":{"id":4263,"name":"Rounding","nameLocations":["11239:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":3563,"src":"11239:8:23"},"referencedDeclaration":3563,"src":"11239:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3563","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:23"},"returnParameters":{"id":4269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4295,"src":"11281:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4267,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:23"},"scope":4422,"src":"11209:248:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4381,"nodeType":"Block","src":"11771:600:23","statements":[{"assignments":[4304],"declarations":[{"constant":false,"id":4304,"mutability":"mutable","name":"result","nameLocation":"11789:6:23","nodeType":"VariableDeclaration","scope":4381,"src":"11781:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4303,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4306,"initialValue":{"hexValue":"30","id":4305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:23"},{"id":4378,"nodeType":"UncheckedBlock","src":"11809:533:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"11837:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4321,"nodeType":"IfStatement","src":"11833:98:23","trueBody":{"id":4320,"nodeType":"Block","src":"11855:76:23","statements":[{"expression":{"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"11873:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4315,"nodeType":"ExpressionStatement","src":"11873:13:23"},{"expression":{"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4316,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"11904:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4319,"nodeType":"ExpressionStatement","src":"11904:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"11948:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4336,"nodeType":"IfStatement","src":"11944:95:23","trueBody":{"id":4335,"nodeType":"Block","src":"11965:74:23","statements":[{"expression":{"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"11983:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4330,"nodeType":"ExpressionStatement","src":"11983:12:23"},{"expression":{"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4331,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"12013:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4334,"nodeType":"ExpressionStatement","src":"12013:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"12056:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4351,"nodeType":"IfStatement","src":"12052:95:23","trueBody":{"id":4350,"nodeType":"Block","src":"12073:74:23","statements":[{"expression":{"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"12091:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4345,"nodeType":"ExpressionStatement","src":"12091:12:23"},{"expression":{"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4346,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"12121:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4349,"nodeType":"ExpressionStatement","src":"12121:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"12164:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4366,"nodeType":"IfStatement","src":"12160:95:23","trueBody":{"id":4365,"nodeType":"Block","src":"12181:74:23","statements":[{"expression":{"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"12199:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4360,"nodeType":"ExpressionStatement","src":"12199:12:23"},{"expression":{"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4361,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"12229:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4364,"nodeType":"ExpressionStatement","src":"12229:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"12272:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4377,"nodeType":"IfStatement","src":"12268:64:23","trueBody":{"id":4376,"nodeType":"Block","src":"12288:44:23","statements":[{"expression":{"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4372,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"12306:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4375,"nodeType":"ExpressionStatement","src":"12306:11:23"}]}}]},{"expression":{"id":4379,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"12358:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4302,"id":4380,"nodeType":"Return","src":"12351:13:23"}]},"documentation":{"id":4296,"nodeType":"StructuredDocumentation","src":"11463:240:23","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4382,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:23","nodeType":"FunctionDefinition","parameters":{"id":4299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4298,"mutability":"mutable","name":"value","nameLocation":"11732:5:23","nodeType":"VariableDeclaration","scope":4382,"src":"11724:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4297,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:23"},"returnParameters":{"id":4302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4382,"src":"11762:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4300,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:23"},"scope":4422,"src":"11708:663:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4420,"nodeType":"Block","src":"12608:174:23","statements":[{"id":4419,"nodeType":"UncheckedBlock","src":"12618:158:23","statements":[{"assignments":[4394],"declarations":[{"constant":false,"id":4394,"mutability":"mutable","name":"result","nameLocation":"12650:6:23","nodeType":"VariableDeclaration","scope":4419,"src":"12642:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4393,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4398,"initialValue":{"arguments":[{"id":4396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"12666:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4395,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4382,4421],"referencedDeclaration":4382,"src":"12659:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4399,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"12693:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3563","typeString":"enum Math.Rounding"},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4400,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"12703:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3563","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4401,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"12715:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3563_$","typeString":"type(enum Math.Rounding)"}},"id":4402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:23","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3561,"src":"12715:11:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3563","typeString":"enum Math.Rounding"}},"src":"12703:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4405,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"12736:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"12751:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:23","trueExpression":{"hexValue":"31","id":4413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4416,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4392,"id":4418,"nodeType":"Return","src":"12686:79:23"}]}]},"documentation":{"id":4383,"nodeType":"StructuredDocumentation","src":"12377:144:23","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4421,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:23","nodeType":"FunctionDefinition","parameters":{"id":4389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4385,"mutability":"mutable","name":"value","nameLocation":"12550:5:23","nodeType":"VariableDeclaration","scope":4421,"src":"12542:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4384,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4388,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:23","nodeType":"VariableDeclaration","scope":4421,"src":"12557:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3563","typeString":"enum Math.Rounding"},"typeName":{"id":4387,"nodeType":"UserDefinedTypeName","pathNode":{"id":4386,"name":"Rounding","nameLocations":["12557:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":3563,"src":"12557:8:23"},"referencedDeclaration":3563,"src":"12557:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3563","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:23"},"returnParameters":{"id":4392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4421,"src":"12599:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4390,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:23"},"scope":4422,"src":"12526:256:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4423,"src":"202:12582:23","usedErrors":[],"usedEvents":[]}],"src":"103:12682:23"},"id":23},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[5963]},"id":5964,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4424,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"192:23:24"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4425,"nodeType":"StructuredDocumentation","src":"217:709:24","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":5963,"linearizedBaseContracts":[5963],"name":"SafeCast","nameLocation":"935:8:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":4449,"nodeType":"Block","src":"1339:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4428,"src":"1357:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1371:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4436,"name":"uint248","nodeType":"ElementaryTypeName","src":"1371:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4435,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1366:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1380:3:24","memberName":"max","nodeType":"MemberAccess","src":"1366:17:24","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1357:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":4441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1385:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":4433,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1349:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1349:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4443,"nodeType":"ExpressionStatement","src":"1349:78:24"},{"expression":{"arguments":[{"id":4446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4428,"src":"1452:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1444:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4444,"name":"uint248","nodeType":"ElementaryTypeName","src":"1444:7:24","typeDescriptions":{}}},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1444:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4432,"id":4448,"nodeType":"Return","src":"1437:21:24"}]},"documentation":{"id":4426,"nodeType":"StructuredDocumentation","src":"950:318:24","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":4450,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1282:9:24","nodeType":"FunctionDefinition","parameters":{"id":4429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4428,"mutability":"mutable","name":"value","nameLocation":"1300:5:24","nodeType":"VariableDeclaration","scope":4450,"src":"1292:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4427,"name":"uint256","nodeType":"ElementaryTypeName","src":"1292:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1291:15:24"},"returnParameters":{"id":4432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4450,"src":"1330:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4430,"name":"uint248","nodeType":"ElementaryTypeName","src":"1330:7:24","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1329:9:24"},"scope":5963,"src":"1273:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4474,"nodeType":"Block","src":"1860:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"1878:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1892:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4461,"name":"uint240","nodeType":"ElementaryTypeName","src":"1892:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4460,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1887:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1887:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1901:3:24","memberName":"max","nodeType":"MemberAccess","src":"1887:17:24","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"1878:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":4466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":4458,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1870:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1870:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4468,"nodeType":"ExpressionStatement","src":"1870:78:24"},{"expression":{"arguments":[{"id":4471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"1973:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1965:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4469,"name":"uint240","nodeType":"ElementaryTypeName","src":"1965:7:24","typeDescriptions":{}}},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1965:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4457,"id":4473,"nodeType":"Return","src":"1958:21:24"}]},"documentation":{"id":4451,"nodeType":"StructuredDocumentation","src":"1471:318:24","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":4475,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"1803:9:24","nodeType":"FunctionDefinition","parameters":{"id":4454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4453,"mutability":"mutable","name":"value","nameLocation":"1821:5:24","nodeType":"VariableDeclaration","scope":4475,"src":"1813:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4452,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1812:15:24"},"returnParameters":{"id":4457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4475,"src":"1851:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4455,"name":"uint240","nodeType":"ElementaryTypeName","src":"1851:7:24","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"1850:9:24"},"scope":5963,"src":"1794:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4499,"nodeType":"Block","src":"2381:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"2399:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2413:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4486,"name":"uint232","nodeType":"ElementaryTypeName","src":"2413:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4485,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2408:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2408:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2422:3:24","memberName":"max","nodeType":"MemberAccess","src":"2408:17:24","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2399:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":4491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2427:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":4483,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2391:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2391:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4493,"nodeType":"ExpressionStatement","src":"2391:78:24"},{"expression":{"arguments":[{"id":4496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"2494:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2486:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4494,"name":"uint232","nodeType":"ElementaryTypeName","src":"2486:7:24","typeDescriptions":{}}},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2486:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4482,"id":4498,"nodeType":"Return","src":"2479:21:24"}]},"documentation":{"id":4476,"nodeType":"StructuredDocumentation","src":"1992:318:24","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":4500,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2324:9:24","nodeType":"FunctionDefinition","parameters":{"id":4479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4478,"mutability":"mutable","name":"value","nameLocation":"2342:5:24","nodeType":"VariableDeclaration","scope":4500,"src":"2334:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4477,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:24"},"returnParameters":{"id":4482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4500,"src":"2372:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4480,"name":"uint232","nodeType":"ElementaryTypeName","src":"2372:7:24","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2371:9:24"},"scope":5963,"src":"2315:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4524,"nodeType":"Block","src":"2902:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"2920:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2934:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4511,"name":"uint224","nodeType":"ElementaryTypeName","src":"2934:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4510,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2929:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2929:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2943:3:24","memberName":"max","nodeType":"MemberAccess","src":"2929:17:24","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"2920:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":4516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2948:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":4508,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2912:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2912:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4518,"nodeType":"ExpressionStatement","src":"2912:78:24"},{"expression":{"arguments":[{"id":4521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"3015:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3007:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4519,"name":"uint224","nodeType":"ElementaryTypeName","src":"3007:7:24","typeDescriptions":{}}},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3007:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4507,"id":4523,"nodeType":"Return","src":"3000:21:24"}]},"documentation":{"id":4501,"nodeType":"StructuredDocumentation","src":"2513:318:24","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.2._"},"id":4525,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"2845:9:24","nodeType":"FunctionDefinition","parameters":{"id":4504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4503,"mutability":"mutable","name":"value","nameLocation":"2863:5:24","nodeType":"VariableDeclaration","scope":4525,"src":"2855:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4502,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:15:24"},"returnParameters":{"id":4507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4525,"src":"2893:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4505,"name":"uint224","nodeType":"ElementaryTypeName","src":"2893:7:24","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2892:9:24"},"scope":5963,"src":"2836:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4549,"nodeType":"Block","src":"3423:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"3441:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3455:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4536,"name":"uint216","nodeType":"ElementaryTypeName","src":"3455:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4535,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3450:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3450:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3464:3:24","memberName":"max","nodeType":"MemberAccess","src":"3450:17:24","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3441:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3469:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":4533,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3433:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3433:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4543,"nodeType":"ExpressionStatement","src":"3433:78:24"},{"expression":{"arguments":[{"id":4546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"3536:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3528:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4544,"name":"uint216","nodeType":"ElementaryTypeName","src":"3528:7:24","typeDescriptions":{}}},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3528:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4532,"id":4548,"nodeType":"Return","src":"3521:21:24"}]},"documentation":{"id":4526,"nodeType":"StructuredDocumentation","src":"3034:318:24","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":4550,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3366:9:24","nodeType":"FunctionDefinition","parameters":{"id":4529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4528,"mutability":"mutable","name":"value","nameLocation":"3384:5:24","nodeType":"VariableDeclaration","scope":4550,"src":"3376:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4527,"name":"uint256","nodeType":"ElementaryTypeName","src":"3376:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3375:15:24"},"returnParameters":{"id":4532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4550,"src":"3414:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4530,"name":"uint216","nodeType":"ElementaryTypeName","src":"3414:7:24","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3413:9:24"},"scope":5963,"src":"3357:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4574,"nodeType":"Block","src":"3944:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"3962:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3976:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4561,"name":"uint208","nodeType":"ElementaryTypeName","src":"3976:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4560,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3971:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3971:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3985:3:24","memberName":"max","nodeType":"MemberAccess","src":"3971:17:24","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"3962:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":4566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3990:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":4558,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3954:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3954:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4568,"nodeType":"ExpressionStatement","src":"3954:78:24"},{"expression":{"arguments":[{"id":4571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"4057:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4049:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4569,"name":"uint208","nodeType":"ElementaryTypeName","src":"4049:7:24","typeDescriptions":{}}},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4049:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4557,"id":4573,"nodeType":"Return","src":"4042:21:24"}]},"documentation":{"id":4551,"nodeType":"StructuredDocumentation","src":"3555:318:24","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":4575,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"3887:9:24","nodeType":"FunctionDefinition","parameters":{"id":4554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4553,"mutability":"mutable","name":"value","nameLocation":"3905:5:24","nodeType":"VariableDeclaration","scope":4575,"src":"3897:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4552,"name":"uint256","nodeType":"ElementaryTypeName","src":"3897:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3896:15:24"},"returnParameters":{"id":4557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4575,"src":"3935:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4555,"name":"uint208","nodeType":"ElementaryTypeName","src":"3935:7:24","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"3934:9:24"},"scope":5963,"src":"3878:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4599,"nodeType":"Block","src":"4465:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"4483:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4497:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4586,"name":"uint200","nodeType":"ElementaryTypeName","src":"4497:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4585,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4492:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4492:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4506:3:24","memberName":"max","nodeType":"MemberAccess","src":"4492:17:24","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4483:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":4591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4511:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":4583,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4475:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4475:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4593,"nodeType":"ExpressionStatement","src":"4475:78:24"},{"expression":{"arguments":[{"id":4596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"4578:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4570:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4594,"name":"uint200","nodeType":"ElementaryTypeName","src":"4570:7:24","typeDescriptions":{}}},"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4570:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4582,"id":4598,"nodeType":"Return","src":"4563:21:24"}]},"documentation":{"id":4576,"nodeType":"StructuredDocumentation","src":"4076:318:24","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":4600,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4408:9:24","nodeType":"FunctionDefinition","parameters":{"id":4579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4578,"mutability":"mutable","name":"value","nameLocation":"4426:5:24","nodeType":"VariableDeclaration","scope":4600,"src":"4418:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4577,"name":"uint256","nodeType":"ElementaryTypeName","src":"4418:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4417:15:24"},"returnParameters":{"id":4582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4600,"src":"4456:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4580,"name":"uint200","nodeType":"ElementaryTypeName","src":"4456:7:24","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4455:9:24"},"scope":5963,"src":"4399:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4624,"nodeType":"Block","src":"4986:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"5004:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5018:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4611,"name":"uint192","nodeType":"ElementaryTypeName","src":"5018:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4610,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5013:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5013:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5027:3:24","memberName":"max","nodeType":"MemberAccess","src":"5013:17:24","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5004:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":4616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5032:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":4608,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4996:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4996:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4618,"nodeType":"ExpressionStatement","src":"4996:78:24"},{"expression":{"arguments":[{"id":4621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"5099:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5091:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4619,"name":"uint192","nodeType":"ElementaryTypeName","src":"5091:7:24","typeDescriptions":{}}},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4607,"id":4623,"nodeType":"Return","src":"5084:21:24"}]},"documentation":{"id":4601,"nodeType":"StructuredDocumentation","src":"4597:318:24","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":4625,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"4929:9:24","nodeType":"FunctionDefinition","parameters":{"id":4604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4603,"mutability":"mutable","name":"value","nameLocation":"4947:5:24","nodeType":"VariableDeclaration","scope":4625,"src":"4939:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4602,"name":"uint256","nodeType":"ElementaryTypeName","src":"4939:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4938:15:24"},"returnParameters":{"id":4607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4625,"src":"4977:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4605,"name":"uint192","nodeType":"ElementaryTypeName","src":"4977:7:24","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4976:9:24"},"scope":5963,"src":"4920:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4649,"nodeType":"Block","src":"5507:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"5525:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5539:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4636,"name":"uint184","nodeType":"ElementaryTypeName","src":"5539:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4635,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5534:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5534:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5548:3:24","memberName":"max","nodeType":"MemberAccess","src":"5534:17:24","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5525:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":4641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5553:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":4633,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5517:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4643,"nodeType":"ExpressionStatement","src":"5517:78:24"},{"expression":{"arguments":[{"id":4646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"5620:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4644,"name":"uint184","nodeType":"ElementaryTypeName","src":"5612:7:24","typeDescriptions":{}}},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4632,"id":4648,"nodeType":"Return","src":"5605:21:24"}]},"documentation":{"id":4626,"nodeType":"StructuredDocumentation","src":"5118:318:24","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":4650,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5450:9:24","nodeType":"FunctionDefinition","parameters":{"id":4629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4628,"mutability":"mutable","name":"value","nameLocation":"5468:5:24","nodeType":"VariableDeclaration","scope":4650,"src":"5460:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4627,"name":"uint256","nodeType":"ElementaryTypeName","src":"5460:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5459:15:24"},"returnParameters":{"id":4632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4650,"src":"5498:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4630,"name":"uint184","nodeType":"ElementaryTypeName","src":"5498:7:24","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5497:9:24"},"scope":5963,"src":"5441:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4674,"nodeType":"Block","src":"6028:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4653,"src":"6046:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6060:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4661,"name":"uint176","nodeType":"ElementaryTypeName","src":"6060:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4660,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6055:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6055:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6069:3:24","memberName":"max","nodeType":"MemberAccess","src":"6055:17:24","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6046:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":4666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6074:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":4658,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6038:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4668,"nodeType":"ExpressionStatement","src":"6038:78:24"},{"expression":{"arguments":[{"id":4671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4653,"src":"6141:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4669,"name":"uint176","nodeType":"ElementaryTypeName","src":"6133:7:24","typeDescriptions":{}}},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6133:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4657,"id":4673,"nodeType":"Return","src":"6126:21:24"}]},"documentation":{"id":4651,"nodeType":"StructuredDocumentation","src":"5639:318:24","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":4675,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"5971:9:24","nodeType":"FunctionDefinition","parameters":{"id":4654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4653,"mutability":"mutable","name":"value","nameLocation":"5989:5:24","nodeType":"VariableDeclaration","scope":4675,"src":"5981:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4652,"name":"uint256","nodeType":"ElementaryTypeName","src":"5981:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5980:15:24"},"returnParameters":{"id":4657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4675,"src":"6019:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4655,"name":"uint176","nodeType":"ElementaryTypeName","src":"6019:7:24","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6018:9:24"},"scope":5963,"src":"5962:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4699,"nodeType":"Block","src":"6549:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"6567:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6581:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4686,"name":"uint168","nodeType":"ElementaryTypeName","src":"6581:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4685,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6576:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6576:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6590:3:24","memberName":"max","nodeType":"MemberAccess","src":"6576:17:24","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6567:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6595:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":4683,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6559:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6559:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4693,"nodeType":"ExpressionStatement","src":"6559:78:24"},{"expression":{"arguments":[{"id":4696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"6662:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6654:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4694,"name":"uint168","nodeType":"ElementaryTypeName","src":"6654:7:24","typeDescriptions":{}}},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4682,"id":4698,"nodeType":"Return","src":"6647:21:24"}]},"documentation":{"id":4676,"nodeType":"StructuredDocumentation","src":"6160:318:24","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":4700,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6492:9:24","nodeType":"FunctionDefinition","parameters":{"id":4679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4678,"mutability":"mutable","name":"value","nameLocation":"6510:5:24","nodeType":"VariableDeclaration","scope":4700,"src":"6502:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4677,"name":"uint256","nodeType":"ElementaryTypeName","src":"6502:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6501:15:24"},"returnParameters":{"id":4682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4700,"src":"6540:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4680,"name":"uint168","nodeType":"ElementaryTypeName","src":"6540:7:24","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6539:9:24"},"scope":5963,"src":"6483:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4724,"nodeType":"Block","src":"7070:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"7088:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7102:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4711,"name":"uint160","nodeType":"ElementaryTypeName","src":"7102:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4710,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7097:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7097:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7111:3:24","memberName":"max","nodeType":"MemberAccess","src":"7097:17:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7088:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":4716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7116:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":4708,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7080:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7080:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4718,"nodeType":"ExpressionStatement","src":"7080:78:24"},{"expression":{"arguments":[{"id":4721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"7183:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7175:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4719,"name":"uint160","nodeType":"ElementaryTypeName","src":"7175:7:24","typeDescriptions":{}}},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7175:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4707,"id":4723,"nodeType":"Return","src":"7168:21:24"}]},"documentation":{"id":4701,"nodeType":"StructuredDocumentation","src":"6681:318:24","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":4725,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7013:9:24","nodeType":"FunctionDefinition","parameters":{"id":4704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4703,"mutability":"mutable","name":"value","nameLocation":"7031:5:24","nodeType":"VariableDeclaration","scope":4725,"src":"7023:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4702,"name":"uint256","nodeType":"ElementaryTypeName","src":"7023:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7022:15:24"},"returnParameters":{"id":4707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4725,"src":"7061:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4705,"name":"uint160","nodeType":"ElementaryTypeName","src":"7061:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7060:9:24"},"scope":5963,"src":"7004:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4749,"nodeType":"Block","src":"7591:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"7609:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7623:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4736,"name":"uint152","nodeType":"ElementaryTypeName","src":"7623:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4735,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7618:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7618:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7632:3:24","memberName":"max","nodeType":"MemberAccess","src":"7618:17:24","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7609:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":4741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7637:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":4733,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7601:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7601:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4743,"nodeType":"ExpressionStatement","src":"7601:78:24"},{"expression":{"arguments":[{"id":4746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"7704:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7696:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4744,"name":"uint152","nodeType":"ElementaryTypeName","src":"7696:7:24","typeDescriptions":{}}},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7696:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4732,"id":4748,"nodeType":"Return","src":"7689:21:24"}]},"documentation":{"id":4726,"nodeType":"StructuredDocumentation","src":"7202:318:24","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":4750,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7534:9:24","nodeType":"FunctionDefinition","parameters":{"id":4729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4728,"mutability":"mutable","name":"value","nameLocation":"7552:5:24","nodeType":"VariableDeclaration","scope":4750,"src":"7544:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4727,"name":"uint256","nodeType":"ElementaryTypeName","src":"7544:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7543:15:24"},"returnParameters":{"id":4732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4750,"src":"7582:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4730,"name":"uint152","nodeType":"ElementaryTypeName","src":"7582:7:24","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7581:9:24"},"scope":5963,"src":"7525:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4774,"nodeType":"Block","src":"8112:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"8130:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8144:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4761,"name":"uint144","nodeType":"ElementaryTypeName","src":"8144:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4760,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8139:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8139:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8153:3:24","memberName":"max","nodeType":"MemberAccess","src":"8139:17:24","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8130:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":4766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8158:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":4758,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8122:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8122:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4768,"nodeType":"ExpressionStatement","src":"8122:78:24"},{"expression":{"arguments":[{"id":4771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"8225:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8217:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4769,"name":"uint144","nodeType":"ElementaryTypeName","src":"8217:7:24","typeDescriptions":{}}},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8217:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4757,"id":4773,"nodeType":"Return","src":"8210:21:24"}]},"documentation":{"id":4751,"nodeType":"StructuredDocumentation","src":"7723:318:24","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":4775,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8055:9:24","nodeType":"FunctionDefinition","parameters":{"id":4754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4753,"mutability":"mutable","name":"value","nameLocation":"8073:5:24","nodeType":"VariableDeclaration","scope":4775,"src":"8065:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4752,"name":"uint256","nodeType":"ElementaryTypeName","src":"8065:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8064:15:24"},"returnParameters":{"id":4757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4775,"src":"8103:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4755,"name":"uint144","nodeType":"ElementaryTypeName","src":"8103:7:24","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8102:9:24"},"scope":5963,"src":"8046:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4799,"nodeType":"Block","src":"8633:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"8651:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8665:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4786,"name":"uint136","nodeType":"ElementaryTypeName","src":"8665:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4785,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8660:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8660:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8674:3:24","memberName":"max","nodeType":"MemberAccess","src":"8660:17:24","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8651:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":4791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8679:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":4783,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8643:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8643:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4793,"nodeType":"ExpressionStatement","src":"8643:78:24"},{"expression":{"arguments":[{"id":4796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"8746:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8738:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4794,"name":"uint136","nodeType":"ElementaryTypeName","src":"8738:7:24","typeDescriptions":{}}},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4782,"id":4798,"nodeType":"Return","src":"8731:21:24"}]},"documentation":{"id":4776,"nodeType":"StructuredDocumentation","src":"8244:318:24","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":4800,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8576:9:24","nodeType":"FunctionDefinition","parameters":{"id":4779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4778,"mutability":"mutable","name":"value","nameLocation":"8594:5:24","nodeType":"VariableDeclaration","scope":4800,"src":"8586:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4777,"name":"uint256","nodeType":"ElementaryTypeName","src":"8586:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8585:15:24"},"returnParameters":{"id":4782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4800,"src":"8624:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4780,"name":"uint136","nodeType":"ElementaryTypeName","src":"8624:7:24","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8623:9:24"},"scope":5963,"src":"8567:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4824,"nodeType":"Block","src":"9154:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4803,"src":"9172:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9186:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4811,"name":"uint128","nodeType":"ElementaryTypeName","src":"9186:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4810,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9181:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9181:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9195:3:24","memberName":"max","nodeType":"MemberAccess","src":"9181:17:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9172:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":4816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9200:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":4808,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9164:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9164:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4818,"nodeType":"ExpressionStatement","src":"9164:78:24"},{"expression":{"arguments":[{"id":4821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4803,"src":"9267:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9259:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4819,"name":"uint128","nodeType":"ElementaryTypeName","src":"9259:7:24","typeDescriptions":{}}},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9259:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4807,"id":4823,"nodeType":"Return","src":"9252:21:24"}]},"documentation":{"id":4801,"nodeType":"StructuredDocumentation","src":"8765:318:24","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v2.5._"},"id":4825,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9097:9:24","nodeType":"FunctionDefinition","parameters":{"id":4804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4803,"mutability":"mutable","name":"value","nameLocation":"9115:5:24","nodeType":"VariableDeclaration","scope":4825,"src":"9107:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4802,"name":"uint256","nodeType":"ElementaryTypeName","src":"9107:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9106:15:24"},"returnParameters":{"id":4807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4825,"src":"9145:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4805,"name":"uint128","nodeType":"ElementaryTypeName","src":"9145:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9144:9:24"},"scope":5963,"src":"9088:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4849,"nodeType":"Block","src":"9675:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"9693:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4836,"name":"uint120","nodeType":"ElementaryTypeName","src":"9707:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4835,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9702:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9702:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9716:3:24","memberName":"max","nodeType":"MemberAccess","src":"9702:17:24","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9693:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":4841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9721:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":4833,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9685:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9685:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4843,"nodeType":"ExpressionStatement","src":"9685:78:24"},{"expression":{"arguments":[{"id":4846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"9788:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4844,"name":"uint120","nodeType":"ElementaryTypeName","src":"9780:7:24","typeDescriptions":{}}},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9780:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4832,"id":4848,"nodeType":"Return","src":"9773:21:24"}]},"documentation":{"id":4826,"nodeType":"StructuredDocumentation","src":"9286:318:24","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":4850,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9618:9:24","nodeType":"FunctionDefinition","parameters":{"id":4829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4828,"mutability":"mutable","name":"value","nameLocation":"9636:5:24","nodeType":"VariableDeclaration","scope":4850,"src":"9628:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4827,"name":"uint256","nodeType":"ElementaryTypeName","src":"9628:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9627:15:24"},"returnParameters":{"id":4832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4850,"src":"9666:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4830,"name":"uint120","nodeType":"ElementaryTypeName","src":"9666:7:24","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9665:9:24"},"scope":5963,"src":"9609:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4874,"nodeType":"Block","src":"10196:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"10214:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10228:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4861,"name":"uint112","nodeType":"ElementaryTypeName","src":"10228:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4860,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10223:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10237:3:24","memberName":"max","nodeType":"MemberAccess","src":"10223:17:24","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10214:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10242:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":4858,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10206:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10206:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4868,"nodeType":"ExpressionStatement","src":"10206:78:24"},{"expression":{"arguments":[{"id":4871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"10309:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10301:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4869,"name":"uint112","nodeType":"ElementaryTypeName","src":"10301:7:24","typeDescriptions":{}}},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10301:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4857,"id":4873,"nodeType":"Return","src":"10294:21:24"}]},"documentation":{"id":4851,"nodeType":"StructuredDocumentation","src":"9807:318:24","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":4875,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10139:9:24","nodeType":"FunctionDefinition","parameters":{"id":4854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4853,"mutability":"mutable","name":"value","nameLocation":"10157:5:24","nodeType":"VariableDeclaration","scope":4875,"src":"10149:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4852,"name":"uint256","nodeType":"ElementaryTypeName","src":"10149:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10148:15:24"},"returnParameters":{"id":4857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4875,"src":"10187:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4855,"name":"uint112","nodeType":"ElementaryTypeName","src":"10187:7:24","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10186:9:24"},"scope":5963,"src":"10130:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4899,"nodeType":"Block","src":"10717:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"10735:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10749:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4886,"name":"uint104","nodeType":"ElementaryTypeName","src":"10749:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4885,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10744:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10744:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10758:3:24","memberName":"max","nodeType":"MemberAccess","src":"10744:17:24","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10735:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":4891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10763:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":4883,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10727:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10727:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4893,"nodeType":"ExpressionStatement","src":"10727:78:24"},{"expression":{"arguments":[{"id":4896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"10830:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10822:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4894,"name":"uint104","nodeType":"ElementaryTypeName","src":"10822:7:24","typeDescriptions":{}}},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10822:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4882,"id":4898,"nodeType":"Return","src":"10815:21:24"}]},"documentation":{"id":4876,"nodeType":"StructuredDocumentation","src":"10328:318:24","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":4900,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10660:9:24","nodeType":"FunctionDefinition","parameters":{"id":4879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4878,"mutability":"mutable","name":"value","nameLocation":"10678:5:24","nodeType":"VariableDeclaration","scope":4900,"src":"10670:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4877,"name":"uint256","nodeType":"ElementaryTypeName","src":"10670:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10669:15:24"},"returnParameters":{"id":4882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4900,"src":"10708:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4880,"name":"uint104","nodeType":"ElementaryTypeName","src":"10708:7:24","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10707:9:24"},"scope":5963,"src":"10651:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4924,"nodeType":"Block","src":"11232:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4903,"src":"11250:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11264:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4911,"name":"uint96","nodeType":"ElementaryTypeName","src":"11264:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4910,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11259:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11259:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11272:3:24","memberName":"max","nodeType":"MemberAccess","src":"11259:16:24","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11250:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":4916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11277:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":4908,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11242:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11242:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4918,"nodeType":"ExpressionStatement","src":"11242:76:24"},{"expression":{"arguments":[{"id":4921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4903,"src":"11342:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11335:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4919,"name":"uint96","nodeType":"ElementaryTypeName","src":"11335:6:24","typeDescriptions":{}}},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4907,"id":4923,"nodeType":"Return","src":"11328:20:24"}]},"documentation":{"id":4901,"nodeType":"StructuredDocumentation","src":"10849:314:24","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.2._"},"id":4925,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11177:8:24","nodeType":"FunctionDefinition","parameters":{"id":4904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4903,"mutability":"mutable","name":"value","nameLocation":"11194:5:24","nodeType":"VariableDeclaration","scope":4925,"src":"11186:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4902,"name":"uint256","nodeType":"ElementaryTypeName","src":"11186:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11185:15:24"},"returnParameters":{"id":4907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4925,"src":"11224:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4905,"name":"uint96","nodeType":"ElementaryTypeName","src":"11224:6:24","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11223:8:24"},"scope":5963,"src":"11168:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4949,"nodeType":"Block","src":"11744:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"11762:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11776:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4936,"name":"uint88","nodeType":"ElementaryTypeName","src":"11776:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4935,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11771:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11771:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11784:3:24","memberName":"max","nodeType":"MemberAccess","src":"11771:16:24","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11762:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":4941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11789:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":4933,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11754:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11754:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4943,"nodeType":"ExpressionStatement","src":"11754:76:24"},{"expression":{"arguments":[{"id":4946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"11854:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4944,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:24","typeDescriptions":{}}},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4932,"id":4948,"nodeType":"Return","src":"11840:20:24"}]},"documentation":{"id":4926,"nodeType":"StructuredDocumentation","src":"11361:314:24","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":4950,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11689:8:24","nodeType":"FunctionDefinition","parameters":{"id":4929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4928,"mutability":"mutable","name":"value","nameLocation":"11706:5:24","nodeType":"VariableDeclaration","scope":4950,"src":"11698:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4927,"name":"uint256","nodeType":"ElementaryTypeName","src":"11698:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11697:15:24"},"returnParameters":{"id":4932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4950,"src":"11736:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4930,"name":"uint88","nodeType":"ElementaryTypeName","src":"11736:6:24","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11735:8:24"},"scope":5963,"src":"11680:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4974,"nodeType":"Block","src":"12256:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"12274:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12288:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4961,"name":"uint80","nodeType":"ElementaryTypeName","src":"12288:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4960,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12283:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":4964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12296:3:24","memberName":"max","nodeType":"MemberAccess","src":"12283:16:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12274:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":4966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12301:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":4958,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12266:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12266:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4968,"nodeType":"ExpressionStatement","src":"12266:76:24"},{"expression":{"arguments":[{"id":4971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"12366:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12359:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4969,"name":"uint80","nodeType":"ElementaryTypeName","src":"12359:6:24","typeDescriptions":{}}},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12359:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4957,"id":4973,"nodeType":"Return","src":"12352:20:24"}]},"documentation":{"id":4951,"nodeType":"StructuredDocumentation","src":"11873:314:24","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":4975,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12201:8:24","nodeType":"FunctionDefinition","parameters":{"id":4954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4953,"mutability":"mutable","name":"value","nameLocation":"12218:5:24","nodeType":"VariableDeclaration","scope":4975,"src":"12210:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4952,"name":"uint256","nodeType":"ElementaryTypeName","src":"12210:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:15:24"},"returnParameters":{"id":4957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4975,"src":"12248:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4955,"name":"uint80","nodeType":"ElementaryTypeName","src":"12248:6:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12247:8:24"},"scope":5963,"src":"12192:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4999,"nodeType":"Block","src":"12768:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"12786:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12800:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4986,"name":"uint72","nodeType":"ElementaryTypeName","src":"12800:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":4985,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12795:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12795:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":4989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12808:3:24","memberName":"max","nodeType":"MemberAccess","src":"12795:16:24","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12786:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":4991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12813:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":4983,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12778:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12778:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4993,"nodeType":"ExpressionStatement","src":"12778:76:24"},{"expression":{"arguments":[{"id":4996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"12878:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12871:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4994,"name":"uint72","nodeType":"ElementaryTypeName","src":"12871:6:24","typeDescriptions":{}}},"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12871:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":4982,"id":4998,"nodeType":"Return","src":"12864:20:24"}]},"documentation":{"id":4976,"nodeType":"StructuredDocumentation","src":"12385:314:24","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":5000,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12713:8:24","nodeType":"FunctionDefinition","parameters":{"id":4979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4978,"mutability":"mutable","name":"value","nameLocation":"12730:5:24","nodeType":"VariableDeclaration","scope":5000,"src":"12722:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4977,"name":"uint256","nodeType":"ElementaryTypeName","src":"12722:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12721:15:24"},"returnParameters":{"id":4982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5000,"src":"12760:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":4980,"name":"uint72","nodeType":"ElementaryTypeName","src":"12760:6:24","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12759:8:24"},"scope":5963,"src":"12704:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5024,"nodeType":"Block","src":"13280:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"13298:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13312:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5011,"name":"uint64","nodeType":"ElementaryTypeName","src":"13312:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5010,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13307:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13307:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13320:3:24","memberName":"max","nodeType":"MemberAccess","src":"13307:16:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13298:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":5016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13325:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":5008,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13290:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13290:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5018,"nodeType":"ExpressionStatement","src":"13290:76:24"},{"expression":{"arguments":[{"id":5021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"13390:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13383:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5019,"name":"uint64","nodeType":"ElementaryTypeName","src":"13383:6:24","typeDescriptions":{}}},"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13383:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5007,"id":5023,"nodeType":"Return","src":"13376:20:24"}]},"documentation":{"id":5001,"nodeType":"StructuredDocumentation","src":"12897:314:24","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v2.5._"},"id":5025,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13225:8:24","nodeType":"FunctionDefinition","parameters":{"id":5004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5003,"mutability":"mutable","name":"value","nameLocation":"13242:5:24","nodeType":"VariableDeclaration","scope":5025,"src":"13234:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5002,"name":"uint256","nodeType":"ElementaryTypeName","src":"13234:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13233:15:24"},"returnParameters":{"id":5007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5025,"src":"13272:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5005,"name":"uint64","nodeType":"ElementaryTypeName","src":"13272:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13271:8:24"},"scope":5963,"src":"13216:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5049,"nodeType":"Block","src":"13792:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"13810:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13824:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5036,"name":"uint56","nodeType":"ElementaryTypeName","src":"13824:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5035,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13819:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13819:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13832:3:24","memberName":"max","nodeType":"MemberAccess","src":"13819:16:24","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13810:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":5041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13837:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":5033,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13802:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13802:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5043,"nodeType":"ExpressionStatement","src":"13802:76:24"},{"expression":{"arguments":[{"id":5046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"13902:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13895:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5044,"name":"uint56","nodeType":"ElementaryTypeName","src":"13895:6:24","typeDescriptions":{}}},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13895:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5032,"id":5048,"nodeType":"Return","src":"13888:20:24"}]},"documentation":{"id":5026,"nodeType":"StructuredDocumentation","src":"13409:314:24","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":5050,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13737:8:24","nodeType":"FunctionDefinition","parameters":{"id":5029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5028,"mutability":"mutable","name":"value","nameLocation":"13754:5:24","nodeType":"VariableDeclaration","scope":5050,"src":"13746:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5027,"name":"uint256","nodeType":"ElementaryTypeName","src":"13746:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13745:15:24"},"returnParameters":{"id":5032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5050,"src":"13784:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5030,"name":"uint56","nodeType":"ElementaryTypeName","src":"13784:6:24","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13783:8:24"},"scope":5963,"src":"13728:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5074,"nodeType":"Block","src":"14304:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"14322:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14336:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5061,"name":"uint48","nodeType":"ElementaryTypeName","src":"14336:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5060,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14331:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14331:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14344:3:24","memberName":"max","nodeType":"MemberAccess","src":"14331:16:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14322:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":5066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14349:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":5058,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14314:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14314:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5068,"nodeType":"ExpressionStatement","src":"14314:76:24"},{"expression":{"arguments":[{"id":5071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"14414:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14407:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5069,"name":"uint48","nodeType":"ElementaryTypeName","src":"14407:6:24","typeDescriptions":{}}},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14407:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5057,"id":5073,"nodeType":"Return","src":"14400:20:24"}]},"documentation":{"id":5051,"nodeType":"StructuredDocumentation","src":"13921:314:24","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":5075,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14249:8:24","nodeType":"FunctionDefinition","parameters":{"id":5054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5053,"mutability":"mutable","name":"value","nameLocation":"14266:5:24","nodeType":"VariableDeclaration","scope":5075,"src":"14258:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5052,"name":"uint256","nodeType":"ElementaryTypeName","src":"14258:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14257:15:24"},"returnParameters":{"id":5057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5075,"src":"14296:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5055,"name":"uint48","nodeType":"ElementaryTypeName","src":"14296:6:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14295:8:24"},"scope":5963,"src":"14240:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5099,"nodeType":"Block","src":"14816:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"14834:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14848:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5086,"name":"uint40","nodeType":"ElementaryTypeName","src":"14848:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5085,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14843:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14843:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14856:3:24","memberName":"max","nodeType":"MemberAccess","src":"14843:16:24","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14834:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":5091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14861:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":5083,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14826:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14826:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5093,"nodeType":"ExpressionStatement","src":"14826:76:24"},{"expression":{"arguments":[{"id":5096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"14926:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14919:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5094,"name":"uint40","nodeType":"ElementaryTypeName","src":"14919:6:24","typeDescriptions":{}}},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14919:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5082,"id":5098,"nodeType":"Return","src":"14912:20:24"}]},"documentation":{"id":5076,"nodeType":"StructuredDocumentation","src":"14433:314:24","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":5100,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14761:8:24","nodeType":"FunctionDefinition","parameters":{"id":5079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5078,"mutability":"mutable","name":"value","nameLocation":"14778:5:24","nodeType":"VariableDeclaration","scope":5100,"src":"14770:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5077,"name":"uint256","nodeType":"ElementaryTypeName","src":"14770:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14769:15:24"},"returnParameters":{"id":5082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5100,"src":"14808:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5080,"name":"uint40","nodeType":"ElementaryTypeName","src":"14808:6:24","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14807:8:24"},"scope":5963,"src":"14752:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5124,"nodeType":"Block","src":"15328:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"15346:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15360:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5111,"name":"uint32","nodeType":"ElementaryTypeName","src":"15360:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5110,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15355:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15355:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15368:3:24","memberName":"max","nodeType":"MemberAccess","src":"15355:16:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15346:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":5116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15373:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":5108,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15338:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15338:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5118,"nodeType":"ExpressionStatement","src":"15338:76:24"},{"expression":{"arguments":[{"id":5121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"15438:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15431:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5119,"name":"uint32","nodeType":"ElementaryTypeName","src":"15431:6:24","typeDescriptions":{}}},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15431:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5107,"id":5123,"nodeType":"Return","src":"15424:20:24"}]},"documentation":{"id":5101,"nodeType":"StructuredDocumentation","src":"14945:314:24","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v2.5._"},"id":5125,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15273:8:24","nodeType":"FunctionDefinition","parameters":{"id":5104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5103,"mutability":"mutable","name":"value","nameLocation":"15290:5:24","nodeType":"VariableDeclaration","scope":5125,"src":"15282:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5102,"name":"uint256","nodeType":"ElementaryTypeName","src":"15282:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15281:15:24"},"returnParameters":{"id":5107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5125,"src":"15320:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5105,"name":"uint32","nodeType":"ElementaryTypeName","src":"15320:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15319:8:24"},"scope":5963,"src":"15264:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5149,"nodeType":"Block","src":"15840:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"15858:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15872:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5136,"name":"uint24","nodeType":"ElementaryTypeName","src":"15872:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5135,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15867:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15867:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15880:3:24","memberName":"max","nodeType":"MemberAccess","src":"15867:16:24","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15858:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":5141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15885:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":5133,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15850:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15850:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5143,"nodeType":"ExpressionStatement","src":"15850:76:24"},{"expression":{"arguments":[{"id":5146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"15950:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15943:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5144,"name":"uint24","nodeType":"ElementaryTypeName","src":"15943:6:24","typeDescriptions":{}}},"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15943:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5132,"id":5148,"nodeType":"Return","src":"15936:20:24"}]},"documentation":{"id":5126,"nodeType":"StructuredDocumentation","src":"15457:314:24","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":5150,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15785:8:24","nodeType":"FunctionDefinition","parameters":{"id":5129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5128,"mutability":"mutable","name":"value","nameLocation":"15802:5:24","nodeType":"VariableDeclaration","scope":5150,"src":"15794:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5127,"name":"uint256","nodeType":"ElementaryTypeName","src":"15794:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15793:15:24"},"returnParameters":{"id":5132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5150,"src":"15832:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5130,"name":"uint24","nodeType":"ElementaryTypeName","src":"15832:6:24","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15831:8:24"},"scope":5963,"src":"15776:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5174,"nodeType":"Block","src":"16352:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"16370:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16384:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5161,"name":"uint16","nodeType":"ElementaryTypeName","src":"16384:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5160,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16379:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16379:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16392:3:24","memberName":"max","nodeType":"MemberAccess","src":"16379:16:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16370:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":5166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16397:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":5158,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16362:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16362:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5168,"nodeType":"ExpressionStatement","src":"16362:76:24"},{"expression":{"arguments":[{"id":5171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"16462:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16455:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5169,"name":"uint16","nodeType":"ElementaryTypeName","src":"16455:6:24","typeDescriptions":{}}},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16455:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5157,"id":5173,"nodeType":"Return","src":"16448:20:24"}]},"documentation":{"id":5151,"nodeType":"StructuredDocumentation","src":"15969:314:24","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v2.5._"},"id":5175,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16297:8:24","nodeType":"FunctionDefinition","parameters":{"id":5154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5153,"mutability":"mutable","name":"value","nameLocation":"16314:5:24","nodeType":"VariableDeclaration","scope":5175,"src":"16306:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5152,"name":"uint256","nodeType":"ElementaryTypeName","src":"16306:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16305:15:24"},"returnParameters":{"id":5157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5175,"src":"16344:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5155,"name":"uint16","nodeType":"ElementaryTypeName","src":"16344:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16343:8:24"},"scope":5963,"src":"16288:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5199,"nodeType":"Block","src":"16858:120:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"16876:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16890:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5186,"name":"uint8","nodeType":"ElementaryTypeName","src":"16890:5:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5185,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16885:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16885:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16897:3:24","memberName":"max","nodeType":"MemberAccess","src":"16885:15:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16876:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":5191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16902:39:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":5183,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16868:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16868:74:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5193,"nodeType":"ExpressionStatement","src":"16868:74:24"},{"expression":{"arguments":[{"id":5196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"16965:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16959:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5194,"name":"uint8","nodeType":"ElementaryTypeName","src":"16959:5:24","typeDescriptions":{}}},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16959:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5182,"id":5198,"nodeType":"Return","src":"16952:19:24"}]},"documentation":{"id":5176,"nodeType":"StructuredDocumentation","src":"16481:310:24","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v2.5._"},"id":5200,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16805:7:24","nodeType":"FunctionDefinition","parameters":{"id":5179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5178,"mutability":"mutable","name":"value","nameLocation":"16821:5:24","nodeType":"VariableDeclaration","scope":5200,"src":"16813:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5177,"name":"uint256","nodeType":"ElementaryTypeName","src":"16813:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16812:15:24"},"returnParameters":{"id":5182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5200,"src":"16851:5:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5180,"name":"uint8","nodeType":"ElementaryTypeName","src":"16851:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16850:7:24"},"scope":5963,"src":"16796:182:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5220,"nodeType":"Block","src":"17252:103:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"17270:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":5210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17279:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17270:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":5212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17282:34:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":5208,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17262:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17262:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5214,"nodeType":"ExpressionStatement","src":"17262:55:24"},{"expression":{"arguments":[{"id":5217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"17342:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17334:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5215,"name":"uint256","nodeType":"ElementaryTypeName","src":"17334:7:24","typeDescriptions":{}}},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17334:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5207,"id":5219,"nodeType":"Return","src":"17327:21:24"}]},"documentation":{"id":5201,"nodeType":"StructuredDocumentation","src":"16984:198:24","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0.\n _Available since v3.0._"},"id":5221,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17196:9:24","nodeType":"FunctionDefinition","parameters":{"id":5204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5203,"mutability":"mutable","name":"value","nameLocation":"17213:5:24","nodeType":"VariableDeclaration","scope":5221,"src":"17206:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5202,"name":"int256","nodeType":"ElementaryTypeName","src":"17206:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17205:14:24"},"returnParameters":{"id":5207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5221,"src":"17243:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5205,"name":"uint256","nodeType":"ElementaryTypeName","src":"17243:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17242:9:24"},"scope":5963,"src":"17187:168:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5243,"nodeType":"Block","src":"17790:124:24","statements":[{"expression":{"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5229,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"17800:10:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5224,"src":"17820:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17813:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5230,"name":"int248","nodeType":"ElementaryTypeName","src":"17813:6:24","typeDescriptions":{}}},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17813:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17800:26:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5235,"nodeType":"ExpressionStatement","src":"17800:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5237,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"17844:10:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5224,"src":"17858:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17844:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":5240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17865:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":5236,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17836:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17836:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5242,"nodeType":"ExpressionStatement","src":"17836:71:24"}]},"documentation":{"id":5222,"nodeType":"StructuredDocumentation","src":"17361:350:24","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":5244,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17725:8:24","nodeType":"FunctionDefinition","parameters":{"id":5225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5224,"mutability":"mutable","name":"value","nameLocation":"17741:5:24","nodeType":"VariableDeclaration","scope":5244,"src":"17734:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5223,"name":"int256","nodeType":"ElementaryTypeName","src":"17734:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17733:14:24"},"returnParameters":{"id":5228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5227,"mutability":"mutable","name":"downcasted","nameLocation":"17778:10:24","nodeType":"VariableDeclaration","scope":5244,"src":"17771:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5226,"name":"int248","nodeType":"ElementaryTypeName","src":"17771:6:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17770:19:24"},"scope":5963,"src":"17716:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5266,"nodeType":"Block","src":"18349:124:24","statements":[{"expression":{"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5252,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"18359:10:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"18379:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18372:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5253,"name":"int240","nodeType":"ElementaryTypeName","src":"18372:6:24","typeDescriptions":{}}},"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18372:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18359:26:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5258,"nodeType":"ExpressionStatement","src":"18359:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5260,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"18403:10:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"18417:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18403:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":5263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18424:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":5259,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18395:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18395:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5265,"nodeType":"ExpressionStatement","src":"18395:71:24"}]},"documentation":{"id":5245,"nodeType":"StructuredDocumentation","src":"17920:350:24","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":5267,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18284:8:24","nodeType":"FunctionDefinition","parameters":{"id":5248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5247,"mutability":"mutable","name":"value","nameLocation":"18300:5:24","nodeType":"VariableDeclaration","scope":5267,"src":"18293:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5246,"name":"int256","nodeType":"ElementaryTypeName","src":"18293:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18292:14:24"},"returnParameters":{"id":5251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5250,"mutability":"mutable","name":"downcasted","nameLocation":"18337:10:24","nodeType":"VariableDeclaration","scope":5267,"src":"18330:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5249,"name":"int240","nodeType":"ElementaryTypeName","src":"18330:6:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18329:19:24"},"scope":5963,"src":"18275:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5289,"nodeType":"Block","src":"18908:124:24","statements":[{"expression":{"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5275,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"18918:10:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"18938:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18931:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5276,"name":"int232","nodeType":"ElementaryTypeName","src":"18931:6:24","typeDescriptions":{}}},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18931:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18918:26:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5281,"nodeType":"ExpressionStatement","src":"18918:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5283,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"18962:10:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"18976:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18962:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":5286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18983:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":5282,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18954:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18954:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5288,"nodeType":"ExpressionStatement","src":"18954:71:24"}]},"documentation":{"id":5268,"nodeType":"StructuredDocumentation","src":"18479:350:24","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":5290,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18843:8:24","nodeType":"FunctionDefinition","parameters":{"id":5271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5270,"mutability":"mutable","name":"value","nameLocation":"18859:5:24","nodeType":"VariableDeclaration","scope":5290,"src":"18852:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5269,"name":"int256","nodeType":"ElementaryTypeName","src":"18852:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18851:14:24"},"returnParameters":{"id":5274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5273,"mutability":"mutable","name":"downcasted","nameLocation":"18896:10:24","nodeType":"VariableDeclaration","scope":5290,"src":"18889:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5272,"name":"int232","nodeType":"ElementaryTypeName","src":"18889:6:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18888:19:24"},"scope":5963,"src":"18834:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5312,"nodeType":"Block","src":"19467:124:24","statements":[{"expression":{"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5298,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"19477:10:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5293,"src":"19497:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19490:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5299,"name":"int224","nodeType":"ElementaryTypeName","src":"19490:6:24","typeDescriptions":{}}},"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19490:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19477:26:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5304,"nodeType":"ExpressionStatement","src":"19477:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5306,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"19521:10:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5293,"src":"19535:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19521:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":5309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19542:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":5305,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19513:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19513:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5311,"nodeType":"ExpressionStatement","src":"19513:71:24"}]},"documentation":{"id":5291,"nodeType":"StructuredDocumentation","src":"19038:350:24","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.7._"},"id":5313,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19402:8:24","nodeType":"FunctionDefinition","parameters":{"id":5294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5293,"mutability":"mutable","name":"value","nameLocation":"19418:5:24","nodeType":"VariableDeclaration","scope":5313,"src":"19411:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5292,"name":"int256","nodeType":"ElementaryTypeName","src":"19411:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19410:14:24"},"returnParameters":{"id":5297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5296,"mutability":"mutable","name":"downcasted","nameLocation":"19455:10:24","nodeType":"VariableDeclaration","scope":5313,"src":"19448:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5295,"name":"int224","nodeType":"ElementaryTypeName","src":"19448:6:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19447:19:24"},"scope":5963,"src":"19393:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5335,"nodeType":"Block","src":"20026:124:24","statements":[{"expression":{"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5321,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5319,"src":"20036:10:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5316,"src":"20056:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20049:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5322,"name":"int216","nodeType":"ElementaryTypeName","src":"20049:6:24","typeDescriptions":{}}},"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20049:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20036:26:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5327,"nodeType":"ExpressionStatement","src":"20036:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5329,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5319,"src":"20080:10:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5316,"src":"20094:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20080:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":5332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20101:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":5328,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20072:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20072:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5334,"nodeType":"ExpressionStatement","src":"20072:71:24"}]},"documentation":{"id":5314,"nodeType":"StructuredDocumentation","src":"19597:350:24","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":5336,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19961:8:24","nodeType":"FunctionDefinition","parameters":{"id":5317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5316,"mutability":"mutable","name":"value","nameLocation":"19977:5:24","nodeType":"VariableDeclaration","scope":5336,"src":"19970:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5315,"name":"int256","nodeType":"ElementaryTypeName","src":"19970:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19969:14:24"},"returnParameters":{"id":5320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5319,"mutability":"mutable","name":"downcasted","nameLocation":"20014:10:24","nodeType":"VariableDeclaration","scope":5336,"src":"20007:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5318,"name":"int216","nodeType":"ElementaryTypeName","src":"20007:6:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"20006:19:24"},"scope":5963,"src":"19952:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5358,"nodeType":"Block","src":"20585:124:24","statements":[{"expression":{"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5344,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5342,"src":"20595:10:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"20615:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20608:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5345,"name":"int208","nodeType":"ElementaryTypeName","src":"20608:6:24","typeDescriptions":{}}},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20608:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20595:26:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5350,"nodeType":"ExpressionStatement","src":"20595:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5352,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5342,"src":"20639:10:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"20653:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20639:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":5355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20660:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":5351,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20631:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20631:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5357,"nodeType":"ExpressionStatement","src":"20631:71:24"}]},"documentation":{"id":5337,"nodeType":"StructuredDocumentation","src":"20156:350:24","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":5359,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20520:8:24","nodeType":"FunctionDefinition","parameters":{"id":5340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5339,"mutability":"mutable","name":"value","nameLocation":"20536:5:24","nodeType":"VariableDeclaration","scope":5359,"src":"20529:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5338,"name":"int256","nodeType":"ElementaryTypeName","src":"20529:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20528:14:24"},"returnParameters":{"id":5343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5342,"mutability":"mutable","name":"downcasted","nameLocation":"20573:10:24","nodeType":"VariableDeclaration","scope":5359,"src":"20566:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5341,"name":"int208","nodeType":"ElementaryTypeName","src":"20566:6:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20565:19:24"},"scope":5963,"src":"20511:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5381,"nodeType":"Block","src":"21144:124:24","statements":[{"expression":{"id":5372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5367,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"21154:10:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"21174:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21167:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5368,"name":"int200","nodeType":"ElementaryTypeName","src":"21167:6:24","typeDescriptions":{}}},"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21167:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21154:26:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5373,"nodeType":"ExpressionStatement","src":"21154:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5375,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"21198:10:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"21212:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21198:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":5378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21219:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":5374,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21190:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21190:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5380,"nodeType":"ExpressionStatement","src":"21190:71:24"}]},"documentation":{"id":5360,"nodeType":"StructuredDocumentation","src":"20715:350:24","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":5382,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21079:8:24","nodeType":"FunctionDefinition","parameters":{"id":5363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5362,"mutability":"mutable","name":"value","nameLocation":"21095:5:24","nodeType":"VariableDeclaration","scope":5382,"src":"21088:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5361,"name":"int256","nodeType":"ElementaryTypeName","src":"21088:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21087:14:24"},"returnParameters":{"id":5366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5365,"mutability":"mutable","name":"downcasted","nameLocation":"21132:10:24","nodeType":"VariableDeclaration","scope":5382,"src":"21125:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5364,"name":"int200","nodeType":"ElementaryTypeName","src":"21125:6:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21124:19:24"},"scope":5963,"src":"21070:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5404,"nodeType":"Block","src":"21703:124:24","statements":[{"expression":{"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5390,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"21713:10:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5385,"src":"21733:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21726:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5391,"name":"int192","nodeType":"ElementaryTypeName","src":"21726:6:24","typeDescriptions":{}}},"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21726:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21713:26:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5396,"nodeType":"ExpressionStatement","src":"21713:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5398,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"21757:10:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5385,"src":"21771:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21757:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":5401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21778:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":5397,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21749:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21749:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5403,"nodeType":"ExpressionStatement","src":"21749:71:24"}]},"documentation":{"id":5383,"nodeType":"StructuredDocumentation","src":"21274:350:24","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":5405,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21638:8:24","nodeType":"FunctionDefinition","parameters":{"id":5386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5385,"mutability":"mutable","name":"value","nameLocation":"21654:5:24","nodeType":"VariableDeclaration","scope":5405,"src":"21647:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5384,"name":"int256","nodeType":"ElementaryTypeName","src":"21647:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21646:14:24"},"returnParameters":{"id":5389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5388,"mutability":"mutable","name":"downcasted","nameLocation":"21691:10:24","nodeType":"VariableDeclaration","scope":5405,"src":"21684:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5387,"name":"int192","nodeType":"ElementaryTypeName","src":"21684:6:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21683:19:24"},"scope":5963,"src":"21629:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5427,"nodeType":"Block","src":"22262:124:24","statements":[{"expression":{"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5413,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"22272:10:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"22292:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22285:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5414,"name":"int184","nodeType":"ElementaryTypeName","src":"22285:6:24","typeDescriptions":{}}},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22285:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22272:26:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5419,"nodeType":"ExpressionStatement","src":"22272:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5421,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"22316:10:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"22330:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22316:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":5424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22337:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":5420,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22308:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22308:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5426,"nodeType":"ExpressionStatement","src":"22308:71:24"}]},"documentation":{"id":5406,"nodeType":"StructuredDocumentation","src":"21833:350:24","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":5428,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22197:8:24","nodeType":"FunctionDefinition","parameters":{"id":5409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5408,"mutability":"mutable","name":"value","nameLocation":"22213:5:24","nodeType":"VariableDeclaration","scope":5428,"src":"22206:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5407,"name":"int256","nodeType":"ElementaryTypeName","src":"22206:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22205:14:24"},"returnParameters":{"id":5412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5411,"mutability":"mutable","name":"downcasted","nameLocation":"22250:10:24","nodeType":"VariableDeclaration","scope":5428,"src":"22243:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5410,"name":"int184","nodeType":"ElementaryTypeName","src":"22243:6:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22242:19:24"},"scope":5963,"src":"22188:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5450,"nodeType":"Block","src":"22821:124:24","statements":[{"expression":{"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5436,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5434,"src":"22831:10:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5431,"src":"22851:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22844:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5437,"name":"int176","nodeType":"ElementaryTypeName","src":"22844:6:24","typeDescriptions":{}}},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22844:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22831:26:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5442,"nodeType":"ExpressionStatement","src":"22831:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5444,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5434,"src":"22875:10:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5431,"src":"22889:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22875:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":5447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22896:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":5443,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22867:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22867:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5449,"nodeType":"ExpressionStatement","src":"22867:71:24"}]},"documentation":{"id":5429,"nodeType":"StructuredDocumentation","src":"22392:350:24","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":5451,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22756:8:24","nodeType":"FunctionDefinition","parameters":{"id":5432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5431,"mutability":"mutable","name":"value","nameLocation":"22772:5:24","nodeType":"VariableDeclaration","scope":5451,"src":"22765:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5430,"name":"int256","nodeType":"ElementaryTypeName","src":"22765:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22764:14:24"},"returnParameters":{"id":5435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5434,"mutability":"mutable","name":"downcasted","nameLocation":"22809:10:24","nodeType":"VariableDeclaration","scope":5451,"src":"22802:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5433,"name":"int176","nodeType":"ElementaryTypeName","src":"22802:6:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22801:19:24"},"scope":5963,"src":"22747:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5473,"nodeType":"Block","src":"23380:124:24","statements":[{"expression":{"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5459,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"23390:10:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"23410:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23403:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5460,"name":"int168","nodeType":"ElementaryTypeName","src":"23403:6:24","typeDescriptions":{}}},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23403:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23390:26:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5465,"nodeType":"ExpressionStatement","src":"23390:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5467,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"23434:10:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"23448:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23434:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":5470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23455:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":5466,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23426:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23426:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5472,"nodeType":"ExpressionStatement","src":"23426:71:24"}]},"documentation":{"id":5452,"nodeType":"StructuredDocumentation","src":"22951:350:24","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":5474,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23315:8:24","nodeType":"FunctionDefinition","parameters":{"id":5455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5454,"mutability":"mutable","name":"value","nameLocation":"23331:5:24","nodeType":"VariableDeclaration","scope":5474,"src":"23324:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5453,"name":"int256","nodeType":"ElementaryTypeName","src":"23324:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23323:14:24"},"returnParameters":{"id":5458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5457,"mutability":"mutable","name":"downcasted","nameLocation":"23368:10:24","nodeType":"VariableDeclaration","scope":5474,"src":"23361:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5456,"name":"int168","nodeType":"ElementaryTypeName","src":"23361:6:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23360:19:24"},"scope":5963,"src":"23306:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5496,"nodeType":"Block","src":"23939:124:24","statements":[{"expression":{"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5482,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5480,"src":"23949:10:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"23969:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23962:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5483,"name":"int160","nodeType":"ElementaryTypeName","src":"23962:6:24","typeDescriptions":{}}},"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23962:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23949:26:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5488,"nodeType":"ExpressionStatement","src":"23949:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5490,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5480,"src":"23993:10:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"24007:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23993:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":5493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24014:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":5489,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23985:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23985:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5495,"nodeType":"ExpressionStatement","src":"23985:71:24"}]},"documentation":{"id":5475,"nodeType":"StructuredDocumentation","src":"23510:350:24","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":5497,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23874:8:24","nodeType":"FunctionDefinition","parameters":{"id":5478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5477,"mutability":"mutable","name":"value","nameLocation":"23890:5:24","nodeType":"VariableDeclaration","scope":5497,"src":"23883:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5476,"name":"int256","nodeType":"ElementaryTypeName","src":"23883:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23882:14:24"},"returnParameters":{"id":5481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5480,"mutability":"mutable","name":"downcasted","nameLocation":"23927:10:24","nodeType":"VariableDeclaration","scope":5497,"src":"23920:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5479,"name":"int160","nodeType":"ElementaryTypeName","src":"23920:6:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23919:19:24"},"scope":5963,"src":"23865:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5519,"nodeType":"Block","src":"24498:124:24","statements":[{"expression":{"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5505,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"24508:10:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"24528:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24521:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5506,"name":"int152","nodeType":"ElementaryTypeName","src":"24521:6:24","typeDescriptions":{}}},"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24521:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24508:26:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5511,"nodeType":"ExpressionStatement","src":"24508:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5513,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"24552:10:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"24566:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24552:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":5516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24573:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":5512,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24544:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24544:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5518,"nodeType":"ExpressionStatement","src":"24544:71:24"}]},"documentation":{"id":5498,"nodeType":"StructuredDocumentation","src":"24069:350:24","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":5520,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24433:8:24","nodeType":"FunctionDefinition","parameters":{"id":5501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5500,"mutability":"mutable","name":"value","nameLocation":"24449:5:24","nodeType":"VariableDeclaration","scope":5520,"src":"24442:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5499,"name":"int256","nodeType":"ElementaryTypeName","src":"24442:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24441:14:24"},"returnParameters":{"id":5504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5503,"mutability":"mutable","name":"downcasted","nameLocation":"24486:10:24","nodeType":"VariableDeclaration","scope":5520,"src":"24479:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5502,"name":"int152","nodeType":"ElementaryTypeName","src":"24479:6:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24478:19:24"},"scope":5963,"src":"24424:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5542,"nodeType":"Block","src":"25057:124:24","statements":[{"expression":{"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5528,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"25067:10:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5523,"src":"25087:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25080:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5529,"name":"int144","nodeType":"ElementaryTypeName","src":"25080:6:24","typeDescriptions":{}}},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25080:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25067:26:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5534,"nodeType":"ExpressionStatement","src":"25067:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5536,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"25111:10:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5523,"src":"25125:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25111:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":5539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25132:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":5535,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25103:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25103:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5541,"nodeType":"ExpressionStatement","src":"25103:71:24"}]},"documentation":{"id":5521,"nodeType":"StructuredDocumentation","src":"24628:350:24","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":5543,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24992:8:24","nodeType":"FunctionDefinition","parameters":{"id":5524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5523,"mutability":"mutable","name":"value","nameLocation":"25008:5:24","nodeType":"VariableDeclaration","scope":5543,"src":"25001:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5522,"name":"int256","nodeType":"ElementaryTypeName","src":"25001:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25000:14:24"},"returnParameters":{"id":5527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5526,"mutability":"mutable","name":"downcasted","nameLocation":"25045:10:24","nodeType":"VariableDeclaration","scope":5543,"src":"25038:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5525,"name":"int144","nodeType":"ElementaryTypeName","src":"25038:6:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25037:19:24"},"scope":5963,"src":"24983:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5565,"nodeType":"Block","src":"25616:124:24","statements":[{"expression":{"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5551,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"25626:10:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"25646:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25639:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5552,"name":"int136","nodeType":"ElementaryTypeName","src":"25639:6:24","typeDescriptions":{}}},"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25639:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25626:26:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5557,"nodeType":"ExpressionStatement","src":"25626:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5559,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"25670:10:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"25684:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25670:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":5562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25691:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":5558,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25662:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25662:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5564,"nodeType":"ExpressionStatement","src":"25662:71:24"}]},"documentation":{"id":5544,"nodeType":"StructuredDocumentation","src":"25187:350:24","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":5566,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25551:8:24","nodeType":"FunctionDefinition","parameters":{"id":5547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5546,"mutability":"mutable","name":"value","nameLocation":"25567:5:24","nodeType":"VariableDeclaration","scope":5566,"src":"25560:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5545,"name":"int256","nodeType":"ElementaryTypeName","src":"25560:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25559:14:24"},"returnParameters":{"id":5550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5549,"mutability":"mutable","name":"downcasted","nameLocation":"25604:10:24","nodeType":"VariableDeclaration","scope":5566,"src":"25597:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5548,"name":"int136","nodeType":"ElementaryTypeName","src":"25597:6:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25596:19:24"},"scope":5963,"src":"25542:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5588,"nodeType":"Block","src":"26175:124:24","statements":[{"expression":{"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5574,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"26185:10:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"26205:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26198:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5575,"name":"int128","nodeType":"ElementaryTypeName","src":"26198:6:24","typeDescriptions":{}}},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26198:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26185:26:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5580,"nodeType":"ExpressionStatement","src":"26185:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5582,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"26229:10:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"26243:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26229:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":5585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26250:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":5581,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26221:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26221:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5587,"nodeType":"ExpressionStatement","src":"26221:71:24"}]},"documentation":{"id":5567,"nodeType":"StructuredDocumentation","src":"25746:350:24","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":5589,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26110:8:24","nodeType":"FunctionDefinition","parameters":{"id":5570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5569,"mutability":"mutable","name":"value","nameLocation":"26126:5:24","nodeType":"VariableDeclaration","scope":5589,"src":"26119:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5568,"name":"int256","nodeType":"ElementaryTypeName","src":"26119:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26118:14:24"},"returnParameters":{"id":5573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5572,"mutability":"mutable","name":"downcasted","nameLocation":"26163:10:24","nodeType":"VariableDeclaration","scope":5589,"src":"26156:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5571,"name":"int128","nodeType":"ElementaryTypeName","src":"26156:6:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26155:19:24"},"scope":5963,"src":"26101:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5611,"nodeType":"Block","src":"26734:124:24","statements":[{"expression":{"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5597,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"26744:10:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"26764:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26757:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5598,"name":"int120","nodeType":"ElementaryTypeName","src":"26757:6:24","typeDescriptions":{}}},"id":5601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26757:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26744:26:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5603,"nodeType":"ExpressionStatement","src":"26744:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5605,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"26788:10:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"26802:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26788:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":5608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26809:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":5604,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26780:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26780:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5610,"nodeType":"ExpressionStatement","src":"26780:71:24"}]},"documentation":{"id":5590,"nodeType":"StructuredDocumentation","src":"26305:350:24","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":5612,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26669:8:24","nodeType":"FunctionDefinition","parameters":{"id":5593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5592,"mutability":"mutable","name":"value","nameLocation":"26685:5:24","nodeType":"VariableDeclaration","scope":5612,"src":"26678:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5591,"name":"int256","nodeType":"ElementaryTypeName","src":"26678:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26677:14:24"},"returnParameters":{"id":5596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5595,"mutability":"mutable","name":"downcasted","nameLocation":"26722:10:24","nodeType":"VariableDeclaration","scope":5612,"src":"26715:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5594,"name":"int120","nodeType":"ElementaryTypeName","src":"26715:6:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26714:19:24"},"scope":5963,"src":"26660:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5634,"nodeType":"Block","src":"27293:124:24","statements":[{"expression":{"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5620,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5618,"src":"27303:10:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5615,"src":"27323:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27316:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5621,"name":"int112","nodeType":"ElementaryTypeName","src":"27316:6:24","typeDescriptions":{}}},"id":5624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27316:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27303:26:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5626,"nodeType":"ExpressionStatement","src":"27303:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5628,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5618,"src":"27347:10:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5615,"src":"27361:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27347:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":5631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27368:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":5627,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27339:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27339:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5633,"nodeType":"ExpressionStatement","src":"27339:71:24"}]},"documentation":{"id":5613,"nodeType":"StructuredDocumentation","src":"26864:350:24","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":5635,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27228:8:24","nodeType":"FunctionDefinition","parameters":{"id":5616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5615,"mutability":"mutable","name":"value","nameLocation":"27244:5:24","nodeType":"VariableDeclaration","scope":5635,"src":"27237:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5614,"name":"int256","nodeType":"ElementaryTypeName","src":"27237:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27236:14:24"},"returnParameters":{"id":5619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5618,"mutability":"mutable","name":"downcasted","nameLocation":"27281:10:24","nodeType":"VariableDeclaration","scope":5635,"src":"27274:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5617,"name":"int112","nodeType":"ElementaryTypeName","src":"27274:6:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27273:19:24"},"scope":5963,"src":"27219:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5657,"nodeType":"Block","src":"27852:124:24","statements":[{"expression":{"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5643,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5641,"src":"27862:10:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5638,"src":"27882:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27875:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5644,"name":"int104","nodeType":"ElementaryTypeName","src":"27875:6:24","typeDescriptions":{}}},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27875:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27862:26:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5649,"nodeType":"ExpressionStatement","src":"27862:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5651,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5641,"src":"27906:10:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5638,"src":"27920:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27906:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":5654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27927:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":5650,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27898:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27898:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5656,"nodeType":"ExpressionStatement","src":"27898:71:24"}]},"documentation":{"id":5636,"nodeType":"StructuredDocumentation","src":"27423:350:24","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":5658,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27787:8:24","nodeType":"FunctionDefinition","parameters":{"id":5639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5638,"mutability":"mutable","name":"value","nameLocation":"27803:5:24","nodeType":"VariableDeclaration","scope":5658,"src":"27796:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5637,"name":"int256","nodeType":"ElementaryTypeName","src":"27796:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27795:14:24"},"returnParameters":{"id":5642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5641,"mutability":"mutable","name":"downcasted","nameLocation":"27840:10:24","nodeType":"VariableDeclaration","scope":5658,"src":"27833:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5640,"name":"int104","nodeType":"ElementaryTypeName","src":"27833:6:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27832:19:24"},"scope":5963,"src":"27778:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5680,"nodeType":"Block","src":"28404:122:24","statements":[{"expression":{"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5666,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5664,"src":"28414:10:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"28433:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28427:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5667,"name":"int96","nodeType":"ElementaryTypeName","src":"28427:5:24","typeDescriptions":{}}},"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28427:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28414:25:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5672,"nodeType":"ExpressionStatement","src":"28414:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5674,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5664,"src":"28457:10:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"28471:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28457:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":5677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28478:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":5673,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28449:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28449:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5679,"nodeType":"ExpressionStatement","src":"28449:70:24"}]},"documentation":{"id":5659,"nodeType":"StructuredDocumentation","src":"27982:345:24","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.7._"},"id":5681,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28341:7:24","nodeType":"FunctionDefinition","parameters":{"id":5662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5661,"mutability":"mutable","name":"value","nameLocation":"28356:5:24","nodeType":"VariableDeclaration","scope":5681,"src":"28349:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5660,"name":"int256","nodeType":"ElementaryTypeName","src":"28349:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28348:14:24"},"returnParameters":{"id":5665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5664,"mutability":"mutable","name":"downcasted","nameLocation":"28392:10:24","nodeType":"VariableDeclaration","scope":5681,"src":"28386:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5663,"name":"int96","nodeType":"ElementaryTypeName","src":"28386:5:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28385:18:24"},"scope":5963,"src":"28332:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5703,"nodeType":"Block","src":"28954:122:24","statements":[{"expression":{"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5689,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5687,"src":"28964:10:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5684,"src":"28983:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28977:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5690,"name":"int88","nodeType":"ElementaryTypeName","src":"28977:5:24","typeDescriptions":{}}},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28977:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28964:25:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5695,"nodeType":"ExpressionStatement","src":"28964:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5697,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5687,"src":"29007:10:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5684,"src":"29021:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29007:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":5700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29028:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":5696,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28999:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28999:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5702,"nodeType":"ExpressionStatement","src":"28999:70:24"}]},"documentation":{"id":5682,"nodeType":"StructuredDocumentation","src":"28532:345:24","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":5704,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28891:7:24","nodeType":"FunctionDefinition","parameters":{"id":5685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5684,"mutability":"mutable","name":"value","nameLocation":"28906:5:24","nodeType":"VariableDeclaration","scope":5704,"src":"28899:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5683,"name":"int256","nodeType":"ElementaryTypeName","src":"28899:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28898:14:24"},"returnParameters":{"id":5688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5687,"mutability":"mutable","name":"downcasted","nameLocation":"28942:10:24","nodeType":"VariableDeclaration","scope":5704,"src":"28936:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5686,"name":"int88","nodeType":"ElementaryTypeName","src":"28936:5:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28935:18:24"},"scope":5963,"src":"28882:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5726,"nodeType":"Block","src":"29504:122:24","statements":[{"expression":{"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5712,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"29514:10:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"29533:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29527:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5713,"name":"int80","nodeType":"ElementaryTypeName","src":"29527:5:24","typeDescriptions":{}}},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29527:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29514:25:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5718,"nodeType":"ExpressionStatement","src":"29514:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5720,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"29557:10:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"29571:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29557:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":5723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29578:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":5719,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29549:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29549:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5725,"nodeType":"ExpressionStatement","src":"29549:70:24"}]},"documentation":{"id":5705,"nodeType":"StructuredDocumentation","src":"29082:345:24","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":5727,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29441:7:24","nodeType":"FunctionDefinition","parameters":{"id":5708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5707,"mutability":"mutable","name":"value","nameLocation":"29456:5:24","nodeType":"VariableDeclaration","scope":5727,"src":"29449:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5706,"name":"int256","nodeType":"ElementaryTypeName","src":"29449:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29448:14:24"},"returnParameters":{"id":5711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5710,"mutability":"mutable","name":"downcasted","nameLocation":"29492:10:24","nodeType":"VariableDeclaration","scope":5727,"src":"29486:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5709,"name":"int80","nodeType":"ElementaryTypeName","src":"29486:5:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29485:18:24"},"scope":5963,"src":"29432:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5749,"nodeType":"Block","src":"30054:122:24","statements":[{"expression":{"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5735,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"30064:10:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"30083:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30077:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5736,"name":"int72","nodeType":"ElementaryTypeName","src":"30077:5:24","typeDescriptions":{}}},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30077:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30064:25:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5741,"nodeType":"ExpressionStatement","src":"30064:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5743,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"30107:10:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"30121:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30107:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":5746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30128:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":5742,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30099:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30099:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5748,"nodeType":"ExpressionStatement","src":"30099:70:24"}]},"documentation":{"id":5728,"nodeType":"StructuredDocumentation","src":"29632:345:24","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":5750,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29991:7:24","nodeType":"FunctionDefinition","parameters":{"id":5731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5730,"mutability":"mutable","name":"value","nameLocation":"30006:5:24","nodeType":"VariableDeclaration","scope":5750,"src":"29999:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5729,"name":"int256","nodeType":"ElementaryTypeName","src":"29999:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29998:14:24"},"returnParameters":{"id":5734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5733,"mutability":"mutable","name":"downcasted","nameLocation":"30042:10:24","nodeType":"VariableDeclaration","scope":5750,"src":"30036:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5732,"name":"int72","nodeType":"ElementaryTypeName","src":"30036:5:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30035:18:24"},"scope":5963,"src":"29982:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5772,"nodeType":"Block","src":"30604:122:24","statements":[{"expression":{"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5758,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5756,"src":"30614:10:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5753,"src":"30633:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30627:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5759,"name":"int64","nodeType":"ElementaryTypeName","src":"30627:5:24","typeDescriptions":{}}},"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30627:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30614:25:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5764,"nodeType":"ExpressionStatement","src":"30614:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5766,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5756,"src":"30657:10:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5753,"src":"30671:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30657:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":5769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30678:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":5765,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30649:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30649:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5771,"nodeType":"ExpressionStatement","src":"30649:70:24"}]},"documentation":{"id":5751,"nodeType":"StructuredDocumentation","src":"30182:345:24","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":5773,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30541:7:24","nodeType":"FunctionDefinition","parameters":{"id":5754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5753,"mutability":"mutable","name":"value","nameLocation":"30556:5:24","nodeType":"VariableDeclaration","scope":5773,"src":"30549:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5752,"name":"int256","nodeType":"ElementaryTypeName","src":"30549:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30548:14:24"},"returnParameters":{"id":5757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5756,"mutability":"mutable","name":"downcasted","nameLocation":"30592:10:24","nodeType":"VariableDeclaration","scope":5773,"src":"30586:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5755,"name":"int64","nodeType":"ElementaryTypeName","src":"30586:5:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30585:18:24"},"scope":5963,"src":"30532:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5795,"nodeType":"Block","src":"31154:122:24","statements":[{"expression":{"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5781,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5779,"src":"31164:10:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"31183:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31177:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5782,"name":"int56","nodeType":"ElementaryTypeName","src":"31177:5:24","typeDescriptions":{}}},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31177:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31164:25:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5787,"nodeType":"ExpressionStatement","src":"31164:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5789,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5779,"src":"31207:10:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"31221:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31207:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":5792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31228:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":5788,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31199:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31199:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5794,"nodeType":"ExpressionStatement","src":"31199:70:24"}]},"documentation":{"id":5774,"nodeType":"StructuredDocumentation","src":"30732:345:24","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":5796,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31091:7:24","nodeType":"FunctionDefinition","parameters":{"id":5777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5776,"mutability":"mutable","name":"value","nameLocation":"31106:5:24","nodeType":"VariableDeclaration","scope":5796,"src":"31099:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5775,"name":"int256","nodeType":"ElementaryTypeName","src":"31099:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31098:14:24"},"returnParameters":{"id":5780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5779,"mutability":"mutable","name":"downcasted","nameLocation":"31142:10:24","nodeType":"VariableDeclaration","scope":5796,"src":"31136:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5778,"name":"int56","nodeType":"ElementaryTypeName","src":"31136:5:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31135:18:24"},"scope":5963,"src":"31082:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5818,"nodeType":"Block","src":"31704:122:24","statements":[{"expression":{"id":5809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5804,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"31714:10:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5799,"src":"31733:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31727:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5805,"name":"int48","nodeType":"ElementaryTypeName","src":"31727:5:24","typeDescriptions":{}}},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31727:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31714:25:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":5810,"nodeType":"ExpressionStatement","src":"31714:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5812,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"31757:10:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5799,"src":"31771:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31757:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":5815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31778:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":5811,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31749:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31749:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5817,"nodeType":"ExpressionStatement","src":"31749:70:24"}]},"documentation":{"id":5797,"nodeType":"StructuredDocumentation","src":"31282:345:24","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":5819,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31641:7:24","nodeType":"FunctionDefinition","parameters":{"id":5800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5799,"mutability":"mutable","name":"value","nameLocation":"31656:5:24","nodeType":"VariableDeclaration","scope":5819,"src":"31649:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5798,"name":"int256","nodeType":"ElementaryTypeName","src":"31649:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31648:14:24"},"returnParameters":{"id":5803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5802,"mutability":"mutable","name":"downcasted","nameLocation":"31692:10:24","nodeType":"VariableDeclaration","scope":5819,"src":"31686:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5801,"name":"int48","nodeType":"ElementaryTypeName","src":"31686:5:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31685:18:24"},"scope":5963,"src":"31632:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5841,"nodeType":"Block","src":"32254:122:24","statements":[{"expression":{"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5827,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5825,"src":"32264:10:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"32283:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32277:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5828,"name":"int40","nodeType":"ElementaryTypeName","src":"32277:5:24","typeDescriptions":{}}},"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32277:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32264:25:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":5833,"nodeType":"ExpressionStatement","src":"32264:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5835,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5825,"src":"32307:10:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"32321:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32307:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":5838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32328:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":5834,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32299:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32299:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5840,"nodeType":"ExpressionStatement","src":"32299:70:24"}]},"documentation":{"id":5820,"nodeType":"StructuredDocumentation","src":"31832:345:24","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":5842,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32191:7:24","nodeType":"FunctionDefinition","parameters":{"id":5823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5822,"mutability":"mutable","name":"value","nameLocation":"32206:5:24","nodeType":"VariableDeclaration","scope":5842,"src":"32199:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5821,"name":"int256","nodeType":"ElementaryTypeName","src":"32199:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32198:14:24"},"returnParameters":{"id":5826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5825,"mutability":"mutable","name":"downcasted","nameLocation":"32242:10:24","nodeType":"VariableDeclaration","scope":5842,"src":"32236:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5824,"name":"int40","nodeType":"ElementaryTypeName","src":"32236:5:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32235:18:24"},"scope":5963,"src":"32182:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5864,"nodeType":"Block","src":"32804:122:24","statements":[{"expression":{"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5850,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5848,"src":"32814:10:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5845,"src":"32833:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32827:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5851,"name":"int32","nodeType":"ElementaryTypeName","src":"32827:5:24","typeDescriptions":{}}},"id":5854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32827:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32814:25:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5856,"nodeType":"ExpressionStatement","src":"32814:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5858,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5848,"src":"32857:10:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5845,"src":"32871:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32857:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":5861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32878:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":5857,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32849:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32849:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5863,"nodeType":"ExpressionStatement","src":"32849:70:24"}]},"documentation":{"id":5843,"nodeType":"StructuredDocumentation","src":"32382:345:24","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":5865,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32741:7:24","nodeType":"FunctionDefinition","parameters":{"id":5846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5845,"mutability":"mutable","name":"value","nameLocation":"32756:5:24","nodeType":"VariableDeclaration","scope":5865,"src":"32749:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5844,"name":"int256","nodeType":"ElementaryTypeName","src":"32749:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32748:14:24"},"returnParameters":{"id":5849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5848,"mutability":"mutable","name":"downcasted","nameLocation":"32792:10:24","nodeType":"VariableDeclaration","scope":5865,"src":"32786:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5847,"name":"int32","nodeType":"ElementaryTypeName","src":"32786:5:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32785:18:24"},"scope":5963,"src":"32732:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5887,"nodeType":"Block","src":"33354:122:24","statements":[{"expression":{"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5873,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"33364:10:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5868,"src":"33383:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33377:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5874,"name":"int24","nodeType":"ElementaryTypeName","src":"33377:5:24","typeDescriptions":{}}},"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33377:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33364:25:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":5879,"nodeType":"ExpressionStatement","src":"33364:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5881,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"33407:10:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5868,"src":"33421:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33407:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":5884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33428:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":5880,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33399:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33399:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5886,"nodeType":"ExpressionStatement","src":"33399:70:24"}]},"documentation":{"id":5866,"nodeType":"StructuredDocumentation","src":"32932:345:24","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":5888,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"33291:7:24","nodeType":"FunctionDefinition","parameters":{"id":5869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5868,"mutability":"mutable","name":"value","nameLocation":"33306:5:24","nodeType":"VariableDeclaration","scope":5888,"src":"33299:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5867,"name":"int256","nodeType":"ElementaryTypeName","src":"33299:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33298:14:24"},"returnParameters":{"id":5872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5871,"mutability":"mutable","name":"downcasted","nameLocation":"33342:10:24","nodeType":"VariableDeclaration","scope":5888,"src":"33336:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5870,"name":"int24","nodeType":"ElementaryTypeName","src":"33336:5:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"33335:18:24"},"scope":5963,"src":"33282:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5910,"nodeType":"Block","src":"33904:122:24","statements":[{"expression":{"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5896,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"33914:10:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"33933:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33927:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5897,"name":"int16","nodeType":"ElementaryTypeName","src":"33927:5:24","typeDescriptions":{}}},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33927:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33914:25:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":5902,"nodeType":"ExpressionStatement","src":"33914:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5904,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"33957:10:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"33971:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33957:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":5907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33978:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":5903,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33949:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33949:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5909,"nodeType":"ExpressionStatement","src":"33949:70:24"}]},"documentation":{"id":5889,"nodeType":"StructuredDocumentation","src":"33482:345:24","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":5911,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33841:7:24","nodeType":"FunctionDefinition","parameters":{"id":5892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5891,"mutability":"mutable","name":"value","nameLocation":"33856:5:24","nodeType":"VariableDeclaration","scope":5911,"src":"33849:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5890,"name":"int256","nodeType":"ElementaryTypeName","src":"33849:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33848:14:24"},"returnParameters":{"id":5895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5894,"mutability":"mutable","name":"downcasted","nameLocation":"33892:10:24","nodeType":"VariableDeclaration","scope":5911,"src":"33886:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":5893,"name":"int16","nodeType":"ElementaryTypeName","src":"33886:5:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33885:18:24"},"scope":5963,"src":"33832:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5933,"nodeType":"Block","src":"34447:120:24","statements":[{"expression":{"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5919,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5917,"src":"34457:10:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"34475:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34470:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5920,"name":"int8","nodeType":"ElementaryTypeName","src":"34470:4:24","typeDescriptions":{}}},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34470:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34457:24:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":5925,"nodeType":"ExpressionStatement","src":"34457:24:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5927,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5917,"src":"34499:10:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"34513:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34499:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":5930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34520:39:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":5926,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34491:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34491:69:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5932,"nodeType":"ExpressionStatement","src":"34491:69:24"}]},"documentation":{"id":5912,"nodeType":"StructuredDocumentation","src":"34032:340:24","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v3.1._"},"id":5934,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"34386:6:24","nodeType":"FunctionDefinition","parameters":{"id":5915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5914,"mutability":"mutable","name":"value","nameLocation":"34400:5:24","nodeType":"VariableDeclaration","scope":5934,"src":"34393:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5913,"name":"int256","nodeType":"ElementaryTypeName","src":"34393:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34392:14:24"},"returnParameters":{"id":5918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5917,"mutability":"mutable","name":"downcasted","nameLocation":"34435:10:24","nodeType":"VariableDeclaration","scope":5934,"src":"34430:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":5916,"name":"int8","nodeType":"ElementaryTypeName","src":"34430:4:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34429:17:24"},"scope":5963,"src":"34377:190:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5961,"nodeType":"Block","src":"34845:233:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"34962:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":5948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34984:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5947,"name":"int256","nodeType":"ElementaryTypeName","src":"34984:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5946,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34979:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34979:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34992:3:24","memberName":"max","nodeType":"MemberAccess","src":"34979:16:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34971:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5944,"name":"uint256","nodeType":"ElementaryTypeName","src":"34971:7:24","typeDescriptions":{}}},"id":5951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34971:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34962:34:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":5953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34998:42:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":5942,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34954:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34954:87:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5955,"nodeType":"ExpressionStatement","src":"34954:87:24"},{"expression":{"arguments":[{"id":5958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"35065:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35058:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5956,"name":"int256","nodeType":"ElementaryTypeName","src":"35058:6:24","typeDescriptions":{}}},"id":5959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35058:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5941,"id":5960,"nodeType":"Return","src":"35051:20:24"}]},"documentation":{"id":5935,"nodeType":"StructuredDocumentation","src":"34573:203:24","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256.\n _Available since v3.0._"},"id":5962,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34790:8:24","nodeType":"FunctionDefinition","parameters":{"id":5938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5937,"mutability":"mutable","name":"value","nameLocation":"34807:5:24","nodeType":"VariableDeclaration","scope":5962,"src":"34799:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5936,"name":"uint256","nodeType":"ElementaryTypeName","src":"34799:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34798:15:24"},"returnParameters":{"id":5941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5962,"src":"34837:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5939,"name":"int256","nodeType":"ElementaryTypeName","src":"34837:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34836:8:24"},"scope":5963,"src":"34781:297:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5964,"src":"927:34153:24","usedErrors":[],"usedEvents":[]}],"src":"192:34889:24"},"id":24},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[6068]},"id":6069,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5965,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:25"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":5966,"nodeType":"StructuredDocumentation","src":"134:80:25","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6068,"linearizedBaseContracts":[6068],"name":"SignedMath","nameLocation":"223:10:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":5983,"nodeType":"Block","src":"375:37:25","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5976,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"392:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5977,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"396:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5980,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"404:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:25","trueExpression":{"id":5979,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"400:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5975,"id":5982,"nodeType":"Return","src":"385:20:25"}]},"documentation":{"id":5967,"nodeType":"StructuredDocumentation","src":"240:66:25","text":" @dev Returns the largest of two signed numbers."},"id":5984,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:25","nodeType":"FunctionDefinition","parameters":{"id":5972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5969,"mutability":"mutable","name":"a","nameLocation":"331:1:25","nodeType":"VariableDeclaration","scope":5984,"src":"324:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5968,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5971,"mutability":"mutable","name":"b","nameLocation":"341:1:25","nodeType":"VariableDeclaration","scope":5984,"src":"334:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5970,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:25"},"returnParameters":{"id":5975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5984,"src":"367:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5973,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:25"},"scope":6068,"src":"311:101:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6001,"nodeType":"Block","src":"554:37:25","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5994,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"571:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5995,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5989,"src":"575:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5998,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5989,"src":"583:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:25","trueExpression":{"id":5997,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"579:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5993,"id":6000,"nodeType":"Return","src":"564:20:25"}]},"documentation":{"id":5985,"nodeType":"StructuredDocumentation","src":"418:67:25","text":" @dev Returns the smallest of two signed numbers."},"id":6002,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:25","nodeType":"FunctionDefinition","parameters":{"id":5990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5987,"mutability":"mutable","name":"a","nameLocation":"510:1:25","nodeType":"VariableDeclaration","scope":6002,"src":"503:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5986,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5989,"mutability":"mutable","name":"b","nameLocation":"520:1:25","nodeType":"VariableDeclaration","scope":6002,"src":"513:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5988,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:25"},"returnParameters":{"id":5993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6002,"src":"546:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5991,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:25"},"scope":6068,"src":"490:101:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6045,"nodeType":"Block","src":"796:162:25","statements":[{"assignments":[6013],"declarations":[{"constant":false,"id":6013,"mutability":"mutable","name":"x","nameLocation":"865:1:25","nodeType":"VariableDeclaration","scope":6045,"src":"858:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6012,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6026,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6014,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"870:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6015,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"874:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6018,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"881:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6019,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"885:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6021,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6024,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:25"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6027,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"910:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6032,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"930:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6030,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:25","typeDescriptions":{}}},"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6028,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:25","typeDescriptions":{}}},"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6037,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"944:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6038,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"948:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6040,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6042,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6011,"id":6044,"nodeType":"Return","src":"903:48:25"}]},"documentation":{"id":6003,"nodeType":"StructuredDocumentation","src":"597:126:25","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6046,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:25","nodeType":"FunctionDefinition","parameters":{"id":6008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6005,"mutability":"mutable","name":"a","nameLocation":"752:1:25","nodeType":"VariableDeclaration","scope":6046,"src":"745:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6004,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6007,"mutability":"mutable","name":"b","nameLocation":"762:1:25","nodeType":"VariableDeclaration","scope":6046,"src":"755:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6006,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:25"},"returnParameters":{"id":6011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6046,"src":"788:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6009,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:25"},"scope":6068,"src":"728:230:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6066,"nodeType":"Block","src":"1102:158:25","statements":[{"id":6065,"nodeType":"UncheckedBlock","src":"1112:142:25","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6056,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6049,"src":"1227:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":6057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:25","subExpression":{"id":6060,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6049,"src":"1241:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:25","trueExpression":{"id":6059,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6049,"src":"1236:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6054,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:25","typeDescriptions":{}}},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6053,"id":6064,"nodeType":"Return","src":"1212:31:25"}]}]},"documentation":{"id":6047,"nodeType":"StructuredDocumentation","src":"964:78:25","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6067,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:25","nodeType":"FunctionDefinition","parameters":{"id":6050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6049,"mutability":"mutable","name":"n","nameLocation":"1067:1:25","nodeType":"VariableDeclaration","scope":6067,"src":"1060:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6048,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:25"},"returnParameters":{"id":6053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6067,"src":"1093:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6051,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:25"},"scope":6068,"src":"1047:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6069,"src":"215:1047:25","usedErrors":[],"usedEvents":[]}],"src":"109:1154:25"},"id":25},"contracts/MindplexToken.sol":{"ast":{"absolutePath":"contracts/MindplexToken.sol","exportedSymbols":{"AccessControl":[315],"Context":[2321],"Counters":[2395],"ECDSA":[3316],"EIP712":[3520],"ERC165":[3544],"ERC20":[1210],"ERC20Burnable":[1332],"ERC20Permit":[1504],"ERC20Votes":[2238],"IAccessControl":[388],"IERC165":[3556],"IERC20":[1288],"IERC20Metadata":[2263],"IERC20Permit":[2299],"IERC5267":[491],"IERC5805":[500],"IERC6372":[515],"IVotes":[466],"Math":[4422],"MindplexToken":[6585],"Pausable":[623],"SafeCast":[5963],"ShortString":[2400],"ShortStrings":[2611],"SignedMath":[6068],"StorageSlot":[2721],"Strings":[2950],"c_78df1d9b":[6076],"c_false78df1d9b":[6096],"c_true78df1d9b":[6086]},"id":6586,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6070,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:26"},{"body":{"id":6075,"nodeType":"Block","src":"102:2:26","statements":[]},"id":6076,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"c_78df1d9b","nameLocation":"66:10:26","nodeType":"FunctionDefinition","parameters":{"id":6073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6072,"mutability":"mutable","name":"c__78df1d9b","nameLocation":"84:11:26","nodeType":"VariableDeclaration","scope":6076,"src":"77:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":6071,"name":"bytes8","nodeType":"ElementaryTypeName","src":"77:6:26","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"}],"src":"76:20:26"},"returnParameters":{"id":6074,"nodeType":"ParameterList","parameters":[],"src":"102:0:26"},"scope":6586,"src":"57:47:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6085,"nodeType":"Block","src":"168:16:26","statements":[{"expression":{"hexValue":"74727565","id":6083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"177:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6082,"id":6084,"nodeType":"Return","src":"170:11:26"}]},"id":6086,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"c_true78df1d9b","nameLocation":"114:14:26","nodeType":"FunctionDefinition","parameters":{"id":6079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6078,"mutability":"mutable","name":"c__78df1d9b","nameLocation":"136:11:26","nodeType":"VariableDeclaration","scope":6086,"src":"129:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":6077,"name":"bytes8","nodeType":"ElementaryTypeName","src":"129:6:26","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"}],"src":"128:20:26"},"returnParameters":{"id":6082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6086,"src":"163:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6080,"name":"bool","nodeType":"ElementaryTypeName","src":"163:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"162:6:26"},"scope":6586,"src":"105:79:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6095,"nodeType":"Block","src":"249:17:26","statements":[{"expression":{"hexValue":"66616c7365","id":6093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"258:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6092,"id":6094,"nodeType":"Return","src":"251:12:26"}]},"id":6096,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"c_false78df1d9b","nameLocation":"194:15:26","nodeType":"FunctionDefinition","parameters":{"id":6089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6088,"mutability":"mutable","name":"c__78df1d9b","nameLocation":"217:11:26","nodeType":"VariableDeclaration","scope":6096,"src":"210:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":6087,"name":"bytes8","nodeType":"ElementaryTypeName","src":"210:6:26","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"}],"src":"209:20:26"},"returnParameters":{"id":6092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6096,"src":"244:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6090,"name":"bool","nodeType":"ElementaryTypeName","src":"244:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"243:6:26"},"scope":6586,"src":"185:81:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":6097,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6586,"sourceUnit":1333,"src":"268:74:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","id":6098,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6586,"sourceUnit":2239,"src":"343:71:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","file":"@openzeppelin/contracts/security/Pausable.sol","id":6099,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6586,"sourceUnit":624,"src":"415:55:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":6100,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6586,"sourceUnit":316,"src":"471:58:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6102,"name":"ERC20Burnable","nameLocations":["875:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":1332,"src":"875:13:26"},"id":6103,"nodeType":"InheritanceSpecifier","src":"875:13:26"},{"baseName":{"id":6104,"name":"ERC20Votes","nameLocations":["895:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":2238,"src":"895:10:26"},"id":6105,"nodeType":"InheritanceSpecifier","src":"895:10:26"},{"baseName":{"id":6106,"name":"Pausable","nameLocations":["911:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":623,"src":"911:8:26"},"id":6107,"nodeType":"InheritanceSpecifier","src":"911:8:26"},{"baseName":{"id":6108,"name":"AccessControl","nameLocations":["926:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"926:13:26"},"id":6109,"nodeType":"InheritanceSpecifier","src":"926:13:26"}],"canonicalName":"MindplexToken","contractDependencies":[],"contractKind":"contract","documentation":{"id":6101,"nodeType":"StructuredDocumentation","src":"531:312:26","text":"  @title Mindplex Token\n  @notice This contract represents an {ERC20} utility token\n  @dev This contract is a fixed supply of {ERC20} token including functionalities:\n  - To pause and unpause the contract\n  - To burn and mint tokens\n  - To restrict functionality access for only specific roles"},"fullyImplemented":true,"id":6585,"internalFunctionIDs":{"2208":1,"2222":2},"linearizedBaseContracts":[6585,315,3544,3556,388,623,2238,500,466,515,1504,3520,491,2299,1332,1210,2263,1288,2321],"name":"MindplexToken","nameLocation":"853:13:26","nodeType":"ContractDefinition","nodes":[{"body":{"id":6114,"nodeType":"Block","src":"997:2:26","statements":[]},"id":6115,"implemented":true,"kind":"function","modifiers":[],"name":"c_f3f67bc5","nameLocation":"952:10:26","nodeType":"FunctionDefinition","parameters":{"id":6112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6111,"mutability":"mutable","name":"c__f3f67bc5","nameLocation":"970:11:26","nodeType":"VariableDeclaration","scope":6115,"src":"963:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":6110,"name":"bytes8","nodeType":"ElementaryTypeName","src":"963:6:26","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"}],"src":"962:20:26"},"returnParameters":{"id":6113,"nodeType":"ParameterList","parameters":[],"src":"997:0:26"},"scope":6585,"src":"943:56:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6124,"nodeType":"Block","src":"1072:16:26","statements":[{"expression":{"hexValue":"74727565","id":6122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6121,"id":6123,"nodeType":"Return","src":"1074:11:26"}]},"id":6125,"implemented":true,"kind":"function","modifiers":[],"name":"c_truef3f67bc5","nameLocation":"1009:14:26","nodeType":"FunctionDefinition","parameters":{"id":6118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6117,"mutability":"mutable","name":"c__f3f67bc5","nameLocation":"1031:11:26","nodeType":"VariableDeclaration","scope":6125,"src":"1024:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":6116,"name":"bytes8","nodeType":"ElementaryTypeName","src":"1024:6:26","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"}],"src":"1023:20:26"},"returnParameters":{"id":6121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6125,"src":"1067:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6119,"name":"bool","nodeType":"ElementaryTypeName","src":"1067:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1066:6:26"},"scope":6585,"src":"1000:88:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6134,"nodeType":"Block","src":"1162:17:26","statements":[{"expression":{"hexValue":"66616c7365","id":6132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1171:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6131,"id":6133,"nodeType":"Return","src":"1164:12:26"}]},"id":6135,"implemented":true,"kind":"function","modifiers":[],"name":"c_falsef3f67bc5","nameLocation":"1098:15:26","nodeType":"FunctionDefinition","parameters":{"id":6128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6127,"mutability":"mutable","name":"c__f3f67bc5","nameLocation":"1121:11:26","nodeType":"VariableDeclaration","scope":6135,"src":"1114:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":6126,"name":"bytes8","nodeType":"ElementaryTypeName","src":"1114:6:26","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"}],"src":"1113:20:26"},"returnParameters":{"id":6131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6135,"src":"1157:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6129,"name":"bool","nodeType":"ElementaryTypeName","src":"1157:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1156:6:26"},"scope":6585,"src":"1089:90:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6142,"nodeType":"Block","src":"1202:60:26","statements":[{"expression":{"arguments":[{"hexValue":"307865373739396637356161373462373162","id":6138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1215:18:26","typeDescriptions":{"typeIdentifier":"t_rational_16679538022663108379_by_1","typeString":"int_const 16679538022663108379"},"value":"0xe7799f75aa74b71b"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16679538022663108379_by_1","typeString":"int_const 16679538022663108379"}],"id":6137,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"1204:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1204:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6140,"nodeType":"ExpressionStatement","src":"1204:30:26"},{"id":6141,"nodeType":"PlaceholderStatement","src":"1258:1:26"}]},"id":6143,"name":"c_modf2554e1c","nameLocation":"1189:13:26","nodeType":"ModifierDefinition","parameters":{"id":6136,"nodeType":"ParameterList","parameters":[],"src":"1202:0:26"},"src":"1180:82:26","virtual":false,"visibility":"internal"},{"body":{"id":6150,"nodeType":"Block","src":"1285:59:26","statements":[{"expression":{"arguments":[{"hexValue":"307832663561643436363962643332316530","id":6146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1298:18:26","typeDescriptions":{"typeIdentifier":"t_rational_3412273204852629984_by_1","typeString":"int_const 3412273204852629984"},"value":"0x2f5ad4669bd321e0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3412273204852629984_by_1","typeString":"int_const 3412273204852629984"}],"id":6145,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"1287:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1287:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6148,"nodeType":"ExpressionStatement","src":"1287:30:26"},{"id":6149,"nodeType":"PlaceholderStatement","src":"1340:1:26"}]},"id":6151,"name":"c_mod2dddccc6","nameLocation":"1272:13:26","nodeType":"ModifierDefinition","parameters":{"id":6144,"nodeType":"ParameterList","parameters":[],"src":"1285:0:26"},"src":"1263:81:26","virtual":false,"visibility":"internal"},{"body":{"id":6158,"nodeType":"Block","src":"1367:60:26","statements":[{"expression":{"arguments":[{"hexValue":"307832373634353532363063313636353564","id":6154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1380:18:26","typeDescriptions":{"typeIdentifier":"t_rational_2838487287050167645_by_1","typeString":"int_const 2838487287050167645"},"value":"0x276455260c16655d"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2838487287050167645_by_1","typeString":"int_const 2838487287050167645"}],"id":6153,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"1369:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1369:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6156,"nodeType":"ExpressionStatement","src":"1369:30:26"},{"id":6157,"nodeType":"PlaceholderStatement","src":"1423:1:26"}]},"id":6159,"name":"c_mod30931bea","nameLocation":"1354:13:26","nodeType":"ModifierDefinition","parameters":{"id":6152,"nodeType":"ParameterList","parameters":[],"src":"1367:0:26"},"src":"1345:82:26","virtual":false,"visibility":"internal"},{"body":{"id":6166,"nodeType":"Block","src":"1450:59:26","statements":[{"expression":{"arguments":[{"hexValue":"307865393264343264623338393037616436","id":6162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1463:18:26","typeDescriptions":{"typeIdentifier":"t_rational_16802159294103452374_by_1","typeString":"int_const 16802159294103452374"},"value":"0xe92d42db38907ad6"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16802159294103452374_by_1","typeString":"int_const 16802159294103452374"}],"id":6161,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"1452:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1452:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6164,"nodeType":"ExpressionStatement","src":"1452:30:26"},{"id":6165,"nodeType":"PlaceholderStatement","src":"1505:1:26"}]},"id":6167,"name":"c_mod0765129f","nameLocation":"1437:13:26","nodeType":"ModifierDefinition","parameters":{"id":6160,"nodeType":"ParameterList","parameters":[],"src":"1450:0:26"},"src":"1428:81:26","virtual":false,"visibility":"internal"},{"body":{"id":6174,"nodeType":"Block","src":"1532:60:26","statements":[{"expression":{"arguments":[{"hexValue":"307861663531383136326630626165303737","id":6170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1545:18:26","typeDescriptions":{"typeIdentifier":"t_rational_12633020691696509047_by_1","typeString":"int_const 12633020691696509047"},"value":"0xaf518162f0bae077"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_12633020691696509047_by_1","typeString":"int_const 12633020691696509047"}],"id":6169,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"1534:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1534:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6172,"nodeType":"ExpressionStatement","src":"1534:30:26"},{"id":6173,"nodeType":"PlaceholderStatement","src":"1588:1:26"}]},"id":6175,"name":"c_mod4e17ff09","nameLocation":"1519:13:26","nodeType":"ModifierDefinition","parameters":{"id":6168,"nodeType":"ParameterList","parameters":[],"src":"1532:0:26"},"src":"1510:82:26","virtual":false,"visibility":"internal"},{"body":{"id":6182,"nodeType":"Block","src":"1615:59:26","statements":[{"expression":{"arguments":[{"hexValue":"307865343235656231316164633834383364","id":6178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:18:26","typeDescriptions":{"typeIdentifier":"t_rational_16439804475948419133_by_1","typeString":"int_const 16439804475948419133"},"value":"0xe425eb11adc8483d"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16439804475948419133_by_1","typeString":"int_const 16439804475948419133"}],"id":6177,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"1617:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1617:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6180,"nodeType":"ExpressionStatement","src":"1617:30:26"},{"id":6181,"nodeType":"PlaceholderStatement","src":"1670:1:26"}]},"id":6183,"name":"c_mod015d3da5","nameLocation":"1602:13:26","nodeType":"ModifierDefinition","parameters":{"id":6176,"nodeType":"ParameterList","parameters":[],"src":"1615:0:26"},"src":"1593:81:26","virtual":false,"visibility":"internal"},{"body":{"id":6190,"nodeType":"Block","src":"1697:60:26","statements":[{"expression":{"arguments":[{"hexValue":"307838333938313639663837356633396264","id":6186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1710:18:26","typeDescriptions":{"typeIdentifier":"t_rational_9482353889855355325_by_1","typeString":"int_const 9482353889855355325"},"value":"0x8398169f875f39bd"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_9482353889855355325_by_1","typeString":"int_const 9482353889855355325"}],"id":6185,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"1699:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1699:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6188,"nodeType":"ExpressionStatement","src":"1699:30:26"},{"id":6189,"nodeType":"PlaceholderStatement","src":"1753:1:26"}]},"id":6191,"name":"c_mod13bb5bd1","nameLocation":"1684:13:26","nodeType":"ModifierDefinition","parameters":{"id":6184,"nodeType":"ParameterList","parameters":[],"src":"1697:0:26"},"src":"1675:82:26","virtual":false,"visibility":"internal"},{"body":{"id":6198,"nodeType":"Block","src":"1780:59:26","statements":[{"expression":{"arguments":[{"hexValue":"307838313931633834666464393863363865","id":6194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1793:18:26","typeDescriptions":{"typeIdentifier":"t_rational_9336463747861497486_by_1","typeString":"int_const 9336463747861497486"},"value":"0x8191c84fdd98c68e"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_9336463747861497486_by_1","typeString":"int_const 9336463747861497486"}],"id":6193,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"1782:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1782:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6196,"nodeType":"ExpressionStatement","src":"1782:30:26"},{"id":6197,"nodeType":"PlaceholderStatement","src":"1835:1:26"}]},"id":6199,"name":"c_modaec0bfb9","nameLocation":"1767:13:26","nodeType":"ModifierDefinition","parameters":{"id":6192,"nodeType":"ParameterList","parameters":[],"src":"1780:0:26"},"src":"1758:81:26","virtual":false,"visibility":"internal"},{"body":{"id":6206,"nodeType":"Block","src":"1862:60:26","statements":[{"expression":{"arguments":[{"hexValue":"307835633934613462343935346366373635","id":6202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1875:18:26","typeDescriptions":{"typeIdentifier":"t_rational_6671138043548464997_by_1","typeString":"int_const 6671138043548464997"},"value":"0x5c94a4b4954cf765"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_6671138043548464997_by_1","typeString":"int_const 6671138043548464997"}],"id":6201,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"1864:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1864:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6204,"nodeType":"ExpressionStatement","src":"1864:30:26"},{"id":6205,"nodeType":"PlaceholderStatement","src":"1918:1:26"}]},"id":6207,"name":"c_mod97dc6440","nameLocation":"1849:13:26","nodeType":"ModifierDefinition","parameters":{"id":6200,"nodeType":"ParameterList","parameters":[],"src":"1862:0:26"},"src":"1840:82:26","virtual":false,"visibility":"internal"},{"body":{"id":6214,"nodeType":"Block","src":"1945:59:26","statements":[{"expression":{"arguments":[{"hexValue":"307866346537343932663964616631383065","id":6210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1958:18:26","typeDescriptions":{"typeIdentifier":"t_rational_17647154133732366350_by_1","typeString":"int_const 17647154133732366350"},"value":"0xf4e7492f9daf180e"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_17647154133732366350_by_1","typeString":"int_const 17647154133732366350"}],"id":6209,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"1947:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1947:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6212,"nodeType":"ExpressionStatement","src":"1947:30:26"},{"id":6213,"nodeType":"PlaceholderStatement","src":"2000:1:26"}]},"id":6215,"name":"c_mod41d44f3b","nameLocation":"1932:13:26","nodeType":"ModifierDefinition","parameters":{"id":6208,"nodeType":"ParameterList","parameters":[],"src":"1945:0:26"},"src":"1923:81:26","virtual":false,"visibility":"internal"},{"constant":true,"functionSelector":"e63ab1e9","id":6220,"mutability":"constant","name":"PAUSER_ROLE","nameLocation":"2101:11:26","nodeType":"VariableDeclaration","scope":6585,"src":"2077:62:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6216,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2077:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5041555345525f524f4c45","id":6218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2125:13:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""},"value":"PAUSER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""}],"id":6217,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2115:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2115:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"d5391393","id":6225,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"2234:11:26","nodeType":"VariableDeclaration","scope":6585,"src":"2210:62:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6221,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2210:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":6223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2258:13:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":6222,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2248:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2248:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"32cb6b0c","id":6235,"mutability":"constant","name":"MAX_SUPPLY","nameLocation":"2333:10:26","nodeType":"VariableDeclaration","scope":6585,"src":"2309:64:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6226,"name":"uint256","nodeType":"ElementaryTypeName","src":"2309:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31303030303030303030","id":6227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2346:10:26","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1000000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2359:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"hexValue":"36","id":6231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2371:1:26","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"}],"id":6230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2363:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6229,"name":"uint256","nodeType":"ElementaryTypeName","src":"2363:7:26","typeDescriptions":{}}},"id":6232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2363:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2359:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2346:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":6309,"nodeType":"Block","src":"2605:617:26","statements":[{"expression":{"arguments":[{"hexValue":"307865626130643834333632313965643835","id":6250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2617:18:26","typeDescriptions":{"typeIdentifier":"t_rational_16978808379107044741_by_1","typeString":"int_const 16978808379107044741"},"value":"0xeba0d8436219ed85"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16978808379107044741_by_1","typeString":"int_const 16978808379107044741"}],"id":6249,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"2606:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6252,"nodeType":"ExpressionStatement","src":"2606:30:26"},{"expression":{"arguments":[{"hexValue":"307835386266393339643838663966653165","id":6254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2667:18:26","typeDescriptions":{"typeIdentifier":"t_rational_6394992300706627102_by_1","typeString":"int_const 6394992300706627102"},"value":"0x58bf939d88f9fe1e"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_6394992300706627102_by_1","typeString":"int_const 6394992300706627102"}],"id":6253,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"2656:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2656:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6256,"nodeType":"ExpressionStatement","src":"2656:30:26"},{"expression":{"arguments":[{"hexValue":"307836653965363066373362386135356465","id":6258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2719:18:26","typeDescriptions":{"typeIdentifier":"t_rational_7970915005464466910_by_1","typeString":"int_const 7970915005464466910"},"value":"0x6e9e60f73b8a55de"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_7970915005464466910_by_1","typeString":"int_const 7970915005464466910"}],"id":6257,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"2708:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2708:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6260,"nodeType":"ExpressionStatement","src":"2708:30:26"},{"expression":{"arguments":[{"id":6262,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2768:18:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6263,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"2788:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2788:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6261,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"2757:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2757:44:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6266,"nodeType":"ExpressionStatement","src":"2757:44:26"},{"expression":{"arguments":[{"hexValue":"307866376332643961396262663530613662","id":6268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2814:18:26","typeDescriptions":{"typeIdentifier":"t_rational_17853071195876166251_by_1","typeString":"int_const 17853071195876166251"},"value":"0xf7c2d9a9bbf50a6b"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_17853071195876166251_by_1","typeString":"int_const 17853071195876166251"}],"id":6267,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"2803:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6270,"nodeType":"ExpressionStatement","src":"2803:30:26"},{"expression":{"arguments":[{"hexValue":"307862393966663130383232363463623434","id":6272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2866:18:26","typeDescriptions":{"typeIdentifier":"t_rational_13375674435552725828_by_1","typeString":"int_const 13375674435552725828"},"value":"0xb99ff1082264cb44"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_13375674435552725828_by_1","typeString":"int_const 13375674435552725828"}],"id":6271,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"2855:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6274,"nodeType":"ExpressionStatement","src":"2855:30:26"},{"expression":{"arguments":[{"id":6276,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"2915:11:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6277,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"2928:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2928:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6275,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"2904:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":6279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2904:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6280,"nodeType":"ExpressionStatement","src":"2904:37:26"},{"expression":{"arguments":[{"hexValue":"307864626630613436363662633264346533","id":6282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2954:18:26","typeDescriptions":{"typeIdentifier":"t_rational_15848347848518325475_by_1","typeString":"int_const 15848347848518325475"},"value":"0xdbf0a4666bc2d4e3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_15848347848518325475_by_1","typeString":"int_const 15848347848518325475"}],"id":6281,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"2943:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2943:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6284,"nodeType":"ExpressionStatement","src":"2943:30:26"},{"expression":{"arguments":[{"hexValue":"307865376565366261383438306339383236","id":6286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3006:18:26","typeDescriptions":{"typeIdentifier":"t_rational_16712413637725952038_by_1","typeString":"int_const 16712413637725952038"},"value":"0xe7ee6ba8480c9826"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16712413637725952038_by_1","typeString":"int_const 16712413637725952038"}],"id":6285,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"2995:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6288,"nodeType":"ExpressionStatement","src":"2995:30:26"},{"expression":{"arguments":[{"id":6290,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"3055:11:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6291,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"3068:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3068:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6289,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"3044:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":6293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6294,"nodeType":"ExpressionStatement","src":"3044:37:26"},{"expression":{"arguments":[{"hexValue":"307831326336646530323461393939656165","id":6296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3094:18:26","typeDescriptions":{"typeIdentifier":"t_rational_1353012839494295214_by_1","typeString":"int_const 1353012839494295214"},"value":"0x12c6de024a999eae"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1353012839494295214_by_1","typeString":"int_const 1353012839494295214"}],"id":6295,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"3083:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6298,"nodeType":"ExpressionStatement","src":"3083:30:26"},{"expression":{"arguments":[{"hexValue":"307836383939313862306131623738663161","id":6300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3146:18:26","typeDescriptions":{"typeIdentifier":"t_rational_7537082598287707930_by_1","typeString":"int_const 7537082598287707930"},"value":"0x689918b0a1b78f1a"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_7537082598287707930_by_1","typeString":"int_const 7537082598287707930"}],"id":6299,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"3135:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3135:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6302,"nodeType":"ExpressionStatement","src":"3135:30:26"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":6304,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"3190:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3190:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6306,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"3204:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6303,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[6553],"referencedDeclaration":6553,"src":"3184:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3184:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6308,"nodeType":"ExpressionStatement","src":"3184:31:26"}]},"id":6310,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":6242,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"2558:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6243,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"2565:7:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":6244,"kind":"baseConstructorSpecifier","modifierName":{"id":6241,"name":"ERC20","nameLocations":["2552:5:26"],"nodeType":"IdentifierPath","referencedDeclaration":1210,"src":"2552:5:26"},"nodeType":"ModifierInvocation","src":"2552:21:26"},{"arguments":[{"id":6246,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"2594:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":6247,"kind":"baseConstructorSpecifier","modifierName":{"id":6245,"name":"ERC20Permit","nameLocations":["2582:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":1504,"src":"2582:11:26"},"nodeType":"ModifierInvocation","src":"2582:18:26"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6237,"mutability":"mutable","name":"name_","nameLocation":"2499:5:26","nodeType":"VariableDeclaration","scope":6310,"src":"2485:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6236,"name":"string","nodeType":"ElementaryTypeName","src":"2485:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6239,"mutability":"mutable","name":"symbol_","nameLocation":"2529:7:26","nodeType":"VariableDeclaration","scope":6310,"src":"2515:21:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6238,"name":"string","nodeType":"ElementaryTypeName","src":"2515:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2475:67:26"},"returnParameters":{"id":6248,"nodeType":"ParameterList","parameters":[],"src":"2605:0:26"},"scope":6585,"src":"2464:758:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6373,"nodeType":"Block","src":"3510:510:26","statements":[{"expression":{"arguments":[{"hexValue":"307864313836666333633764356330383537","id":6331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3522:18:26","typeDescriptions":{"typeIdentifier":"t_rational_15098032137537587287_by_1","typeString":"int_const 15098032137537587287"},"value":"0xd186fc3c7d5c0857"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_15098032137537587287_by_1","typeString":"int_const 15098032137537587287"}],"id":6330,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"3511:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3511:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6333,"nodeType":"ExpressionStatement","src":"3511:30:26"},{"expression":{"arguments":[{"hexValue":"307862626363633931663565646433646664","id":6335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3571:18:26","typeDescriptions":{"typeIdentifier":"t_rational_13532412116914224637_by_1","typeString":"int_const 13532412116914224637"},"value":"0xbbccc91f5edd3dfd"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_13532412116914224637_by_1","typeString":"int_const 13532412116914224637"}],"id":6334,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"3560:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6337,"nodeType":"ExpressionStatement","src":"3560:30:26"},{"expression":{"arguments":[{"hexValue":"307865303461366431643334623362633533","id":6339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3623:18:26","typeDescriptions":{"typeIdentifier":"t_rational_16161850184978119763_by_1","typeString":"int_const 16161850184978119763"},"value":"0xe04a6d1d34b3bc53"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16161850184978119763_by_1","typeString":"int_const 16161850184978119763"}],"id":6338,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"3612:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3612:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6341,"nodeType":"ExpressionStatement","src":"3612:30:26"},{"expression":{"arguments":[{"hexValue":"307834303933653133643036383532353532","id":6343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3673:18:26","typeDescriptions":{"typeIdentifier":"t_rational_4653310492222498130_by_1","typeString":"int_const 4653310492222498130"},"value":"0x4093e13d06852552"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_4653310492222498130_by_1","typeString":"int_const 4653310492222498130"}],"id":6342,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"3662:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3662:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6345,"nodeType":"ExpressionStatement","src":"3662:30:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6347,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"3732:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3732:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6349,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"3748:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3732:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6351,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"3758:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3732:36:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20746f206265206d696e7465642073686f756c64206e6f7420657863656564204d617820737570706c79","id":6353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3782:49:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614","typeString":"literal_string \"Token to be minted should not exceed Max supply\""},"value":"Token to be minted should not exceed Max supply"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614","typeString":"literal_string \"Token to be minted should not exceed Max supply\""}],"id":6346,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3711:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:130:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6355,"nodeType":"ExpressionStatement","src":"3711:130:26"},{"expression":{"arguments":[{"hexValue":"307839646265623436643133393363643366","id":6357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3853:18:26","typeDescriptions":{"typeIdentifier":"t_rational_11366720890102598975_by_1","typeString":"int_const 11366720890102598975"},"value":"0x9dbeb46d1393cd3f"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_11366720890102598975_by_1","typeString":"int_const 11366720890102598975"}],"id":6356,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"3842:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6359,"nodeType":"ExpressionStatement","src":"3842:30:26"},{"expression":{"arguments":[{"hexValue":"307864316662396564333937633231653535","id":6361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3906:18:26","typeDescriptions":{"typeIdentifier":"t_rational_15130862004702682709_by_1","typeString":"int_const 15130862004702682709"},"value":"0xd1fb9ed397c21e55"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_15130862004702682709_by_1","typeString":"int_const 15130862004702682709"}],"id":6360,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"3895:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3895:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6363,"nodeType":"ExpressionStatement","src":"3895:30:26"},{"expression":{"arguments":[{"hexValue":"307831393730393561373034643866626336","id":6365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3958:18:26","typeDescriptions":{"typeIdentifier":"t_rational_1833129592913198022_by_1","typeString":"int_const 1833129592913198022"},"value":"0x197095a704d8fbc6"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1833129592913198022_by_1","typeString":"int_const 1833129592913198022"}],"id":6364,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"3947:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3947:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6367,"nodeType":"ExpressionStatement","src":"3947:30:26"},{"expression":{"arguments":[{"id":6369,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"4002:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6370,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"4006:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6368,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[6553],"referencedDeclaration":6553,"src":"3996:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3996:17:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6372,"nodeType":"ExpressionStatement","src":"3996:17:26"}]},"functionSelector":"40c10f19","id":6374,"implemented":true,"kind":"function","modifiers":[{"id":6317,"kind":"modifierInvocation","modifierName":{"id":6316,"name":"c_mod41d44f3b","nameLocations":["3402:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":6215,"src":"3402:13:26"},"nodeType":"ModifierInvocation","src":"3402:13:26"},{"id":6319,"kind":"modifierInvocation","modifierName":{"id":6318,"name":"whenNotPaused","nameLocations":["3416:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":550,"src":"3416:13:26"},"nodeType":"ModifierInvocation","src":"3416:13:26"},{"id":6321,"kind":"modifierInvocation","modifierName":{"id":6320,"name":"c_mod97dc6440","nameLocations":["3430:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":6207,"src":"3430:13:26"},"nodeType":"ModifierInvocation","src":"3430:13:26"},{"id":6323,"kind":"modifierInvocation","modifierName":{"id":6322,"name":"c_modaec0bfb9","nameLocations":["3454:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":6199,"src":"3454:13:26"},"nodeType":"ModifierInvocation","src":"3454:13:26"},{"arguments":[{"id":6325,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"3477:11:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6326,"kind":"modifierInvocation","modifierName":{"id":6324,"name":"onlyRole","nameLocations":["3468:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"3468:8:26"},"nodeType":"ModifierInvocation","src":"3468:21:26"},{"id":6328,"kind":"modifierInvocation","modifierName":{"id":6327,"name":"c_mod13bb5bd1","nameLocations":["3490:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":6191,"src":"3490:13:26"},"nodeType":"ModifierInvocation","src":"3490:13:26"}],"name":"mint","nameLocation":"3318:4:26","nodeType":"FunctionDefinition","parameters":{"id":6315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6312,"mutability":"mutable","name":"to","nameLocation":"3340:2:26","nodeType":"VariableDeclaration","scope":6374,"src":"3332:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6311,"name":"address","nodeType":"ElementaryTypeName","src":"3332:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6314,"mutability":"mutable","name":"amount","nameLocation":"3361:6:26","nodeType":"VariableDeclaration","scope":6374,"src":"3353:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6313,"name":"uint256","nodeType":"ElementaryTypeName","src":"3353:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3322:51:26"},"returnParameters":{"id":6329,"nodeType":"ParameterList","parameters":[],"src":"3510:0:26"},"scope":6585,"src":"3309:711:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6400,"nodeType":"Block","src":"4331:166:26","statements":[{"expression":{"arguments":[{"hexValue":"307862353332383361646131613961303561","id":6386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4343:18:26","typeDescriptions":{"typeIdentifier":"t_rational_13056643051465318490_by_1","typeString":"int_const 13056643051465318490"},"value":"0xb53283ada1a9a05a"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_13056643051465318490_by_1","typeString":"int_const 13056643051465318490"}],"id":6385,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"4332:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4332:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6388,"nodeType":"ExpressionStatement","src":"4332:30:26"},{"expression":{"arguments":[{"hexValue":"307861646666656439366634643633326332","id":6390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4392:18:26","typeDescriptions":{"typeIdentifier":"t_rational_12538001120231305922_by_1","typeString":"int_const 12538001120231305922"},"value":"0xadffed96f4d632c2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_12538001120231305922_by_1","typeString":"int_const 12538001120231305922"}],"id":6389,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"4381:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4381:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6392,"nodeType":"ExpressionStatement","src":"4381:30:26"},{"expression":{"arguments":[{"hexValue":"307863366462666134393063666462343639","id":6394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4444:18:26","typeDescriptions":{"typeIdentifier":"t_rational_14329321831066874985_by_1","typeString":"int_const 14329321831066874985"},"value":"0xc6dbfa490cfdb469"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_14329321831066874985_by_1","typeString":"int_const 14329321831066874985"}],"id":6393,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"4433:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4433:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6396,"nodeType":"ExpressionStatement","src":"4433:30:26"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6397,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"4482:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4482:8:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6399,"nodeType":"ExpressionStatement","src":"4482:8:26"}]},"documentation":{"id":6375,"nodeType":"StructuredDocumentation","src":"4026:222:26","text":" @dev Pauses all token transfers.\n See {Pausable-_pause}.\n Requirements:\n - The caller must have the `PAUSER_ROLE`.\n - The contract must not be in paused state "},"functionSelector":"8456cb59","id":6401,"implemented":true,"kind":"function","modifiers":[{"id":6378,"kind":"modifierInvocation","modifierName":{"id":6377,"name":"c_mod015d3da5","nameLocations":["4280:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":6183,"src":"4280:13:26"},"nodeType":"ModifierInvocation","src":"4280:13:26"},{"arguments":[{"id":6380,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"4303:11:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6381,"kind":"modifierInvocation","modifierName":{"id":6379,"name":"onlyRole","nameLocations":["4294:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"4294:8:26"},"nodeType":"ModifierInvocation","src":"4294:21:26"},{"id":6383,"kind":"modifierInvocation","modifierName":{"id":6382,"name":"c_mod4e17ff09","nameLocations":["4316:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":6175,"src":"4316:13:26"},"nodeType":"ModifierInvocation","src":"4316:13:26"}],"name":"pause","nameLocation":"4262:5:26","nodeType":"FunctionDefinition","parameters":{"id":6376,"nodeType":"ParameterList","parameters":[],"src":"4267:2:26"},"returnParameters":{"id":6384,"nodeType":"ParameterList","parameters":[],"src":"4331:0:26"},"scope":6585,"src":"4253:244:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6427,"nodeType":"Block","src":"4810:168:26","statements":[{"expression":{"arguments":[{"hexValue":"307830333665393336656661656434333563","id":6413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4822:18:26","typeDescriptions":{"typeIdentifier":"t_rational_247297134417494876_by_1","typeString":"int_const 247297134417494876"},"value":"0x036e936efaed435c"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_247297134417494876_by_1","typeString":"int_const 247297134417494876"}],"id":6412,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"4811:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6415,"nodeType":"ExpressionStatement","src":"4811:30:26"},{"expression":{"arguments":[{"hexValue":"307832616136303465316332386637313866","id":6417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4871:18:26","typeDescriptions":{"typeIdentifier":"t_rational_3073149163405275535_by_1","typeString":"int_const 3073149163405275535"},"value":"0x2aa604e1c28f718f"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3073149163405275535_by_1","typeString":"int_const 3073149163405275535"}],"id":6416,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"4860:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4860:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6419,"nodeType":"ExpressionStatement","src":"4860:30:26"},{"expression":{"arguments":[{"hexValue":"307835353265373238613230333135316634","id":6421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4923:18:26","typeDescriptions":{"typeIdentifier":"t_rational_6137969279723721204_by_1","typeString":"int_const 6137969279723721204"},"value":"0x552e728a203151f4"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_6137969279723721204_by_1","typeString":"int_const 6137969279723721204"}],"id":6420,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"4912:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4912:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6423,"nodeType":"ExpressionStatement","src":"4912:30:26"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6424,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"4961:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4961:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6426,"nodeType":"ExpressionStatement","src":"4961:10:26"}]},"documentation":{"id":6402,"nodeType":"StructuredDocumentation","src":"4503:222:26","text":" @dev Unpauses all token transfers.\n See {Pausable-_unpause}.\n Requirements:\n - The caller must have the `PAUSER_ROLE`.\n - The contract must be in paused state "},"functionSelector":"3f4ba83a","id":6428,"implemented":true,"kind":"function","modifiers":[{"id":6405,"kind":"modifierInvocation","modifierName":{"id":6404,"name":"c_mod0765129f","nameLocations":["4759:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":6167,"src":"4759:13:26"},"nodeType":"ModifierInvocation","src":"4759:13:26"},{"arguments":[{"id":6407,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"4782:11:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6408,"kind":"modifierInvocation","modifierName":{"id":6406,"name":"onlyRole","nameLocations":["4773:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"4773:8:26"},"nodeType":"ModifierInvocation","src":"4773:21:26"},{"id":6410,"kind":"modifierInvocation","modifierName":{"id":6409,"name":"c_mod30931bea","nameLocations":["4795:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":6159,"src":"4795:13:26"},"nodeType":"ModifierInvocation","src":"4795:13:26"}],"name":"unpause","nameLocation":"4739:7:26","nodeType":"FunctionDefinition","parameters":{"id":6403,"nodeType":"ParameterList","parameters":[],"src":"4746:2:26"},"returnParameters":{"id":6411,"nodeType":"ParameterList","parameters":[],"src":"4810:0:26"},"scope":6585,"src":"4730:248:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[698],"body":{"id":6449,"nodeType":"Block","src":"5245:166:26","statements":[{"expression":{"arguments":[{"hexValue":"307831316138646666663836366565333937","id":6436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5257:18:26","typeDescriptions":{"typeIdentifier":"t_rational_1272513183297233815_by_1","typeString":"int_const 1272513183297233815"},"value":"0x11a8dfff866ee397"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1272513183297233815_by_1","typeString":"int_const 1272513183297233815"}],"id":6435,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"5246:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5246:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6438,"nodeType":"ExpressionStatement","src":"5246:30:26"},{"expression":{"arguments":[{"hexValue":"307830643433323235613734646532643361","id":6440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5306:18:26","typeDescriptions":{"typeIdentifier":"t_rational_955645317835795770_by_1","typeString":"int_const 955645317835795770"},"value":"0x0d43225a74de2d3a"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_955645317835795770_by_1","typeString":"int_const 955645317835795770"}],"id":6439,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"5295:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5295:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6442,"nodeType":"ExpressionStatement","src":"5295:30:26"},{"expression":{"arguments":[{"hexValue":"307832616337626336303231303934356462","id":6444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5358:18:26","typeDescriptions":{"typeIdentifier":"t_rational_3082639591015531995_by_1","typeString":"int_const 3082639591015531995"},"value":"0x2ac7bc60210945db"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3082639591015531995_by_1","typeString":"int_const 3082639591015531995"}],"id":6443,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"5347:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5347:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6446,"nodeType":"ExpressionStatement","src":"5347:30:26"},{"expression":{"hexValue":"36","id":6447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5403:1:26","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"functionReturnParameters":6434,"id":6448,"nodeType":"Return","src":"5396:8:26"}]},"documentation":{"id":6429,"nodeType":"StructuredDocumentation","src":"5063:120:26","text":" @dev Returns the number of decimals `6` used to get its user representation.\n See {ERC20-decimals}"},"functionSelector":"313ce567","id":6450,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"5197:8:26","nodeType":"FunctionDefinition","overrides":{"id":6431,"nodeType":"OverrideSpecifier","overrides":[],"src":"5220:8:26"},"parameters":{"id":6430,"nodeType":"ParameterList","parameters":[],"src":"5205:2:26"},"returnParameters":{"id":6434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6450,"src":"5238:5:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6432,"name":"uint8","nodeType":"ElementaryTypeName","src":"5238:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"5237:7:26"},"scope":6585,"src":"5188:223:26","stateMutability":"pure","virtual":false,"visibility":"public"},{"baseFunctions":[1198],"body":{"id":6487,"nodeType":"Block","src":"5833:202:26","statements":[{"expression":{"arguments":[{"hexValue":"307866633830613830383031333930656666","id":6468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5845:18:26","typeDescriptions":{"typeIdentifier":"t_rational_18194727246910525183_by_1","typeString":"int_const 18194727246910525183"},"value":"0xfc80a80801390eff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_18194727246910525183_by_1","typeString":"int_const 18194727246910525183"}],"id":6467,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"5834:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5834:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6470,"nodeType":"ExpressionStatement","src":"5834:30:26"},{"expression":{"arguments":[{"hexValue":"307837656535313833353737306564623039","id":6472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:18:26","typeDescriptions":{"typeIdentifier":"t_rational_9143741236355455753_by_1","typeString":"int_const 9143741236355455753"},"value":"0x7ee51835770edb09"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_9143741236355455753_by_1","typeString":"int_const 9143741236355455753"}],"id":6471,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"5883:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5883:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6474,"nodeType":"ExpressionStatement","src":"5883:30:26"},{"expression":{"arguments":[{"hexValue":"307864353938333133613366333939303565","id":6476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5946:18:26","typeDescriptions":{"typeIdentifier":"t_rational_15391105852777271390_by_1","typeString":"int_const 15391105852777271390"},"value":"0xd598313a3f39905e"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_15391105852777271390_by_1","typeString":"int_const 15391105852777271390"}],"id":6475,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"5935:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5935:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6478,"nodeType":"ExpressionStatement","src":"5935:30:26"},{"expression":{"arguments":[{"id":6482,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6453,"src":"6011:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6483,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"6017:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6484,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6457,"src":"6021:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6479,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"5984:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MindplexToken_$6585_$","typeString":"type(contract super MindplexToken)"}},"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5990:20:26","memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1198,"src":"5984:26:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5984:44:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6486,"nodeType":"ExpressionStatement","src":"5984:44:26"}]},"documentation":{"id":6451,"nodeType":"StructuredDocumentation","src":"5498:133:26","text":" @dev See {ERC20-_beforeTokenTransfer}.\n Requirements:\n - the contract must not be paused."},"id":6488,"implemented":true,"kind":"function","modifiers":[{"id":6461,"kind":"modifierInvocation","modifierName":{"id":6460,"name":"c_mod2dddccc6","nameLocations":["5785:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":6151,"src":"5785:13:26"},"nodeType":"ModifierInvocation","src":"5785:13:26"},{"id":6463,"kind":"modifierInvocation","modifierName":{"id":6462,"name":"whenNotPaused","nameLocations":["5799:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":550,"src":"5799:13:26"},"nodeType":"ModifierInvocation","src":"5799:13:26"},{"id":6465,"kind":"modifierInvocation","modifierName":{"id":6464,"name":"c_modf2554e1c","nameLocations":["5813:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":6143,"src":"5813:13:26"},"nodeType":"ModifierInvocation","src":"5813:13:26"}],"name":"_beforeTokenTransfer","nameLocation":"5645:20:26","nodeType":"FunctionDefinition","overrides":{"id":6459,"nodeType":"OverrideSpecifier","overrides":[],"src":"5767:8:26"},"parameters":{"id":6458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6453,"mutability":"mutable","name":"from","nameLocation":"5683:4:26","nodeType":"VariableDeclaration","scope":6488,"src":"5675:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6452,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6455,"mutability":"mutable","name":"to","nameLocation":"5706:2:26","nodeType":"VariableDeclaration","scope":6488,"src":"5698:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6454,"name":"address","nodeType":"ElementaryTypeName","src":"5698:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6457,"mutability":"mutable","name":"amount","nameLocation":"5727:6:26","nodeType":"VariableDeclaration","scope":6488,"src":"5719:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6456,"name":"uint256","nodeType":"ElementaryTypeName","src":"5719:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5665:74:26"},"returnParameters":{"id":6466,"nodeType":"ParameterList","parameters":[],"src":"5833:0:26"},"scope":6585,"src":"5636:399:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1209,1983],"body":{"id":6521,"nodeType":"Block","src":"6336:201:26","statements":[{"expression":{"arguments":[{"hexValue":"307833666364303436353236613530653662","id":6502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6348:18:26","typeDescriptions":{"typeIdentifier":"t_rational_4597335627101703787_by_1","typeString":"int_const 4597335627101703787"},"value":"0x3fcd046526a50e6b"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_4597335627101703787_by_1","typeString":"int_const 4597335627101703787"}],"id":6501,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"6337:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6337:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6504,"nodeType":"ExpressionStatement","src":"6337:30:26"},{"expression":{"arguments":[{"hexValue":"307864333532653761326163373462646430","id":6506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6397:18:26","typeDescriptions":{"typeIdentifier":"t_rational_15227487975957118416_by_1","typeString":"int_const 15227487975957118416"},"value":"0xd352e7a2ac74bdd0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_15227487975957118416_by_1","typeString":"int_const 15227487975957118416"}],"id":6505,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"6386:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6508,"nodeType":"ExpressionStatement","src":"6386:30:26"},{"expression":{"arguments":[{"hexValue":"307863666561633636333831306363316437","id":6510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6449:18:26","typeDescriptions":{"typeIdentifier":"t_rational_14982005241070535127_by_1","typeString":"int_const 14982005241070535127"},"value":"0xcfeac663810cc1d7"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_14982005241070535127_by_1","typeString":"int_const 14982005241070535127"}],"id":6509,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"6438:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6438:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6512,"nodeType":"ExpressionStatement","src":"6438:30:26"},{"expression":{"arguments":[{"id":6516,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6491,"src":"6513:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6517,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"6519:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6518,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"6523:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6513,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"6487:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MindplexToken_$6585_$","typeString":"type(contract super MindplexToken)"}},"id":6515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6493:19:26","memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1983,"src":"6487:25:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6487:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6520,"nodeType":"ExpressionStatement","src":"6487:43:26"}]},"documentation":{"id":6489,"nodeType":"StructuredDocumentation","src":"6041:128:26","text":" @dev Move voting power when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":6522,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"6183:19:26","nodeType":"FunctionDefinition","overrides":{"id":6499,"nodeType":"OverrideSpecifier","overrides":[{"id":6497,"name":"ERC20","nameLocations":["6313:5:26"],"nodeType":"IdentifierPath","referencedDeclaration":1210,"src":"6313:5:26"},{"id":6498,"name":"ERC20Votes","nameLocations":["6320:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":2238,"src":"6320:10:26"}],"src":"6304:27:26"},"parameters":{"id":6496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6491,"mutability":"mutable","name":"from","nameLocation":"6220:4:26","nodeType":"VariableDeclaration","scope":6522,"src":"6212:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6490,"name":"address","nodeType":"ElementaryTypeName","src":"6212:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6493,"mutability":"mutable","name":"to","nameLocation":"6243:2:26","nodeType":"VariableDeclaration","scope":6522,"src":"6235:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6492,"name":"address","nodeType":"ElementaryTypeName","src":"6235:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6495,"mutability":"mutable","name":"amount","nameLocation":"6264:6:26","nodeType":"VariableDeclaration","scope":6522,"src":"6256:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6494,"name":"uint256","nodeType":"ElementaryTypeName","src":"6256:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6202:74:26"},"returnParameters":{"id":6500,"nodeType":"ParameterList","parameters":[],"src":"6336:0:26"},"scope":6585,"src":"6174:363:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1027,1930],"body":{"id":6552,"nodeType":"Block","src":"6757:186:26","statements":[{"expression":{"arguments":[{"hexValue":"307833383733313365383339326638303738","id":6534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6769:18:26","typeDescriptions":{"typeIdentifier":"t_rational_4067616776558444664_by_1","typeString":"int_const 4067616776558444664"},"value":"0x387313e8392f8078"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_4067616776558444664_by_1","typeString":"int_const 4067616776558444664"}],"id":6533,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"6758:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6758:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6536,"nodeType":"ExpressionStatement","src":"6758:30:26"},{"expression":{"arguments":[{"hexValue":"307861386431333464353138313635306533","id":6538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6818:18:26","typeDescriptions":{"typeIdentifier":"t_rational_12164562158341214435_by_1","typeString":"int_const 12164562158341214435"},"value":"0xa8d134d5181650e3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_12164562158341214435_by_1","typeString":"int_const 12164562158341214435"}],"id":6537,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"6807:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6540,"nodeType":"ExpressionStatement","src":"6807:30:26"},{"expression":{"arguments":[{"hexValue":"307835613434353864613732313835623230","id":6542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6870:18:26","typeDescriptions":{"typeIdentifier":"t_rational_6504421457070152480_by_1","typeString":"int_const 6504421457070152480"},"value":"0x5a4458da72185b20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_6504421457070152480_by_1","typeString":"int_const 6504421457070152480"}],"id":6541,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"6859:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6859:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6544,"nodeType":"ExpressionStatement","src":"6859:30:26"},{"expression":{"arguments":[{"id":6548,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"6920:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6549,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6527,"src":"6929:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6545,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"6908:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MindplexToken_$6585_$","typeString":"type(contract super MindplexToken)"}},"id":6547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6914:5:26","memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":1930,"src":"6908:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6908:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6551,"nodeType":"ExpressionStatement","src":"6908:28:26"}]},"documentation":{"id":6523,"nodeType":"StructuredDocumentation","src":"6543:78:26","text":" @dev Snapshots the totalSupply after it has been increased."},"id":6553,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"6635:5:26","nodeType":"FunctionDefinition","overrides":{"id":6531,"nodeType":"OverrideSpecifier","overrides":[{"id":6529,"name":"ERC20","nameLocations":["6733:5:26"],"nodeType":"IdentifierPath","referencedDeclaration":1210,"src":"6733:5:26"},{"id":6530,"name":"ERC20Votes","nameLocations":["6740:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":2238,"src":"6740:10:26"}],"src":"6724:27:26"},"parameters":{"id":6528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6525,"mutability":"mutable","name":"account","nameLocation":"6658:7:26","nodeType":"VariableDeclaration","scope":6553,"src":"6650:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6524,"name":"address","nodeType":"ElementaryTypeName","src":"6650:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6527,"mutability":"mutable","name":"amount","nameLocation":"6684:6:26","nodeType":"VariableDeclaration","scope":6553,"src":"6676:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6526,"name":"uint256","nodeType":"ElementaryTypeName","src":"6676:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6640:56:26"},"returnParameters":{"id":6532,"nodeType":"ParameterList","parameters":[],"src":"6757:0:26"},"scope":6585,"src":"6626:317:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1099,1953],"body":{"id":6583,"nodeType":"Block","src":"7163:186:26","statements":[{"expression":{"arguments":[{"hexValue":"307839613438623930343862393234343437","id":6565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7175:18:26","typeDescriptions":{"typeIdentifier":"t_rational_11117339109336695879_by_1","typeString":"int_const 11117339109336695879"},"value":"0x9a48b9048b924447"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_11117339109336695879_by_1","typeString":"int_const 11117339109336695879"}],"id":6564,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"7164:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7164:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6567,"nodeType":"ExpressionStatement","src":"7164:30:26"},{"expression":{"arguments":[{"hexValue":"307832353836386165636564343762326533","id":6569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7224:18:26","typeDescriptions":{"typeIdentifier":"t_rational_2704001376480375523_by_1","typeString":"int_const 2704001376480375523"},"value":"0x25868aeced47b2e3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2704001376480375523_by_1","typeString":"int_const 2704001376480375523"}],"id":6568,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"7213:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7213:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6571,"nodeType":"ExpressionStatement","src":"7213:30:26"},{"expression":{"arguments":[{"hexValue":"307861396666373531346361653137346133","id":6573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7276:18:26","typeDescriptions":{"typeIdentifier":"t_rational_12249638243634607267_by_1","typeString":"int_const 12249638243634607267"},"value":"0xa9ff7514cae174a3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_12249638243634607267_by_1","typeString":"int_const 12249638243634607267"}],"id":6572,"name":"c_f3f67bc5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"7265:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes8_$returns$__$","typeString":"function (bytes8) pure"}},"id":6574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6575,"nodeType":"ExpressionStatement","src":"7265:30:26"},{"expression":{"arguments":[{"id":6579,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"7326:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6580,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6558,"src":"7335:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6576,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7314:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MindplexToken_$6585_$","typeString":"type(contract super MindplexToken)"}},"id":6578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7320:5:26","memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":1953,"src":"7314:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7314:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6582,"nodeType":"ExpressionStatement","src":"7314:28:26"}]},"documentation":{"id":6554,"nodeType":"StructuredDocumentation","src":"6949:78:26","text":" @dev Snapshots the totalSupply after it has been decreased."},"id":6584,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7041:5:26","nodeType":"FunctionDefinition","overrides":{"id":6562,"nodeType":"OverrideSpecifier","overrides":[{"id":6560,"name":"ERC20","nameLocations":["7139:5:26"],"nodeType":"IdentifierPath","referencedDeclaration":1210,"src":"7139:5:26"},{"id":6561,"name":"ERC20Votes","nameLocations":["7146:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":2238,"src":"7146:10:26"}],"src":"7130:27:26"},"parameters":{"id":6559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6556,"mutability":"mutable","name":"account","nameLocation":"7064:7:26","nodeType":"VariableDeclaration","scope":6584,"src":"7056:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6555,"name":"address","nodeType":"ElementaryTypeName","src":"7056:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6558,"mutability":"mutable","name":"amount","nameLocation":"7090:6:26","nodeType":"VariableDeclaration","scope":6584,"src":"7082:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6557,"name":"uint256","nodeType":"ElementaryTypeName","src":"7082:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7046:56:26"},"returnParameters":{"id":6563,"nodeType":"ParameterList","parameters":[],"src":"7163:0:26"},"scope":6585,"src":"7032:317:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":6586,"src":"844:6507:26","usedErrors":[2408,2410],"usedEvents":[327,336,345,400,409,471,526,531,1222,1231]}],"src":"32:7319:26"},"id":26}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":24,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"_roles","offset":0,"slot":"0","type":"t_mapping(t_bytes32,t_struct(RoleData)19_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)19_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)19_storage"},"t_struct(RoleData)19_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":16,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":18,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"}}}}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"IVotes":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts. _Available since v4.5._\",\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":\"IVotes\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"IERC5805":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5805.sol\":\"IERC5805\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"IERC6372":{"abi":[{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":\"IERC6372\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/security/Pausable.sol":{"Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":533,"contract":"@openzeppelin/contracts/security/Pausable.sol:Pausable","label":"_paused","offset":0,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"}}}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_668":{"entryPoint":null,"id":668,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":363,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":437,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":487,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":238,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":98,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":268,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":725,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":618,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1034,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":855,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":996,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":873,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1185,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":321,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":743,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":673,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1156,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":184,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":864,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1126,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":628,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":139,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":912,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":115,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":119,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":111,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":107,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":123,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":758,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1114,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":968,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":770,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":921,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":964,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:27","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:27","statements":[{"nodeType":"YulAssignment","src":"57:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:27"},"nodeType":"YulFunctionCall","src":"67:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:27"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:27","type":""}],"src":"7:75:27"},{"body":{"nodeType":"YulBlock","src":"177:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:27"},"nodeType":"YulFunctionCall","src":"187:12:27"},"nodeType":"YulExpressionStatement","src":"187:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:27"},{"body":{"nodeType":"YulBlock","src":"300:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:27"},"nodeType":"YulFunctionCall","src":"310:12:27"},"nodeType":"YulExpressionStatement","src":"310:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:27"},{"body":{"nodeType":"YulBlock","src":"423:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:27"},"nodeType":"YulFunctionCall","src":"433:12:27"},"nodeType":"YulExpressionStatement","src":"433:12:27"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:27"},{"body":{"nodeType":"YulBlock","src":"546:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:27"},"nodeType":"YulFunctionCall","src":"556:12:27"},"nodeType":"YulExpressionStatement","src":"556:12:27"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:27"},{"body":{"nodeType":"YulBlock","src":"628:54:27","statements":[{"nodeType":"YulAssignment","src":"638:38:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:27"},"nodeType":"YulFunctionCall","src":"652:14:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:27"},"nodeType":"YulFunctionCall","src":"668:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:27"},"nodeType":"YulFunctionCall","src":"648:28:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:27"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:27","type":""}],"src":"580:102:27"},{"body":{"nodeType":"YulBlock","src":"716:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:27"},"nodeType":"YulFunctionCall","src":"726:88:27"},"nodeType":"YulExpressionStatement","src":"726:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:27"},"nodeType":"YulFunctionCall","src":"823:15:27"},"nodeType":"YulExpressionStatement","src":"823:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:27"},"nodeType":"YulFunctionCall","src":"847:15:27"},"nodeType":"YulExpressionStatement","src":"847:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:27"},{"body":{"nodeType":"YulBlock","src":"917:238:27","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:27"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:27"},"nodeType":"YulFunctionCall","src":"957:27:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:27"},"nodeType":"YulFunctionCall","src":"945:40:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:27"},"nodeType":"YulFunctionCall","src":"1098:18:27"},"nodeType":"YulExpressionStatement","src":"1098:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:27"},"nodeType":"YulFunctionCall","src":"1036:34:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:27"},"nodeType":"YulFunctionCall","src":"1072:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:27"},"nodeType":"YulFunctionCall","src":"1033:62:27"},"nodeType":"YulIf","src":"1030:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:27"},"nodeType":"YulFunctionCall","src":"1127:22:27"},"nodeType":"YulExpressionStatement","src":"1127:22:27"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:27","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:27","type":""}],"src":"874:281:27"},{"body":{"nodeType":"YulBlock","src":"1202:88:27","statements":[{"nodeType":"YulAssignment","src":"1212:30:27","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:27"},"nodeType":"YulFunctionCall","src":"1222:20:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:27"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:27"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:27"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:27"},"nodeType":"YulFunctionCall","src":"1251:33:27"},"nodeType":"YulExpressionStatement","src":"1251:33:27"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:27","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:27","type":""}],"src":"1161:129:27"},{"body":{"nodeType":"YulBlock","src":"1363:241:27","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:27"},"nodeType":"YulFunctionCall","src":"1470:18:27"},"nodeType":"YulExpressionStatement","src":"1470:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:27"},"nodeType":"YulFunctionCall","src":"1437:30:27"},"nodeType":"YulIf","src":"1434:56:27"},{"nodeType":"YulAssignment","src":"1500:37:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:27"},"nodeType":"YulFunctionCall","src":"1508:29:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:27"}]},{"nodeType":"YulAssignment","src":"1574:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:27"},"nodeType":"YulFunctionCall","src":"1582:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:27"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:27","type":""}],"src":"1296:308:27"},{"body":{"nodeType":"YulBlock","src":"1672:184:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:27"},"nodeType":"YulFunctionCall","src":"1772:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:27"},"nodeType":"YulFunctionCall","src":"1791:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:27"},"nodeType":"YulFunctionCall","src":"1785:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:27"},"nodeType":"YulFunctionCall","src":"1765:39:27"},"nodeType":"YulExpressionStatement","src":"1765:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:27"},"nodeType":"YulFunctionCall","src":"1709:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:27","statements":[{"nodeType":"YulAssignment","src":"1725:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:27"},"nodeType":"YulFunctionCall","src":"1730:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:27","statements":[]},"src":"1701:113:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:27"},"nodeType":"YulFunctionCall","src":"1830:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:27"},"nodeType":"YulFunctionCall","src":"1823:27:27"},"nodeType":"YulExpressionStatement","src":"1823:27:27"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:27","type":""}],"src":"1610:246:27"},{"body":{"nodeType":"YulBlock","src":"1957:339:27","statements":[{"nodeType":"YulAssignment","src":"1967:75:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:27"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:27"},"nodeType":"YulFunctionCall","src":"1992:49:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:27"},"nodeType":"YulFunctionCall","src":"1976:66:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:27"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:27"},"nodeType":"YulFunctionCall","src":"2051:21:27"},"nodeType":"YulExpressionStatement","src":"2051:21:27"},{"nodeType":"YulVariableDeclaration","src":"2081:27:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:27"},"nodeType":"YulFunctionCall","src":"2092:16:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:27"},"nodeType":"YulFunctionCall","src":"2148:79:27"},"nodeType":"YulExpressionStatement","src":"2148:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:27"},"nodeType":"YulFunctionCall","src":"2123:16:27"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:27"},"nodeType":"YulFunctionCall","src":"2120:25:27"},"nodeType":"YulIf","src":"2117:112:27"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:27"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:27"},"nodeType":"YulFunctionCall","src":"2238:52:27"},"nodeType":"YulExpressionStatement","src":"2238:52:27"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:27","type":""}],"src":"1862:434:27"},{"body":{"nodeType":"YulBlock","src":"2389:282:27","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:27"},"nodeType":"YulFunctionCall","src":"2440:79:27"},"nodeType":"YulExpressionStatement","src":"2440:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:27"},"nodeType":"YulFunctionCall","src":"2413:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:27"},"nodeType":"YulFunctionCall","src":"2409:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:27"},"nodeType":"YulFunctionCall","src":"2402:35:27"},"nodeType":"YulIf","src":"2399:122:27"},{"nodeType":"YulVariableDeclaration","src":"2530:27:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:27"},"nodeType":"YulFunctionCall","src":"2544:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:27"},"nodeType":"YulFunctionCall","src":"2634:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:27"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:27"},"nodeType":"YulFunctionCall","src":"2575:90:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:27"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:27","type":""}],"src":"2316:355:27"},{"body":{"nodeType":"YulBlock","src":"2791:739:27","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:27"},"nodeType":"YulFunctionCall","src":"2839:79:27"},"nodeType":"YulExpressionStatement","src":"2839:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:27"},"nodeType":"YulFunctionCall","src":"2808:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:27"},"nodeType":"YulFunctionCall","src":"2804:32:27"},"nodeType":"YulIf","src":"2801:119:27"},{"nodeType":"YulBlock","src":"2930:291:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:27"},"nodeType":"YulFunctionCall","src":"2965:17:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:27"},"nodeType":"YulFunctionCall","src":"2959:24:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:27"},"nodeType":"YulFunctionCall","src":"3032:79:27"},"nodeType":"YulExpressionStatement","src":"3032:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:27"},"nodeType":"YulFunctionCall","src":"2999:30:27"},"nodeType":"YulIf","src":"2996:117:27"},{"nodeType":"YulAssignment","src":"3127:84:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:27"},"nodeType":"YulFunctionCall","src":"3179:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:27"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:27"},"nodeType":"YulFunctionCall","src":"3137:74:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:27"}]}]},{"nodeType":"YulBlock","src":"3231:292:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:27"},"nodeType":"YulFunctionCall","src":"3266:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:27"},"nodeType":"YulFunctionCall","src":"3260:25:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:27"},"nodeType":"YulFunctionCall","src":"3334:79:27"},"nodeType":"YulExpressionStatement","src":"3334:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:27"},"nodeType":"YulFunctionCall","src":"3301:30:27"},"nodeType":"YulIf","src":"3298:117:27"},{"nodeType":"YulAssignment","src":"3429:84:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:27"},"nodeType":"YulFunctionCall","src":"3481:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:27"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:27"},"nodeType":"YulFunctionCall","src":"3439:74:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:27"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:27","type":""}],"src":"2677:853:27"},{"body":{"nodeType":"YulBlock","src":"3595:40:27","statements":[{"nodeType":"YulAssignment","src":"3606:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:27"},"nodeType":"YulFunctionCall","src":"3616:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:27"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:27","type":""}],"src":"3536:99:27"},{"body":{"nodeType":"YulBlock","src":"3669:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:27"},"nodeType":"YulFunctionCall","src":"3679:88:27"},"nodeType":"YulExpressionStatement","src":"3679:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:27"},"nodeType":"YulFunctionCall","src":"3776:15:27"},"nodeType":"YulExpressionStatement","src":"3776:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:27"},"nodeType":"YulFunctionCall","src":"3800:15:27"},"nodeType":"YulExpressionStatement","src":"3800:15:27"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:27"},{"body":{"nodeType":"YulBlock","src":"3878:269:27","statements":[{"nodeType":"YulAssignment","src":"3888:22:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:27","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:27"},"nodeType":"YulFunctionCall","src":"3898:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:27"},"nodeType":"YulFunctionCall","src":"3945:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:27","statements":[{"nodeType":"YulAssignment","src":"4010:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:27"},"nodeType":"YulFunctionCall","src":"4020:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:27"},"nodeType":"YulFunctionCall","src":"3969:26:27"},"nodeType":"YulIf","src":"3966:81:27"},{"body":{"nodeType":"YulBlock","src":"4099:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:27"},"nodeType":"YulFunctionCall","src":"4113:18:27"},"nodeType":"YulExpressionStatement","src":"4113:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:27"},"nodeType":"YulFunctionCall","src":"4083:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:27"},"nodeType":"YulFunctionCall","src":"4060:38:27"},"nodeType":"YulIf","src":"4057:84:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:27","type":""}],"src":"3827:320:27"},{"body":{"nodeType":"YulBlock","src":"4207:87:27","statements":[{"nodeType":"YulAssignment","src":"4217:11:27","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:27"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:27","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:27"},"nodeType":"YulFunctionCall","src":"4238:14:27"},"nodeType":"YulExpressionStatement","src":"4238:14:27"},{"nodeType":"YulAssignment","src":"4261:26:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:27"},"nodeType":"YulFunctionCall","src":"4269:18:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:27"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:27","type":""}],"src":"4153:141:27"},{"body":{"nodeType":"YulBlock","src":"4344:49:27","statements":[{"nodeType":"YulAssignment","src":"4354:33:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:27"},"nodeType":"YulFunctionCall","src":"4368:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:27","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:27"},"nodeType":"YulFunctionCall","src":"4364:23:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:27"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:27","type":""}],"src":"4300:93:27"},{"body":{"nodeType":"YulBlock","src":"4452:54:27","statements":[{"nodeType":"YulAssignment","src":"4462:37:27","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:27"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:27"},"nodeType":"YulFunctionCall","src":"4483:16:27"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:27"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:27","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:27","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:27","type":""}],"src":"4399:107:27"},{"body":{"nodeType":"YulBlock","src":"4588:317:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:27","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:27","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:27"},"nodeType":"YulFunctionCall","src":"4615:18:27"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:27","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:27"},"nodeType":"YulFunctionCall","src":"4654:97:27"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:27","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:27","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:27"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:27"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:27"},"nodeType":"YulFunctionCall","src":"4772:39:27"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:27"}]},{"nodeType":"YulAssignment","src":"4820:30:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:27"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:27"},"nodeType":"YulFunctionCall","src":"4840:9:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:27"},"nodeType":"YulFunctionCall","src":"4829:21:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:27"}]},{"nodeType":"YulAssignment","src":"4859:40:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:27"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:27"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:27"},"nodeType":"YulFunctionCall","src":"4879:19:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:27"},"nodeType":"YulFunctionCall","src":"4869:30:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:27"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:27","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:27","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:27","type":""}],"src":"4512:393:27"},{"body":{"nodeType":"YulBlock","src":"4956:32:27","statements":[{"nodeType":"YulAssignment","src":"4966:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:27"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:27","type":""}],"src":"4911:77:27"},{"body":{"nodeType":"YulBlock","src":"5026:28:27","statements":[{"nodeType":"YulAssignment","src":"5036:12:27","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:27"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:27","type":""}],"src":"4994:60:27"},{"body":{"nodeType":"YulBlock","src":"5120:82:27","statements":[{"nodeType":"YulAssignment","src":"5130:66:27","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:27"},"nodeType":"YulFunctionCall","src":"5170:24:27"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:27"},"nodeType":"YulFunctionCall","src":"5161:34:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:27"},"nodeType":"YulFunctionCall","src":"5143:53:27"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:27"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:27","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:27","type":""}],"src":"5060:142:27"},{"body":{"nodeType":"YulBlock","src":"5255:28:27","statements":[{"nodeType":"YulAssignment","src":"5265:12:27","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:27"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:27","type":""}],"src":"5208:75:27"},{"body":{"nodeType":"YulBlock","src":"5365:193:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:27","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:27"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:27"},"nodeType":"YulFunctionCall","src":"5399:39:27"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:27","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:27"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:27"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:27"},"nodeType":"YulFunctionCall","src":"5488:11:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:27"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:27"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:27"},"nodeType":"YulFunctionCall","src":"5509:41:27"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:27"},"nodeType":"YulFunctionCall","src":"5460:91:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:27"},"nodeType":"YulFunctionCall","src":"5447:105:27"},"nodeType":"YulExpressionStatement","src":"5447:105:27"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:27","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:27","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:27","type":""}],"src":"5289:269:27"},{"body":{"nodeType":"YulBlock","src":"5613:24:27","statements":[{"nodeType":"YulAssignment","src":"5623:8:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:27","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:27"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:27","type":""}],"src":"5564:73:27"},{"body":{"nodeType":"YulBlock","src":"5696:136:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:27","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:27"},"nodeType":"YulFunctionCall","src":"5720:32:27"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:27","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:27"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:27"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:27"},"nodeType":"YulFunctionCall","src":"5761:65:27"},"nodeType":"YulExpressionStatement","src":"5761:65:27"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:27","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:27","type":""}],"src":"5643:189:27"},{"body":{"nodeType":"YulBlock","src":"5888:136:27","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:27","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:27","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:27"},"nodeType":"YulFunctionCall","src":"5969:39:27"},"nodeType":"YulExpressionStatement","src":"5969:39:27"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:27"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:27"},"nodeType":"YulFunctionCall","src":"5905:14:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:27","statements":[{"nodeType":"YulAssignment","src":"5922:22:27","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:27"},"nodeType":"YulFunctionCall","src":"5931:13:27"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:27"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:27","statements":[]},"src":"5898:120:27"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:27","type":""}],"src":"5838:186:27"},{"body":{"nodeType":"YulBlock","src":"6109:464:27","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:27"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:27"},"nodeType":"YulFunctionCall","src":"6165:38:27"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:27","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:27"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:27"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:27"},"nodeType":"YulFunctionCall","src":"6249:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:27"},"nodeType":"YulFunctionCall","src":"6235:44:27"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:27","statements":[{"nodeType":"YulAssignment","src":"6438:23:27","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:27"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:27"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:27"},"nodeType":"YulFunctionCall","src":"6417:18:27"},"nodeType":"YulIf","src":"6414:49:27"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:27"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:27"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:27"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:27"},"nodeType":"YulFunctionCall","src":"6532:22:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:27"},"nodeType":"YulFunctionCall","src":"6518:37:27"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:27"},"nodeType":"YulFunctionCall","src":"6476:80:27"},"nodeType":"YulExpressionStatement","src":"6476:80:27"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:27"},"nodeType":"YulFunctionCall","src":"6123:11:27"},"nodeType":"YulIf","src":"6120:446:27"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:27","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:27","type":""}],"src":"6030:543:27"},{"body":{"nodeType":"YulBlock","src":"6642:54:27","statements":[{"nodeType":"YulAssignment","src":"6652:37:27","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:27"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:27"},"nodeType":"YulFunctionCall","src":"6673:16:27"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:27"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:27","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:27","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:27","type":""}],"src":"6579:117:27"},{"body":{"nodeType":"YulBlock","src":"6753:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:27","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:27","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:27"},"nodeType":"YulFunctionCall","src":"6808:13:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:27"},"nodeType":"YulFunctionCall","src":"6823:6:27"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:27"},"nodeType":"YulFunctionCall","src":"6779:51:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:27"},"nodeType":"YulFunctionCall","src":"6775:56:27"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:27","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:27"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:27"},"nodeType":"YulFunctionCall","src":"6850:15:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:27"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:27","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:27","type":""}],"src":"6702:169:27"},{"body":{"nodeType":"YulBlock","src":"6957:214:27","statements":[{"nodeType":"YulAssignment","src":"7090:37:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:27"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:27"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:27"},"nodeType":"YulFunctionCall","src":"7098:29:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:27"}]},{"nodeType":"YulAssignment","src":"7136:29:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:27","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:27"},"nodeType":"YulFunctionCall","src":"7153:11:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:27"},"nodeType":"YulFunctionCall","src":"7144:21:27"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:27"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:27","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:27","type":""}],"src":"6876:295:27"},{"body":{"nodeType":"YulBlock","src":"7268:1303:27","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:27"},"nodeType":"YulFunctionCall","src":"7293:37:27"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:27"},"nodeType":"YulFunctionCall","src":"7417:18:27"},"nodeType":"YulExpressionStatement","src":"7417:18:27"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:27"},"nodeType":"YulFunctionCall","src":"7384:30:27"},"nodeType":"YulIf","src":"7381:56:27"},{"nodeType":"YulVariableDeclaration","src":"7447:52:27","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:27"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:27"},"nodeType":"YulFunctionCall","src":"7487:11:27"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:27"},"nodeType":"YulFunctionCall","src":"7461:38:27"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:27","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:27"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:27"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:27"},"nodeType":"YulFunctionCall","src":"7546:67:27"},"nodeType":"YulExpressionStatement","src":"7546:67:27"},{"nodeType":"YulVariableDeclaration","src":"7623:18:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:27","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:27","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:27","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:27"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:27","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:27","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:27","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:27"},"nodeType":"YulFunctionCall","src":"7756:9:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:27"},"nodeType":"YulFunctionCall","src":"7744:22:27"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:27","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:27"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:27"},"nodeType":"YulFunctionCall","src":"7794:37:27"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:27","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:27"},"nodeType":"YulFunctionCall","src":"7951:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:27"},"nodeType":"YulFunctionCall","src":"7945:26:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:27"},"nodeType":"YulFunctionCall","src":"7930:42:27"},"nodeType":"YulExpressionStatement","src":"7930:42:27"},{"nodeType":"YulAssignment","src":"7989:24:27","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:27"},"nodeType":"YulFunctionCall","src":"7999:14:27"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:27"}]},{"nodeType":"YulAssignment","src":"8030:31:27","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:27"},"nodeType":"YulFunctionCall","src":"8043:18:27"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:27"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:27"},"nodeType":"YulFunctionCall","src":"7875:14:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:27","statements":[{"nodeType":"YulAssignment","src":"7892:17:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:27"},"nodeType":"YulFunctionCall","src":"7897:12:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:27","statements":[]},"src":"7867:208:27"},{"body":{"nodeType":"YulBlock","src":"8111:156:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:27"},"nodeType":"YulFunctionCall","src":"8152:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:27"},"nodeType":"YulFunctionCall","src":"8146:26:27"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:27","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:27"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:27"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:27","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:27"},"nodeType":"YulFunctionCall","src":"8234:17:27"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:27"},"nodeType":"YulFunctionCall","src":"8204:48:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:27"},"nodeType":"YulFunctionCall","src":"8189:64:27"},"nodeType":"YulExpressionStatement","src":"8189:64:27"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:27"},"nodeType":"YulFunctionCall","src":"8091:19:27"},"nodeType":"YulIf","src":"8088:179:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:27"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:27","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:27"},"nodeType":"YulFunctionCall","src":"8297:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:27"},"nodeType":"YulFunctionCall","src":"8293:22:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:27"},"nodeType":"YulFunctionCall","src":"8280:36:27"},"nodeType":"YulExpressionStatement","src":"8280:36:27"}]},"nodeType":"YulCase","src":"7708:618:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:27","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:27","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:27","statements":[{"nodeType":"YulAssignment","src":"8412:35:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:27"},"nodeType":"YulFunctionCall","src":"8427:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:27"},"nodeType":"YulFunctionCall","src":"8421:26:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:27"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:27"},"nodeType":"YulIf","src":"8384:77:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:27"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:27"},"nodeType":"YulFunctionCall","src":"8487:67:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:27"},"nodeType":"YulFunctionCall","src":"8474:81:27"},"nodeType":"YulExpressionStatement","src":"8474:81:27"}]},"nodeType":"YulCase","src":"8335:230:27","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:27"},"nodeType":"YulFunctionCall","src":"7685:14:27"},"nodeType":"YulSwitch","src":"7678:887:27"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:27","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:27","type":""}],"src":"7176:1395:27"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801562000010575f80fd5b5060405162001756380380620017568339818101604052810190620000369190620001e7565b8160039081620000479190620004a1565b508060049081620000599190620004a1565b50505062000585565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620000c3826200007b565b810181811067ffffffffffffffff82111715620000e557620000e46200008b565b5b80604052505050565b5f620000f962000062565b9050620001078282620000b8565b919050565b5f67ffffffffffffffff8211156200012957620001286200008b565b5b62000134826200007b565b9050602081019050919050565b5f5b838110156200016057808201518184015260208101905062000143565b5f8484015250505050565b5f620001816200017b846200010c565b620000ee565b905082815260208101848484011115620001a0576200019f62000077565b5b620001ad84828562000141565b509392505050565b5f82601f830112620001cc57620001cb62000073565b5b8151620001de8482602086016200016b565b91505092915050565b5f80604083850312156200020057620001ff6200006b565b5b5f83015167ffffffffffffffff81111562000220576200021f6200006f565b5b6200022e85828601620001b5565b925050602083015167ffffffffffffffff8111156200025257620002516200006f565b5b6200026085828601620001b5565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620002b957607f821691505b602082108103620002cf57620002ce62000274565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620003337fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002f6565b6200033f8683620002f6565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f62000389620003836200037d8462000357565b62000360565b62000357565b9050919050565b5f819050919050565b620003a48362000369565b620003bc620003b38262000390565b84845462000302565b825550505050565b5f90565b620003d2620003c4565b620003df81848462000399565b505050565b5b818110156200040657620003fa5f82620003c8565b600181019050620003e5565b5050565b601f82111562000455576200041f81620002d5565b6200042a84620002e7565b810160208510156200043a578190505b620004526200044985620002e7565b830182620003e4565b50505b505050565b5f82821c905092915050565b5f620004775f19846008026200045a565b1980831691505092915050565b5f62000491838362000466565b9150826002028217905092915050565b620004ac826200026a565b67ffffffffffffffff811115620004c857620004c76200008b565b5b620004d48254620002a1565b620004e18282856200040a565b5f60209050601f83116001811462000517575f841562000502578287015190505b6200050e858262000484565b8655506200057d565b601f1984166200052786620002d5565b5f5b82811015620005505784890151825560018201915060208501945060208101905062000529565b868310156200057057848901516200056c601f89168262000466565b8355505b6001600288020188555050505b505050505050565b6111c380620005935f395ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c8063395093511161006f578063395093511461016557806370a082311461019557806395d89b41146101c5578063a457c2d7146101e3578063a9059cbb14610213578063dd62ed3e14610243576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f80fd5b6100b3610273565b6040516100c09190610add565b60405180910390f35b6100e360048036038101906100de9190610b8e565b610303565b6040516100f09190610be6565b60405180910390f35b610101610325565b60405161010e9190610c0e565b60405180910390f35b610131600480360381019061012c9190610c27565b61032e565b60405161013e9190610be6565b60405180910390f35b61014f61035c565b60405161015c9190610c92565b60405180910390f35b61017f600480360381019061017a9190610b8e565b610364565b60405161018c9190610be6565b60405180910390f35b6101af60048036038101906101aa9190610cab565b61039a565b6040516101bc9190610c0e565b60405180910390f35b6101cd6103df565b6040516101da9190610add565b60405180910390f35b6101fd60048036038101906101f89190610b8e565b61046f565b60405161020a9190610be6565b60405180910390f35b61022d60048036038101906102289190610b8e565b6104e4565b60405161023a9190610be6565b60405180910390f35b61025d60048036038101906102589190610cd6565b610506565b60405161026a9190610c0e565b60405180910390f35b60606003805461028290610d41565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610d41565b80156102f95780601f106102d0576101008083540402835291602001916102f9565b820191905f5260205f20905b8154815290600101906020018083116102dc57829003601f168201915b5050505050905090565b5f8061030d610588565b905061031a81858561058f565b600191505092915050565b5f600254905090565b5f80610338610588565b9050610345858285610752565b6103508585856107dd565b60019150509392505050565b5f6012905090565b5f8061036e610588565b905061038f8185856103808589610506565b61038a9190610d9e565b61058f565b600191505092915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546103ee90610d41565b80601f016020809104026020016040519081016040528092919081815260200182805461041a90610d41565b80156104655780601f1061043c57610100808354040283529160200191610465565b820191905f5260205f20905b81548152906001019060200180831161044857829003601f168201915b5050505050905090565b5f80610479610588565b90505f6104868286610506565b9050838110156104cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c290610e41565b60405180910390fd5b6104d8828686840361058f565b60019250505092915050565b5f806104ee610588565b90506104fb8185856107dd565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f490610ecf565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361066b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066290610f5d565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107459190610c0e565b60405180910390a3505050565b5f61075d8484610506565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107d757818110156107c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c090610fc5565b60405180910390fd5b6107d6848484840361058f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084290611053565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b0906110e1565b60405180910390fd5b6108c4838383610a49565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610947576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093e9061116f565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a309190610c0e565b60405180910390a3610a43848484610a4e565b50505050565b505050565b505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610a8a578082015181840152602081019050610a6f565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610aaf82610a53565b610ab98185610a5d565b9350610ac9818560208601610a6d565b610ad281610a95565b840191505092915050565b5f6020820190508181035f830152610af58184610aa5565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b2a82610b01565b9050919050565b610b3a81610b20565b8114610b44575f80fd5b50565b5f81359050610b5581610b31565b92915050565b5f819050919050565b610b6d81610b5b565b8114610b77575f80fd5b50565b5f81359050610b8881610b64565b92915050565b5f8060408385031215610ba457610ba3610afd565b5b5f610bb185828601610b47565b9250506020610bc285828601610b7a565b9150509250929050565b5f8115159050919050565b610be081610bcc565b82525050565b5f602082019050610bf95f830184610bd7565b92915050565b610c0881610b5b565b82525050565b5f602082019050610c215f830184610bff565b92915050565b5f805f60608486031215610c3e57610c3d610afd565b5b5f610c4b86828701610b47565b9350506020610c5c86828701610b47565b9250506040610c6d86828701610b7a565b9150509250925092565b5f60ff82169050919050565b610c8c81610c77565b82525050565b5f602082019050610ca55f830184610c83565b92915050565b5f60208284031215610cc057610cbf610afd565b5b5f610ccd84828501610b47565b91505092915050565b5f8060408385031215610cec57610ceb610afd565b5b5f610cf985828601610b47565b9250506020610d0a85828601610b47565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610d5857607f821691505b602082108103610d6b57610d6a610d14565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610da882610b5b565b9150610db383610b5b565b9250828201905080821115610dcb57610dca610d71565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f610e2b602583610a5d565b9150610e3682610dd1565b604082019050919050565b5f6020820190508181035f830152610e5881610e1f565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f610eb9602483610a5d565b9150610ec482610e5f565b604082019050919050565b5f6020820190508181035f830152610ee681610ead565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f610f47602283610a5d565b9150610f5282610eed565b604082019050919050565b5f6020820190508181035f830152610f7481610f3b565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f610faf601d83610a5d565b9150610fba82610f7b565b602082019050919050565b5f6020820190508181035f830152610fdc81610fa3565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f61103d602583610a5d565b915061104882610fe3565b604082019050919050565b5f6020820190508181035f83015261106a81611031565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f6110cb602383610a5d565b91506110d682611071565b604082019050919050565b5f6020820190508181035f8301526110f8816110bf565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f611159602683610a5d565b9150611164826110ff565b604082019050919050565b5f6020820190508181035f8301526111868161114d565b905091905056fea2646970667358221220ed9e94dc07a7b39180f06c61b7f536b4abc806ba4fea94054b93d3c858ff5b6e64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1756 CODESIZE SUB DUP1 PUSH3 0x1756 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x1E7 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x47 SWAP2 SWAP1 PUSH3 0x4A1 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x59 SWAP2 SWAP1 PUSH3 0x4A1 JUMP JUMPDEST POP POP POP PUSH3 0x585 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0xC3 DUP3 PUSH3 0x7B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xE5 JUMPI PUSH3 0xE4 PUSH3 0x8B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xF9 PUSH3 0x62 JUMP JUMPDEST SWAP1 POP PUSH3 0x107 DUP3 DUP3 PUSH3 0xB8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x129 JUMPI PUSH3 0x128 PUSH3 0x8B JUMP JUMPDEST JUMPDEST PUSH3 0x134 DUP3 PUSH3 0x7B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x160 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x143 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x181 PUSH3 0x17B DUP5 PUSH3 0x10C JUMP JUMPDEST PUSH3 0xEE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1A0 JUMPI PUSH3 0x19F PUSH3 0x77 JUMP JUMPDEST JUMPDEST PUSH3 0x1AD DUP5 DUP3 DUP6 PUSH3 0x141 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1CC JUMPI PUSH3 0x1CB PUSH3 0x73 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1DE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x16B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x200 JUMPI PUSH3 0x1FF PUSH3 0x6B JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x220 JUMPI PUSH3 0x21F PUSH3 0x6F JUMP JUMPDEST JUMPDEST PUSH3 0x22E DUP6 DUP3 DUP7 ADD PUSH3 0x1B5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x252 JUMPI PUSH3 0x251 PUSH3 0x6F JUMP JUMPDEST JUMPDEST PUSH3 0x260 DUP6 DUP3 DUP7 ADD PUSH3 0x1B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2B9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2CF JUMPI PUSH3 0x2CE PUSH3 0x274 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x333 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2F6 JUMP JUMPDEST PUSH3 0x33F DUP7 DUP4 PUSH3 0x2F6 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x389 PUSH3 0x383 PUSH3 0x37D DUP5 PUSH3 0x357 JUMP JUMPDEST PUSH3 0x360 JUMP JUMPDEST PUSH3 0x357 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3A4 DUP4 PUSH3 0x369 JUMP JUMPDEST PUSH3 0x3BC PUSH3 0x3B3 DUP3 PUSH3 0x390 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x302 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x3D2 PUSH3 0x3C4 JUMP JUMPDEST PUSH3 0x3DF DUP2 DUP5 DUP5 PUSH3 0x399 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x406 JUMPI PUSH3 0x3FA PUSH0 DUP3 PUSH3 0x3C8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3E5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x455 JUMPI PUSH3 0x41F DUP2 PUSH3 0x2D5 JUMP JUMPDEST PUSH3 0x42A DUP5 PUSH3 0x2E7 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x43A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x452 PUSH3 0x449 DUP6 PUSH3 0x2E7 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3E4 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x477 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x45A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x491 DUP4 DUP4 PUSH3 0x466 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4AC DUP3 PUSH3 0x26A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4C8 JUMPI PUSH3 0x4C7 PUSH3 0x8B JUMP JUMPDEST JUMPDEST PUSH3 0x4D4 DUP3 SLOAD PUSH3 0x2A1 JUMP JUMPDEST PUSH3 0x4E1 DUP3 DUP3 DUP6 PUSH3 0x40A JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x517 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x502 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x50E DUP6 DUP3 PUSH3 0x484 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x57D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x527 DUP7 PUSH3 0x2D5 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x550 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x529 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x570 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x56C PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x466 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x11C3 DUP1 PUSH3 0x593 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x243 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x147 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x325 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xC92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xCAB JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0xADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x258 SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x282 SWAP1 PUSH2 0xD41 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AE SWAP1 PUSH2 0xD41 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x30D PUSH2 0x588 JUMP JUMPDEST SWAP1 POP PUSH2 0x31A DUP2 DUP6 DUP6 PUSH2 0x58F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x338 PUSH2 0x588 JUMP JUMPDEST SWAP1 POP PUSH2 0x345 DUP6 DUP3 DUP6 PUSH2 0x752 JUMP JUMPDEST PUSH2 0x350 DUP6 DUP6 DUP6 PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x36E PUSH2 0x588 JUMP JUMPDEST SWAP1 POP PUSH2 0x38F DUP2 DUP6 DUP6 PUSH2 0x380 DUP6 DUP10 PUSH2 0x506 JUMP JUMPDEST PUSH2 0x38A SWAP2 SWAP1 PUSH2 0xD9E JUMP JUMPDEST PUSH2 0x58F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3EE SWAP1 PUSH2 0xD41 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x41A SWAP1 PUSH2 0xD41 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x465 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x43C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x465 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x448 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x479 PUSH2 0x588 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x486 DUP3 DUP7 PUSH2 0x506 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C2 SWAP1 PUSH2 0xE41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4D8 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x58F JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4EE PUSH2 0x588 JUMP JUMPDEST SWAP1 POP PUSH2 0x4FB DUP2 DUP6 DUP6 PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F4 SWAP1 PUSH2 0xECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x66B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x662 SWAP1 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x745 SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x75D DUP5 DUP5 PUSH2 0x506 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7D7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C0 SWAP1 PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D6 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x58F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x842 SWAP1 PUSH2 0x1053 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B0 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C4 DUP4 DUP4 DUP4 PUSH2 0xA49 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x947 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93E SWAP1 PUSH2 0x116F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA43 DUP5 DUP5 DUP5 PUSH2 0xA4E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA8A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA6F JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAAF DUP3 PUSH2 0xA53 JUMP JUMPDEST PUSH2 0xAB9 DUP2 DUP6 PUSH2 0xA5D JUMP JUMPDEST SWAP4 POP PUSH2 0xAC9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA6D JUMP JUMPDEST PUSH2 0xAD2 DUP2 PUSH2 0xA95 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAF5 DUP2 DUP5 PUSH2 0xAA5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB2A DUP3 PUSH2 0xB01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3A DUP2 PUSH2 0xB20 JUMP JUMPDEST DUP2 EQ PUSH2 0xB44 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB55 DUP2 PUSH2 0xB31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6D DUP2 PUSH2 0xB5B JUMP JUMPDEST DUP2 EQ PUSH2 0xB77 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB88 DUP2 PUSH2 0xB64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBA4 JUMPI PUSH2 0xBA3 PUSH2 0xAFD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBB1 DUP6 DUP3 DUP7 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBC2 DUP6 DUP3 DUP7 ADD PUSH2 0xB7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBE0 DUP2 PUSH2 0xBCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBF9 PUSH0 DUP4 ADD DUP5 PUSH2 0xBD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC08 DUP2 PUSH2 0xB5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC21 PUSH0 DUP4 ADD DUP5 PUSH2 0xBFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC3E JUMPI PUSH2 0xC3D PUSH2 0xAFD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC4B DUP7 DUP3 DUP8 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC5C DUP7 DUP3 DUP8 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC6D DUP7 DUP3 DUP8 ADD PUSH2 0xB7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC8C DUP2 PUSH2 0xC77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCA5 PUSH0 DUP4 ADD DUP5 PUSH2 0xC83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC0 JUMPI PUSH2 0xCBF PUSH2 0xAFD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCCD DUP5 DUP3 DUP6 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCEC JUMPI PUSH2 0xCEB PUSH2 0xAFD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCF9 DUP6 DUP3 DUP7 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD0A DUP6 DUP3 DUP7 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD58 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD6B JUMPI PUSH2 0xD6A PUSH2 0xD14 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xDA8 DUP3 PUSH2 0xB5B JUMP JUMPDEST SWAP2 POP PUSH2 0xDB3 DUP4 PUSH2 0xB5B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDCB JUMPI PUSH2 0xDCA PUSH2 0xD71 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE2B PUSH1 0x25 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0xE36 DUP3 PUSH2 0xDD1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE58 DUP2 PUSH2 0xE1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEB9 PUSH1 0x24 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0xEC4 DUP3 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEE6 DUP2 PUSH2 0xEAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF47 PUSH1 0x22 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0xF52 DUP3 PUSH2 0xEED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF74 DUP2 PUSH2 0xF3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFAF PUSH1 0x1D DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0xFBA DUP3 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFDC DUP2 PUSH2 0xFA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x103D PUSH1 0x25 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0x1048 DUP3 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x106A DUP2 PUSH2 0x1031 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10CB PUSH1 0x23 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0x10D6 DUP3 PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10F8 DUP2 PUSH2 0x10BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1159 PUSH1 0x26 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0x1164 DUP3 PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1186 DUP2 PUSH2 0x114D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED SWAP15 SWAP5 0xDC SMOD 0xA7 0xB3 SWAP2 DUP1 CREATE PUSH13 0x61B7F536B4ABC806BA4FEA9405 0x4B SWAP4 0xD3 0xC8 PC SELFDESTRUCT JUMPDEST PUSH15 0x64736F6C6343000814003300000000 ","sourceMap":"1532:11312:7:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2054:5;2046;:13;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;:::i;:::-;;1980:113;;1532:11312;;7:75:27;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;1532:11312:7:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1209":{"entryPoint":2638,"id":1209,"parameterSlots":3,"returnSlots":0},"@_approve_1144":{"entryPoint":1423,"id":1144,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1198":{"entryPoint":2633,"id":1198,"parameterSlots":3,"returnSlots":0},"@_msgSender_2311":{"entryPoint":1416,"id":2311,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1187":{"entryPoint":1874,"id":1187,"parameterSlots":3,"returnSlots":0},"@_transfer_970":{"entryPoint":2013,"id":970,"parameterSlots":3,"returnSlots":0},"@allowance_765":{"entryPoint":1286,"id":765,"parameterSlots":2,"returnSlots":1},"@approve_790":{"entryPoint":771,"id":790,"parameterSlots":2,"returnSlots":1},"@balanceOf_722":{"entryPoint":922,"id":722,"parameterSlots":1,"returnSlots":1},"@decimals_698":{"entryPoint":860,"id":698,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_893":{"entryPoint":1135,"id":893,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_852":{"entryPoint":868,"id":852,"parameterSlots":2,"returnSlots":1},"@name_678":{"entryPoint":627,"id":678,"parameterSlots":0,"returnSlots":1},"@symbol_688":{"entryPoint":991,"id":688,"parameterSlots":0,"returnSlots":1},"@totalSupply_708":{"entryPoint":805,"id":708,"parameterSlots":0,"returnSlots":1},"@transferFrom_823":{"entryPoint":814,"id":823,"parameterSlots":3,"returnSlots":1},"@transfer_747":{"entryPoint":1252,"id":747,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2887,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2938,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3243,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3286,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3111,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2958,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3031,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2725,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4287,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":3899,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4003,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4429,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4145,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3757,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3615,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3071,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3203,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3046,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2781,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4321,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3933,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4037,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4463,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4179,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3791,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3649,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3086,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3218,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2643,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2653,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3486,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2848,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3020,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2817,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2907,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3191,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2669,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3393,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3441,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3348,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2813,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2709,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4209,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3821,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":3963,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4351,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4067,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3679,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3537,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2865,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2916,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13699:27","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:27","statements":[{"nodeType":"YulAssignment","src":"77:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:27"},"nodeType":"YulFunctionCall","src":"87:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:27"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:27","type":""}],"src":"7:99:27"},{"body":{"nodeType":"YulBlock","src":"208:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:27"},"nodeType":"YulFunctionCall","src":"218:19:27"},"nodeType":"YulExpressionStatement","src":"218:19:27"},{"nodeType":"YulAssignment","src":"246:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:27"},"nodeType":"YulFunctionCall","src":"261:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:27","type":""}],"src":"112:169:27"},{"body":{"nodeType":"YulBlock","src":"349:184:27","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:27"},"nodeType":"YulFunctionCall","src":"449:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:27"},"nodeType":"YulFunctionCall","src":"468:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:27"},"nodeType":"YulFunctionCall","src":"462:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:27"},"nodeType":"YulFunctionCall","src":"442:39:27"},"nodeType":"YulExpressionStatement","src":"442:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:27"},"nodeType":"YulFunctionCall","src":"386:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:27","statements":[{"nodeType":"YulAssignment","src":"402:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:27"},"nodeType":"YulFunctionCall","src":"407:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:27","statements":[]},"src":"378:113:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:27"},"nodeType":"YulFunctionCall","src":"507:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:27"},"nodeType":"YulFunctionCall","src":"500:27:27"},"nodeType":"YulExpressionStatement","src":"500:27:27"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:27","type":""}],"src":"287:246:27"},{"body":{"nodeType":"YulBlock","src":"587:54:27","statements":[{"nodeType":"YulAssignment","src":"597:38:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:27"},"nodeType":"YulFunctionCall","src":"611:14:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:27"},"nodeType":"YulFunctionCall","src":"627:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:27"},"nodeType":"YulFunctionCall","src":"607:28:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:27"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:27","type":""}],"src":"539:102:27"},{"body":{"nodeType":"YulBlock","src":"739:285:27","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:27"},"nodeType":"YulFunctionCall","src":"763:39:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:27","type":""}]},{"nodeType":"YulAssignment","src":"811:78:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:27"},"nodeType":"YulFunctionCall","src":"818:71:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:27"},"nodeType":"YulFunctionCall","src":"933:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:27"},"nodeType":"YulFunctionCall","src":"898:65:27"},"nodeType":"YulExpressionStatement","src":"898:65:27"},{"nodeType":"YulAssignment","src":"972:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:27"},"nodeType":"YulFunctionCall","src":"988:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:27"},"nodeType":"YulFunctionCall","src":"979:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:27"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:27","type":""}],"src":"647:377:27"},{"body":{"nodeType":"YulBlock","src":"1148:195:27","statements":[{"nodeType":"YulAssignment","src":"1158:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:27"},"nodeType":"YulFunctionCall","src":"1166:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:27"},"nodeType":"YulFunctionCall","src":"1201:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:27"},"nodeType":"YulFunctionCall","src":"1220:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:27"},"nodeType":"YulFunctionCall","src":"1194:47:27"},"nodeType":"YulExpressionStatement","src":"1194:47:27"},{"nodeType":"YulAssignment","src":"1250:86:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:27"},"nodeType":"YulFunctionCall","src":"1258:78:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:27","type":""}],"src":"1030:313:27"},{"body":{"nodeType":"YulBlock","src":"1389:35:27","statements":[{"nodeType":"YulAssignment","src":"1399:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:27"},"nodeType":"YulFunctionCall","src":"1409:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:27"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:27","type":""}],"src":"1349:75:27"},{"body":{"nodeType":"YulBlock","src":"1519:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:27"},"nodeType":"YulFunctionCall","src":"1529:12:27"},"nodeType":"YulExpressionStatement","src":"1529:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:27"},{"body":{"nodeType":"YulBlock","src":"1642:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:27"},"nodeType":"YulFunctionCall","src":"1652:12:27"},"nodeType":"YulExpressionStatement","src":"1652:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:27"},{"body":{"nodeType":"YulBlock","src":"1721:81:27","statements":[{"nodeType":"YulAssignment","src":"1731:65:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:27"},"nodeType":"YulFunctionCall","src":"1742:54:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:27"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:27","type":""}],"src":"1676:126:27"},{"body":{"nodeType":"YulBlock","src":"1853:51:27","statements":[{"nodeType":"YulAssignment","src":"1863:35:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:27"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:27"},"nodeType":"YulFunctionCall","src":"1874:24:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:27"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:27","type":""}],"src":"1808:96:27"},{"body":{"nodeType":"YulBlock","src":"1953:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:27"},"nodeType":"YulFunctionCall","src":"2012:12:27"},"nodeType":"YulExpressionStatement","src":"2012:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:27"},"nodeType":"YulFunctionCall","src":"1983:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:27"},"nodeType":"YulFunctionCall","src":"1973:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:27"},"nodeType":"YulFunctionCall","src":"1966:43:27"},"nodeType":"YulIf","src":"1963:63:27"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:27","type":""}],"src":"1910:122:27"},{"body":{"nodeType":"YulBlock","src":"2090:87:27","statements":[{"nodeType":"YulAssignment","src":"2100:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:27"},"nodeType":"YulFunctionCall","src":"2109:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:27"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:27"},"nodeType":"YulFunctionCall","src":"2138:33:27"},"nodeType":"YulExpressionStatement","src":"2138:33:27"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:27","type":""}],"src":"2038:139:27"},{"body":{"nodeType":"YulBlock","src":"2228:32:27","statements":[{"nodeType":"YulAssignment","src":"2238:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:27"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:27","type":""}],"src":"2183:77:27"},{"body":{"nodeType":"YulBlock","src":"2309:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:27"},"nodeType":"YulFunctionCall","src":"2368:12:27"},"nodeType":"YulExpressionStatement","src":"2368:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:27"},"nodeType":"YulFunctionCall","src":"2339:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:27"},"nodeType":"YulFunctionCall","src":"2329:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:27"},"nodeType":"YulFunctionCall","src":"2322:43:27"},"nodeType":"YulIf","src":"2319:63:27"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:27","type":""}],"src":"2266:122:27"},{"body":{"nodeType":"YulBlock","src":"2446:87:27","statements":[{"nodeType":"YulAssignment","src":"2456:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:27"},"nodeType":"YulFunctionCall","src":"2465:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:27"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:27"},"nodeType":"YulFunctionCall","src":"2494:33:27"},"nodeType":"YulExpressionStatement","src":"2494:33:27"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:27","type":""}],"src":"2394:139:27"},{"body":{"nodeType":"YulBlock","src":"2622:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:27"},"nodeType":"YulFunctionCall","src":"2670:79:27"},"nodeType":"YulExpressionStatement","src":"2670:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:27"},"nodeType":"YulFunctionCall","src":"2639:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:27"},"nodeType":"YulFunctionCall","src":"2635:32:27"},"nodeType":"YulIf","src":"2632:119:27"},{"nodeType":"YulBlock","src":"2761:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:27"},"nodeType":"YulFunctionCall","src":"2836:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:27"},"nodeType":"YulFunctionCall","src":"2815:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:27"}]}]},{"nodeType":"YulBlock","src":"2888:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:27"},"nodeType":"YulFunctionCall","src":"2964:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:27"},"nodeType":"YulFunctionCall","src":"2943:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:27","type":""}],"src":"2539:474:27"},{"body":{"nodeType":"YulBlock","src":"3061:48:27","statements":[{"nodeType":"YulAssignment","src":"3071:32:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:27"},"nodeType":"YulFunctionCall","src":"3089:13:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:27"},"nodeType":"YulFunctionCall","src":"3082:21:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:27"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:27","type":""}],"src":"3019:90:27"},{"body":{"nodeType":"YulBlock","src":"3174:50:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:27"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:27"},"nodeType":"YulFunctionCall","src":"3196:21:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:27"},"nodeType":"YulFunctionCall","src":"3184:34:27"},"nodeType":"YulExpressionStatement","src":"3184:34:27"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:27","type":""}],"src":"3115:109:27"},{"body":{"nodeType":"YulBlock","src":"3322:118:27","statements":[{"nodeType":"YulAssignment","src":"3332:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:27"},"nodeType":"YulFunctionCall","src":"3340:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:27"},"nodeType":"YulFunctionCall","src":"3415:17:27"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:27"},"nodeType":"YulFunctionCall","src":"3368:65:27"},"nodeType":"YulExpressionStatement","src":"3368:65:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:27","type":""}],"src":"3230:210:27"},{"body":{"nodeType":"YulBlock","src":"3511:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:27"},"nodeType":"YulFunctionCall","src":"3533:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:27"},"nodeType":"YulFunctionCall","src":"3521:37:27"},"nodeType":"YulExpressionStatement","src":"3521:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:27","type":""}],"src":"3446:118:27"},{"body":{"nodeType":"YulBlock","src":"3668:124:27","statements":[{"nodeType":"YulAssignment","src":"3678:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:27"},"nodeType":"YulFunctionCall","src":"3686:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:27"},"nodeType":"YulFunctionCall","src":"3767:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:27"},"nodeType":"YulFunctionCall","src":"3714:71:27"},"nodeType":"YulExpressionStatement","src":"3714:71:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:27","type":""}],"src":"3570:222:27"},{"body":{"nodeType":"YulBlock","src":"3898:519:27","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:27"},"nodeType":"YulFunctionCall","src":"3946:79:27"},"nodeType":"YulExpressionStatement","src":"3946:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:27"},"nodeType":"YulFunctionCall","src":"3915:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:27"},"nodeType":"YulFunctionCall","src":"3911:32:27"},"nodeType":"YulIf","src":"3908:119:27"},{"nodeType":"YulBlock","src":"4037:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:27"},"nodeType":"YulFunctionCall","src":"4112:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:27"},"nodeType":"YulFunctionCall","src":"4091:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:27"}]}]},{"nodeType":"YulBlock","src":"4164:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:27"},"nodeType":"YulFunctionCall","src":"4240:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:27"},"nodeType":"YulFunctionCall","src":"4219:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:27"}]}]},{"nodeType":"YulBlock","src":"4292:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:27"},"nodeType":"YulFunctionCall","src":"4368:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:27"},"nodeType":"YulFunctionCall","src":"4347:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:27","type":""}],"src":"3798:619:27"},{"body":{"nodeType":"YulBlock","src":"4466:43:27","statements":[{"nodeType":"YulAssignment","src":"4476:27:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:27"},"nodeType":"YulFunctionCall","src":"4487:16:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:27"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:27","type":""}],"src":"4423:86:27"},{"body":{"nodeType":"YulBlock","src":"4576:51:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:27"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:27"},"nodeType":"YulFunctionCall","src":"4598:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:27"},"nodeType":"YulFunctionCall","src":"4586:35:27"},"nodeType":"YulExpressionStatement","src":"4586:35:27"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:27","type":""}],"src":"4515:112:27"},{"body":{"nodeType":"YulBlock","src":"4727:120:27","statements":[{"nodeType":"YulAssignment","src":"4737:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:27"},"nodeType":"YulFunctionCall","src":"4745:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:27"},"nodeType":"YulFunctionCall","src":"4822:17:27"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:27"},"nodeType":"YulFunctionCall","src":"4773:67:27"},"nodeType":"YulExpressionStatement","src":"4773:67:27"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:27","type":""}],"src":"4633:214:27"},{"body":{"nodeType":"YulBlock","src":"4919:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:27"},"nodeType":"YulFunctionCall","src":"4967:79:27"},"nodeType":"YulExpressionStatement","src":"4967:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:27"},"nodeType":"YulFunctionCall","src":"4936:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:27"},"nodeType":"YulFunctionCall","src":"4932:32:27"},"nodeType":"YulIf","src":"4929:119:27"},{"nodeType":"YulBlock","src":"5058:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:27"},"nodeType":"YulFunctionCall","src":"5133:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:27"},"nodeType":"YulFunctionCall","src":"5112:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:27"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:27","type":""}],"src":"4853:329:27"},{"body":{"nodeType":"YulBlock","src":"5271:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5319:77:27"},"nodeType":"YulFunctionCall","src":"5319:79:27"},"nodeType":"YulExpressionStatement","src":"5319:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5292:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5288:3:27"},"nodeType":"YulFunctionCall","src":"5288:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5313:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5284:3:27"},"nodeType":"YulFunctionCall","src":"5284:32:27"},"nodeType":"YulIf","src":"5281:119:27"},{"nodeType":"YulBlock","src":"5410:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5439:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5429:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5454:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:27"},"nodeType":"YulFunctionCall","src":"5485:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5509:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5464:20:27"},"nodeType":"YulFunctionCall","src":"5464:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:27"}]}]},{"nodeType":"YulBlock","src":"5537:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5552:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5566:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5556:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:27"},"nodeType":"YulFunctionCall","src":"5613:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5592:20:27"},"nodeType":"YulFunctionCall","src":"5592:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5582:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5233:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5244:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5256:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5264:6:27","type":""}],"src":"5188:474:27"},{"body":{"nodeType":"YulBlock","src":"5696:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5713:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5716:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:27"},"nodeType":"YulFunctionCall","src":"5706:88:27"},"nodeType":"YulExpressionStatement","src":"5706:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5810:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5813:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:27"},"nodeType":"YulFunctionCall","src":"5803:15:27"},"nodeType":"YulExpressionStatement","src":"5803:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:27"},"nodeType":"YulFunctionCall","src":"5827:15:27"},"nodeType":"YulExpressionStatement","src":"5827:15:27"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5668:180:27"},{"body":{"nodeType":"YulBlock","src":"5905:269:27","statements":[{"nodeType":"YulAssignment","src":"5915:22:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5929:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:27","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5925:3:27"},"nodeType":"YulFunctionCall","src":"5925:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5915:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"5946:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5976:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"5982:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5972:3:27"},"nodeType":"YulFunctionCall","src":"5972:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5950:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:51:27","statements":[{"nodeType":"YulAssignment","src":"6037:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6051:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:27"},"nodeType":"YulFunctionCall","src":"6047:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6037:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6003:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:27"},"nodeType":"YulFunctionCall","src":"5996:26:27"},"nodeType":"YulIf","src":"5993:81:27"},{"body":{"nodeType":"YulBlock","src":"6126:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6140:16:27"},"nodeType":"YulFunctionCall","src":"6140:18:27"},"nodeType":"YulExpressionStatement","src":"6140:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6090:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6113:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6121:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6110:2:27"},"nodeType":"YulFunctionCall","src":"6110:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6087:2:27"},"nodeType":"YulFunctionCall","src":"6087:38:27"},"nodeType":"YulIf","src":"6084:84:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5889:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:27","type":""}],"src":"5854:320:27"},{"body":{"nodeType":"YulBlock","src":"6208:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6225:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6228:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6218:6:27"},"nodeType":"YulFunctionCall","src":"6218:88:27"},"nodeType":"YulExpressionStatement","src":"6218:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6322:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6325:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:27"},"nodeType":"YulFunctionCall","src":"6315:15:27"},"nodeType":"YulExpressionStatement","src":"6315:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6346:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6349:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6339:6:27"},"nodeType":"YulFunctionCall","src":"6339:15:27"},"nodeType":"YulExpressionStatement","src":"6339:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6180:180:27"},{"body":{"nodeType":"YulBlock","src":"6410:147:27","statements":[{"nodeType":"YulAssignment","src":"6420:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6443:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6425:17:27"},"nodeType":"YulFunctionCall","src":"6425:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6420:1:27"}]},{"nodeType":"YulAssignment","src":"6454:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6477:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6459:17:27"},"nodeType":"YulFunctionCall","src":"6459:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6454:1:27"}]},{"nodeType":"YulAssignment","src":"6488:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6499:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"6502:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6495:3:27"},"nodeType":"YulFunctionCall","src":"6495:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6488:3:27"}]},{"body":{"nodeType":"YulBlock","src":"6528:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6530:16:27"},"nodeType":"YulFunctionCall","src":"6530:18:27"},"nodeType":"YulExpressionStatement","src":"6530:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6520:1:27"},{"name":"sum","nodeType":"YulIdentifier","src":"6523:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6517:2:27"},"nodeType":"YulFunctionCall","src":"6517:10:27"},"nodeType":"YulIf","src":"6514:36:27"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6397:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"6400:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6406:3:27","type":""}],"src":"6366:191:27"},{"body":{"nodeType":"YulBlock","src":"6669:118:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6691:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6699:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6687:3:27"},"nodeType":"YulFunctionCall","src":"6687:14:27"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6703:34:27","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6680:6:27"},"nodeType":"YulFunctionCall","src":"6680:58:27"},"nodeType":"YulExpressionStatement","src":"6680:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6759:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6767:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6755:3:27"},"nodeType":"YulFunctionCall","src":"6755:15:27"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6772:7:27","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6748:6:27"},"nodeType":"YulFunctionCall","src":"6748:32:27"},"nodeType":"YulExpressionStatement","src":"6748:32:27"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6661:6:27","type":""}],"src":"6563:224:27"},{"body":{"nodeType":"YulBlock","src":"6939:220:27","statements":[{"nodeType":"YulAssignment","src":"6949:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7015:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"7020:2:27","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6956:58:27"},"nodeType":"YulFunctionCall","src":"6956:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6949:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7121:3:27"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7032:88:27"},"nodeType":"YulFunctionCall","src":"7032:93:27"},"nodeType":"YulExpressionStatement","src":"7032:93:27"},{"nodeType":"YulAssignment","src":"7134:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7145:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"7150:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7141:3:27"},"nodeType":"YulFunctionCall","src":"7141:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7134:3:27"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6927:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6935:3:27","type":""}],"src":"6793:366:27"},{"body":{"nodeType":"YulBlock","src":"7336:248:27","statements":[{"nodeType":"YulAssignment","src":"7346:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7358:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7369:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7354:3:27"},"nodeType":"YulFunctionCall","src":"7354:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7346:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7393:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7404:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7389:3:27"},"nodeType":"YulFunctionCall","src":"7389:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7412:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"7418:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7408:3:27"},"nodeType":"YulFunctionCall","src":"7408:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7382:6:27"},"nodeType":"YulFunctionCall","src":"7382:47:27"},"nodeType":"YulExpressionStatement","src":"7382:47:27"},{"nodeType":"YulAssignment","src":"7438:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7572:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7446:124:27"},"nodeType":"YulFunctionCall","src":"7446:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7438:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7316:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7331:4:27","type":""}],"src":"7165:419:27"},{"body":{"nodeType":"YulBlock","src":"7696:117:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7718:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7726:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:27"},"nodeType":"YulFunctionCall","src":"7714:14:27"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7730:34:27","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7707:6:27"},"nodeType":"YulFunctionCall","src":"7707:58:27"},"nodeType":"YulExpressionStatement","src":"7707:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7786:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7794:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7782:3:27"},"nodeType":"YulFunctionCall","src":"7782:15:27"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7799:6:27","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7775:6:27"},"nodeType":"YulFunctionCall","src":"7775:31:27"},"nodeType":"YulExpressionStatement","src":"7775:31:27"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7688:6:27","type":""}],"src":"7590:223:27"},{"body":{"nodeType":"YulBlock","src":"7965:220:27","statements":[{"nodeType":"YulAssignment","src":"7975:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8041:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"8046:2:27","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7982:58:27"},"nodeType":"YulFunctionCall","src":"7982:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7975:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8147:3:27"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8058:88:27"},"nodeType":"YulFunctionCall","src":"8058:93:27"},"nodeType":"YulExpressionStatement","src":"8058:93:27"},{"nodeType":"YulAssignment","src":"8160:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8171:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"8176:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8167:3:27"},"nodeType":"YulFunctionCall","src":"8167:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8160:3:27"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7953:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7961:3:27","type":""}],"src":"7819:366:27"},{"body":{"nodeType":"YulBlock","src":"8362:248:27","statements":[{"nodeType":"YulAssignment","src":"8372:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8384:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8395:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8380:3:27"},"nodeType":"YulFunctionCall","src":"8380:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8372:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8419:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8430:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8415:3:27"},"nodeType":"YulFunctionCall","src":"8415:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8438:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"8444:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8434:3:27"},"nodeType":"YulFunctionCall","src":"8434:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8408:6:27"},"nodeType":"YulFunctionCall","src":"8408:47:27"},"nodeType":"YulExpressionStatement","src":"8408:47:27"},{"nodeType":"YulAssignment","src":"8464:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8598:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8472:124:27"},"nodeType":"YulFunctionCall","src":"8472:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8464:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8342:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8357:4:27","type":""}],"src":"8191:419:27"},{"body":{"nodeType":"YulBlock","src":"8722:115:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8744:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8752:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8740:3:27"},"nodeType":"YulFunctionCall","src":"8740:14:27"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8756:34:27","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8733:6:27"},"nodeType":"YulFunctionCall","src":"8733:58:27"},"nodeType":"YulExpressionStatement","src":"8733:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8812:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8820:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8808:3:27"},"nodeType":"YulFunctionCall","src":"8808:15:27"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8825:4:27","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8801:6:27"},"nodeType":"YulFunctionCall","src":"8801:29:27"},"nodeType":"YulExpressionStatement","src":"8801:29:27"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8714:6:27","type":""}],"src":"8616:221:27"},{"body":{"nodeType":"YulBlock","src":"8989:220:27","statements":[{"nodeType":"YulAssignment","src":"8999:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9065:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9070:2:27","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9006:58:27"},"nodeType":"YulFunctionCall","src":"9006:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8999:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9171:3:27"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9082:88:27"},"nodeType":"YulFunctionCall","src":"9082:93:27"},"nodeType":"YulExpressionStatement","src":"9082:93:27"},{"nodeType":"YulAssignment","src":"9184:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9195:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9200:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9191:3:27"},"nodeType":"YulFunctionCall","src":"9191:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9184:3:27"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8977:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8985:3:27","type":""}],"src":"8843:366:27"},{"body":{"nodeType":"YulBlock","src":"9386:248:27","statements":[{"nodeType":"YulAssignment","src":"9396:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9408:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9419:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9404:3:27"},"nodeType":"YulFunctionCall","src":"9404:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9396:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9443:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9454:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9439:3:27"},"nodeType":"YulFunctionCall","src":"9439:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9462:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"9468:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9458:3:27"},"nodeType":"YulFunctionCall","src":"9458:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9432:6:27"},"nodeType":"YulFunctionCall","src":"9432:47:27"},"nodeType":"YulExpressionStatement","src":"9432:47:27"},{"nodeType":"YulAssignment","src":"9488:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9622:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9496:124:27"},"nodeType":"YulFunctionCall","src":"9496:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9488:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9366:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9381:4:27","type":""}],"src":"9215:419:27"},{"body":{"nodeType":"YulBlock","src":"9746:73:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9768:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"9776:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9764:3:27"},"nodeType":"YulFunctionCall","src":"9764:14:27"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9780:31:27","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9757:6:27"},"nodeType":"YulFunctionCall","src":"9757:55:27"},"nodeType":"YulExpressionStatement","src":"9757:55:27"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9738:6:27","type":""}],"src":"9640:179:27"},{"body":{"nodeType":"YulBlock","src":"9971:220:27","statements":[{"nodeType":"YulAssignment","src":"9981:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10047:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"10052:2:27","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9988:58:27"},"nodeType":"YulFunctionCall","src":"9988:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9981:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10153:3:27"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10064:88:27"},"nodeType":"YulFunctionCall","src":"10064:93:27"},"nodeType":"YulExpressionStatement","src":"10064:93:27"},{"nodeType":"YulAssignment","src":"10166:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10177:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"10182:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10173:3:27"},"nodeType":"YulFunctionCall","src":"10173:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10166:3:27"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9959:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9967:3:27","type":""}],"src":"9825:366:27"},{"body":{"nodeType":"YulBlock","src":"10368:248:27","statements":[{"nodeType":"YulAssignment","src":"10378:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10390:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10401:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10386:3:27"},"nodeType":"YulFunctionCall","src":"10386:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10378:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10425:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10436:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10421:3:27"},"nodeType":"YulFunctionCall","src":"10421:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10444:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"10450:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10440:3:27"},"nodeType":"YulFunctionCall","src":"10440:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10414:6:27"},"nodeType":"YulFunctionCall","src":"10414:47:27"},"nodeType":"YulExpressionStatement","src":"10414:47:27"},{"nodeType":"YulAssignment","src":"10470:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10604:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10478:124:27"},"nodeType":"YulFunctionCall","src":"10478:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10470:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10348:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10363:4:27","type":""}],"src":"10197:419:27"},{"body":{"nodeType":"YulBlock","src":"10728:118:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10750:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"10758:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10746:3:27"},"nodeType":"YulFunctionCall","src":"10746:14:27"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10762:34:27","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10739:6:27"},"nodeType":"YulFunctionCall","src":"10739:58:27"},"nodeType":"YulExpressionStatement","src":"10739:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10818:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"10826:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10814:3:27"},"nodeType":"YulFunctionCall","src":"10814:15:27"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10831:7:27","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10807:6:27"},"nodeType":"YulFunctionCall","src":"10807:32:27"},"nodeType":"YulExpressionStatement","src":"10807:32:27"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10720:6:27","type":""}],"src":"10622:224:27"},{"body":{"nodeType":"YulBlock","src":"10998:220:27","statements":[{"nodeType":"YulAssignment","src":"11008:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11074:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"11079:2:27","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11015:58:27"},"nodeType":"YulFunctionCall","src":"11015:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11008:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11180:3:27"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11091:88:27"},"nodeType":"YulFunctionCall","src":"11091:93:27"},"nodeType":"YulExpressionStatement","src":"11091:93:27"},{"nodeType":"YulAssignment","src":"11193:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11204:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"11209:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11200:3:27"},"nodeType":"YulFunctionCall","src":"11200:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11193:3:27"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10986:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10994:3:27","type":""}],"src":"10852:366:27"},{"body":{"nodeType":"YulBlock","src":"11395:248:27","statements":[{"nodeType":"YulAssignment","src":"11405:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11417:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:27"},"nodeType":"YulFunctionCall","src":"11413:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11405:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11452:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11463:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11448:3:27"},"nodeType":"YulFunctionCall","src":"11448:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11471:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"11477:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11467:3:27"},"nodeType":"YulFunctionCall","src":"11467:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11441:6:27"},"nodeType":"YulFunctionCall","src":"11441:47:27"},"nodeType":"YulExpressionStatement","src":"11441:47:27"},{"nodeType":"YulAssignment","src":"11497:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11631:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11505:124:27"},"nodeType":"YulFunctionCall","src":"11505:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11497:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11375:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11390:4:27","type":""}],"src":"11224:419:27"},{"body":{"nodeType":"YulBlock","src":"11755:116:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11777:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"11785:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11773:3:27"},"nodeType":"YulFunctionCall","src":"11773:14:27"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11789:34:27","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11766:6:27"},"nodeType":"YulFunctionCall","src":"11766:58:27"},"nodeType":"YulExpressionStatement","src":"11766:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11845:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"11853:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11841:3:27"},"nodeType":"YulFunctionCall","src":"11841:15:27"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"11858:5:27","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11834:6:27"},"nodeType":"YulFunctionCall","src":"11834:30:27"},"nodeType":"YulExpressionStatement","src":"11834:30:27"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11747:6:27","type":""}],"src":"11649:222:27"},{"body":{"nodeType":"YulBlock","src":"12023:220:27","statements":[{"nodeType":"YulAssignment","src":"12033:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12099:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"12104:2:27","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12040:58:27"},"nodeType":"YulFunctionCall","src":"12040:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12033:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12205:3:27"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12116:88:27"},"nodeType":"YulFunctionCall","src":"12116:93:27"},"nodeType":"YulExpressionStatement","src":"12116:93:27"},{"nodeType":"YulAssignment","src":"12218:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12229:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"12234:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12225:3:27"},"nodeType":"YulFunctionCall","src":"12225:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12218:3:27"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12011:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12019:3:27","type":""}],"src":"11877:366:27"},{"body":{"nodeType":"YulBlock","src":"12420:248:27","statements":[{"nodeType":"YulAssignment","src":"12430:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12438:3:27"},"nodeType":"YulFunctionCall","src":"12438:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12430:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12477:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12488:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12473:3:27"},"nodeType":"YulFunctionCall","src":"12473:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12496:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"12502:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12492:3:27"},"nodeType":"YulFunctionCall","src":"12492:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12466:6:27"},"nodeType":"YulFunctionCall","src":"12466:47:27"},"nodeType":"YulExpressionStatement","src":"12466:47:27"},{"nodeType":"YulAssignment","src":"12522:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12656:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12530:124:27"},"nodeType":"YulFunctionCall","src":"12530:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12522:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12400:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12415:4:27","type":""}],"src":"12249:419:27"},{"body":{"nodeType":"YulBlock","src":"12780:119:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12802:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"12810:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12798:3:27"},"nodeType":"YulFunctionCall","src":"12798:14:27"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12814:34:27","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12791:6:27"},"nodeType":"YulFunctionCall","src":"12791:58:27"},"nodeType":"YulExpressionStatement","src":"12791:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12870:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"12878:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12866:3:27"},"nodeType":"YulFunctionCall","src":"12866:15:27"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12883:8:27","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12859:6:27"},"nodeType":"YulFunctionCall","src":"12859:33:27"},"nodeType":"YulExpressionStatement","src":"12859:33:27"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12772:6:27","type":""}],"src":"12674:225:27"},{"body":{"nodeType":"YulBlock","src":"13051:220:27","statements":[{"nodeType":"YulAssignment","src":"13061:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13127:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"13132:2:27","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13068:58:27"},"nodeType":"YulFunctionCall","src":"13068:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13061:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13233:3:27"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13144:88:27"},"nodeType":"YulFunctionCall","src":"13144:93:27"},"nodeType":"YulExpressionStatement","src":"13144:93:27"},{"nodeType":"YulAssignment","src":"13246:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13257:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"13262:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13253:3:27"},"nodeType":"YulFunctionCall","src":"13253:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13246:3:27"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13039:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13047:3:27","type":""}],"src":"12905:366:27"},{"body":{"nodeType":"YulBlock","src":"13448:248:27","statements":[{"nodeType":"YulAssignment","src":"13458:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13470:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:27"},"nodeType":"YulFunctionCall","src":"13466:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13458:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13505:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13516:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13501:3:27"},"nodeType":"YulFunctionCall","src":"13501:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13524:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"13530:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13520:3:27"},"nodeType":"YulFunctionCall","src":"13520:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13494:6:27"},"nodeType":"YulFunctionCall","src":"13494:47:27"},"nodeType":"YulExpressionStatement","src":"13494:47:27"},{"nodeType":"YulAssignment","src":"13550:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13684:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13558:124:27"},"nodeType":"YulFunctionCall","src":"13558:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13550:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13428:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13443:4:27","type":""}],"src":"13277:419:27"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561000f575f80fd5b50600436106100a7575f3560e01c8063395093511161006f578063395093511461016557806370a082311461019557806395d89b41146101c5578063a457c2d7146101e3578063a9059cbb14610213578063dd62ed3e14610243576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f80fd5b6100b3610273565b6040516100c09190610add565b60405180910390f35b6100e360048036038101906100de9190610b8e565b610303565b6040516100f09190610be6565b60405180910390f35b610101610325565b60405161010e9190610c0e565b60405180910390f35b610131600480360381019061012c9190610c27565b61032e565b60405161013e9190610be6565b60405180910390f35b61014f61035c565b60405161015c9190610c92565b60405180910390f35b61017f600480360381019061017a9190610b8e565b610364565b60405161018c9190610be6565b60405180910390f35b6101af60048036038101906101aa9190610cab565b61039a565b6040516101bc9190610c0e565b60405180910390f35b6101cd6103df565b6040516101da9190610add565b60405180910390f35b6101fd60048036038101906101f89190610b8e565b61046f565b60405161020a9190610be6565b60405180910390f35b61022d60048036038101906102289190610b8e565b6104e4565b60405161023a9190610be6565b60405180910390f35b61025d60048036038101906102589190610cd6565b610506565b60405161026a9190610c0e565b60405180910390f35b60606003805461028290610d41565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610d41565b80156102f95780601f106102d0576101008083540402835291602001916102f9565b820191905f5260205f20905b8154815290600101906020018083116102dc57829003601f168201915b5050505050905090565b5f8061030d610588565b905061031a81858561058f565b600191505092915050565b5f600254905090565b5f80610338610588565b9050610345858285610752565b6103508585856107dd565b60019150509392505050565b5f6012905090565b5f8061036e610588565b905061038f8185856103808589610506565b61038a9190610d9e565b61058f565b600191505092915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546103ee90610d41565b80601f016020809104026020016040519081016040528092919081815260200182805461041a90610d41565b80156104655780601f1061043c57610100808354040283529160200191610465565b820191905f5260205f20905b81548152906001019060200180831161044857829003601f168201915b5050505050905090565b5f80610479610588565b90505f6104868286610506565b9050838110156104cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c290610e41565b60405180910390fd5b6104d8828686840361058f565b60019250505092915050565b5f806104ee610588565b90506104fb8185856107dd565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f490610ecf565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361066b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066290610f5d565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107459190610c0e565b60405180910390a3505050565b5f61075d8484610506565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107d757818110156107c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c090610fc5565b60405180910390fd5b6107d6848484840361058f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084290611053565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b0906110e1565b60405180910390fd5b6108c4838383610a49565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610947576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093e9061116f565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a309190610c0e565b60405180910390a3610a43848484610a4e565b50505050565b505050565b505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610a8a578082015181840152602081019050610a6f565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610aaf82610a53565b610ab98185610a5d565b9350610ac9818560208601610a6d565b610ad281610a95565b840191505092915050565b5f6020820190508181035f830152610af58184610aa5565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b2a82610b01565b9050919050565b610b3a81610b20565b8114610b44575f80fd5b50565b5f81359050610b5581610b31565b92915050565b5f819050919050565b610b6d81610b5b565b8114610b77575f80fd5b50565b5f81359050610b8881610b64565b92915050565b5f8060408385031215610ba457610ba3610afd565b5b5f610bb185828601610b47565b9250506020610bc285828601610b7a565b9150509250929050565b5f8115159050919050565b610be081610bcc565b82525050565b5f602082019050610bf95f830184610bd7565b92915050565b610c0881610b5b565b82525050565b5f602082019050610c215f830184610bff565b92915050565b5f805f60608486031215610c3e57610c3d610afd565b5b5f610c4b86828701610b47565b9350506020610c5c86828701610b47565b9250506040610c6d86828701610b7a565b9150509250925092565b5f60ff82169050919050565b610c8c81610c77565b82525050565b5f602082019050610ca55f830184610c83565b92915050565b5f60208284031215610cc057610cbf610afd565b5b5f610ccd84828501610b47565b91505092915050565b5f8060408385031215610cec57610ceb610afd565b5b5f610cf985828601610b47565b9250506020610d0a85828601610b47565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610d5857607f821691505b602082108103610d6b57610d6a610d14565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610da882610b5b565b9150610db383610b5b565b9250828201905080821115610dcb57610dca610d71565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f610e2b602583610a5d565b9150610e3682610dd1565b604082019050919050565b5f6020820190508181035f830152610e5881610e1f565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f610eb9602483610a5d565b9150610ec482610e5f565b604082019050919050565b5f6020820190508181035f830152610ee681610ead565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f610f47602283610a5d565b9150610f5282610eed565b604082019050919050565b5f6020820190508181035f830152610f7481610f3b565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f610faf601d83610a5d565b9150610fba82610f7b565b602082019050919050565b5f6020820190508181035f830152610fdc81610fa3565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f61103d602583610a5d565b915061104882610fe3565b604082019050919050565b5f6020820190508181035f83015261106a81611031565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f6110cb602383610a5d565b91506110d682611071565b604082019050919050565b5f6020820190508181035f8301526110f8816110bf565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f611159602683610a5d565b9150611164826110ff565b604082019050919050565b5f6020820190508181035f8301526111868161114d565b905091905056fea2646970667358221220ed9e94dc07a7b39180f06c61b7f536b4abc806ba4fea94054b93d3c858ff5b6e64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x243 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x147 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x325 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xC92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xCAB JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0xADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x258 SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x282 SWAP1 PUSH2 0xD41 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AE SWAP1 PUSH2 0xD41 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x30D PUSH2 0x588 JUMP JUMPDEST SWAP1 POP PUSH2 0x31A DUP2 DUP6 DUP6 PUSH2 0x58F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x338 PUSH2 0x588 JUMP JUMPDEST SWAP1 POP PUSH2 0x345 DUP6 DUP3 DUP6 PUSH2 0x752 JUMP JUMPDEST PUSH2 0x350 DUP6 DUP6 DUP6 PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x36E PUSH2 0x588 JUMP JUMPDEST SWAP1 POP PUSH2 0x38F DUP2 DUP6 DUP6 PUSH2 0x380 DUP6 DUP10 PUSH2 0x506 JUMP JUMPDEST PUSH2 0x38A SWAP2 SWAP1 PUSH2 0xD9E JUMP JUMPDEST PUSH2 0x58F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3EE SWAP1 PUSH2 0xD41 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x41A SWAP1 PUSH2 0xD41 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x465 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x43C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x465 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x448 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x479 PUSH2 0x588 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x486 DUP3 DUP7 PUSH2 0x506 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C2 SWAP1 PUSH2 0xE41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4D8 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x58F JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4EE PUSH2 0x588 JUMP JUMPDEST SWAP1 POP PUSH2 0x4FB DUP2 DUP6 DUP6 PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F4 SWAP1 PUSH2 0xECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x66B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x662 SWAP1 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x745 SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x75D DUP5 DUP5 PUSH2 0x506 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7D7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C0 SWAP1 PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D6 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x58F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x842 SWAP1 PUSH2 0x1053 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B0 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C4 DUP4 DUP4 DUP4 PUSH2 0xA49 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x947 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93E SWAP1 PUSH2 0x116F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA43 DUP5 DUP5 DUP5 PUSH2 0xA4E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA8A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA6F JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAAF DUP3 PUSH2 0xA53 JUMP JUMPDEST PUSH2 0xAB9 DUP2 DUP6 PUSH2 0xA5D JUMP JUMPDEST SWAP4 POP PUSH2 0xAC9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA6D JUMP JUMPDEST PUSH2 0xAD2 DUP2 PUSH2 0xA95 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAF5 DUP2 DUP5 PUSH2 0xAA5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB2A DUP3 PUSH2 0xB01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3A DUP2 PUSH2 0xB20 JUMP JUMPDEST DUP2 EQ PUSH2 0xB44 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB55 DUP2 PUSH2 0xB31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6D DUP2 PUSH2 0xB5B JUMP JUMPDEST DUP2 EQ PUSH2 0xB77 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB88 DUP2 PUSH2 0xB64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBA4 JUMPI PUSH2 0xBA3 PUSH2 0xAFD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBB1 DUP6 DUP3 DUP7 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBC2 DUP6 DUP3 DUP7 ADD PUSH2 0xB7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBE0 DUP2 PUSH2 0xBCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBF9 PUSH0 DUP4 ADD DUP5 PUSH2 0xBD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC08 DUP2 PUSH2 0xB5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC21 PUSH0 DUP4 ADD DUP5 PUSH2 0xBFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC3E JUMPI PUSH2 0xC3D PUSH2 0xAFD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC4B DUP7 DUP3 DUP8 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC5C DUP7 DUP3 DUP8 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC6D DUP7 DUP3 DUP8 ADD PUSH2 0xB7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC8C DUP2 PUSH2 0xC77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCA5 PUSH0 DUP4 ADD DUP5 PUSH2 0xC83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC0 JUMPI PUSH2 0xCBF PUSH2 0xAFD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCCD DUP5 DUP3 DUP6 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCEC JUMPI PUSH2 0xCEB PUSH2 0xAFD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCF9 DUP6 DUP3 DUP7 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD0A DUP6 DUP3 DUP7 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD58 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD6B JUMPI PUSH2 0xD6A PUSH2 0xD14 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xDA8 DUP3 PUSH2 0xB5B JUMP JUMPDEST SWAP2 POP PUSH2 0xDB3 DUP4 PUSH2 0xB5B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDCB JUMPI PUSH2 0xDCA PUSH2 0xD71 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE2B PUSH1 0x25 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0xE36 DUP3 PUSH2 0xDD1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE58 DUP2 PUSH2 0xE1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEB9 PUSH1 0x24 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0xEC4 DUP3 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEE6 DUP2 PUSH2 0xEAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF47 PUSH1 0x22 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0xF52 DUP3 PUSH2 0xEED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF74 DUP2 PUSH2 0xF3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFAF PUSH1 0x1D DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0xFBA DUP3 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFDC DUP2 PUSH2 0xFA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x103D PUSH1 0x25 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0x1048 DUP3 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x106A DUP2 PUSH2 0x1031 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10CB PUSH1 0x23 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0x10D6 DUP3 PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10F8 DUP2 PUSH2 0x10BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1159 PUSH1 0x26 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0x1164 DUP3 PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1186 DUP2 PUSH2 0x114D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED SWAP15 SWAP5 0xDC SMOD 0xA7 0xB3 SWAP2 DUP1 CREATE PUSH13 0x61B7F536B4ABC806BA4FEA9405 0x4B SWAP4 0xD3 0xC8 PC SELFDESTRUCT JUMPDEST PUSH15 0x64736F6C6343000814003300000000 ","sourceMap":"1532:11312:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3255:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5854:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3419:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6575:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3987:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;3255:106::-;3316:7;3342:12;;3335:19;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;3104:91::-;3162:5;3186:2;3179:9;;3104:91;:::o;5854:234::-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;3419:125::-;3493:7;3519:9;:18;3529:7;3519:18;;;;;;;;;;;;;;;;3512:25;;3419:125;;;:::o;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;6575:427::-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;:::-;3918:4;3911:11;;;3740:189;;;;:::o;3987:149::-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;640:96:14:-;693:7;719:10;712:17;;640:96;:::o;10457:340:7:-;10575:1;10558:19;;:5;:19;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;7456:788::-;7568:1;7552:18;;:4;:18;;;7544:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7644:1;7630:16;;:2;:16;;;7622:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;7746:19;7768:9;:15;7778:4;7768:15;;;;;;;;;;;;;;;;7746:37;;7816:6;7801:11;:21;;7793:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7931:6;7917:11;:20;7899:9;:15;7909:4;7899:15;;;;;;;;;;;;;;;:38;;;;8131:6;8114:9;:13;8124:2;8114:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8178:2;8163:26;;8172:4;8163:26;;;8182:6;8163:26;;;;;;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;:::-;7534:710;7456:788;;;:::o;12073:91::-;;;;:::o;12752:90::-;;;;:::o;7:99:27:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":639,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":645,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":647,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":649,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":651,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":639,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":645,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":647,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":649,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":651,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","eip712Domain()":"84b0196e","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"_PERMIT_TYPEHASH_DEPRECATED_SLOT\":{\"custom:oz-renamed-from\":\"_PERMIT_TYPEHASH\",\"details\":\"In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`. However, to ensure consistency with the upgradeable transpiler, we will continue to reserve a slot.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x36c00327e3f9afd929cc2721aaa111ab57eff78a630cc364b279ad576b899295\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5bf927f4c8b71a5809be184c3107b915b0445ab2c4a33208331e5376692eb5a\",\"dweb:/ipfs/QmVXirsCY1sf4kodhbL6w3NWZkeZeaMuQB7M6DBAdZNqFE\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":639,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":645,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":647,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":649,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":651,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":3349,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_nameFallback","offset":0,"slot":"5","type":"t_string_storage"},{"astId":3351,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_versionFallback","offset":0,"slot":"6","type":"t_string_storage"},{"astId":1355,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_nonces","offset":0,"slot":"7","type":"t_mapping(t_address,t_struct(Counter)2327_storage)"},{"astId":1363,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","offset":0,"slot":"8","type":"t_bytes32"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Counter)2327_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct Counters.Counter)","numberOfBytes":"32","value":"t_struct(Counter)2327_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Counter)2327_storage":{"encoding":"inplace","label":"struct Counters.Counter","members":[{"astId":2326,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ERC20Votes":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20Votes.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's, and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1. NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting power can be queried through the public accessors {getVotes} and {getPastVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked. _Available since v4.2._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `timepoint` must be in the past\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `timepoint`. Requirements: - `timepoint` must be in the past\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":\"ERC20Votes\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x36c00327e3f9afd929cc2721aaa111ab57eff78a630cc364b279ad576b899295\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5bf927f4c8b71a5809be184c3107b915b0445ab2c4a33208331e5376692eb5a\",\"dweb:/ipfs/QmVXirsCY1sf4kodhbL6w3NWZkeZeaMuQB7M6DBAdZNqFE\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x4e560f86662b6f72ab76122fff53317677154f14bac4a80dbd46a54172b3abfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca5c2518d247417cb01164f04eff57b7e87b5346bc03478ada916f26117aa7fd\",\"dweb:/ipfs/QmVgK66XGZCiH9x4mhqejKUTujtu68DyE6KrYi6MPuaHRJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":639,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":645,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":647,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":649,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":651,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":3349,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_nameFallback","offset":0,"slot":"5","type":"t_string_storage"},{"astId":3351,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_versionFallback","offset":0,"slot":"6","type":"t_string_storage"},{"astId":1355,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_nonces","offset":0,"slot":"7","type":"t_mapping(t_address,t_struct(Counter)2327_storage)"},{"astId":1363,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","offset":0,"slot":"8","type":"t_bytes32"},{"astId":1530,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_delegates","offset":0,"slot":"9","type":"t_mapping(t_address,t_address)"},{"astId":1536,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_checkpoints","offset":0,"slot":"10","type":"t_mapping(t_address,t_array(t_struct(Checkpoint)1521_storage)dyn_storage)"},{"astId":1540,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_totalSupplyCheckpoints","offset":0,"slot":"11","type":"t_array(t_struct(Checkpoint)1521_storage)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(Checkpoint)1521_storage)dyn_storage":{"base":"t_struct(Checkpoint)1521_storage","encoding":"dynamic_array","label":"struct ERC20Votes.Checkpoint[]","numberOfBytes":"32"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_array(t_struct(Checkpoint)1521_storage)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct ERC20Votes.Checkpoint[])","numberOfBytes":"32","value":"t_array(t_struct(Checkpoint)1521_storage)dyn_storage"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Counter)2327_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct Counters.Counter)","numberOfBytes":"32","value":"t_struct(Counter)2327_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Checkpoint)1521_storage":{"encoding":"inplace","label":"struct ERC20Votes.Checkpoint","members":[{"astId":1518,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"fromBlock","offset":0,"slot":"0","type":"t_uint32"},{"astId":1520,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"votes","offset":4,"slot":"0","type":"t_uint224"}],"numberOfBytes":"32"},"t_struct(Counter)2327_storage":{"encoding":"inplace","label":"struct Counters.Counter","members":[{"astId":2326,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_uint224":{"encoding":"inplace","label":"uint224","numberOfBytes":"28"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"}}}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fd006882e53cb303e2756077a8bbbbf0e1cab8c265b5efeb603d861eb5c8152764736f6c63430008140033","opcodes":"PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT STOP PUSH9 0x82E53CB303E2756077 0xA8 0xBB 0xBB CREATE 0xE1 0xCA 0xB8 0xC2 PUSH6 0xB5EFEB603D86 0x1E 0xB5 0xC8 ISZERO 0x27 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"424:971:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fd006882e53cb303e2756077a8bbbbf0e1cab8c265b5efeb603d861eb5c8152764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT STOP PUSH9 0x82E53CB303E2756077 0xA8 0xBB 0xBB CREATE 0xE1 0xCA 0xB8 0xC2 PUSH6 0xB5EFEB603D86 0x1E 0xB5 0xC8 ISZERO 0x27 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"424:971:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209647e625b3a0ca0fdbd8e13e11ff52b4c0d00a4be716aac8c24bcd971b0b219e64736f6c63430008140033","opcodes":"PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 SELFBALANCE 0xE6 0x25 0xB3 LOG0 0xCA 0xF 0xDB 0xD8 0xE1 RETURNDATACOPY GT SELFDESTRUCT MSTORE 0xB4 0xC0 0xD0 EXP 0x4B 0xE7 AND 0xAA 0xC8 0xC2 0x4B 0xCD SWAP8 SHL SIGNEXTEND 0x21 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1235:3050:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209647e625b3a0ca0fdbd8e13e11ff52b4c0d00a4be716aac8c24bcd971b0b219e64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 SELFBALANCE 0xE6 0x25 0xB3 LOG0 0xCA 0xF 0xDB 0xD8 0xE1 RETURNDATACOPY GT SELFDESTRUCT MSTORE 0xB4 0xC0 0xD0 EXP 0x4B 0xE7 AND 0xAA 0xC8 0xC2 0x4B 0xCD SWAP8 SHL SIGNEXTEND 0x21 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1235:3050:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e4ee1f80e66ed10e5f28199efbc5b432e261bde933263631f90a00632ec24e0e64736f6c63430008140033","opcodes":"PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0xEE 0x1F DUP1 0xE6 PUSH15 0xD10E5F28199EFBC5B432E261BDE933 0x26 CALLDATASIZE BALANCE 0xF9 EXP STOP PUSH4 0x2EC24E0E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1420:2685:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e4ee1f80e66ed10e5f28199efbc5b432e261bde933263631f90a00632ec24e0e64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0xEE 0x1F DUP1 0xE6 PUSH15 0xD10E5F28199EFBC5B432E261BDE933 0x26 CALLDATASIZE BALANCE 0xF9 EXP STOP PUSH4 0x2EC24E0E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1420:2685:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ee1757957186c8cac1339ced73bcc486fd1fce708e127fff71a3e311619452da64736f6c63430008140033","opcodes":"PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE OR JUMPI SWAP6 PUSH18 0x86C8CAC1339CED73BCC486FD1FCE708E127F SELFDESTRUCT PUSH18 0xA3E311619452DA64736F6C63430008140033 ","sourceMap":"220:2559:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ee1757957186c8cac1339ced73bcc486fd1fce708e127fff71a3e311619452da64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE OR JUMPI SWAP6 PUSH18 0x86C8CAC1339CED73BCC486FD1FCE708E127F SELFDESTRUCT PUSH18 0xA3E311619452DA64736F6C63430008140033 ","sourceMap":"220:2559:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c0c79d02cc476f8ae9326dbb7c6130b9c521438b572371d9797d29341b44d55464736f6c63430008140033","opcodes":"PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0xC7 SWAP14 MUL 0xCC SELFBALANCE PUSH16 0x8AE9326DBB7C6130B9C521438B572371 0xD9 PUSH26 0x7D29341B44D55464736F6C634300081400330000000000000000 ","sourceMap":"369:8761:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c0c79d02cc476f8ae9326dbb7c6130b9c521438b572371d9797d29341b44d55464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0xC7 SWAP14 MUL 0xCC SELFBALANCE PUSH16 0x8AE9326DBB7C6130B9C521438B572371 0xD9 PUSH26 0x7D29341B44D55464736F6C634300081400330000000000000000 ","sourceMap":"369:8761:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage. _Available since v3.4._\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":3349,"contract":"@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712","label":"_nameFallback","offset":0,"slot":"0","type":"t_string_storage"},{"astId":3351,"contract":"@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712","label":"_versionFallback","offset":0,"slot":"1","type":"t_string_storage"}],"types":{"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201e4c6c0359dc04fcc6f7a8e3b137d89d8979a9b9a9eb658be19203c3ff5bbbb064736f6c63430008140033","opcodes":"PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0x4C PUSH13 0x359DC04FCC6F7A8E3B137D89D DUP10 PUSH26 0xA9B9A9EB658BE19203C3FF5BBBB064736F6C6343000814003300 ","sourceMap":"202:12582:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201e4c6c0359dc04fcc6f7a8e3b137d89d8979a9b9a9eb658be19203c3ff5bbbb064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0x4C PUSH13 0x359DC04FCC6F7A8E3B137D89D DUP10 PUSH26 0xA9B9A9EB658BE19203C3FF5BBBB064736F6C6343000814003300 ","sourceMap":"202:12582:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200127c1afc91ec233fee9fcfba459f344f0b21c83d7414be805e6960aa1a8309264736f6c63430008140033","opcodes":"PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0x27 0xC1 0xAF 0xC9 0x1E 0xC2 CALLER INVALID 0xE9 0xFC 0xFB LOG4 MSIZE RETURN PREVRANDAO CREATE 0xB2 SHR DUP4 0xD7 COINBASE 0x4B 0xE8 SDIV 0xE6 SWAP7 EXP LOG1 0xA8 ADDRESS SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"927:34153:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200127c1afc91ec233fee9fcfba459f344f0b21c83d7414be805e6960aa1a8309264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0x27 0xC1 0xAF 0xC9 0x1E 0xC2 CALLER INVALID 0xE9 0xFC 0xFB LOG4 MSIZE RETURN PREVRANDAO CREATE 0xB2 SHR DUP4 0xD7 COINBASE 0x4B 0xE8 SDIV 0xE6 SWAP7 EXP LOG1 0xA8 ADDRESS SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"927:34153:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220326da03e3eeb5c93b2c37839d7438240351e4068c9c750e92fff469f27049f5d64736f6c63430008140033","opcodes":"PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN PUSH14 0xA03E3EEB5C93B2C37839D7438240 CALLDATALOAD 0x1E BLOCKHASH PUSH9 0xC9C750E92FFF469F27 DIV SWAP16 0x5D PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"215:1047:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220326da03e3eeb5c93b2c37839d7438240351e4068c9c750e92fff469f27049f5d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN PUSH14 0xA03E3EEB5C93B2C37839D7438240 CALLDATALOAD 0x1E BLOCKHASH PUSH9 0xC9C750E92FFF469F27 DIV SWAP16 0x5D PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"215:1047:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/MindplexToken.sol":{"MindplexToken":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20Votes.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1374":{"entryPoint":null,"id":1374,"parameterSlots":1,"returnSlots":0},"@_3409":{"entryPoint":null,"id":3409,"parameterSlots":2,"returnSlots":0},"@_542":{"entryPoint":null,"id":542,"parameterSlots":0,"returnSlots":0},"@_6310":{"entryPoint":null,"id":6310,"parameterSlots":2,"returnSlots":0},"@_668":{"entryPoint":null,"id":668,"parameterSlots":2,"returnSlots":0},"@_add_2208":{"entryPoint":2173,"id":2208,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_1209":{"entryPoint":3764,"id":1209,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_1983":{"entryPoint":3581,"id":1983,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_6522":{"entryPoint":3148,"id":6522,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1198":{"entryPoint":3576,"id":1198,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_6488":{"entryPoint":2968,"id":6488,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_3456":{"entryPoint":928,"id":3456,"parameterSlots":0,"returnSlots":1},"@_grantRole_283":{"entryPoint":1030,"id":283,"parameterSlots":2,"returnSlots":0},"@_maxSupply_1898":{"entryPoint":2129,"id":1898,"parameterSlots":0,"returnSlots":1},"@_mint_1027":{"entryPoint":1772,"id":1027,"parameterSlots":2,"returnSlots":0},"@_mint_1930":{"entryPoint":1587,"id":1930,"parameterSlots":2,"returnSlots":0},"@_mint_6553":{"entryPoint":1266,"id":6553,"parameterSlots":2,"returnSlots":0},"@_moveVotingPower_2093":{"entryPoint":3870,"id":2093,"parameterSlots":3,"returnSlots":0},"@_msgSender_2311":{"entryPoint":1023,"id":2311,"parameterSlots":0,"returnSlots":1},"@_requireNotPaused_579":{"entryPoint":3491,"id":579,"parameterSlots":0,"returnSlots":0},"@_subtract_2222":{"entryPoint":4408,"id":2222,"parameterSlots":2,"returnSlots":1},"@_unsafeAccess_2237":{"entryPoint":3256,"id":2237,"parameterSlots":2,"returnSlots":1},"@_writeCheckpoint_2194":{"entryPoint":2196,"id":2194,"parameterSlots":3,"returnSlots":2},"@c_f3f67bc5_6115":{"entryPoint":1020,"id":6115,"parameterSlots":1,"returnSlots":0},"@clock_1554":{"entryPoint":3274,"id":1554,"parameterSlots":0,"returnSlots":1},"@delegates_1622":{"entryPoint":3769,"id":1622,"parameterSlots":1,"returnSlots":1},"@getStringSlot_2698":{"entryPoint":1478,"id":2698,"parameterSlots":1,"returnSlots":1},"@hasRole_79":{"entryPoint":1487,"id":79,"parameterSlots":2,"returnSlots":1},"@paused_567":{"entryPoint":3743,"id":567,"parameterSlots":0,"returnSlots":1},"@toShortStringWithFallback_2552":{"entryPoint":843,"id":2552,"parameterSlots":2,"returnSlots":1},"@toShortString_2454":{"entryPoint":1372,"id":2454,"parameterSlots":1,"returnSlots":1},"@toUint224_4525":{"entryPoint":3297,"id":4525,"parameterSlots":1,"returnSlots":1},"@toUint32_5125":{"entryPoint":3406,"id":5125,"parameterSlots":1,"returnSlots":1},"@toUint48_5075":{"entryPoint":3656,"id":5075,"parameterSlots":1,"returnSlots":1},"@totalSupply_708":{"entryPoint":2164,"id":708,"parameterSlots":0,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":4696,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":4770,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":4820,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6374,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":6290,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6498,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack":{"entryPoint":7581,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack":{"entryPoint":7433,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack":{"entryPoint":6832,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack":{"entryPoint":7175,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack":{"entryPoint":7323,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":6942,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6307,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":6391,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6562,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7619,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7471,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6870,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7213,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7361,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6980,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7070,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7651,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":4571,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":4431,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":4601,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":6606,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":5058,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":6596,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":4951,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6482,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7012,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":5803,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":6127,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":5893,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":6207,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7694,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":5367,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":6355,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":6281,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6324,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5188,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":5329,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":6643,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":5206,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":5518,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":4654,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":5076,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":5006,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":5489,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":4517,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":5197,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":5459,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":5746,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4961,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4472,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":5245,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":6621,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":4448,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":4452,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":4444,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4440,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4456,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":5091,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_1_unsigned":{"entryPoint":5791,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":5447,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":5301,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495":{"entryPoint":7503,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a":{"entryPoint":7393,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699":{"entryPoint":6754,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79":{"entryPoint":7097,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19":{"entryPoint":7245,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":6902,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":5103,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":5254,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":5297,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:21769:27","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:27","statements":[{"nodeType":"YulAssignment","src":"57:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:27"},"nodeType":"YulFunctionCall","src":"67:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:27"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:27","type":""}],"src":"7:75:27"},{"body":{"nodeType":"YulBlock","src":"177:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:27"},"nodeType":"YulFunctionCall","src":"187:12:27"},"nodeType":"YulExpressionStatement","src":"187:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:27"},{"body":{"nodeType":"YulBlock","src":"300:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:27"},"nodeType":"YulFunctionCall","src":"310:12:27"},"nodeType":"YulExpressionStatement","src":"310:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:27"},{"body":{"nodeType":"YulBlock","src":"423:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:27"},"nodeType":"YulFunctionCall","src":"433:12:27"},"nodeType":"YulExpressionStatement","src":"433:12:27"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:27"},{"body":{"nodeType":"YulBlock","src":"546:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:27"},"nodeType":"YulFunctionCall","src":"556:12:27"},"nodeType":"YulExpressionStatement","src":"556:12:27"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:27"},{"body":{"nodeType":"YulBlock","src":"628:54:27","statements":[{"nodeType":"YulAssignment","src":"638:38:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:27"},"nodeType":"YulFunctionCall","src":"652:14:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:27"},"nodeType":"YulFunctionCall","src":"668:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:27"},"nodeType":"YulFunctionCall","src":"648:28:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:27"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:27","type":""}],"src":"580:102:27"},{"body":{"nodeType":"YulBlock","src":"716:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:27"},"nodeType":"YulFunctionCall","src":"726:88:27"},"nodeType":"YulExpressionStatement","src":"726:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:27"},"nodeType":"YulFunctionCall","src":"823:15:27"},"nodeType":"YulExpressionStatement","src":"823:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:27"},"nodeType":"YulFunctionCall","src":"847:15:27"},"nodeType":"YulExpressionStatement","src":"847:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:27"},{"body":{"nodeType":"YulBlock","src":"917:238:27","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:27"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:27"},"nodeType":"YulFunctionCall","src":"957:27:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:27"},"nodeType":"YulFunctionCall","src":"945:40:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:27"},"nodeType":"YulFunctionCall","src":"1098:18:27"},"nodeType":"YulExpressionStatement","src":"1098:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:27"},"nodeType":"YulFunctionCall","src":"1036:34:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:27"},"nodeType":"YulFunctionCall","src":"1072:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:27"},"nodeType":"YulFunctionCall","src":"1033:62:27"},"nodeType":"YulIf","src":"1030:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:27"},"nodeType":"YulFunctionCall","src":"1127:22:27"},"nodeType":"YulExpressionStatement","src":"1127:22:27"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:27","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:27","type":""}],"src":"874:281:27"},{"body":{"nodeType":"YulBlock","src":"1202:88:27","statements":[{"nodeType":"YulAssignment","src":"1212:30:27","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:27"},"nodeType":"YulFunctionCall","src":"1222:20:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:27"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:27"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:27"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:27"},"nodeType":"YulFunctionCall","src":"1251:33:27"},"nodeType":"YulExpressionStatement","src":"1251:33:27"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:27","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:27","type":""}],"src":"1161:129:27"},{"body":{"nodeType":"YulBlock","src":"1363:241:27","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:27"},"nodeType":"YulFunctionCall","src":"1470:18:27"},"nodeType":"YulExpressionStatement","src":"1470:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:27"},"nodeType":"YulFunctionCall","src":"1437:30:27"},"nodeType":"YulIf","src":"1434:56:27"},{"nodeType":"YulAssignment","src":"1500:37:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:27"},"nodeType":"YulFunctionCall","src":"1508:29:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:27"}]},{"nodeType":"YulAssignment","src":"1574:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:27"},"nodeType":"YulFunctionCall","src":"1582:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:27"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:27","type":""}],"src":"1296:308:27"},{"body":{"nodeType":"YulBlock","src":"1672:184:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:27"},"nodeType":"YulFunctionCall","src":"1772:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:27"},"nodeType":"YulFunctionCall","src":"1791:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:27"},"nodeType":"YulFunctionCall","src":"1785:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:27"},"nodeType":"YulFunctionCall","src":"1765:39:27"},"nodeType":"YulExpressionStatement","src":"1765:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:27"},"nodeType":"YulFunctionCall","src":"1709:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:27","statements":[{"nodeType":"YulAssignment","src":"1725:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:27"},"nodeType":"YulFunctionCall","src":"1730:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:27","statements":[]},"src":"1701:113:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:27"},"nodeType":"YulFunctionCall","src":"1830:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:27"},"nodeType":"YulFunctionCall","src":"1823:27:27"},"nodeType":"YulExpressionStatement","src":"1823:27:27"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:27","type":""}],"src":"1610:246:27"},{"body":{"nodeType":"YulBlock","src":"1957:339:27","statements":[{"nodeType":"YulAssignment","src":"1967:75:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:27"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:27"},"nodeType":"YulFunctionCall","src":"1992:49:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:27"},"nodeType":"YulFunctionCall","src":"1976:66:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:27"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:27"},"nodeType":"YulFunctionCall","src":"2051:21:27"},"nodeType":"YulExpressionStatement","src":"2051:21:27"},{"nodeType":"YulVariableDeclaration","src":"2081:27:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:27"},"nodeType":"YulFunctionCall","src":"2092:16:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:27"},"nodeType":"YulFunctionCall","src":"2148:79:27"},"nodeType":"YulExpressionStatement","src":"2148:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:27"},"nodeType":"YulFunctionCall","src":"2123:16:27"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:27"},"nodeType":"YulFunctionCall","src":"2120:25:27"},"nodeType":"YulIf","src":"2117:112:27"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:27"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:27"},"nodeType":"YulFunctionCall","src":"2238:52:27"},"nodeType":"YulExpressionStatement","src":"2238:52:27"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:27","type":""}],"src":"1862:434:27"},{"body":{"nodeType":"YulBlock","src":"2389:282:27","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:27"},"nodeType":"YulFunctionCall","src":"2440:79:27"},"nodeType":"YulExpressionStatement","src":"2440:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:27"},"nodeType":"YulFunctionCall","src":"2413:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:27"},"nodeType":"YulFunctionCall","src":"2409:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:27"},"nodeType":"YulFunctionCall","src":"2402:35:27"},"nodeType":"YulIf","src":"2399:122:27"},{"nodeType":"YulVariableDeclaration","src":"2530:27:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:27"},"nodeType":"YulFunctionCall","src":"2544:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:27"},"nodeType":"YulFunctionCall","src":"2634:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:27"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:27"},"nodeType":"YulFunctionCall","src":"2575:90:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:27"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:27","type":""}],"src":"2316:355:27"},{"body":{"nodeType":"YulBlock","src":"2791:739:27","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:27"},"nodeType":"YulFunctionCall","src":"2839:79:27"},"nodeType":"YulExpressionStatement","src":"2839:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:27"},"nodeType":"YulFunctionCall","src":"2808:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:27"},"nodeType":"YulFunctionCall","src":"2804:32:27"},"nodeType":"YulIf","src":"2801:119:27"},{"nodeType":"YulBlock","src":"2930:291:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:27"},"nodeType":"YulFunctionCall","src":"2965:17:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:27"},"nodeType":"YulFunctionCall","src":"2959:24:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:27"},"nodeType":"YulFunctionCall","src":"3032:79:27"},"nodeType":"YulExpressionStatement","src":"3032:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:27"},"nodeType":"YulFunctionCall","src":"2999:30:27"},"nodeType":"YulIf","src":"2996:117:27"},{"nodeType":"YulAssignment","src":"3127:84:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:27"},"nodeType":"YulFunctionCall","src":"3179:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:27"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:27"},"nodeType":"YulFunctionCall","src":"3137:74:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:27"}]}]},{"nodeType":"YulBlock","src":"3231:292:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:27"},"nodeType":"YulFunctionCall","src":"3266:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:27"},"nodeType":"YulFunctionCall","src":"3260:25:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:27"},"nodeType":"YulFunctionCall","src":"3334:79:27"},"nodeType":"YulExpressionStatement","src":"3334:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:27"},"nodeType":"YulFunctionCall","src":"3301:30:27"},"nodeType":"YulIf","src":"3298:117:27"},{"nodeType":"YulAssignment","src":"3429:84:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:27"},"nodeType":"YulFunctionCall","src":"3481:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:27"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:27"},"nodeType":"YulFunctionCall","src":"3439:74:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:27"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:27","type":""}],"src":"2677:853:27"},{"body":{"nodeType":"YulBlock","src":"3595:40:27","statements":[{"nodeType":"YulAssignment","src":"3606:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:27"},"nodeType":"YulFunctionCall","src":"3616:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:27"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:27","type":""}],"src":"3536:99:27"},{"body":{"nodeType":"YulBlock","src":"3669:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:27"},"nodeType":"YulFunctionCall","src":"3679:88:27"},"nodeType":"YulExpressionStatement","src":"3679:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:27"},"nodeType":"YulFunctionCall","src":"3776:15:27"},"nodeType":"YulExpressionStatement","src":"3776:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:27"},"nodeType":"YulFunctionCall","src":"3800:15:27"},"nodeType":"YulExpressionStatement","src":"3800:15:27"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:27"},{"body":{"nodeType":"YulBlock","src":"3878:269:27","statements":[{"nodeType":"YulAssignment","src":"3888:22:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:27","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:27"},"nodeType":"YulFunctionCall","src":"3898:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:27"},"nodeType":"YulFunctionCall","src":"3945:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:27","statements":[{"nodeType":"YulAssignment","src":"4010:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:27"},"nodeType":"YulFunctionCall","src":"4020:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:27"},"nodeType":"YulFunctionCall","src":"3969:26:27"},"nodeType":"YulIf","src":"3966:81:27"},{"body":{"nodeType":"YulBlock","src":"4099:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:27"},"nodeType":"YulFunctionCall","src":"4113:18:27"},"nodeType":"YulExpressionStatement","src":"4113:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:27"},"nodeType":"YulFunctionCall","src":"4083:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:27"},"nodeType":"YulFunctionCall","src":"4060:38:27"},"nodeType":"YulIf","src":"4057:84:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:27","type":""}],"src":"3827:320:27"},{"body":{"nodeType":"YulBlock","src":"4207:87:27","statements":[{"nodeType":"YulAssignment","src":"4217:11:27","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:27"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:27","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:27"},"nodeType":"YulFunctionCall","src":"4238:14:27"},"nodeType":"YulExpressionStatement","src":"4238:14:27"},{"nodeType":"YulAssignment","src":"4261:26:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:27"},"nodeType":"YulFunctionCall","src":"4269:18:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:27"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:27","type":""}],"src":"4153:141:27"},{"body":{"nodeType":"YulBlock","src":"4344:49:27","statements":[{"nodeType":"YulAssignment","src":"4354:33:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:27"},"nodeType":"YulFunctionCall","src":"4368:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:27","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:27"},"nodeType":"YulFunctionCall","src":"4364:23:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:27"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:27","type":""}],"src":"4300:93:27"},{"body":{"nodeType":"YulBlock","src":"4452:54:27","statements":[{"nodeType":"YulAssignment","src":"4462:37:27","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:27"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:27"},"nodeType":"YulFunctionCall","src":"4483:16:27"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:27"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:27","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:27","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:27","type":""}],"src":"4399:107:27"},{"body":{"nodeType":"YulBlock","src":"4588:317:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:27","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:27","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:27"},"nodeType":"YulFunctionCall","src":"4615:18:27"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:27","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:27"},"nodeType":"YulFunctionCall","src":"4654:97:27"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:27","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:27","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:27"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:27"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:27"},"nodeType":"YulFunctionCall","src":"4772:39:27"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:27"}]},{"nodeType":"YulAssignment","src":"4820:30:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:27"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:27"},"nodeType":"YulFunctionCall","src":"4840:9:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:27"},"nodeType":"YulFunctionCall","src":"4829:21:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:27"}]},{"nodeType":"YulAssignment","src":"4859:40:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:27"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:27"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:27"},"nodeType":"YulFunctionCall","src":"4879:19:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:27"},"nodeType":"YulFunctionCall","src":"4869:30:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:27"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:27","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:27","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:27","type":""}],"src":"4512:393:27"},{"body":{"nodeType":"YulBlock","src":"4956:32:27","statements":[{"nodeType":"YulAssignment","src":"4966:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:27"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:27","type":""}],"src":"4911:77:27"},{"body":{"nodeType":"YulBlock","src":"5026:28:27","statements":[{"nodeType":"YulAssignment","src":"5036:12:27","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:27"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:27","type":""}],"src":"4994:60:27"},{"body":{"nodeType":"YulBlock","src":"5120:82:27","statements":[{"nodeType":"YulAssignment","src":"5130:66:27","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:27"},"nodeType":"YulFunctionCall","src":"5170:24:27"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:27"},"nodeType":"YulFunctionCall","src":"5161:34:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:27"},"nodeType":"YulFunctionCall","src":"5143:53:27"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:27"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:27","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:27","type":""}],"src":"5060:142:27"},{"body":{"nodeType":"YulBlock","src":"5255:28:27","statements":[{"nodeType":"YulAssignment","src":"5265:12:27","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:27"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:27","type":""}],"src":"5208:75:27"},{"body":{"nodeType":"YulBlock","src":"5365:193:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:27","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:27"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:27"},"nodeType":"YulFunctionCall","src":"5399:39:27"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:27","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:27"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:27"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:27"},"nodeType":"YulFunctionCall","src":"5488:11:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:27"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:27"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:27"},"nodeType":"YulFunctionCall","src":"5509:41:27"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:27"},"nodeType":"YulFunctionCall","src":"5460:91:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:27"},"nodeType":"YulFunctionCall","src":"5447:105:27"},"nodeType":"YulExpressionStatement","src":"5447:105:27"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:27","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:27","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:27","type":""}],"src":"5289:269:27"},{"body":{"nodeType":"YulBlock","src":"5613:24:27","statements":[{"nodeType":"YulAssignment","src":"5623:8:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:27","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:27"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:27","type":""}],"src":"5564:73:27"},{"body":{"nodeType":"YulBlock","src":"5696:136:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:27","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:27"},"nodeType":"YulFunctionCall","src":"5720:32:27"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:27","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:27"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:27"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:27"},"nodeType":"YulFunctionCall","src":"5761:65:27"},"nodeType":"YulExpressionStatement","src":"5761:65:27"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:27","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:27","type":""}],"src":"5643:189:27"},{"body":{"nodeType":"YulBlock","src":"5888:136:27","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:27","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:27","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:27"},"nodeType":"YulFunctionCall","src":"5969:39:27"},"nodeType":"YulExpressionStatement","src":"5969:39:27"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:27"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:27"},"nodeType":"YulFunctionCall","src":"5905:14:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:27","statements":[{"nodeType":"YulAssignment","src":"5922:22:27","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:27"},"nodeType":"YulFunctionCall","src":"5931:13:27"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:27"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:27","statements":[]},"src":"5898:120:27"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:27","type":""}],"src":"5838:186:27"},{"body":{"nodeType":"YulBlock","src":"6109:464:27","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:27"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:27"},"nodeType":"YulFunctionCall","src":"6165:38:27"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:27","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:27"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:27"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:27"},"nodeType":"YulFunctionCall","src":"6249:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:27"},"nodeType":"YulFunctionCall","src":"6235:44:27"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:27","statements":[{"nodeType":"YulAssignment","src":"6438:23:27","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:27"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:27"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:27"},"nodeType":"YulFunctionCall","src":"6417:18:27"},"nodeType":"YulIf","src":"6414:49:27"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:27"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:27"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:27"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:27"},"nodeType":"YulFunctionCall","src":"6532:22:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:27"},"nodeType":"YulFunctionCall","src":"6518:37:27"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:27"},"nodeType":"YulFunctionCall","src":"6476:80:27"},"nodeType":"YulExpressionStatement","src":"6476:80:27"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:27"},"nodeType":"YulFunctionCall","src":"6123:11:27"},"nodeType":"YulIf","src":"6120:446:27"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:27","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:27","type":""}],"src":"6030:543:27"},{"body":{"nodeType":"YulBlock","src":"6642:54:27","statements":[{"nodeType":"YulAssignment","src":"6652:37:27","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:27"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:27"},"nodeType":"YulFunctionCall","src":"6673:16:27"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:27"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:27","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:27","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:27","type":""}],"src":"6579:117:27"},{"body":{"nodeType":"YulBlock","src":"6753:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:27","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:27","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:27"},"nodeType":"YulFunctionCall","src":"6808:13:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:27"},"nodeType":"YulFunctionCall","src":"6823:6:27"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:27"},"nodeType":"YulFunctionCall","src":"6779:51:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:27"},"nodeType":"YulFunctionCall","src":"6775:56:27"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:27","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:27"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:27"},"nodeType":"YulFunctionCall","src":"6850:15:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:27"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:27","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:27","type":""}],"src":"6702:169:27"},{"body":{"nodeType":"YulBlock","src":"6957:214:27","statements":[{"nodeType":"YulAssignment","src":"7090:37:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:27"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:27"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:27"},"nodeType":"YulFunctionCall","src":"7098:29:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:27"}]},{"nodeType":"YulAssignment","src":"7136:29:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:27","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:27"},"nodeType":"YulFunctionCall","src":"7153:11:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:27"},"nodeType":"YulFunctionCall","src":"7144:21:27"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:27"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:27","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:27","type":""}],"src":"6876:295:27"},{"body":{"nodeType":"YulBlock","src":"7268:1303:27","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:27"},"nodeType":"YulFunctionCall","src":"7293:37:27"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:27"},"nodeType":"YulFunctionCall","src":"7417:18:27"},"nodeType":"YulExpressionStatement","src":"7417:18:27"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:27"},"nodeType":"YulFunctionCall","src":"7384:30:27"},"nodeType":"YulIf","src":"7381:56:27"},{"nodeType":"YulVariableDeclaration","src":"7447:52:27","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:27"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:27"},"nodeType":"YulFunctionCall","src":"7487:11:27"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:27"},"nodeType":"YulFunctionCall","src":"7461:38:27"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:27","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:27"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:27"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:27"},"nodeType":"YulFunctionCall","src":"7546:67:27"},"nodeType":"YulExpressionStatement","src":"7546:67:27"},{"nodeType":"YulVariableDeclaration","src":"7623:18:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:27","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:27","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:27","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:27"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:27","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:27","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:27","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:27"},"nodeType":"YulFunctionCall","src":"7756:9:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:27"},"nodeType":"YulFunctionCall","src":"7744:22:27"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:27","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:27"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:27"},"nodeType":"YulFunctionCall","src":"7794:37:27"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:27","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:27"},"nodeType":"YulFunctionCall","src":"7951:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:27"},"nodeType":"YulFunctionCall","src":"7945:26:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:27"},"nodeType":"YulFunctionCall","src":"7930:42:27"},"nodeType":"YulExpressionStatement","src":"7930:42:27"},{"nodeType":"YulAssignment","src":"7989:24:27","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:27"},"nodeType":"YulFunctionCall","src":"7999:14:27"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:27"}]},{"nodeType":"YulAssignment","src":"8030:31:27","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:27"},"nodeType":"YulFunctionCall","src":"8043:18:27"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:27"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:27"},"nodeType":"YulFunctionCall","src":"7875:14:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:27","statements":[{"nodeType":"YulAssignment","src":"7892:17:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:27"},"nodeType":"YulFunctionCall","src":"7897:12:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:27","statements":[]},"src":"7867:208:27"},{"body":{"nodeType":"YulBlock","src":"8111:156:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:27"},"nodeType":"YulFunctionCall","src":"8152:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:27"},"nodeType":"YulFunctionCall","src":"8146:26:27"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:27","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:27"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:27"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:27","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:27"},"nodeType":"YulFunctionCall","src":"8234:17:27"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:27"},"nodeType":"YulFunctionCall","src":"8204:48:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:27"},"nodeType":"YulFunctionCall","src":"8189:64:27"},"nodeType":"YulExpressionStatement","src":"8189:64:27"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:27"},"nodeType":"YulFunctionCall","src":"8091:19:27"},"nodeType":"YulIf","src":"8088:179:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:27"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:27","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:27"},"nodeType":"YulFunctionCall","src":"8297:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:27"},"nodeType":"YulFunctionCall","src":"8293:22:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:27"},"nodeType":"YulFunctionCall","src":"8280:36:27"},"nodeType":"YulExpressionStatement","src":"8280:36:27"}]},"nodeType":"YulCase","src":"7708:618:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:27","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:27","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:27","statements":[{"nodeType":"YulAssignment","src":"8412:35:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:27"},"nodeType":"YulFunctionCall","src":"8427:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:27"},"nodeType":"YulFunctionCall","src":"8421:26:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:27"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:27"},"nodeType":"YulIf","src":"8384:77:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:27"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:27"},"nodeType":"YulFunctionCall","src":"8487:67:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:27"},"nodeType":"YulFunctionCall","src":"8474:81:27"},"nodeType":"YulExpressionStatement","src":"8474:81:27"}]},"nodeType":"YulCase","src":"8335:230:27","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:27"},"nodeType":"YulFunctionCall","src":"7685:14:27"},"nodeType":"YulSwitch","src":"7678:887:27"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:27","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:27","type":""}],"src":"7176:1395:27"},{"body":{"nodeType":"YulBlock","src":"8605:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8622:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8625:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8615:6:27"},"nodeType":"YulFunctionCall","src":"8615:88:27"},"nodeType":"YulExpressionStatement","src":"8615:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8719:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8722:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8712:6:27"},"nodeType":"YulFunctionCall","src":"8712:15:27"},"nodeType":"YulExpressionStatement","src":"8712:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8743:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8746:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8736:6:27"},"nodeType":"YulFunctionCall","src":"8736:15:27"},"nodeType":"YulExpressionStatement","src":"8736:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8577:180:27"},{"body":{"nodeType":"YulBlock","src":"8814:51:27","statements":[{"nodeType":"YulAssignment","src":"8824:34:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8849:1:27","type":"","value":"1"},{"name":"value","nodeType":"YulIdentifier","src":"8852:5:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8845:3:27"},"nodeType":"YulFunctionCall","src":"8845:13:27"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"8824:8:27"}]}]},"name":"shift_right_1_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8795:5:27","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"8805:8:27","type":""}],"src":"8763:102:27"},{"body":{"nodeType":"YulBlock","src":"8944:775:27","statements":[{"nodeType":"YulAssignment","src":"8954:15:27","value":{"name":"_power","nodeType":"YulIdentifier","src":"8963:6:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"8954:5:27"}]},{"nodeType":"YulAssignment","src":"8978:14:27","value":{"name":"_base","nodeType":"YulIdentifier","src":"8987:5:27"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"8978:4:27"}]},{"body":{"nodeType":"YulBlock","src":"9036:677:27","statements":[{"body":{"nodeType":"YulBlock","src":"9124:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9126:16:27"},"nodeType":"YulFunctionCall","src":"9126:18:27"},"nodeType":"YulExpressionStatement","src":"9126:18:27"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"9102:4:27"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"9112:3:27"},{"name":"base","nodeType":"YulIdentifier","src":"9117:4:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9108:3:27"},"nodeType":"YulFunctionCall","src":"9108:14:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9099:2:27"},"nodeType":"YulFunctionCall","src":"9099:24:27"},"nodeType":"YulIf","src":"9096:50:27"},{"body":{"nodeType":"YulBlock","src":"9191:419:27","statements":[{"nodeType":"YulAssignment","src":"9571:25:27","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"9584:5:27"},{"name":"base","nodeType":"YulIdentifier","src":"9591:4:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9580:3:27"},"nodeType":"YulFunctionCall","src":"9580:16:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"9571:5:27"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"9166:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"9176:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9162:3:27"},"nodeType":"YulFunctionCall","src":"9162:16:27"},"nodeType":"YulIf","src":"9159:451:27"},{"nodeType":"YulAssignment","src":"9623:23:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"9635:4:27"},{"name":"base","nodeType":"YulIdentifier","src":"9641:4:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9631:3:27"},"nodeType":"YulFunctionCall","src":"9631:15:27"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"9623:4:27"}]},{"nodeType":"YulAssignment","src":"9659:44:27","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"9694:8:27"}],"functionName":{"name":"shift_right_1_unsigned","nodeType":"YulIdentifier","src":"9671:22:27"},"nodeType":"YulFunctionCall","src":"9671:32:27"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"9659:8:27"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"9012:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"9022:1:27","type":"","value":"1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9009:2:27"},"nodeType":"YulFunctionCall","src":"9009:15:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9025:2:27","statements":[]},"pre":{"nodeType":"YulBlock","src":"9005:3:27","statements":[]},"src":"9001:712:27"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nodeType":"YulTypedName","src":"8899:6:27","type":""},{"name":"_base","nodeType":"YulTypedName","src":"8907:5:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"8914:8:27","type":""},{"name":"max","nodeType":"YulTypedName","src":"8924:3:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"8932:5:27","type":""},{"name":"base","nodeType":"YulTypedName","src":"8939:4:27","type":""}],"src":"8871:848:27"},{"body":{"nodeType":"YulBlock","src":"9785:1013:27","statements":[{"body":{"nodeType":"YulBlock","src":"9980:20:27","statements":[{"nodeType":"YulAssignment","src":"9982:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"9991:1:27","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"9982:5:27"}]},{"nodeType":"YulLeave","src":"9993:5:27"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"9970:8:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9963:6:27"},"nodeType":"YulFunctionCall","src":"9963:16:27"},"nodeType":"YulIf","src":"9960:40:27"},{"body":{"nodeType":"YulBlock","src":"10025:20:27","statements":[{"nodeType":"YulAssignment","src":"10027:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"10036:1:27","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"10027:5:27"}]},{"nodeType":"YulLeave","src":"10038:5:27"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"10019:4:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10012:6:27"},"nodeType":"YulFunctionCall","src":"10012:12:27"},"nodeType":"YulIf","src":"10009:36:27"},{"cases":[{"body":{"nodeType":"YulBlock","src":"10155:20:27","statements":[{"nodeType":"YulAssignment","src":"10157:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"10166:1:27","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"10157:5:27"}]},{"nodeType":"YulLeave","src":"10168:5:27"}]},"nodeType":"YulCase","src":"10148:27:27","value":{"kind":"number","nodeType":"YulLiteral","src":"10153:1:27","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"10199:176:27","statements":[{"body":{"nodeType":"YulBlock","src":"10234:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10236:16:27"},"nodeType":"YulFunctionCall","src":"10236:18:27"},"nodeType":"YulExpressionStatement","src":"10236:18:27"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"10219:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"10229:3:27","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10216:2:27"},"nodeType":"YulFunctionCall","src":"10216:17:27"},"nodeType":"YulIf","src":"10213:43:27"},{"nodeType":"YulAssignment","src":"10269:25:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10282:1:27","type":"","value":"2"},{"name":"exponent","nodeType":"YulIdentifier","src":"10285:8:27"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"10278:3:27"},"nodeType":"YulFunctionCall","src":"10278:16:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"10269:5:27"}]},{"body":{"nodeType":"YulBlock","src":"10325:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10327:16:27"},"nodeType":"YulFunctionCall","src":"10327:18:27"},"nodeType":"YulExpressionStatement","src":"10327:18:27"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"10313:5:27"},{"name":"max","nodeType":"YulIdentifier","src":"10320:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10310:2:27"},"nodeType":"YulFunctionCall","src":"10310:14:27"},"nodeType":"YulIf","src":"10307:40:27"},{"nodeType":"YulLeave","src":"10360:5:27"}]},"nodeType":"YulCase","src":"10184:191:27","value":{"kind":"number","nodeType":"YulLiteral","src":"10189:1:27","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"10105:4:27"},"nodeType":"YulSwitch","src":"10098:277:27"},{"body":{"nodeType":"YulBlock","src":"10507:123:27","statements":[{"nodeType":"YulAssignment","src":"10521:28:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"10534:4:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"10540:8:27"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"10530:3:27"},"nodeType":"YulFunctionCall","src":"10530:19:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"10521:5:27"}]},{"body":{"nodeType":"YulBlock","src":"10580:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10582:16:27"},"nodeType":"YulFunctionCall","src":"10582:18:27"},"nodeType":"YulExpressionStatement","src":"10582:18:27"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"10568:5:27"},{"name":"max","nodeType":"YulIdentifier","src":"10575:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10565:2:27"},"nodeType":"YulFunctionCall","src":"10565:14:27"},"nodeType":"YulIf","src":"10562:40:27"},{"nodeType":"YulLeave","src":"10615:5:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"10410:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"10416:2:27","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10407:2:27"},"nodeType":"YulFunctionCall","src":"10407:12:27"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"10424:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"10434:2:27","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10421:2:27"},"nodeType":"YulFunctionCall","src":"10421:16:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10403:3:27"},"nodeType":"YulFunctionCall","src":"10403:35:27"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"10459:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"10465:3:27","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10456:2:27"},"nodeType":"YulFunctionCall","src":"10456:13:27"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"10474:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"10484:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10471:2:27"},"nodeType":"YulFunctionCall","src":"10471:16:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10452:3:27"},"nodeType":"YulFunctionCall","src":"10452:36:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"10387:2:27"},"nodeType":"YulFunctionCall","src":"10387:111:27"},"nodeType":"YulIf","src":"10384:246:27"},{"nodeType":"YulAssignment","src":"10640:57:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10674:1:27","type":"","value":"1"},{"name":"base","nodeType":"YulIdentifier","src":"10677:4:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"10683:8:27"},{"name":"max","nodeType":"YulIdentifier","src":"10693:3:27"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"10655:18:27"},"nodeType":"YulFunctionCall","src":"10655:42:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"10640:5:27"},{"name":"base","nodeType":"YulIdentifier","src":"10647:4:27"}]},{"body":{"nodeType":"YulBlock","src":"10736:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10738:16:27"},"nodeType":"YulFunctionCall","src":"10738:18:27"},"nodeType":"YulExpressionStatement","src":"10738:18:27"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"10713:5:27"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"10724:3:27"},{"name":"base","nodeType":"YulIdentifier","src":"10729:4:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10720:3:27"},"nodeType":"YulFunctionCall","src":"10720:14:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10710:2:27"},"nodeType":"YulFunctionCall","src":"10710:25:27"},"nodeType":"YulIf","src":"10707:51:27"},{"nodeType":"YulAssignment","src":"10767:25:27","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"10780:5:27"},{"name":"base","nodeType":"YulIdentifier","src":"10787:4:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10776:3:27"},"nodeType":"YulFunctionCall","src":"10776:16:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"10767:5:27"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"9755:4:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"9761:8:27","type":""},{"name":"max","nodeType":"YulTypedName","src":"9771:3:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"9779:5:27","type":""}],"src":"9725:1073:27"},{"body":{"nodeType":"YulBlock","src":"10870:219:27","statements":[{"nodeType":"YulAssignment","src":"10880:31:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"10906:4:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10888:17:27"},"nodeType":"YulFunctionCall","src":"10888:23:27"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"10880:4:27"}]},{"nodeType":"YulAssignment","src":"10920:39:27","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"10950:8:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10932:17:27"},"nodeType":"YulFunctionCall","src":"10932:27:27"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"10920:8:27"}]},{"nodeType":"YulAssignment","src":"10969:113:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"10999:4:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"11005:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"11015:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"10978:20:27"},"nodeType":"YulFunctionCall","src":"10978:104:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"10969:5:27"}]}]},"name":"checked_exp_t_uint256_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"10845:4:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"10851:8:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"10864:5:27","type":""}],"src":"10804:285:27"},{"body":{"nodeType":"YulBlock","src":"11143:362:27","statements":[{"nodeType":"YulAssignment","src":"11153:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11176:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11158:17:27"},"nodeType":"YulFunctionCall","src":"11158:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11153:1:27"}]},{"nodeType":"YulAssignment","src":"11187:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11210:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11192:17:27"},"nodeType":"YulFunctionCall","src":"11192:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11187:1:27"}]},{"nodeType":"YulVariableDeclaration","src":"11221:28:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11244:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"11247:1:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11240:3:27"},"nodeType":"YulFunctionCall","src":"11240:9:27"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"11225:11:27","type":""}]},{"nodeType":"YulAssignment","src":"11258:41:27","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"11287:11:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11269:17:27"},"nodeType":"YulFunctionCall","src":"11269:30:27"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"11258:7:27"}]},{"body":{"nodeType":"YulBlock","src":"11476:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11478:16:27"},"nodeType":"YulFunctionCall","src":"11478:18:27"},"nodeType":"YulExpressionStatement","src":"11478:18:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11409:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11402:6:27"},"nodeType":"YulFunctionCall","src":"11402:9:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11432:1:27"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"11439:7:27"},{"name":"x","nodeType":"YulIdentifier","src":"11448:1:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11435:3:27"},"nodeType":"YulFunctionCall","src":"11435:15:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11429:2:27"},"nodeType":"YulFunctionCall","src":"11429:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11382:2:27"},"nodeType":"YulFunctionCall","src":"11382:83:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11362:6:27"},"nodeType":"YulFunctionCall","src":"11362:113:27"},"nodeType":"YulIf","src":"11359:139:27"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11126:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"11129:1:27","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"11135:7:27","type":""}],"src":"11095:410:27"},{"body":{"nodeType":"YulBlock","src":"11556:32:27","statements":[{"nodeType":"YulAssignment","src":"11566:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"11577:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11566:7:27"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11538:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11548:7:27","type":""}],"src":"11511:77:27"},{"body":{"nodeType":"YulBlock","src":"11659:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11676:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11699:5:27"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"11681:17:27"},"nodeType":"YulFunctionCall","src":"11681:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11669:6:27"},"nodeType":"YulFunctionCall","src":"11669:37:27"},"nodeType":"YulExpressionStatement","src":"11669:37:27"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11647:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11654:3:27","type":""}],"src":"11594:118:27"},{"body":{"nodeType":"YulBlock","src":"11783:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11800:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11823:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11805:17:27"},"nodeType":"YulFunctionCall","src":"11805:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11793:6:27"},"nodeType":"YulFunctionCall","src":"11793:37:27"},"nodeType":"YulExpressionStatement","src":"11793:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11771:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11778:3:27","type":""}],"src":"11718:118:27"},{"body":{"nodeType":"YulBlock","src":"11887:81:27","statements":[{"nodeType":"YulAssignment","src":"11897:65:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11912:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"11919:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11908:3:27"},"nodeType":"YulFunctionCall","src":"11908:54:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11897:7:27"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11869:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11879:7:27","type":""}],"src":"11842:126:27"},{"body":{"nodeType":"YulBlock","src":"12019:51:27","statements":[{"nodeType":"YulAssignment","src":"12029:35:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12058:5:27"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"12040:17:27"},"nodeType":"YulFunctionCall","src":"12040:24:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12029:7:27"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12001:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12011:7:27","type":""}],"src":"11974:96:27"},{"body":{"nodeType":"YulBlock","src":"12141:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12158:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12181:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"12163:17:27"},"nodeType":"YulFunctionCall","src":"12163:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12151:6:27"},"nodeType":"YulFunctionCall","src":"12151:37:27"},"nodeType":"YulExpressionStatement","src":"12151:37:27"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12129:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12136:3:27","type":""}],"src":"12076:118:27"},{"body":{"nodeType":"YulBlock","src":"12410:454:27","statements":[{"nodeType":"YulAssignment","src":"12420:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12432:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12443:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12428:3:27"},"nodeType":"YulFunctionCall","src":"12428:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12420:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12501:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12514:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12525:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12510:3:27"},"nodeType":"YulFunctionCall","src":"12510:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"12457:43:27"},"nodeType":"YulFunctionCall","src":"12457:71:27"},"nodeType":"YulExpressionStatement","src":"12457:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12582:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12595:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12606:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12591:3:27"},"nodeType":"YulFunctionCall","src":"12591:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"12538:43:27"},"nodeType":"YulFunctionCall","src":"12538:72:27"},"nodeType":"YulExpressionStatement","src":"12538:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12664:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12677:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12688:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12673:3:27"},"nodeType":"YulFunctionCall","src":"12673:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"12620:43:27"},"nodeType":"YulFunctionCall","src":"12620:72:27"},"nodeType":"YulExpressionStatement","src":"12620:72:27"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12746:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12759:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12770:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12755:3:27"},"nodeType":"YulFunctionCall","src":"12755:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12702:43:27"},"nodeType":"YulFunctionCall","src":"12702:72:27"},"nodeType":"YulExpressionStatement","src":"12702:72:27"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"12828:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12841:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12852:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12837:3:27"},"nodeType":"YulFunctionCall","src":"12837:19:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12784:43:27"},"nodeType":"YulFunctionCall","src":"12784:73:27"},"nodeType":"YulExpressionStatement","src":"12784:73:27"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12350:9:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12362:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12370:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12378:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12386:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12394:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12405:4:27","type":""}],"src":"12200:664:27"},{"body":{"nodeType":"YulBlock","src":"12966:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12983:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"12988:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12976:6:27"},"nodeType":"YulFunctionCall","src":"12976:19:27"},"nodeType":"YulExpressionStatement","src":"12976:19:27"},{"nodeType":"YulAssignment","src":"13004:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13023:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"13028:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13019:3:27"},"nodeType":"YulFunctionCall","src":"13019:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13004:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12938:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"12943:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12954:11:27","type":""}],"src":"12870:169:27"},{"body":{"nodeType":"YulBlock","src":"13137:285:27","statements":[{"nodeType":"YulVariableDeclaration","src":"13147:53:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13194:5:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"13161:32:27"},"nodeType":"YulFunctionCall","src":"13161:39:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13151:6:27","type":""}]},{"nodeType":"YulAssignment","src":"13209:78:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13275:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"13280:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13216:58:27"},"nodeType":"YulFunctionCall","src":"13216:71:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13209:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13335:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"13342:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13331:3:27"},"nodeType":"YulFunctionCall","src":"13331:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"13349:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"13354:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13296:34:27"},"nodeType":"YulFunctionCall","src":"13296:65:27"},"nodeType":"YulExpressionStatement","src":"13296:65:27"},{"nodeType":"YulAssignment","src":"13370:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13381:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13408:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13386:21:27"},"nodeType":"YulFunctionCall","src":"13386:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13377:3:27"},"nodeType":"YulFunctionCall","src":"13377:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13370:3:27"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13118:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13125:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13133:3:27","type":""}],"src":"13045:377:27"},{"body":{"nodeType":"YulBlock","src":"13546:195:27","statements":[{"nodeType":"YulAssignment","src":"13556:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13568:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13579:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13564:3:27"},"nodeType":"YulFunctionCall","src":"13564:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13556:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13603:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13614:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13599:3:27"},"nodeType":"YulFunctionCall","src":"13599:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13622:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"13628:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13618:3:27"},"nodeType":"YulFunctionCall","src":"13618:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13592:6:27"},"nodeType":"YulFunctionCall","src":"13592:47:27"},"nodeType":"YulExpressionStatement","src":"13592:47:27"},{"nodeType":"YulAssignment","src":"13648:86:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13720:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"13729:4:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13656:63:27"},"nodeType":"YulFunctionCall","src":"13656:78:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13648:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13518:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13530:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13541:4:27","type":""}],"src":"13428:313:27"},{"body":{"nodeType":"YulBlock","src":"13805:40:27","statements":[{"nodeType":"YulAssignment","src":"13816:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13832:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13826:5:27"},"nodeType":"YulFunctionCall","src":"13826:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13816:6:27"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13788:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13798:6:27","type":""}],"src":"13747:98:27"},{"body":{"nodeType":"YulBlock","src":"13907:60:27","statements":[{"nodeType":"YulAssignment","src":"13917:11:27","value":{"name":"ptr","nodeType":"YulIdentifier","src":"13925:3:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"13917:4:27"}]},{"nodeType":"YulAssignment","src":"13938:22:27","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"13950:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"13955:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13946:3:27"},"nodeType":"YulFunctionCall","src":"13946:14:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"13938:4:27"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"13894:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"13902:4:27","type":""}],"src":"13851:116:27"},{"body":{"nodeType":"YulBlock","src":"14028:99:27","statements":[{"nodeType":"YulVariableDeclaration","src":"14039:42:27","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14076:3:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14070:5:27"},"nodeType":"YulFunctionCall","src":"14070:10:27"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"14052:17:27"},"nodeType":"YulFunctionCall","src":"14052:29:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"14043:5:27","type":""}]},{"nodeType":"YulAssignment","src":"14091:29:27","value":{"name":"value","nodeType":"YulIdentifier","src":"14115:5:27"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"14091:11:27"}]}]},"name":"read_from_memoryt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14008:3:27","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"14016:11:27","type":""}],"src":"13973:154:27"},{"body":{"nodeType":"YulBlock","src":"14223:504:27","statements":[{"nodeType":"YulVariableDeclaration","src":"14234:52:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"14280:5:27"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14248:31:27"},"nodeType":"YulFunctionCall","src":"14248:38:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14238:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14295:21:27","value":{"name":"array","nodeType":"YulIdentifier","src":"14311:5:27"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"14299:8:27","type":""}]},{"nodeType":"YulAssignment","src":"14326:52:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"14372:5:27"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14338:33:27"},"nodeType":"YulFunctionCall","src":"14338:40:27"},"variableNames":[{"name":"dataArea","nodeType":"YulIdentifier","src":"14326:8:27"}]},{"nodeType":"YulAssignment","src":"14388:44:27","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"14423:8:27"}],"functionName":{"name":"read_from_memoryt_bytes32","nodeType":"YulIdentifier","src":"14397:25:27"},"nodeType":"YulFunctionCall","src":"14397:35:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14388:5:27"}]},{"body":{"nodeType":"YulBlock","src":"14460:260:27","statements":[{"nodeType":"YulAssignment","src":"14474:236:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14504:5:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14571:1:27","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14578:2:27","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"14582:6:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14574:3:27"},"nodeType":"YulFunctionCall","src":"14574:15:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14567:3:27"},"nodeType":"YulFunctionCall","src":"14567:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"14612:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"14527:18:27"},"nodeType":"YulFunctionCall","src":"14527:169:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14483:3:27"},"nodeType":"YulFunctionCall","src":"14483:227:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14474:5:27"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14448:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"14456:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14445:2:27"},"nodeType":"YulFunctionCall","src":"14445:14:27"},"nodeType":"YulIf","src":"14442:278:27"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"14207:5:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14217:5:27","type":""}],"src":"14133:594:27"},{"body":{"nodeType":"YulBlock","src":"14839:129:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14861:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"14869:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14857:3:27"},"nodeType":"YulFunctionCall","src":"14857:14:27"},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f","kind":"string","nodeType":"YulLiteral","src":"14873:34:27","type":"","value":"ERC20Votes: total supply risks o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14850:6:27"},"nodeType":"YulFunctionCall","src":"14850:58:27"},"nodeType":"YulExpressionStatement","src":"14850:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14929:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"14937:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14925:3:27"},"nodeType":"YulFunctionCall","src":"14925:15:27"},{"hexValue":"766572666c6f77696e6720766f746573","kind":"string","nodeType":"YulLiteral","src":"14942:18:27","type":"","value":"verflowing votes"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14918:6:27"},"nodeType":"YulFunctionCall","src":"14918:43:27"},"nodeType":"YulExpressionStatement","src":"14918:43:27"}]},"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14831:6:27","type":""}],"src":"14733:235:27"},{"body":{"nodeType":"YulBlock","src":"15120:220:27","statements":[{"nodeType":"YulAssignment","src":"15130:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15196:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"15201:2:27","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15137:58:27"},"nodeType":"YulFunctionCall","src":"15137:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15130:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15302:3:27"}],"functionName":{"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulIdentifier","src":"15213:88:27"},"nodeType":"YulFunctionCall","src":"15213:93:27"},"nodeType":"YulExpressionStatement","src":"15213:93:27"},{"nodeType":"YulAssignment","src":"15315:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15326:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"15331:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15322:3:27"},"nodeType":"YulFunctionCall","src":"15322:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15315:3:27"}]}]},"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15108:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15116:3:27","type":""}],"src":"14974:366:27"},{"body":{"nodeType":"YulBlock","src":"15517:248:27","statements":[{"nodeType":"YulAssignment","src":"15527:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15539:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15550:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15535:3:27"},"nodeType":"YulFunctionCall","src":"15535:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15527:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15574:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15585:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15570:3:27"},"nodeType":"YulFunctionCall","src":"15570:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15593:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"15599:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15589:3:27"},"nodeType":"YulFunctionCall","src":"15589:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15563:6:27"},"nodeType":"YulFunctionCall","src":"15563:47:27"},"nodeType":"YulExpressionStatement","src":"15563:47:27"},{"nodeType":"YulAssignment","src":"15619:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15753:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15627:124:27"},"nodeType":"YulFunctionCall","src":"15627:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15619:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15497:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15512:4:27","type":""}],"src":"15346:419:27"},{"body":{"nodeType":"YulBlock","src":"15877:75:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15899:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"15907:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15895:3:27"},"nodeType":"YulFunctionCall","src":"15895:14:27"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"15911:33:27","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15888:6:27"},"nodeType":"YulFunctionCall","src":"15888:57:27"},"nodeType":"YulExpressionStatement","src":"15888:57:27"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15869:6:27","type":""}],"src":"15771:181:27"},{"body":{"nodeType":"YulBlock","src":"16104:220:27","statements":[{"nodeType":"YulAssignment","src":"16114:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16180:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"16185:2:27","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16121:58:27"},"nodeType":"YulFunctionCall","src":"16121:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16114:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16286:3:27"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"16197:88:27"},"nodeType":"YulFunctionCall","src":"16197:93:27"},"nodeType":"YulExpressionStatement","src":"16197:93:27"},{"nodeType":"YulAssignment","src":"16299:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16310:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"16315:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16306:3:27"},"nodeType":"YulFunctionCall","src":"16306:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16299:3:27"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16092:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16100:3:27","type":""}],"src":"15958:366:27"},{"body":{"nodeType":"YulBlock","src":"16501:248:27","statements":[{"nodeType":"YulAssignment","src":"16511:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16523:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16534:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16519:3:27"},"nodeType":"YulFunctionCall","src":"16519:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16511:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16558:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16569:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16554:3:27"},"nodeType":"YulFunctionCall","src":"16554:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16577:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"16583:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16573:3:27"},"nodeType":"YulFunctionCall","src":"16573:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16547:6:27"},"nodeType":"YulFunctionCall","src":"16547:47:27"},"nodeType":"YulExpressionStatement","src":"16547:47:27"},{"nodeType":"YulAssignment","src":"16603:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16737:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16611:124:27"},"nodeType":"YulFunctionCall","src":"16611:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16603:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16481:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16496:4:27","type":""}],"src":"16330:419:27"},{"body":{"nodeType":"YulBlock","src":"16799:147:27","statements":[{"nodeType":"YulAssignment","src":"16809:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16832:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16814:17:27"},"nodeType":"YulFunctionCall","src":"16814:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16809:1:27"}]},{"nodeType":"YulAssignment","src":"16843:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16866:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16848:17:27"},"nodeType":"YulFunctionCall","src":"16848:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16843:1:27"}]},{"nodeType":"YulAssignment","src":"16877:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16888:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"16891:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16884:3:27"},"nodeType":"YulFunctionCall","src":"16884:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"16877:3:27"}]},{"body":{"nodeType":"YulBlock","src":"16917:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16919:16:27"},"nodeType":"YulFunctionCall","src":"16919:18:27"},"nodeType":"YulExpressionStatement","src":"16919:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16909:1:27"},{"name":"sum","nodeType":"YulIdentifier","src":"16912:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16906:2:27"},"nodeType":"YulFunctionCall","src":"16906:10:27"},"nodeType":"YulIf","src":"16903:36:27"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16786:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"16789:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"16795:3:27","type":""}],"src":"16755:191:27"},{"body":{"nodeType":"YulBlock","src":"17050:124:27","statements":[{"nodeType":"YulAssignment","src":"17060:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17072:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17083:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17068:3:27"},"nodeType":"YulFunctionCall","src":"17068:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17060:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17140:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17153:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17164:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17149:3:27"},"nodeType":"YulFunctionCall","src":"17149:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17096:43:27"},"nodeType":"YulFunctionCall","src":"17096:71:27"},"nodeType":"YulExpressionStatement","src":"17096:71:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17022:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17034:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17045:4:27","type":""}],"src":"16952:222:27"},{"body":{"nodeType":"YulBlock","src":"17286:120:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17308:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"17316:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17304:3:27"},"nodeType":"YulFunctionCall","src":"17304:14:27"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032","kind":"string","nodeType":"YulLiteral","src":"17320:34:27","type":"","value":"SafeCast: value doesn't fit in 2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17297:6:27"},"nodeType":"YulFunctionCall","src":"17297:58:27"},"nodeType":"YulExpressionStatement","src":"17297:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17376:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"17384:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17372:3:27"},"nodeType":"YulFunctionCall","src":"17372:15:27"},{"hexValue":"32342062697473","kind":"string","nodeType":"YulLiteral","src":"17389:9:27","type":"","value":"24 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17365:6:27"},"nodeType":"YulFunctionCall","src":"17365:34:27"},"nodeType":"YulExpressionStatement","src":"17365:34:27"}]},"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17278:6:27","type":""}],"src":"17180:226:27"},{"body":{"nodeType":"YulBlock","src":"17558:220:27","statements":[{"nodeType":"YulAssignment","src":"17568:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17634:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"17639:2:27","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17575:58:27"},"nodeType":"YulFunctionCall","src":"17575:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17568:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17740:3:27"}],"functionName":{"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulIdentifier","src":"17651:88:27"},"nodeType":"YulFunctionCall","src":"17651:93:27"},"nodeType":"YulExpressionStatement","src":"17651:93:27"},{"nodeType":"YulAssignment","src":"17753:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17764:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"17769:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17760:3:27"},"nodeType":"YulFunctionCall","src":"17760:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17753:3:27"}]}]},"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17546:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17554:3:27","type":""}],"src":"17412:366:27"},{"body":{"nodeType":"YulBlock","src":"17955:248:27","statements":[{"nodeType":"YulAssignment","src":"17965:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17977:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17988:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17973:3:27"},"nodeType":"YulFunctionCall","src":"17973:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17965:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18012:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18023:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18008:3:27"},"nodeType":"YulFunctionCall","src":"18008:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18031:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"18037:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18027:3:27"},"nodeType":"YulFunctionCall","src":"18027:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18001:6:27"},"nodeType":"YulFunctionCall","src":"18001:47:27"},"nodeType":"YulExpressionStatement","src":"18001:47:27"},{"nodeType":"YulAssignment","src":"18057:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18191:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18065:124:27"},"nodeType":"YulFunctionCall","src":"18065:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18057:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17935:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17950:4:27","type":""}],"src":"17784:419:27"},{"body":{"nodeType":"YulBlock","src":"18315:119:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18337:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"18345:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18333:3:27"},"nodeType":"YulFunctionCall","src":"18333:14:27"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033","kind":"string","nodeType":"YulLiteral","src":"18349:34:27","type":"","value":"SafeCast: value doesn't fit in 3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18326:6:27"},"nodeType":"YulFunctionCall","src":"18326:58:27"},"nodeType":"YulExpressionStatement","src":"18326:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18405:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"18413:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18401:3:27"},"nodeType":"YulFunctionCall","src":"18401:15:27"},{"hexValue":"322062697473","kind":"string","nodeType":"YulLiteral","src":"18418:8:27","type":"","value":"2 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18394:6:27"},"nodeType":"YulFunctionCall","src":"18394:33:27"},"nodeType":"YulExpressionStatement","src":"18394:33:27"}]},"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18307:6:27","type":""}],"src":"18209:225:27"},{"body":{"nodeType":"YulBlock","src":"18586:220:27","statements":[{"nodeType":"YulAssignment","src":"18596:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18662:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"18667:2:27","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18603:58:27"},"nodeType":"YulFunctionCall","src":"18603:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18596:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18768:3:27"}],"functionName":{"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulIdentifier","src":"18679:88:27"},"nodeType":"YulFunctionCall","src":"18679:93:27"},"nodeType":"YulExpressionStatement","src":"18679:93:27"},{"nodeType":"YulAssignment","src":"18781:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18792:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"18797:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18788:3:27"},"nodeType":"YulFunctionCall","src":"18788:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18781:3:27"}]}]},"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18574:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18582:3:27","type":""}],"src":"18440:366:27"},{"body":{"nodeType":"YulBlock","src":"18983:248:27","statements":[{"nodeType":"YulAssignment","src":"18993:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19005:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19016:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19001:3:27"},"nodeType":"YulFunctionCall","src":"19001:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18993:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19040:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19051:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19036:3:27"},"nodeType":"YulFunctionCall","src":"19036:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19059:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"19065:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19055:3:27"},"nodeType":"YulFunctionCall","src":"19055:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19029:6:27"},"nodeType":"YulFunctionCall","src":"19029:47:27"},"nodeType":"YulExpressionStatement","src":"19029:47:27"},{"nodeType":"YulAssignment","src":"19085:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19219:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19093:124:27"},"nodeType":"YulFunctionCall","src":"19093:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19085:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18963:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18978:4:27","type":""}],"src":"18812:419:27"},{"body":{"nodeType":"YulBlock","src":"19343:60:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19365:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"19373:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19361:3:27"},"nodeType":"YulFunctionCall","src":"19361:14:27"},{"hexValue":"5061757361626c653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"19377:18:27","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19354:6:27"},"nodeType":"YulFunctionCall","src":"19354:42:27"},"nodeType":"YulExpressionStatement","src":"19354:42:27"}]},"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19335:6:27","type":""}],"src":"19237:166:27"},{"body":{"nodeType":"YulBlock","src":"19555:220:27","statements":[{"nodeType":"YulAssignment","src":"19565:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19631:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"19636:2:27","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19572:58:27"},"nodeType":"YulFunctionCall","src":"19572:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19565:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19737:3:27"}],"functionName":{"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulIdentifier","src":"19648:88:27"},"nodeType":"YulFunctionCall","src":"19648:93:27"},"nodeType":"YulExpressionStatement","src":"19648:93:27"},{"nodeType":"YulAssignment","src":"19750:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19761:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"19766:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19757:3:27"},"nodeType":"YulFunctionCall","src":"19757:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19750:3:27"}]}]},"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19543:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19551:3:27","type":""}],"src":"19409:366:27"},{"body":{"nodeType":"YulBlock","src":"19952:248:27","statements":[{"nodeType":"YulAssignment","src":"19962:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19974:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19985:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19970:3:27"},"nodeType":"YulFunctionCall","src":"19970:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19962:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20009:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20020:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20005:3:27"},"nodeType":"YulFunctionCall","src":"20005:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20028:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"20034:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20024:3:27"},"nodeType":"YulFunctionCall","src":"20024:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19998:6:27"},"nodeType":"YulFunctionCall","src":"19998:47:27"},"nodeType":"YulExpressionStatement","src":"19998:47:27"},{"nodeType":"YulAssignment","src":"20054:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20188:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20062:124:27"},"nodeType":"YulFunctionCall","src":"20062:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20054:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19932:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19947:4:27","type":""}],"src":"19781:419:27"},{"body":{"nodeType":"YulBlock","src":"20312:119:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20334:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"20342:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20330:3:27"},"nodeType":"YulFunctionCall","src":"20330:14:27"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034","kind":"string","nodeType":"YulLiteral","src":"20346:34:27","type":"","value":"SafeCast: value doesn't fit in 4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20323:6:27"},"nodeType":"YulFunctionCall","src":"20323:58:27"},"nodeType":"YulExpressionStatement","src":"20323:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20402:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"20410:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20398:3:27"},"nodeType":"YulFunctionCall","src":"20398:15:27"},{"hexValue":"382062697473","kind":"string","nodeType":"YulLiteral","src":"20415:8:27","type":"","value":"8 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20391:6:27"},"nodeType":"YulFunctionCall","src":"20391:33:27"},"nodeType":"YulExpressionStatement","src":"20391:33:27"}]},"name":"store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20304:6:27","type":""}],"src":"20206:225:27"},{"body":{"nodeType":"YulBlock","src":"20583:220:27","statements":[{"nodeType":"YulAssignment","src":"20593:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20659:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"20664:2:27","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20600:58:27"},"nodeType":"YulFunctionCall","src":"20600:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20593:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20765:3:27"}],"functionName":{"name":"store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","nodeType":"YulIdentifier","src":"20676:88:27"},"nodeType":"YulFunctionCall","src":"20676:93:27"},"nodeType":"YulExpressionStatement","src":"20676:93:27"},{"nodeType":"YulAssignment","src":"20778:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20789:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"20794:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20785:3:27"},"nodeType":"YulFunctionCall","src":"20785:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20778:3:27"}]}]},"name":"abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20571:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20579:3:27","type":""}],"src":"20437:366:27"},{"body":{"nodeType":"YulBlock","src":"20980:248:27","statements":[{"nodeType":"YulAssignment","src":"20990:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21002:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21013:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20998:3:27"},"nodeType":"YulFunctionCall","src":"20998:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20990:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21037:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21048:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21033:3:27"},"nodeType":"YulFunctionCall","src":"21033:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21056:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"21062:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21052:3:27"},"nodeType":"YulFunctionCall","src":"21052:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21026:6:27"},"nodeType":"YulFunctionCall","src":"21026:47:27"},"nodeType":"YulExpressionStatement","src":"21026:47:27"},{"nodeType":"YulAssignment","src":"21082:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21216:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21090:124:27"},"nodeType":"YulFunctionCall","src":"21090:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21082:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20960:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20975:4:27","type":""}],"src":"20809:419:27"},{"body":{"nodeType":"YulBlock","src":"21360:206:27","statements":[{"nodeType":"YulAssignment","src":"21370:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21382:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21393:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21378:3:27"},"nodeType":"YulFunctionCall","src":"21378:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21370:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21450:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21463:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21474:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21459:3:27"},"nodeType":"YulFunctionCall","src":"21459:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21406:43:27"},"nodeType":"YulFunctionCall","src":"21406:71:27"},"nodeType":"YulExpressionStatement","src":"21406:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21531:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21544:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21555:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21540:3:27"},"nodeType":"YulFunctionCall","src":"21540:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21487:43:27"},"nodeType":"YulFunctionCall","src":"21487:72:27"},"nodeType":"YulExpressionStatement","src":"21487:72:27"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21324:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21336:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21344:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21355:4:27","type":""}],"src":"21234:332:27"},{"body":{"nodeType":"YulBlock","src":"21617:149:27","statements":[{"nodeType":"YulAssignment","src":"21627:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21650:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21632:17:27"},"nodeType":"YulFunctionCall","src":"21632:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"21627:1:27"}]},{"nodeType":"YulAssignment","src":"21661:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21684:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21666:17:27"},"nodeType":"YulFunctionCall","src":"21666:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"21661:1:27"}]},{"nodeType":"YulAssignment","src":"21695:17:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21707:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"21710:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21703:3:27"},"nodeType":"YulFunctionCall","src":"21703:9:27"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"21695:4:27"}]},{"body":{"nodeType":"YulBlock","src":"21737:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21739:16:27"},"nodeType":"YulFunctionCall","src":"21739:18:27"},"nodeType":"YulExpressionStatement","src":"21739:18:27"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"21728:4:27"},{"name":"x","nodeType":"YulIdentifier","src":"21734:1:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21725:2:27"},"nodeType":"YulFunctionCall","src":"21725:11:27"},"nodeType":"YulIf","src":"21722:37:27"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21603:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"21606:1:27","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"21612:4:27","type":""}],"src":"21572:194:27"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: total supply risks o\")\n\n        mstore(add(memPtr, 32), \"verflowing votes\")\n\n    }\n\n    function abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 2\")\n\n        mstore(add(memPtr, 32), \"24 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 3\")\n\n        mstore(add(memPtr, 32), \"2 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 4\")\n\n        mstore(add(memPtr, 32), \"8 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x74E7 CODESIZE SUB DUP1 PUSH3 0x74E7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x12D4 JUMP JUMPDEST DUP2 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 DUP5 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x82 SWAP2 SWAP1 PUSH3 0x158E JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x94 SWAP2 SWAP1 PUSH3 0x158E JUMP JUMPDEST POP POP POP PUSH3 0xAD PUSH1 0x5 DUP4 PUSH3 0x34B PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0xCB PUSH1 0x6 DUP3 PUSH3 0x34B PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x10A PUSH3 0x3A0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH0 PUSH1 0xC PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x17D PUSH8 0xEBA0D8436219ED85 PUSH1 0xC0 SHL PUSH3 0x3FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x199 PUSH8 0x58BF939D88F9FE1E PUSH1 0xC0 SHL PUSH3 0x3FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1B5 PUSH8 0x6E9E60F73B8A55DE PUSH1 0xC0 SHL PUSH3 0x3FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1D8 PUSH0 DUP1 SHL PUSH3 0x1CC PUSH3 0x3FF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x406 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1F4 PUSH8 0xF7C2D9A9BBF50A6B PUSH1 0xC0 SHL PUSH3 0x3FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x210 PUSH8 0xB99FF1082264CB44 PUSH1 0xC0 SHL PUSH3 0x3FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x251 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH3 0x245 PUSH3 0x3FF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x406 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x26D PUSH8 0xDBF0A4666BC2D4E3 PUSH1 0xC0 SHL PUSH3 0x3FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x289 PUSH8 0xE7EE6BA8480C9826 PUSH1 0xC0 SHL PUSH3 0x3FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2CA PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH3 0x2BE PUSH3 0x3FF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x406 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2E6 PUSH8 0x12C6DE024A999EAE PUSH1 0xC0 SHL PUSH3 0x3FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x302 PUSH8 0x689918B0A1B78F1A PUSH1 0xC0 SHL PUSH3 0x3FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x343 PUSH3 0x316 PUSH3 0x3FF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x6 PUSH1 0xA PUSH3 0x326 SWAP2 SWAP1 PUSH3 0x17EF JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH3 0x337 SWAP2 SWAP1 PUSH3 0x183F JUMP JUMPDEST PUSH3 0x4F2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x1E48 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x370 JUMPI PUSH3 0x368 DUP4 PUSH3 0x55C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x39A JUMP JUMPDEST DUP3 PUSH3 0x382 DUP4 PUSH3 0x5C6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 ADD SWAP1 DUP2 PUSH3 0x392 SWAP2 SWAP1 PUSH3 0x158E JUMP JUMPDEST POP PUSH1 0xFF PUSH0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x3E1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x18F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x418 DUP3 DUP3 PUSH3 0x5CF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x4EE JUMPI PUSH1 0x1 PUSH1 0xD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x493 PUSH3 0x3FF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x50E PUSH8 0x387313E8392F8078 PUSH1 0xC0 SHL PUSH3 0x3FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x52A PUSH8 0xA8D134D5181650E3 PUSH1 0xC0 SHL PUSH3 0x3FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x546 PUSH8 0x5A4458DA72185B20 PUSH1 0xC0 SHL PUSH3 0x3FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x558 DUP3 DUP3 PUSH3 0x633 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x5AB JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x5A2 SWAP2 SWAP1 PUSH3 0x19A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x5B9 SWAP1 PUSH3 0x19F3 JUMP JUMPDEST PUSH0 SHR OR PUSH0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x645 DUP3 DUP3 PUSH3 0x6EC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x655 PUSH3 0x851 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x683 PUSH3 0x874 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST GT ISZERO PUSH3 0x6C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x6BE SWAP1 PUSH3 0x1AD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x6E6 PUSH1 0xB PUSH3 0x87D PUSH1 0x20 SHL PUSH3 0x18B4 OR DUP4 PUSH3 0x894 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x75D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x754 SWAP1 PUSH3 0x1B44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x770 PUSH0 DUP4 DUP4 PUSH3 0xB98 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x783 SWAP2 SWAP1 PUSH3 0x1B64 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x832 SWAP2 SWAP1 PUSH3 0x1B9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x84D PUSH0 DUP4 DUP4 PUSH3 0xC4C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH3 0x88C SWAP2 SWAP1 PUSH3 0x1B64 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 DUP1 DUP3 EQ PUSH3 0x95E JUMPI PUSH3 0x8BC DUP8 PUSH1 0x1 DUP5 SUB PUSH3 0xCB8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH3 0x998 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH3 0x9CB DUP5 DUP7 DUP9 PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP PUSH0 DUP3 GT DUP1 ISZERO PUSH3 0x9FC JUMPI POP PUSH3 0x9E8 PUSH3 0xCCA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH3 0xA7E JUMPI PUSH3 0xA13 DUP4 PUSH3 0xCE1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xA28 DUP9 PUSH1 0x1 DUP6 SUB PUSH3 0xCB8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0xB8E JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH3 0xAB2 PUSH3 0xA9E PUSH3 0xCCA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH3 0xD4E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xACE DUP7 PUSH3 0xCE1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xBB4 PUSH8 0x2F5AD4669BD321E0 PUSH1 0xC0 SHL PUSH3 0x3FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xBC4 PUSH3 0xDA3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xBE0 PUSH8 0xE7799F75AA74B71B PUSH1 0xC0 SHL PUSH3 0x3FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xBFC PUSH8 0xFC80A80801390EFF PUSH1 0xC0 SHL PUSH3 0x3FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xC18 PUSH8 0x7EE51835770EDB09 PUSH1 0xC0 SHL PUSH3 0x3FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xC34 PUSH8 0xD598313A3F39905E PUSH1 0xC0 SHL PUSH3 0x3FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xC47 DUP4 DUP4 DUP4 PUSH3 0xDF8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0xC68 PUSH8 0x3FCD046526A50E6B PUSH1 0xC0 SHL PUSH3 0x3FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xC84 PUSH8 0xD352E7A2AC74BDD0 PUSH1 0xC0 SHL PUSH3 0x3FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xCA0 PUSH8 0xCFEAC663810CC1D7 PUSH1 0xC0 SHL PUSH3 0x3FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xCB3 DUP4 DUP4 DUP4 PUSH3 0xDFD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 MSTORE DUP2 PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xCDC NUMBER PUSH3 0xE48 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH3 0xD46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xD3D SWAP1 PUSH3 0x1C2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH3 0xD9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xD92 SWAP1 PUSH3 0x1CC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xDB3 PUSH3 0xE9F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0xDF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xDED SWAP1 PUSH3 0x1D2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0xE10 DUP4 DUP4 DUP4 PUSH3 0xEB4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xE43 PUSH3 0xE25 DUP5 PUSH3 0xEB9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xE36 DUP5 PUSH3 0xEB9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP4 PUSH3 0xF1E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH6 0xFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH3 0xE97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xE8E SWAP1 PUSH3 0x1DC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0xF5A JUMPI POP PUSH0 DUP2 GT JUMPDEST ISZERO PUSH3 0x1133 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x1049 JUMPI PUSH0 DUP1 PUSH3 0xFF0 PUSH1 0xA PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH3 0x1138 PUSH1 0x20 SHL PUSH3 0x18C9 OR DUP6 PUSH3 0x894 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH3 0x103E SWAP3 SWAP2 SWAP1 PUSH3 0x1DE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x1132 JUMPI PUSH0 DUP1 PUSH3 0x10D9 PUSH1 0xA PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH3 0x87D PUSH1 0x20 SHL PUSH3 0x18B4 OR DUP6 PUSH3 0x894 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH3 0x1127 SWAP3 SWAP2 SWAP1 PUSH3 0x1DE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH3 0x1147 SWAP2 SWAP1 PUSH3 0x1E0E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0x11B0 DUP3 PUSH3 0x1168 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x11D2 JUMPI PUSH3 0x11D1 PUSH3 0x1178 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x11E6 PUSH3 0x114F JUMP JUMPDEST SWAP1 POP PUSH3 0x11F4 DUP3 DUP3 PUSH3 0x11A5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1216 JUMPI PUSH3 0x1215 PUSH3 0x1178 JUMP JUMPDEST JUMPDEST PUSH3 0x1221 DUP3 PUSH3 0x1168 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x124D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x1230 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x126E PUSH3 0x1268 DUP5 PUSH3 0x11F9 JUMP JUMPDEST PUSH3 0x11DB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x128D JUMPI PUSH3 0x128C PUSH3 0x1164 JUMP JUMPDEST JUMPDEST PUSH3 0x129A DUP5 DUP3 DUP6 PUSH3 0x122E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x12B9 JUMPI PUSH3 0x12B8 PUSH3 0x1160 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x12CB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x1258 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x12ED JUMPI PUSH3 0x12EC PUSH3 0x1158 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x130D JUMPI PUSH3 0x130C PUSH3 0x115C JUMP JUMPDEST JUMPDEST PUSH3 0x131B DUP6 DUP3 DUP7 ADD PUSH3 0x12A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x133F JUMPI PUSH3 0x133E PUSH3 0x115C JUMP JUMPDEST JUMPDEST PUSH3 0x134D DUP6 DUP3 DUP7 ADD PUSH3 0x12A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x13A6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x13BC JUMPI PUSH3 0x13BB PUSH3 0x1361 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x1420 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x13E3 JUMP JUMPDEST PUSH3 0x142C DUP7 DUP4 PUSH3 0x13E3 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x1476 PUSH3 0x1470 PUSH3 0x146A DUP5 PUSH3 0x1444 JUMP JUMPDEST PUSH3 0x144D JUMP JUMPDEST PUSH3 0x1444 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1491 DUP4 PUSH3 0x1456 JUMP JUMPDEST PUSH3 0x14A9 PUSH3 0x14A0 DUP3 PUSH3 0x147D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x13EF JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x14BF PUSH3 0x14B1 JUMP JUMPDEST PUSH3 0x14CC DUP2 DUP5 DUP5 PUSH3 0x1486 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x14F3 JUMPI PUSH3 0x14E7 PUSH0 DUP3 PUSH3 0x14B5 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x14D2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1542 JUMPI PUSH3 0x150C DUP2 PUSH3 0x13C2 JUMP JUMPDEST PUSH3 0x1517 DUP5 PUSH3 0x13D4 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x1527 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x153F PUSH3 0x1536 DUP6 PUSH3 0x13D4 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x14D1 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x1564 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x1547 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x157E DUP4 DUP4 PUSH3 0x1553 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x1599 DUP3 PUSH3 0x1357 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x15B5 JUMPI PUSH3 0x15B4 PUSH3 0x1178 JUMP JUMPDEST JUMPDEST PUSH3 0x15C1 DUP3 SLOAD PUSH3 0x138E JUMP JUMPDEST PUSH3 0x15CE DUP3 DUP3 DUP6 PUSH3 0x14F7 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x1604 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x15EF JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x15FB DUP6 DUP3 PUSH3 0x1571 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x166A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x1614 DUP7 PUSH3 0x13C2 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x163D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x1616 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x165D JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x1659 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x1553 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x16FC JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x16D4 JUMPI PUSH3 0x16D3 PUSH3 0x1672 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x16E4 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x16F4 DUP6 PUSH3 0x169F JUMP JUMPDEST SWAP5 POP PUSH3 0x16B4 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x1716 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0x17E8 JUMP JUMPDEST DUP2 PUSH3 0x1725 JUMPI PUSH0 SWAP1 POP PUSH3 0x17E8 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x173E JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x1749 JUMPI PUSH3 0x177F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x17E8 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x175E JUMPI PUSH3 0x175D PUSH3 0x1672 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x1778 JUMPI PUSH3 0x1777 PUSH3 0x1672 JUMP JUMPDEST JUMPDEST POP PUSH3 0x17E8 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x17B9 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0x17B3 JUMPI PUSH3 0x17B2 PUSH3 0x1672 JUMP JUMPDEST JUMPDEST PUSH3 0x17E8 JUMP JUMPDEST PUSH3 0x17C8 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x16AB JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0x17E2 JUMPI PUSH3 0x17E1 PUSH3 0x1672 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x17FB DUP3 PUSH3 0x1444 JUMP JUMPDEST SWAP2 POP PUSH3 0x1808 DUP4 PUSH3 0x1444 JUMP JUMPDEST SWAP3 POP PUSH3 0x1837 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x1705 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x184B DUP3 PUSH3 0x1444 JUMP JUMPDEST SWAP2 POP PUSH3 0x1858 DUP4 PUSH3 0x1444 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x1868 DUP2 PUSH3 0x1444 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x1882 JUMPI PUSH3 0x1881 PUSH3 0x1672 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x189D DUP2 PUSH3 0x1889 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x18AE DUP2 PUSH3 0x1444 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x18DF DUP3 PUSH3 0x18B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x18F1 DUP2 PUSH3 0x18D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x190C PUSH0 DUP4 ADD DUP9 PUSH3 0x1892 JUMP JUMPDEST PUSH3 0x191B PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x1892 JUMP JUMPDEST PUSH3 0x192A PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x1892 JUMP JUMPDEST PUSH3 0x1939 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x18A3 JUMP JUMPDEST PUSH3 0x1948 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x18E6 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x196E DUP3 PUSH3 0x1357 JUMP JUMPDEST PUSH3 0x197A DUP2 DUP6 PUSH3 0x1952 JUMP JUMPDEST SWAP4 POP PUSH3 0x198C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x122E JUMP JUMPDEST PUSH3 0x1997 DUP2 PUSH3 0x1168 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x19BC DUP2 DUP5 PUSH3 0x1962 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x19EA DUP3 MLOAD PUSH3 0x1889 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x19FF DUP3 PUSH3 0x19C4 JUMP JUMPDEST DUP3 PUSH3 0x1A0B DUP5 PUSH3 0x19CE JUMP JUMPDEST SWAP1 POP PUSH3 0x1A18 DUP2 PUSH3 0x19DD JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0x1A5B JUMPI PUSH3 0x1A56 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x13E3 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH0 DUP3 ADD MSTORE PUSH32 0x766572666C6F77696E6720766F74657300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x1ABE PUSH1 0x30 DUP4 PUSH3 0x1952 JUMP JUMPDEST SWAP2 POP PUSH3 0x1ACB DUP3 PUSH3 0x1A62 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x1AEF DUP2 PUSH3 0x1AB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x1B2C PUSH1 0x1F DUP4 PUSH3 0x1952 JUMP JUMPDEST SWAP2 POP PUSH3 0x1B39 DUP3 PUSH3 0x1AF6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x1B5D DUP2 PUSH3 0x1B1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x1B70 DUP3 PUSH3 0x1444 JUMP JUMPDEST SWAP2 POP PUSH3 0x1B7D DUP4 PUSH3 0x1444 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x1B98 JUMPI PUSH3 0x1B97 PUSH3 0x1672 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1BB3 PUSH0 DUP4 ADD DUP5 PUSH3 0x18A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x1C15 PUSH1 0x27 DUP4 PUSH3 0x1952 JUMP JUMPDEST SWAP2 POP PUSH3 0x1C22 DUP3 PUSH3 0x1BB9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x1C46 DUP2 PUSH3 0x1C07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x1CA9 PUSH1 0x26 DUP4 PUSH3 0x1952 JUMP JUMPDEST SWAP2 POP PUSH3 0x1CB6 DUP3 PUSH3 0x1C4D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x1CDA DUP2 PUSH3 0x1C9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x1D17 PUSH1 0x10 DUP4 PUSH3 0x1952 JUMP JUMPDEST SWAP2 POP PUSH3 0x1D24 DUP3 PUSH3 0x1CE1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x1D48 DUP2 PUSH3 0x1D09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2034 PUSH0 DUP3 ADD MSTORE PUSH32 0x3820626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x1DAB PUSH1 0x26 DUP4 PUSH3 0x1952 JUMP JUMPDEST SWAP2 POP PUSH3 0x1DB8 DUP3 PUSH3 0x1D4F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x1DDC DUP2 PUSH3 0x1D9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x1DF8 PUSH0 DUP4 ADD DUP6 PUSH3 0x18A3 JUMP JUMPDEST PUSH3 0x1E07 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x18A3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x1E1A DUP3 PUSH3 0x1444 JUMP JUMPDEST SWAP2 POP PUSH3 0x1E27 DUP4 PUSH3 0x1444 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH3 0x1E42 JUMPI PUSH3 0x1E41 PUSH3 0x1672 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x564D PUSH3 0x1E9A PUSH0 CODECOPY PUSH0 PUSH2 0x10C3 ADD MSTORE PUSH0 PUSH2 0x108F ADD MSTORE PUSH0 PUSH2 0x280B ADD MSTORE PUSH0 PUSH2 0x27EA ADD MSTORE PUSH0 PUSH2 0x1EFD ADD MSTORE PUSH0 PUSH2 0x1F53 ADD MSTORE PUSH0 PUSH2 0x1F7C ADD MSTORE PUSH2 0x564D PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x251 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FCFFF45 GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x9AB24EB0 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x85 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x74D JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x769 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x787 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7A3 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x7D3 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x7F1 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x683 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x6B3 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x6D1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x701 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x731 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x84B0196E GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x5E7 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x617 JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x647 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x665 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x50D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5B9 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x196 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x4EF JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x44D JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x219 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x3A9 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2F1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x3A3F JUMP JUMPDEST PUSH2 0x821 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x3A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH2 0x89A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x3B27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x3BD4 JUMP JUMPDEST PUSH2 0x92A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x3A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH2 0x94C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x3C3A JUMP JUMPDEST PUSH2 0x955 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x3A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x3CBD JUMP JUMPDEST PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x3CF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x3D10 JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x375 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x3D69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x393 PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B1 PUSH2 0xA25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x3CF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x3D10 JUMP JUMPDEST PUSH2 0xA33 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x3BD4 JUMP JUMPDEST PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40A SWAP2 SWAP1 PUSH2 0x3A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x3BD4 JUMP JUMPDEST PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44B PUSH2 0xB8C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x462 SWAP2 SWAP1 PUSH2 0x3BD4 JUMP JUMPDEST PUSH2 0xC25 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x483 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x3D82 JUMP JUMPDEST PUSH2 0xDB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48D PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x3B27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x3DAD JUMP JUMPDEST PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0x3DE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E8 SWAP2 SWAP1 PUSH2 0x3DAD JUMP JUMPDEST PUSH2 0xEBA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F7 PUSH2 0xECE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x3A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x527 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x522 SWAP2 SWAP1 PUSH2 0x3DAD JUMP JUMPDEST PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x534 SWAP2 SWAP1 PUSH2 0x3E1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x557 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x552 SWAP2 SWAP1 PUSH2 0x3DAD JUMP JUMPDEST PUSH2 0xF34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x564 SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x587 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x582 SWAP2 SWAP1 PUSH2 0x3BD4 JUMP JUMPDEST PUSH2 0xF79 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59E SWAP2 SWAP1 PUSH2 0x3DAD JUMP JUMPDEST PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C1 PUSH2 0xFE6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5CB PUSH2 0x107F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DE SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x601 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FC SWAP2 SWAP1 PUSH2 0x3D82 JUMP JUMPDEST PUSH2 0x117C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60E SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x631 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62C SWAP2 SWAP1 PUSH2 0x3D10 JUMP JUMPDEST PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63E SWAP2 SWAP1 PUSH2 0x3A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64F PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65C SWAP2 SWAP1 PUSH2 0x3FCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x66D PUSH2 0x1253 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67A SWAP2 SWAP1 PUSH2 0x3B27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x698 SWAP2 SWAP1 PUSH2 0x3DAD JUMP JUMPDEST PUSH2 0x12E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6BB PUSH2 0x13E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C8 SWAP2 SWAP1 PUSH2 0x3CF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0x3BD4 JUMP JUMPDEST PUSH2 0x13E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0x3A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x71B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x716 SWAP2 SWAP1 PUSH2 0x3BD4 JUMP JUMPDEST PUSH2 0x145C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x728 SWAP2 SWAP1 PUSH2 0x3A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x400D JUMP JUMPDEST PUSH2 0x147E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x767 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x762 SWAP2 SWAP1 PUSH2 0x4096 JUMP JUMPDEST PUSH2 0x1581 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x771 PUSH2 0x16C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77E SWAP2 SWAP1 PUSH2 0x3CF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79C SWAP2 SWAP1 PUSH2 0x3D10 JUMP JUMPDEST PUSH2 0x16E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7B8 SWAP2 SWAP1 PUSH2 0x4133 JUMP JUMPDEST PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7CA SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7DB PUSH2 0x1787 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E8 SWAP2 SWAP1 PUSH2 0x3CF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x80B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x806 SWAP2 SWAP1 PUSH2 0x419B JUMP JUMPDEST PUSH2 0x17AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x818 SWAP2 SWAP1 PUSH2 0x424B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x893 JUMPI POP PUSH2 0x892 DUP3 PUSH2 0x18DE JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x8A9 SWAP1 PUSH2 0x4291 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8D5 SWAP1 PUSH2 0x4291 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x920 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x920 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x903 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x934 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP PUSH2 0x941 DUP2 DUP6 DUP6 PUSH2 0x194E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x95F PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP PUSH2 0x96C DUP6 DUP3 DUP6 PUSH2 0x1B11 JUMP JUMPDEST PUSH2 0x977 DUP6 DUP6 DUP6 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A9 DUP3 PUSH2 0x983 JUMP JUMPDEST PUSH2 0x9B2 DUP2 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0x9BC DUP4 DUP4 PUSH2 0x1E1C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9D6 PUSH8 0x11A8DFFF866EE397 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x9EA PUSH8 0xD43225A74DE2D3A PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x9FE PUSH8 0x2AC7BC60210945DB PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x6 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0xA PUSH2 0xA13 SWAP2 SWAP1 PUSH2 0x441D JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH2 0xA22 SWAP2 SWAP1 PUSH2 0x4467 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xA2E PUSH2 0x1EFA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA3B PUSH2 0x1947 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9F SWAP1 PUSH2 0x4518 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB2 DUP3 DUP3 PUSH2 0x1FB0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAC0 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP PUSH2 0xAE1 DUP2 DUP6 DUP6 PUSH2 0xAD2 DUP6 DUP10 PUSH2 0x1705 JUMP JUMPDEST PUSH2 0xADC SWAP2 SWAP1 PUSH2 0x4536 JUMP JUMPDEST PUSH2 0x194E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAF5 PUSH2 0x1244 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP3 LT PUSH2 0xB3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB35 SWAP1 PUSH2 0x45B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB84 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 PUSH2 0x208B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBA0 PUSH8 0xE92D42DB38907AD6 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xBCA DUP2 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0xBDE PUSH8 0x276455260C16655D PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xBF2 PUSH8 0x36E936EFAED435C PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xC06 PUSH8 0x2AA604E1C28F718F PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xC1A PUSH8 0x552E728A203151F4 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xC22 PUSH2 0x21C8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC39 PUSH8 0xF4E7492F9DAF180E PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xC41 PUSH2 0x2229 JUMP JUMPDEST PUSH2 0xC55 PUSH8 0x5C94A4B4954CF765 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xC69 PUSH8 0x8191C84FDD98C68E PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xC93 DUP2 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0xCA7 PUSH8 0x8398169F875F39BD PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xCBB PUSH8 0xD186FC3C7D5C0857 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xCCF PUSH8 0xBBCCC91F5EDD3DFD PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xCE3 PUSH8 0xE04A6D1D34B3BC53 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xCF7 PUSH8 0x4093E13D06852552 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x6 PUSH1 0xA PUSH2 0xD05 SWAP2 SWAP1 PUSH2 0x441D JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH2 0xD14 SWAP2 SWAP1 PUSH2 0x4467 JUMP JUMPDEST DUP3 PUSH2 0xD1D PUSH2 0x94C JUMP JUMPDEST PUSH2 0xD27 SWAP2 SWAP1 PUSH2 0x4536 JUMP JUMPDEST GT ISZERO PUSH2 0xD68 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5F SWAP1 PUSH2 0x4641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD7C PUSH8 0x9DBEB46D1393CD3F PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xD90 PUSH8 0xD1FB9ED397C21E55 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xDA4 PUSH8 0x197095A704D8FBC6 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xDAE DUP4 DUP4 PUSH2 0x2273 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xDC4 PUSH2 0xDBE PUSH2 0x1947 JUMP JUMPDEST DUP3 PUSH2 0x22BD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 NUMBER PUSH2 0xDD2 PUSH2 0x1244 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND EQ PUSH2 0xE1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE11 SWAP1 PUSH2 0x46A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xECB PUSH2 0xEC5 PUSH2 0x1947 JUMP JUMPDEST DUP3 PUSH2 0x2307 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xF2D PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x241C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF8B DUP3 PUSH2 0xF85 PUSH2 0x1947 JUMP JUMPDEST DUP4 PUSH2 0x1B11 JUMP JUMPDEST PUSH2 0xF95 DUP3 DUP3 PUSH2 0x22BD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFDF PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH2 0x246E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFA PUSH8 0xE425EB11ADC8483D PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x1024 DUP2 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0x1038 PUSH8 0xAF518162F0BAE077 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x104C PUSH8 0xB53283ADA1A9A05A PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x1060 PUSH8 0xADFFED96F4D632C2 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x1074 PUSH8 0xC6DBFA490CFDB469 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x107C PUSH2 0x247A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x10BC PUSH1 0x5 PUSH32 0x0 PUSH2 0x24DC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x10F0 PUSH1 0x6 PUSH32 0x0 PUSH2 0x24DC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x110F JUMPI PUSH2 0x110E PUSH2 0x46C7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x113D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH0 PUSH2 0x1185 PUSH2 0x1244 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP3 LT PUSH2 0x11CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C5 SWAP1 PUSH2 0x45B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11D9 PUSH1 0xB DUP4 PUSH2 0x208B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x124E NUMBER PUSH2 0x2589 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1262 SWAP1 PUSH2 0x4291 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x128E SWAP1 PUSH2 0x4291 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12B0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 DUP2 EQ PUSH2 0x13B9 JUMPI PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 DUP3 SUB DUP2 SLOAD DUP2 LT PUSH2 0x1381 JUMPI PUSH2 0x1380 PUSH2 0x46F4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13BB JUMP JUMPDEST PUSH0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x13F1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x13FE DUP3 DUP7 PUSH2 0x1705 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1443 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143A SWAP1 PUSH2 0x4791 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1450 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x194E JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1466 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP PUSH2 0x1473 DUP2 DUP6 DUP6 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x14C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B8 SWAP1 PUSH2 0x47F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1522 PUSH2 0x151A PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x14FF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4817 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x25DD JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x25F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x152D DUP2 PUSH2 0x261F JUMP JUMPDEST DUP7 EQ PUSH2 0x156E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1565 SWAP1 PUSH2 0x48A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1578 DUP2 DUP9 PUSH2 0x2307 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x15C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BB SWAP1 PUSH2 0x490C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x15F2 DUP13 PUSH2 0x261F JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1608 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x492A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x162A DUP3 PUSH2 0x25DD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1639 DUP3 DUP8 DUP8 DUP8 PUSH2 0x25F6 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A0 SWAP1 PUSH2 0x49D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16B4 DUP11 DUP11 DUP11 PUSH2 0x194E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x16ED DUP3 PUSH2 0x983 JUMP JUMPDEST PUSH2 0x16F6 DUP2 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0x1700 DUP4 DUP4 PUSH2 0x1FB0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH2 0x17B3 PUSH2 0x39AA JUMP JUMPDEST PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1808 JUMPI PUSH2 0x1807 PUSH2 0x46F4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x18C1 SWAP2 SWAP1 PUSH2 0x4536 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x18D6 SWAP2 SWAP1 PUSH2 0x49F1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B3 SWAP1 PUSH2 0x4A94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A21 SWAP1 PUSH2 0x4B22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B04 SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B1C DUP5 DUP5 PUSH2 0x1705 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1B96 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1B88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B7F SWAP1 PUSH2 0x4B8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B95 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x194E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C01 SWAP1 PUSH2 0x4C18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C6F SWAP1 PUSH2 0x4CA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C83 DUP4 DUP4 DUP4 PUSH2 0x267A JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1D06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CFD SWAP1 PUSH2 0x4D34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1DEF SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1E02 DUP5 DUP5 DUP5 PUSH2 0x26F6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1E19 DUP2 PUSH2 0x1E14 PUSH2 0x1947 JUMP JUMPDEST PUSH2 0x2742 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E26 DUP3 DUP3 PUSH2 0x11E0 JUMP JUMPDEST PUSH2 0x1EF3 JUMPI PUSH1 0x1 PUSH1 0xD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1E98 PUSH2 0x1947 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1F75 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1FA2 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1FAD JUMP JUMPDEST PUSH2 0x1FAA PUSH2 0x27C6 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1FBA DUP3 DUP3 PUSH2 0x11E0 JUMP JUMPDEST ISZERO PUSH2 0x2087 JUMPI PUSH0 PUSH1 0xD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x202C PUSH2 0x1947 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 DUP1 DUP3 SWAP1 POP PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x20FC JUMPI PUSH0 PUSH2 0x20AC DUP5 PUSH2 0x285B JUMP JUMPDEST DUP5 PUSH2 0x20B7 SWAP2 SWAP1 PUSH2 0x49F1 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x20C4 DUP9 DUP4 PUSH2 0x2951 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x20EA JUMPI DUP1 SWAP2 POP PUSH2 0x20FA JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x20F7 SWAP2 SWAP1 PUSH2 0x4536 JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x2159 JUMPI PUSH0 PUSH2 0x2110 DUP4 DUP4 PUSH2 0x2963 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x211D DUP9 DUP4 PUSH2 0x2951 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x2143 JUMPI DUP1 SWAP2 POP PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x2150 SWAP2 SWAP1 PUSH2 0x4536 JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x20FD JUMP JUMPDEST PUSH0 DUP2 EQ PUSH2 0x219D JUMPI PUSH2 0x216D DUP7 PUSH1 0x1 DUP4 SUB PUSH2 0x2951 JUMP JUMPDEST PUSH0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x219F JUMP JUMPDEST PUSH0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21D0 PUSH2 0x2988 JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x2212 PUSH2 0x1947 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221F SWAP2 SWAP1 PUSH2 0x3DE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x2231 PUSH2 0xECE JUMP JUMPDEST ISZERO PUSH2 0x2271 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2268 SWAP1 PUSH2 0x4D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2287 PUSH8 0x387313E8392F8078 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x229B PUSH8 0xA8D134D5181650E3 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x22AF PUSH8 0x5A4458DA72185B20 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x22B9 DUP3 DUP3 PUSH2 0x29D1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x22D1 PUSH8 0x9A48B9048B924447 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x22E5 PUSH8 0x25868AECED47B2E3 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x22F9 PUSH8 0xA9FF7514CAE174A3 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x2303 DUP3 DUP3 PUSH2 0x2A5E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2311 DUP4 PUSH2 0xE55 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x231D DUP5 PUSH2 0xF34 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x9 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2416 DUP3 DUP5 DUP4 PUSH2 0x2A7C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x2466 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245D SWAP1 PUSH2 0x4E2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2482 PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x24C5 PUSH2 0x1947 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D2 SWAP2 SWAP1 PUSH2 0x3DE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0x24F8 JUMPI PUSH2 0x24F1 DUP4 PUSH2 0x2C6C JUMP JUMPDEST SWAP1 POP PUSH2 0x2583 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x2504 SWAP1 PUSH2 0x4291 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2530 SWAP1 PUSH2 0x4291 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x257B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2552 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x257B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x255E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH6 0xFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x25D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25CC SWAP1 PUSH2 0x4EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25EF PUSH2 0x25E9 PUSH2 0x1EFA JUMP JUMPDEST DUP4 PUSH2 0x2CDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x2605 DUP8 DUP8 DUP8 DUP8 PUSH2 0x2D1E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x2612 DUP2 PUSH2 0x2DF6 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x2669 DUP2 PUSH2 0x246E JUMP JUMPDEST SWAP2 POP PUSH2 0x2674 DUP2 PUSH2 0x2F5B JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x268E PUSH8 0x2F5AD4669BD321E0 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x2696 PUSH2 0x2229 JUMP JUMPDEST PUSH2 0x26AA PUSH8 0xE7799F75AA74B71B PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x26BE PUSH8 0xFC80A80801390EFF PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x26D2 PUSH8 0x7EE51835770EDB09 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x26E6 PUSH8 0xD598313A3F39905E PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x26F1 DUP4 DUP4 DUP4 PUSH2 0x2F6F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x270A PUSH8 0x3FCD046526A50E6B PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x271E PUSH8 0xD352E7A2AC74BDD0 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x2732 PUSH8 0xCFEAC663810CC1D7 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x273D DUP4 DUP4 DUP4 PUSH2 0x2F74 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x274C DUP3 DUP3 PUSH2 0x11E0 JUMP JUMPDEST PUSH2 0x27C2 JUMPI PUSH2 0x2759 DUP2 PUSH2 0x2F9F JUMP JUMPDEST PUSH2 0x2766 DUP4 PUSH0 SHR PUSH1 0x20 PUSH2 0x2FCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2777 SWAP3 SWAP2 SWAP1 PUSH2 0x4FA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27B9 SWAP2 SWAP1 PUSH2 0x3B27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2840 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4FDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 DUP3 SUB PUSH2 0x286B JUMPI PUSH0 SWAP1 POP PUSH2 0x294C JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0x2877 DUP5 PUSH2 0x3201 JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2891 JUMPI PUSH2 0x2890 PUSH2 0x502E JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28AA JUMPI PUSH2 0x28A9 PUSH2 0x502E JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28C3 JUMPI PUSH2 0x28C2 PUSH2 0x502E JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28DC JUMPI PUSH2 0x28DB PUSH2 0x502E JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28F5 JUMPI PUSH2 0x28F4 PUSH2 0x502E JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x290E JUMPI PUSH2 0x290D PUSH2 0x502E JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2927 JUMPI PUSH2 0x2926 PUSH2 0x502E JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x2948 DUP2 DUP3 DUP6 DUP2 PUSH2 0x2942 JUMPI PUSH2 0x2941 PUSH2 0x502E JUMP JUMPDEST JUMPDEST DIV PUSH2 0x32D8 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 MSTORE DUP2 PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x2973 SWAP2 SWAP1 PUSH2 0x505B JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x2980 SWAP2 SWAP1 PUSH2 0x4536 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2990 PUSH2 0xECE JUMP JUMPDEST PUSH2 0x29CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29C6 SWAP1 PUSH2 0x50D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x29DB DUP3 DUP3 PUSH2 0x32F0 JUMP JUMPDEST PUSH2 0x29E3 PUSH2 0x343E JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A09 PUSH2 0x94C JUMP JUMPDEST GT ISZERO PUSH2 0x2A4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A41 SWAP1 PUSH2 0x5163 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A58 PUSH1 0xB PUSH2 0x18B4 DUP4 PUSH2 0x3461 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2A68 DUP3 DUP3 PUSH2 0x372A JUMP JUMPDEST PUSH2 0x2A76 PUSH1 0xB PUSH2 0x18C9 DUP4 PUSH2 0x3461 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2AB7 JUMPI POP PUSH0 DUP2 GT JUMPDEST ISZERO PUSH2 0x2C67 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2B91 JUMPI PUSH0 DUP1 PUSH2 0x2B3A PUSH1 0xA PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH2 0x18C9 DUP6 PUSH2 0x3461 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2B86 SWAP3 SWAP2 SWAP1 PUSH2 0x5181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2C66 JUMPI PUSH0 DUP1 PUSH2 0x2C0F PUSH1 0xA PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH2 0x18B4 DUP6 PUSH2 0x3461 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2C5B SWAP3 SWAP2 SWAP1 PUSH2 0x5181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x2C78 DUP4 PUSH2 0x38ED JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C96 JUMPI PUSH2 0x2C95 PUSH2 0x46C7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2CC8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH0 SHR GT ISZERO PUSH2 0x2D56 JUMPI PUSH0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x2DED JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2D79 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x51A8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D99 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2DE5 JUMPI PUSH0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x2DED JUMP JUMPDEST DUP1 PUSH0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2E09 JUMPI PUSH2 0x2E08 PUSH2 0x51EB JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2E1C JUMPI PUSH2 0x2E1B PUSH2 0x51EB JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x2F58 JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2E36 JUMPI PUSH2 0x2E35 PUSH2 0x51EB JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2E49 JUMPI PUSH2 0x2E48 PUSH2 0x51EB JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2E89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E80 SWAP1 PUSH2 0x5262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2E9D JUMPI PUSH2 0x2E9C PUSH2 0x51EB JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2EB0 JUMPI PUSH2 0x2EAF PUSH2 0x51EB JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2EF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EE7 SWAP1 PUSH2 0x52CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2F04 JUMPI PUSH2 0x2F03 PUSH2 0x51EB JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2F17 JUMPI PUSH2 0x2F16 PUSH2 0x51EB JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2F57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F4E SWAP1 PUSH2 0x5358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2F7F DUP4 DUP4 DUP4 PUSH2 0x393B JUMP JUMPDEST PUSH2 0x2F9A PUSH2 0x2F8B DUP5 PUSH2 0xE55 JUMP JUMPDEST PUSH2 0x2F94 DUP5 PUSH2 0xE55 JUMP JUMPDEST DUP4 PUSH2 0x2A7C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2FC5 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x2FCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x2FDE SWAP2 SWAP1 PUSH2 0x4467 JUMP JUMPDEST PUSH2 0x2FE8 SWAP2 SWAP1 PUSH2 0x4536 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3001 JUMPI PUSH2 0x3000 PUSH2 0x46C7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3033 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x306A JUMPI PUSH2 0x3069 PUSH2 0x46F4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x30CD JUMPI PUSH2 0x30CC PUSH2 0x46F4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x310B SWAP2 SWAP1 PUSH2 0x4467 JUMP JUMPDEST PUSH2 0x3115 SWAP2 SWAP1 PUSH2 0x4536 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x31B4 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x3157 JUMPI PUSH2 0x3156 PUSH2 0x46F4 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x316E JUMPI PUSH2 0x316D PUSH2 0x46F4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x31AD SWAP1 PUSH2 0x5376 JUMP JUMPDEST SWAP1 POP PUSH2 0x3118 JUMP JUMPDEST POP PUSH0 DUP5 EQ PUSH2 0x31F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31EE SWAP1 PUSH2 0x53E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3220 JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x80 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x323A JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3254 JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x326E JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3288 JUMPI PUSH1 0x8 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x4 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x32A2 JUMPI PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x2 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x32BC JUMPI PUSH1 0x2 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x1 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x32CF JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x32E6 JUMPI DUP2 PUSH2 0x32E8 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x335E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3355 SWAP1 PUSH2 0x544F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3369 PUSH0 DUP4 DUP4 PUSH2 0x267A JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x337A SWAP2 SWAP1 PUSH2 0x4536 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3427 SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x343A PUSH0 DUP4 DUP4 PUSH2 0x26F6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 DUP1 DUP3 EQ PUSH2 0x3521 JUMPI PUSH2 0x3480 DUP8 PUSH1 0x1 DUP5 SUB PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x355B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH2 0x3590 DUP5 DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x35B8 JUMPI POP PUSH2 0x35A4 PUSH2 0x1244 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x3628 JUMPI PUSH2 0x35C6 DUP4 PUSH2 0x3940 JUMP JUMPDEST PUSH2 0x35D3 DUP9 PUSH1 0x1 DUP6 SUB PUSH2 0x2951 JUMP JUMPDEST PUSH0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x3720 JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x364C PUSH2 0x363F PUSH2 0x1244 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x241C JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3660 DUP7 PUSH2 0x3940 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3798 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x378F SWAP1 PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x37A3 DUP3 PUSH0 DUP4 PUSH2 0x267A JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x3826 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381D SWAP1 PUSH2 0x556B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x38D5 SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x38E8 DUP4 PUSH0 DUP5 PUSH2 0x26F6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x3932 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x39A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3999 SWAP1 PUSH2 0x55F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A1E DUP2 PUSH2 0x39EA JUMP JUMPDEST DUP2 EQ PUSH2 0x3A28 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A39 DUP2 PUSH2 0x3A15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A54 JUMPI PUSH2 0x3A53 PUSH2 0x39E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3A61 DUP5 DUP3 DUP6 ADD PUSH2 0x3A2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A7E DUP2 PUSH2 0x3A6A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A97 PUSH0 DUP4 ADD DUP5 PUSH2 0x3A75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3AD4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3AB9 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3AF9 DUP3 PUSH2 0x3A9D JUMP JUMPDEST PUSH2 0x3B03 DUP2 DUP6 PUSH2 0x3AA7 JUMP JUMPDEST SWAP4 POP PUSH2 0x3B13 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3AB7 JUMP JUMPDEST PUSH2 0x3B1C DUP2 PUSH2 0x3ADF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3B3F DUP2 DUP5 PUSH2 0x3AEF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3B70 DUP3 PUSH2 0x3B47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B80 DUP2 PUSH2 0x3B66 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B8A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3B9B DUP2 PUSH2 0x3B77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3BB3 DUP2 PUSH2 0x3BA1 JUMP JUMPDEST DUP2 EQ PUSH2 0x3BBD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3BCE DUP2 PUSH2 0x3BAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BEA JUMPI PUSH2 0x3BE9 PUSH2 0x39E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3BF7 DUP6 DUP3 DUP7 ADD PUSH2 0x3B8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3C08 DUP6 DUP3 DUP7 ADD PUSH2 0x3BC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C1B DUP2 PUSH2 0x3BA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C34 PUSH0 DUP4 ADD DUP5 PUSH2 0x3C12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3C51 JUMPI PUSH2 0x3C50 PUSH2 0x39E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3C5E DUP7 DUP3 DUP8 ADD PUSH2 0x3B8D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3C6F DUP7 DUP3 DUP8 ADD PUSH2 0x3B8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3C80 DUP7 DUP3 DUP8 ADD PUSH2 0x3BC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C9C DUP2 PUSH2 0x3C8A JUMP JUMPDEST DUP2 EQ PUSH2 0x3CA6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3CB7 DUP2 PUSH2 0x3C93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CD2 JUMPI PUSH2 0x3CD1 PUSH2 0x39E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3CDF DUP5 DUP3 DUP6 ADD PUSH2 0x3CA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3CF1 DUP2 PUSH2 0x3C8A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D0A PUSH0 DUP4 ADD DUP5 PUSH2 0x3CE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3D26 JUMPI PUSH2 0x3D25 PUSH2 0x39E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3D33 DUP6 DUP3 DUP7 ADD PUSH2 0x3CA9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3D44 DUP6 DUP3 DUP7 ADD PUSH2 0x3B8D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D63 DUP2 PUSH2 0x3D4E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D7C PUSH0 DUP4 ADD DUP5 PUSH2 0x3D5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D97 JUMPI PUSH2 0x3D96 PUSH2 0x39E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3DA4 DUP5 DUP3 DUP6 ADD PUSH2 0x3BC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DC2 JUMPI PUSH2 0x3DC1 PUSH2 0x39E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3DCF DUP5 DUP3 DUP6 ADD PUSH2 0x3B8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3DE1 DUP2 PUSH2 0x3B66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3DFA PUSH0 DUP4 ADD DUP5 PUSH2 0x3DD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E18 DUP2 PUSH2 0x3E00 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E31 PUSH0 DUP4 ADD DUP5 PUSH2 0x3E0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E6B DUP2 PUSH2 0x3E37 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EA3 DUP2 PUSH2 0x3BA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3EB4 DUP4 DUP4 PUSH2 0x3E9A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3ED6 DUP3 PUSH2 0x3E71 JUMP JUMPDEST PUSH2 0x3EE0 DUP2 DUP6 PUSH2 0x3E7B JUMP JUMPDEST SWAP4 POP PUSH2 0x3EEB DUP4 PUSH2 0x3E8B JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F1B JUMPI DUP2 MLOAD PUSH2 0x3F02 DUP9 DUP3 PUSH2 0x3EA9 JUMP JUMPDEST SWAP8 POP PUSH2 0x3F0D DUP4 PUSH2 0x3EC0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3EEE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x3F3B PUSH0 DUP4 ADD DUP11 PUSH2 0x3E62 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3F4D DUP2 DUP10 PUSH2 0x3AEF JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3F61 DUP2 DUP9 PUSH2 0x3AEF JUMP JUMPDEST SWAP1 POP PUSH2 0x3F70 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x3C12 JUMP JUMPDEST PUSH2 0x3F7D PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x3DD8 JUMP JUMPDEST PUSH2 0x3F8A PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3CE8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x3F9C DUP2 DUP5 PUSH2 0x3ECC JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FC4 DUP2 PUSH2 0x3FAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3FDD PUSH0 DUP4 ADD DUP5 PUSH2 0x3FBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3FEC DUP2 PUSH2 0x3D4E JUMP JUMPDEST DUP2 EQ PUSH2 0x3FF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4007 DUP2 PUSH2 0x3FE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x4027 JUMPI PUSH2 0x4026 PUSH2 0x39E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4034 DUP10 DUP3 DUP11 ADD PUSH2 0x3B8D JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x4045 DUP10 DUP3 DUP11 ADD PUSH2 0x3BC0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x4056 DUP10 DUP3 DUP11 ADD PUSH2 0x3BC0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x4067 DUP10 DUP3 DUP11 ADD PUSH2 0x3FF9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x4078 DUP10 DUP3 DUP11 ADD PUSH2 0x3CA9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x4089 DUP10 DUP3 DUP11 ADD PUSH2 0x3CA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x40B1 JUMPI PUSH2 0x40B0 PUSH2 0x39E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x40BE DUP11 DUP3 DUP12 ADD PUSH2 0x3B8D JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x40CF DUP11 DUP3 DUP12 ADD PUSH2 0x3B8D JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x40E0 DUP11 DUP3 DUP12 ADD PUSH2 0x3BC0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x40F1 DUP11 DUP3 DUP12 ADD PUSH2 0x3BC0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x4102 DUP11 DUP3 DUP12 ADD PUSH2 0x3FF9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x4113 DUP11 DUP3 DUP12 ADD PUSH2 0x3CA9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x4124 DUP11 DUP3 DUP12 ADD PUSH2 0x3CA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4149 JUMPI PUSH2 0x4148 PUSH2 0x39E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4156 DUP6 DUP3 DUP7 ADD PUSH2 0x3B8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4167 DUP6 DUP3 DUP7 ADD PUSH2 0x3B8D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x417A DUP2 PUSH2 0x3E00 JUMP JUMPDEST DUP2 EQ PUSH2 0x4184 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4195 DUP2 PUSH2 0x4171 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x41B1 JUMPI PUSH2 0x41B0 PUSH2 0x39E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x41BE DUP6 DUP3 DUP7 ADD PUSH2 0x3B8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x41CF DUP6 DUP3 DUP7 ADD PUSH2 0x4187 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x41E2 DUP2 PUSH2 0x3E00 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4218 DUP2 PUSH2 0x41E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x4232 PUSH0 DUP6 ADD DUP3 PUSH2 0x41D9 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x4245 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x420F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x425E PUSH0 DUP4 ADD DUP5 PUSH2 0x421E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x42A8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x42BB JUMPI PUSH2 0x42BA PUSH2 0x4264 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x4343 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x431F JUMPI PUSH2 0x431E PUSH2 0x42C1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x432E JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x433C DUP6 PUSH2 0x42EE JUMP JUMPDEST SWAP5 POP PUSH2 0x4303 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x435B JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x4416 JUMP JUMPDEST DUP2 PUSH2 0x4368 JUMPI PUSH0 SWAP1 POP PUSH2 0x4416 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x437E JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x4388 JUMPI PUSH2 0x43B7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x4416 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x439A JUMPI PUSH2 0x4399 PUSH2 0x42C1 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x43B1 JUMPI PUSH2 0x43B0 PUSH2 0x42C1 JUMP JUMPDEST JUMPDEST POP PUSH2 0x4416 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x43EC JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x43E7 JUMPI PUSH2 0x43E6 PUSH2 0x42C1 JUMP JUMPDEST JUMPDEST PUSH2 0x4416 JUMP JUMPDEST PUSH2 0x43F9 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x42FA JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x4410 JUMPI PUSH2 0x440F PUSH2 0x42C1 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4427 DUP3 PUSH2 0x3BA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x4432 DUP4 PUSH2 0x3BA1 JUMP JUMPDEST SWAP3 POP PUSH2 0x445F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x434C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4471 DUP3 PUSH2 0x3BA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x447C DUP4 PUSH2 0x3BA1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x448A DUP2 PUSH2 0x3BA1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x44A1 JUMPI PUSH2 0x44A0 PUSH2 0x42C1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4502 PUSH1 0x2F DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x450D DUP3 PUSH2 0x44A8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x452F DUP2 PUSH2 0x44F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4540 DUP3 PUSH2 0x3BA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x454B DUP4 PUSH2 0x3BA1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4563 JUMPI PUSH2 0x4562 PUSH2 0x42C1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20667574757265206C6F6F6B757000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x459D PUSH1 0x19 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x45A8 DUP3 PUSH2 0x4569 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x45CA DUP2 PUSH2 0x4591 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20746F206265206D696E7465642073686F756C64206E6F74206578 PUSH0 DUP3 ADD MSTORE PUSH32 0x63656564204D617820737570706C790000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x462B PUSH1 0x2F DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4636 DUP3 PUSH2 0x45D1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4658 DUP2 PUSH2 0x461F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A2062726F6B656E20636C6F636B206D6F6465000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4693 PUSH1 0x1D DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x469E DUP3 PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x46C0 DUP2 PUSH2 0x4687 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x477B PUSH1 0x25 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4786 DUP3 PUSH2 0x4721 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x47A8 DUP2 PUSH2 0x476F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A207369676E61747572652065787069726564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x47E3 PUSH1 0x1D DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x47EE DUP3 PUSH2 0x47AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4810 DUP2 PUSH2 0x47D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x482A PUSH0 DUP4 ADD DUP8 PUSH2 0x3CE8 JUMP JUMPDEST PUSH2 0x4837 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3DD8 JUMP JUMPDEST PUSH2 0x4844 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3C12 JUMP JUMPDEST PUSH2 0x4851 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3C12 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20696E76616C6964206E6F6E636500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x488E PUSH1 0x19 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4899 DUP3 PUSH2 0x485A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x48BB DUP2 PUSH2 0x4882 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x48F6 PUSH1 0x1D DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4901 DUP3 PUSH2 0x48C2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4923 DUP2 PUSH2 0x48EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x493D PUSH0 DUP4 ADD DUP10 PUSH2 0x3CE8 JUMP JUMPDEST PUSH2 0x494A PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x3DD8 JUMP JUMPDEST PUSH2 0x4957 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x3DD8 JUMP JUMPDEST PUSH2 0x4964 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x3C12 JUMP JUMPDEST PUSH2 0x4971 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x3C12 JUMP JUMPDEST PUSH2 0x497E PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x3C12 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x49BD PUSH1 0x1E DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x49C8 DUP3 PUSH2 0x4989 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x49EA DUP2 PUSH2 0x49B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x49FB DUP3 PUSH2 0x3BA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A06 DUP4 PUSH2 0x3BA1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x4A1E JUMPI PUSH2 0x4A1D PUSH2 0x42C1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4A7E PUSH1 0x24 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A89 DUP3 PUSH2 0x4A24 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4AAB DUP2 PUSH2 0x4A72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4B0C PUSH1 0x22 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B17 DUP3 PUSH2 0x4AB2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4B39 DUP2 PUSH2 0x4B00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4B74 PUSH1 0x1D DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B7F DUP3 PUSH2 0x4B40 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4BA1 DUP2 PUSH2 0x4B68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4C02 PUSH1 0x25 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C0D DUP3 PUSH2 0x4BA8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4C2F DUP2 PUSH2 0x4BF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4C90 PUSH1 0x23 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C9B DUP3 PUSH2 0x4C36 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4CBD DUP2 PUSH2 0x4C84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4D1E PUSH1 0x26 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D29 DUP3 PUSH2 0x4CC4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4D4B DUP2 PUSH2 0x4D12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4D86 PUSH1 0x10 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D91 DUP3 PUSH2 0x4D52 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4DB3 DUP2 PUSH2 0x4D7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4E14 PUSH1 0x26 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E1F DUP3 PUSH2 0x4DBA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4E41 DUP2 PUSH2 0x4E08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2034 PUSH0 DUP3 ADD MSTORE PUSH32 0x3820626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4EA2 PUSH1 0x26 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EAD DUP3 PUSH2 0x4E48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4ECF DUP2 PUSH2 0x4E96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4F14 PUSH1 0x17 DUP4 PUSH2 0x4ED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F1F DUP3 PUSH2 0x4EE0 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4F34 DUP3 PUSH2 0x3A9D JUMP JUMPDEST PUSH2 0x4F3E DUP2 DUP6 PUSH2 0x4ED6 JUMP JUMPDEST SWAP4 POP PUSH2 0x4F4E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3AB7 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4F8E PUSH1 0x11 DUP4 PUSH2 0x4ED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F99 DUP3 PUSH2 0x4F5A JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4FAE DUP3 PUSH2 0x4F08 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FBA DUP3 DUP6 PUSH2 0x4F2A JUMP JUMPDEST SWAP2 POP PUSH2 0x4FC5 DUP3 PUSH2 0x4F82 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FD1 DUP3 DUP5 PUSH2 0x4F2A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4FF0 PUSH0 DUP4 ADD DUP9 PUSH2 0x3CE8 JUMP JUMPDEST PUSH2 0x4FFD PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3CE8 JUMP JUMPDEST PUSH2 0x500A PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3CE8 JUMP JUMPDEST PUSH2 0x5017 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x3C12 JUMP JUMPDEST PUSH2 0x5024 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3DD8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x5065 DUP3 PUSH2 0x3BA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x5070 DUP4 PUSH2 0x3BA1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x5080 JUMPI PUSH2 0x507F PUSH2 0x502E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x50BF PUSH1 0x14 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x50CA DUP3 PUSH2 0x508B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x50EC DUP2 PUSH2 0x50B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH0 DUP3 ADD MSTORE PUSH32 0x766572666C6F77696E6720766F74657300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x514D PUSH1 0x30 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x5158 DUP3 PUSH2 0x50F3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x517A DUP2 PUSH2 0x5141 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5194 PUSH0 DUP4 ADD DUP6 PUSH2 0x3C12 JUMP JUMPDEST PUSH2 0x51A1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C12 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x51BB PUSH0 DUP4 ADD DUP8 PUSH2 0x3CE8 JUMP JUMPDEST PUSH2 0x51C8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3D5A JUMP JUMPDEST PUSH2 0x51D5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3CE8 JUMP JUMPDEST PUSH2 0x51E2 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3CE8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x524C PUSH1 0x18 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x5257 DUP3 PUSH2 0x5218 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5279 DUP2 PUSH2 0x5240 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x52B4 PUSH1 0x1F DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x52BF DUP3 PUSH2 0x5280 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x52E1 DUP2 PUSH2 0x52A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5342 PUSH1 0x22 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x534D DUP3 PUSH2 0x52E8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x536F DUP2 PUSH2 0x5336 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5380 DUP3 PUSH2 0x3BA1 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x5392 JUMPI PUSH2 0x5391 PUSH2 0x42C1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x53D1 PUSH1 0x20 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x53DC DUP3 PUSH2 0x539D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x53FE DUP2 PUSH2 0x53C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5439 PUSH1 0x1F DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x5444 DUP3 PUSH2 0x5405 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5466 DUP2 PUSH2 0x542D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x54C7 PUSH1 0x21 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x54D2 DUP3 PUSH2 0x546D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x54F4 DUP2 PUSH2 0x54BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5555 PUSH1 0x22 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x5560 DUP3 PUSH2 0x54FB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5582 DUP2 PUSH2 0x5549 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x55E3 PUSH1 0x27 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x55EE DUP3 PUSH2 0x5589 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5610 DUP2 PUSH2 0x55D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 0xB9 DUP12 CALLDATASIZE 0xA6 0xA6 CALLDATASIZE 0xE3 CALL 0xCA 0xF8 0xC7 0x5C SWAP4 PUSH21 0xFD2AA2CACA0D7FDEC828BEBD2B848F6A9164736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"844:6507:26:-:0;;;2464:758;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2594:5;1856:4:10;3178:431:20;;;;;;;;;;;;;;;;;2558:5:26;2565:7;2054:5:7;2046;:13;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;:::i;:::-;;1980:113;;3251:45:20;3282:13;3251:4;:30;;;;:45;;;;:::i;:::-;3243:53;;;;;;3317:51;3351:16;3317:7;:33;;;;:51;;;;:::i;:::-;3306:62;;;;;;3408:4;3392:22;;;;;;3378:36;;;;;;3457:7;3441:25;;;;;;3424:42;;;;;;3494:13;3477:30;;;;;;3542:23;:21;;;:23;;:::i;:::-;3517:48;;;;;;3597:4;3575:27;;;;;;;;;;3178:431;;1817:52:10;1006:5:6;996:7;;:15;;;;;;;;;;;;;;;;;;2606:30:26::2;2617:18;2606:30;;:10;;;:30;;:::i;:::-;2656;2667:18;2656:30;;:10;;;:30;;:::i;:::-;2708;2719:18;2708:30;;:10;;;:30;;:::i;:::-;2757:44;2198:4:0;2768:18:26::0;::::2;2788:12;:10;;;:12;;:::i;:::-;2757:10;;;:44;;:::i;:::-;2803:30;2814:18;2803:30;;:10;;;:30;;:::i;:::-;2855;2866:18;2855:30;;:10;;;:30;;:::i;:::-;2904:37;2115:24;2928:12;:10;;;:12;;:::i;:::-;2904:10;;;:37;;:::i;:::-;2943:30;2954:18;2943:30;;:10;;;:30;;:::i;:::-;2995;3006:18;2995:30;;:10;;;:30;;:::i;:::-;3044:37;2248:24;3068:12;:10;;;:12;;:::i;:::-;3044:10;;;:37;;:::i;:::-;3083:30;3094:18;3083:30;;:10;;;:30;;:::i;:::-;3135;3146:18;3135:30;;:10;;;:30;;:::i;:::-;3184:31;3190:12;:10;;;:12;;:::i;:::-;2371:1;2359:2;:14;;;;:::i;:::-;2346:10;:27;;;;:::i;:::-;3184:5;;;:31;;:::i;:::-;2464:758:::0;;844:6507;;2895:341:16;2991:11;3040:2;3024:5;3018:19;:24;3014:216;;;3065:20;3079:5;3065:13;;;:20;;:::i;:::-;3058:27;;;;3014:216;3157:5;3116:32;3142:5;3116:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1371:66;3200:18;;3176:43;;2895:341;;;;;:::o;3963:180:20:-;4018:7;1929:95;4077:11;;4090:14;;4106:13;4129:4;4054:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;:::o;943:56:26:-;;:::o;640:96:14:-;693:7;719:10;712:17;;640:96;:::o;7587:233:0:-;7670:22;7678:4;7684:7;7670;;;:22;;:::i;:::-;7665:149;;7740:4;7708:6;:12;7715:4;7708:12;;;;;;;;;;;:20;;:29;7729:7;7708:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7790:12;:10;;;:12;;:::i;:::-;7763:40;;7781:7;7763:40;;7775:4;7763:40;;;;;;;;;;7665:149;7587:233;;:::o;6626:317:26:-;6758:30;6769:18;6758:30;;:10;;;:30;;:::i;:::-;6807;6818:18;6807:30;;:10;;;:30;;:::i;:::-;6859;6870:18;6859:30;;:10;;;:30;;:::i;:::-;6908:28;6920:7;6929:6;6908:11;;;:28;;:::i;:::-;6626:317;;:::o;1689:286:16:-;1754:11;1777:17;1803:3;1777:30;;1835:2;1821:4;:11;:16;1817:72;;;1874:3;1860:18;;;;;;;;;;;:::i;:::-;;;;;;;;1817:72;1955:4;:11;1946:4;1938:13;;;:::i;:::-;1930:22;;:36;1922:45;;1898:70;;;1689:286;;;:::o;3310:202:17:-;3378:20;3486:10;3476:20;;3310:202;;;:::o;3021:145:0:-;3107:4;3130:6;:12;3137:4;3130:12;;;;;;;;;;;:20;;:29;3151:7;3130:29;;;;;;;;;;;;;;;;;;;;;;;;;3123:36;;3021:145;;;;:::o;7332:285:11:-;7416:28;7428:7;7437:6;7416:11;;;:28;;:::i;:::-;7479:12;:10;;;:12;;:::i;:::-;7462:29;;:13;:11;;;:13;;:::i;:::-;:29;;7454:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;7555:55;7572:23;7597:4;;;;;7603:6;7555:16;;;:55;;:::i;:::-;;;7332:285;;:::o;8520:535:7:-;8622:1;8603:21;;:7;:21;;;8595:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8671:49;8700:1;8704:7;8713:6;8671:20;;;:49;;:::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;;;;;8921:6;8899:9;:18;8909:7;8899:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;8973:7;8952:37;;8969:1;8952:37;;;8982:6;8952:37;;;;;;:::i;:::-;;;;;;;;9000:48;9028:1;9032:7;9041:6;9000:19;;;:48;;:::i;:::-;8520:535;;:::o;7140:103:11:-;7193:7;7219:17;7212:24;;7140:103;:::o;3255:106:7:-;3316:7;3342:12;;3335:19;;3255:106;:::o;10194:96:11:-;10252:7;10282:1;10278;:5;;;;:::i;:::-;10271:12;;10194:96;;;;:::o;9420:768::-;9590:17;9609;9638:11;9652:5;:12;;;;9638:26;;9699:25;9734:1;9727:3;:8;:59;;9757:29;9771:5;9784:1;9778:3;:7;9757:13;;;:29;;:::i;:::-;9727:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9738:16;;;;;;;;9749:1;9738:16;;;;;;9752:1;9738:16;;;;;9727:59;9699:87;;9813:7;:13;;;9801:25;;;;9852:20;9855:9;9866:5;9852:2;:20;;:::i;:::-;9840:32;;9897:1;9891:3;:7;:39;;;;;9923:7;:5;;;:7;;:::i;:::-;9902:28;;:7;:17;;;:28;;;9891:39;9887:285;;;9988:29;10007:9;9988:18;;;:29;;:::i;:::-;9950;9964:5;9977:1;9971:3;:7;9950:13;;;:29;;:::i;:::-;:35;;;:67;;;;;;;;;;;;;;;;;;9887:285;;;10056:5;10067:89;;;;;;;;10090:26;10108:7;:5;;;:7;;:::i;:::-;10090:26;;:17;;;:26;;:::i;:::-;10067:89;;;;;;10125:29;10144:9;10125:18;;;:29;;:::i;:::-;10067:89;;;;;10056:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9887:285;9675:507;9628:560;9420:768;;;;;;:::o;5636:399:26:-;1287:30;1298:18;1287:30;;:10;;;:30;;:::i;:::-;1239:19:6::1;:17;;;:19;;:::i;:::-;1204:30:26::2;1215:18;1204:30;;:10;;;:30;;:::i;:::-;5834::::3;5845:18;5834:30;;:10;;;:30;;:::i;:::-;5883;5894:18;5883:30;;:10;;;:30;;:::i;:::-;5935;5946:18;5935:30;;:10;;;:30;;:::i;:::-;5984:44;6011:4;6017:2;6021:6;5984:26;;;:44;;:::i;:::-;5636:399:::0;;;:::o;6174:363::-;6337:30;6348:18;6337:30;;:10;;;:30;;:::i;:::-;6386;6397:18;6386:30;;:10;;;:30;;:::i;:::-;6438;6449:18;6438:30;;:10;;;:30;;:::i;:::-;6487:43;6513:4;6519:2;6523:6;6487:25;;;:43;;:::i;:::-;6174:363;;;:::o;10540:239:11:-;10626:25;10696:10;10693:1;10686:21;10759:3;10752:4;10749:1;10739:18;10735:28;10720:43;;10540:239;;;;:::o;1817:118::-;1872:6;1897:31;1915:12;1897:17;;;:31;;:::i;:::-;1890:38;;1817:118;:::o;2836:192:24:-;2893:7;2929:17;2920:26;;:5;:26;;2912:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3015:5;3000:21;;2836:192;;;:::o;15264:187::-;15320:6;15355:16;15346:25;;:5;:25;;15338:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;15438:5;15424:20;;15264:187;;;:::o;1767:106:6:-;1837:8;:6;;;:8;;:::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;12073:91:7:-;;;;:::o;8036:224:11:-;8143:43;8169:4;8175:2;8179:6;8143:25;;;:43;;:::i;:::-;8197:56;8214:15;8224:4;8214:9;;;:15;;:::i;:::-;8231:13;8241:2;8231:9;;;:13;;:::i;:::-;8246:6;8197:16;;;:56;;:::i;:::-;8036:224;;;:::o;14240:187:24:-;14296:6;14331:16;14322:25;;:5;:25;;14314:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;14414:5;14400:20;;14240:187;;;:::o;1615:84:6:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;12752:90:7:-;;;;:::o;2838:126:11:-;2912:7;2938:10;:19;2949:7;2938:19;;;;;;;;;;;;;;;;;;;;;;;;;2931:26;;2838:126;;;:::o;8817:597::-;8914:3;8907:10;;:3;:10;;;;:24;;;;;8930:1;8921:6;:10;8907:24;8903:505;;;8966:1;8951:17;;:3;:17;;;8947:221;;8989:17;9008;9029:54;9046:12;:17;9059:3;9046:17;;;;;;;;;;;;;;;9065:9;;;;;9076:6;9029:16;;;:54;;:::i;:::-;8988:95;;;;9127:3;9106:47;;;9132:9;9143;9106:47;;;;;;;:::i;:::-;;;;;;;;8970:198;;8947:221;9201:1;9186:17;;:3;:17;;;9182:216;;9224:17;9243;9264:49;9281:12;:17;9294:3;9281:17;;;;;;;;;;;;;;;9300:4;;;;;9306:6;9264:16;;;:49;;:::i;:::-;9223:90;;;;9357:3;9336:47;;;9362:9;9373;9336:47;;;;;;;:::i;:::-;;;;;;;;9205:193;;9182:216;8903:505;8817:597;;;:::o;10296:101::-;10359:7;10389:1;10385;:5;;;;:::i;:::-;10378:12;;10296:101;;;;:::o;7:75:27:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;8577:180::-;8625:77;8622:1;8615:88;8722:4;8719:1;8712:15;8746:4;8743:1;8736:15;8763:102;8805:8;8852:5;8849:1;8845:13;8824:34;;8763:102;;;:::o;8871:848::-;8932:5;8939:4;8963:6;8954:15;;8987:5;8978:14;;9001:712;9022:1;9012:8;9009:15;9001:712;;;9117:4;9112:3;9108:14;9102:4;9099:24;9096:50;;;9126:18;;:::i;:::-;9096:50;9176:1;9166:8;9162:16;9159:451;;;9591:4;9584:5;9580:16;9571:25;;9159:451;9641:4;9635;9631:15;9623:23;;9671:32;9694:8;9671:32;:::i;:::-;9659:44;;9001:712;;;8871:848;;;;;;;:::o;9725:1073::-;9779:5;9970:8;9960:40;;9991:1;9982:10;;9993:5;;9960:40;10019:4;10009:36;;10036:1;10027:10;;10038:5;;10009:36;10105:4;10153:1;10148:27;;;;10189:1;10184:191;;;;10098:277;;10148:27;10166:1;10157:10;;10168:5;;;10184:191;10229:3;10219:8;10216:17;10213:43;;;10236:18;;:::i;:::-;10213:43;10285:8;10282:1;10278:16;10269:25;;10320:3;10313:5;10310:14;10307:40;;;10327:18;;:::i;:::-;10307:40;10360:5;;;10098:277;;10484:2;10474:8;10471:16;10465:3;10459:4;10456:13;10452:36;10434:2;10424:8;10421:16;10416:2;10410:4;10407:12;10403:35;10387:111;10384:246;;;10540:8;10534:4;10530:19;10521:28;;10575:3;10568:5;10565:14;10562:40;;;10582:18;;:::i;:::-;10562:40;10615:5;;10384:246;10655:42;10693:3;10683:8;10677:4;10674:1;10655:42;:::i;:::-;10640:57;;;;10729:4;10724:3;10720:14;10713:5;10710:25;10707:51;;;10738:18;;:::i;:::-;10707:51;10787:4;10780:5;10776:16;10767:25;;9725:1073;;;;;;:::o;10804:285::-;10864:5;10888:23;10906:4;10888:23;:::i;:::-;10880:31;;10932:27;10950:8;10932:27;:::i;:::-;10920:39;;10978:104;11015:66;11005:8;10999:4;10978:104;:::i;:::-;10969:113;;10804:285;;;;:::o;11095:410::-;11135:7;11158:20;11176:1;11158:20;:::i;:::-;11153:25;;11192:20;11210:1;11192:20;:::i;:::-;11187:25;;11247:1;11244;11240:9;11269:30;11287:11;11269:30;:::i;:::-;11258:41;;11448:1;11439:7;11435:15;11432:1;11429:22;11409:1;11402:9;11382:83;11359:139;;11478:18;;:::i;:::-;11359:139;11143:362;11095:410;;;;:::o;11511:77::-;11548:7;11577:5;11566:16;;11511:77;;;:::o;11594:118::-;11681:24;11699:5;11681:24;:::i;:::-;11676:3;11669:37;11594:118;;:::o;11718:::-;11805:24;11823:5;11805:24;:::i;:::-;11800:3;11793:37;11718:118;;:::o;11842:126::-;11879:7;11919:42;11912:5;11908:54;11897:65;;11842:126;;;:::o;11974:96::-;12011:7;12040:24;12058:5;12040:24;:::i;:::-;12029:35;;11974:96;;;:::o;12076:118::-;12163:24;12181:5;12163:24;:::i;:::-;12158:3;12151:37;12076:118;;:::o;12200:664::-;12405:4;12443:3;12432:9;12428:19;12420:27;;12457:71;12525:1;12514:9;12510:17;12501:6;12457:71;:::i;:::-;12538:72;12606:2;12595:9;12591:18;12582:6;12538:72;:::i;:::-;12620;12688:2;12677:9;12673:18;12664:6;12620:72;:::i;:::-;12702;12770:2;12759:9;12755:18;12746:6;12702:72;:::i;:::-;12784:73;12852:3;12841:9;12837:19;12828:6;12784:73;:::i;:::-;12200:664;;;;;;;;:::o;12870:169::-;12954:11;12988:6;12983:3;12976:19;13028:4;13023:3;13019:14;13004:29;;12870:169;;;;:::o;13045:377::-;13133:3;13161:39;13194:5;13161:39;:::i;:::-;13216:71;13280:6;13275:3;13216:71;:::i;:::-;13209:78;;13296:65;13354:6;13349:3;13342:4;13335:5;13331:16;13296:65;:::i;:::-;13386:29;13408:6;13386:29;:::i;:::-;13381:3;13377:39;13370:46;;13137:285;13045:377;;;;:::o;13428:313::-;13541:4;13579:2;13568:9;13564:18;13556:26;;13628:9;13622:4;13618:20;13614:1;13603:9;13599:17;13592:47;13656:78;13729:4;13720:6;13656:78;:::i;:::-;13648:86;;13428:313;;;;:::o;13747:98::-;13798:6;13832:5;13826:12;13816:22;;13747:98;;;:::o;13851:116::-;13902:4;13925:3;13917:11;;13955:4;13950:3;13946:14;13938:22;;13851:116;;;:::o;13973:154::-;14016:11;14052:29;14076:3;14070:10;14052:29;:::i;:::-;14115:5;14091:29;;14028:99;13973:154;;;:::o;14133:594::-;14217:5;14248:38;14280:5;14248:38;:::i;:::-;14311:5;14338:40;14372:5;14338:40;:::i;:::-;14326:52;;14397:35;14423:8;14397:35;:::i;:::-;14388:44;;14456:2;14448:6;14445:14;14442:278;;;14527:169;14612:66;14582:6;14578:2;14574:15;14571:1;14567:23;14527:169;:::i;:::-;14504:5;14483:227;14474:236;;14442:278;14223:504;;14133:594;;;:::o;14733:235::-;14873:34;14869:1;14861:6;14857:14;14850:58;14942:18;14937:2;14929:6;14925:15;14918:43;14733:235;:::o;14974:366::-;15116:3;15137:67;15201:2;15196:3;15137:67;:::i;:::-;15130:74;;15213:93;15302:3;15213:93;:::i;:::-;15331:2;15326:3;15322:12;15315:19;;14974:366;;;:::o;15346:419::-;15512:4;15550:2;15539:9;15535:18;15527:26;;15599:9;15593:4;15589:20;15585:1;15574:9;15570:17;15563:47;15627:131;15753:4;15627:131;:::i;:::-;15619:139;;15346:419;;;:::o;15771:181::-;15911:33;15907:1;15899:6;15895:14;15888:57;15771:181;:::o;15958:366::-;16100:3;16121:67;16185:2;16180:3;16121:67;:::i;:::-;16114:74;;16197:93;16286:3;16197:93;:::i;:::-;16315:2;16310:3;16306:12;16299:19;;15958:366;;;:::o;16330:419::-;16496:4;16534:2;16523:9;16519:18;16511:26;;16583:9;16577:4;16573:20;16569:1;16558:9;16554:17;16547:47;16611:131;16737:4;16611:131;:::i;:::-;16603:139;;16330:419;;;:::o;16755:191::-;16795:3;16814:20;16832:1;16814:20;:::i;:::-;16809:25;;16848:20;16866:1;16848:20;:::i;:::-;16843:25;;16891:1;16888;16884:9;16877:16;;16912:3;16909:1;16906:10;16903:36;;;16919:18;;:::i;:::-;16903:36;16755:191;;;;:::o;16952:222::-;17045:4;17083:2;17072:9;17068:18;17060:26;;17096:71;17164:1;17153:9;17149:17;17140:6;17096:71;:::i;:::-;16952:222;;;;:::o;17180:226::-;17320:34;17316:1;17308:6;17304:14;17297:58;17389:9;17384:2;17376:6;17372:15;17365:34;17180:226;:::o;17412:366::-;17554:3;17575:67;17639:2;17634:3;17575:67;:::i;:::-;17568:74;;17651:93;17740:3;17651:93;:::i;:::-;17769:2;17764:3;17760:12;17753:19;;17412:366;;;:::o;17784:419::-;17950:4;17988:2;17977:9;17973:18;17965:26;;18037:9;18031:4;18027:20;18023:1;18012:9;18008:17;18001:47;18065:131;18191:4;18065:131;:::i;:::-;18057:139;;17784:419;;;:::o;18209:225::-;18349:34;18345:1;18337:6;18333:14;18326:58;18418:8;18413:2;18405:6;18401:15;18394:33;18209:225;:::o;18440:366::-;18582:3;18603:67;18667:2;18662:3;18603:67;:::i;:::-;18596:74;;18679:93;18768:3;18679:93;:::i;:::-;18797:2;18792:3;18788:12;18781:19;;18440:366;;;:::o;18812:419::-;18978:4;19016:2;19005:9;19001:18;18993:26;;19065:9;19059:4;19055:20;19051:1;19040:9;19036:17;19029:47;19093:131;19219:4;19093:131;:::i;:::-;19085:139;;18812:419;;;:::o;19237:166::-;19377:18;19373:1;19365:6;19361:14;19354:42;19237:166;:::o;19409:366::-;19551:3;19572:67;19636:2;19631:3;19572:67;:::i;:::-;19565:74;;19648:93;19737:3;19648:93;:::i;:::-;19766:2;19761:3;19757:12;19750:19;;19409:366;;;:::o;19781:419::-;19947:4;19985:2;19974:9;19970:18;19962:26;;20034:9;20028:4;20024:20;20020:1;20009:9;20005:17;19998:47;20062:131;20188:4;20062:131;:::i;:::-;20054:139;;19781:419;;;:::o;20206:225::-;20346:34;20342:1;20334:6;20330:14;20323:58;20415:8;20410:2;20402:6;20398:15;20391:33;20206:225;:::o;20437:366::-;20579:3;20600:67;20664:2;20659:3;20600:67;:::i;:::-;20593:74;;20676:93;20765:3;20676:93;:::i;:::-;20794:2;20789:3;20785:12;20778:19;;20437:366;;;:::o;20809:419::-;20975:4;21013:2;21002:9;20998:18;20990:26;;21062:9;21056:4;21052:20;21048:1;21037:9;21033:17;21026:47;21090:131;21216:4;21090:131;:::i;:::-;21082:139;;20809:419;;;:::o;21234:332::-;21355:4;21393:2;21382:9;21378:18;21370:26;;21406:71;21474:1;21463:9;21459:17;21450:6;21406:71;:::i;:::-;21487:72;21555:2;21544:9;21540:18;21531:6;21487:72;:::i;:::-;21234:332;;;;;:::o;21572:194::-;21612:4;21632:20;21650:1;21632:20;:::i;:::-;21627:25;;21666:20;21684:1;21666:20;:::i;:::-;21661:25;;21710:1;21707;21703:9;21695:17;;21734:1;21728:4;21725:11;21722:37;;;21739:18;;:::i;:::-;21722:37;21572:194;;;;:::o;844:6507:26:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@CLOCK_MODE_1573":{"entryPoint":3527,"id":1573,"parameterSlots":0,"returnSlots":1},"@DEFAULT_ADMIN_ROLE_27":{"entryPoint":5089,"id":27,"parameterSlots":0,"returnSlots":0},"@DOMAIN_SEPARATOR_1474":{"entryPoint":2597,"id":1474,"parameterSlots":0,"returnSlots":1},"@MAX_SUPPLY_6235":{"entryPoint":2565,"id":6235,"parameterSlots":0,"returnSlots":0},"@MINTER_ROLE_6225":{"entryPoint":5824,"id":6225,"parameterSlots":0,"returnSlots":0},"@PAUSER_ROLE_6220":{"entryPoint":6023,"id":6220,"parameterSlots":0,"returnSlots":0},"@_add_2208":{"entryPoint":6324,"id":2208,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_1209":{"entryPoint":14651,"id":1209,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_1983":{"entryPoint":12148,"id":1983,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_6522":{"entryPoint":9974,"id":6522,"parameterSlots":3,"returnSlots":0},"@_approve_1144":{"entryPoint":6478,"id":1144,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1198":{"entryPoint":12143,"id":1198,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_6488":{"entryPoint":9850,"id":6488,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_3456":{"entryPoint":10182,"id":3456,"parameterSlots":0,"returnSlots":1},"@_burn_1099":{"entryPoint":14122,"id":1099,"parameterSlots":2,"returnSlots":0},"@_burn_1953":{"entryPoint":10846,"id":1953,"parameterSlots":2,"returnSlots":0},"@_burn_6584":{"entryPoint":8893,"id":6584,"parameterSlots":2,"returnSlots":0},"@_checkRole_131":{"entryPoint":10050,"id":131,"parameterSlots":2,"returnSlots":0},"@_checkRole_92":{"entryPoint":7688,"id":92,"parameterSlots":1,"returnSlots":0},"@_checkpointsLookup_1811":{"entryPoint":8331,"id":1811,"parameterSlots":2,"returnSlots":1},"@_delegate_2022":{"entryPoint":8967,"id":2022,"parameterSlots":2,"returnSlots":0},"@_domainSeparatorV4_3435":{"entryPoint":7930,"id":3435,"parameterSlots":0,"returnSlots":1},"@_grantRole_283":{"entryPoint":7708,"id":283,"parameterSlots":2,"returnSlots":0},"@_hashTypedDataV4_3472":{"entryPoint":9693,"id":3472,"parameterSlots":1,"returnSlots":1},"@_maxSupply_1898":{"entryPoint":13374,"id":1898,"parameterSlots":0,"returnSlots":1},"@_mint_1027":{"entryPoint":13040,"id":1027,"parameterSlots":2,"returnSlots":0},"@_mint_1930":{"entryPoint":10705,"id":1930,"parameterSlots":2,"returnSlots":0},"@_mint_6553":{"entryPoint":8819,"id":6553,"parameterSlots":2,"returnSlots":0},"@_moveVotingPower_2093":{"entryPoint":10876,"id":2093,"parameterSlots":3,"returnSlots":0},"@_msgSender_2311":{"entryPoint":6471,"id":2311,"parameterSlots":0,"returnSlots":1},"@_pause_606":{"entryPoint":9338,"id":606,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_579":{"entryPoint":8745,"id":579,"parameterSlots":0,"returnSlots":0},"@_requirePaused_590":{"entryPoint":10632,"id":590,"parameterSlots":0,"returnSlots":0},"@_revokeRole_314":{"entryPoint":8112,"id":314,"parameterSlots":2,"returnSlots":0},"@_spendAllowance_1187":{"entryPoint":6929,"id":1187,"parameterSlots":3,"returnSlots":0},"@_subtract_2222":{"entryPoint":6345,"id":2222,"parameterSlots":2,"returnSlots":1},"@_throwError_3004":{"entryPoint":11766,"id":3004,"parameterSlots":1,"returnSlots":0},"@_transfer_970":{"entryPoint":7068,"id":970,"parameterSlots":3,"returnSlots":0},"@_unpause_622":{"entryPoint":8648,"id":622,"parameterSlots":0,"returnSlots":0},"@_unsafeAccess_2237":{"entryPoint":10577,"id":2237,"parameterSlots":2,"returnSlots":1},"@_useNonce_1503":{"entryPoint":9759,"id":1503,"parameterSlots":1,"returnSlots":1},"@_writeCheckpoint_2194":{"entryPoint":13409,"id":2194,"parameterSlots":3,"returnSlots":2},"@allowance_765":{"entryPoint":5893,"id":765,"parameterSlots":2,"returnSlots":1},"@approve_790":{"entryPoint":2346,"id":790,"parameterSlots":2,"returnSlots":1},"@average_3622":{"entryPoint":10595,"id":3622,"parameterSlots":2,"returnSlots":1},"@balanceOf_722":{"entryPoint":3892,"id":722,"parameterSlots":1,"returnSlots":1},"@burnFrom_1331":{"entryPoint":3961,"id":1331,"parameterSlots":2,"returnSlots":0},"@burn_1310":{"entryPoint":3507,"id":1310,"parameterSlots":1,"returnSlots":0},"@byteLength_2512":{"entryPoint":14573,"id":2512,"parameterSlots":1,"returnSlots":1},"@c_f3f67bc5_6115":{"entryPoint":7927,"id":6115,"parameterSlots":1,"returnSlots":0},"@checkpoints_1591":{"entryPoint":6059,"id":1591,"parameterSlots":2,"returnSlots":1},"@clock_1554":{"entryPoint":4676,"id":1554,"parameterSlots":0,"returnSlots":1},"@current_2339":{"entryPoint":9326,"id":2339,"parameterSlots":1,"returnSlots":1},"@decimals_6450":{"entryPoint":2497,"id":6450,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_893":{"entryPoint":5095,"id":893,"parameterSlots":2,"returnSlots":1},"@delegateBySig_1885":{"entryPoint":5246,"id":1885,"parameterSlots":6,"returnSlots":0},"@delegate_1825":{"entryPoint":3770,"id":1825,"parameterSlots":1,"returnSlots":0},"@delegates_1622":{"entryPoint":3669,"id":1622,"parameterSlots":1,"returnSlots":1},"@eip712Domain_3519":{"entryPoint":4223,"id":3519,"parameterSlots":0,"returnSlots":7},"@getPastTotalSupply_1704":{"entryPoint":4476,"id":1704,"parameterSlots":1,"returnSlots":1},"@getPastVotes_1681":{"entryPoint":2796,"id":1681,"parameterSlots":2,"returnSlots":1},"@getRoleAdmin_146":{"entryPoint":2435,"id":146,"parameterSlots":1,"returnSlots":1},"@getVotes_1654":{"entryPoint":4835,"id":1654,"parameterSlots":1,"returnSlots":1},"@grantRole_166":{"entryPoint":2464,"id":166,"parameterSlots":2,"returnSlots":0},"@hasRole_79":{"entryPoint":4576,"id":79,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_852":{"entryPoint":2742,"id":852,"parameterSlots":2,"returnSlots":1},"@increment_2353":{"entryPoint":12123,"id":2353,"parameterSlots":1,"returnSlots":0},"@log2_4094":{"entryPoint":12801,"id":4094,"parameterSlots":1,"returnSlots":1},"@min_3599":{"entryPoint":13016,"id":3599,"parameterSlots":2,"returnSlots":1},"@mint_6374":{"entryPoint":3109,"id":6374,"parameterSlots":2,"returnSlots":0},"@name_678":{"entryPoint":2202,"id":678,"parameterSlots":0,"returnSlots":1},"@nonces_1463":{"entryPoint":3993,"id":1463,"parameterSlots":1,"returnSlots":1},"@numCheckpoints_1608":{"entryPoint":3811,"id":1608,"parameterSlots":1,"returnSlots":1},"@pause_6401":{"entryPoint":4070,"id":6401,"parameterSlots":0,"returnSlots":0},"@paused_567":{"entryPoint":3790,"id":567,"parameterSlots":0,"returnSlots":1},"@permit_1447":{"entryPoint":5505,"id":1447,"parameterSlots":7,"returnSlots":0},"@recover_3251":{"entryPoint":9718,"id":3251,"parameterSlots":4,"returnSlots":1},"@renounceRole_209":{"entryPoint":2611,"id":209,"parameterSlots":2,"returnSlots":0},"@revokeRole_186":{"entryPoint":5860,"id":186,"parameterSlots":2,"returnSlots":0},"@sqrt_3926":{"entryPoint":10331,"id":3926,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3543":{"entryPoint":6366,"id":3543,"parameterSlots":1,"returnSlots":1},"@supportsInterface_60":{"entryPoint":2081,"id":60,"parameterSlots":1,"returnSlots":1},"@symbol_688":{"entryPoint":4691,"id":688,"parameterSlots":0,"returnSlots":1},"@toHexString_2904":{"entryPoint":12236,"id":2904,"parameterSlots":2,"returnSlots":1},"@toHexString_2924":{"entryPoint":12191,"id":2924,"parameterSlots":1,"returnSlots":1},"@toStringWithFallback_2579":{"entryPoint":9436,"id":2579,"parameterSlots":2,"returnSlots":1},"@toString_2480":{"entryPoint":11372,"id":2480,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_3295":{"entryPoint":11486,"id":3295,"parameterSlots":2,"returnSlots":1},"@toUint224_4525":{"entryPoint":14656,"id":4525,"parameterSlots":1,"returnSlots":1},"@toUint32_5125":{"entryPoint":9244,"id":5125,"parameterSlots":1,"returnSlots":1},"@toUint48_5075":{"entryPoint":9609,"id":5075,"parameterSlots":1,"returnSlots":1},"@totalSupply_708":{"entryPoint":2380,"id":708,"parameterSlots":0,"returnSlots":1},"@transferFrom_823":{"entryPoint":2389,"id":823,"parameterSlots":3,"returnSlots":1},"@transfer_747":{"entryPoint":5212,"id":747,"parameterSlots":2,"returnSlots":1},"@tryRecover_3218":{"entryPoint":11550,"id":3218,"parameterSlots":4,"returnSlots":2},"@unpause_6428":{"entryPoint":2956,"id":6428,"parameterSlots":0,"returnSlots":0},"abi_decode_t_address":{"entryPoint":15245,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":15529,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":14891,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":15296,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":16775,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":16377,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":15789,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":16691,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":15418,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":16534,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":15316,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":16397,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_uint32":{"entryPoint":16795,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":15549,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":15632,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":14911,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":15746,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":16041,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":15832,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":16076,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":14965,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":15970,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":15592,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":15087,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":20266,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack":{"entryPoint":21056,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack":{"entryPoint":21445,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":19588,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack":{"entryPoint":20659,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack":{"entryPoint":18391,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack":{"entryPoint":21833,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack":{"entryPoint":21160,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack":{"entryPoint":18562,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":19200,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":19304,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack":{"entryPoint":18666,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":19730,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack":{"entryPoint":21302,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack":{"entryPoint":20118,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack":{"entryPoint":19834,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614_to_t_string_memory_ptr_fromStack":{"entryPoint":17951,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack":{"entryPoint":18865,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack":{"entryPoint":20801,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack":{"entryPoint":21975,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72_to_t_string_memory_ptr_fromStack":{"entryPoint":17809,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack":{"entryPoint":21691,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":19446,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack":{"entryPoint":19976,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":19058,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df_to_t_string_memory_ptr_fromStack":{"entryPoint":18055,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":20232,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":18287,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":20354,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack":{"entryPoint":17654,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":21549,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Checkpoint_$1521_memory_ptr_to_t_struct$_Checkpoint_$1521_memory_ptr_fromStack":{"entryPoint":16926,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint224_to_t_uint224":{"entryPoint":16911,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":16026,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":15378,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32":{"entryPoint":16857,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":15887,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint48_to_t_uint48_fromStack":{"entryPoint":16315,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":15706,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":20388,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":15847,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":14980,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":16168,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":15607,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":18730,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":18455,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":20445,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":20904,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15143,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21090,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21479,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19622,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20693,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18425,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21867,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21194,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18596,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19234,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19338,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18700,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19764,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21336,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20152,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19868,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17985,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18899,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20835,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22009,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17843,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21725,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19480,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20010,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19092,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18089,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18321,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17688,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21583,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Checkpoint_$1521_memory_ptr__to_t_struct$_Checkpoint_$1521_memory_ptr__fromStack_reversed":{"entryPoint":16971,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":15393,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":20865,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":15902,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed":{"entryPoint":16330,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":15721,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":16011,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":15985,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":15005,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":16064,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":15995,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":15015,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":20182,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":17718,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":20571,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":17146,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":17437,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":17228,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":17511,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":18929,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":15206,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":14954,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":15927,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":15498,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":14826,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":15175,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint224":{"entryPoint":16872,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":15265,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":15872,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint48":{"entryPoint":16298,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":15694,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":15031,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":21366,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":17041,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":17089,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":20526,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":20971,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":16996,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":18164,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":18119,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":14822,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":15071,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_1_unsigned":{"entryPoint":17134,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be":{"entryPoint":21016,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2":{"entryPoint":21405,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":19510,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a":{"entryPoint":20619,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257":{"entryPoint":18351,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd":{"entryPoint":21755,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77":{"entryPoint":21120,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872":{"entryPoint":18522,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":19122,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":19264,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd":{"entryPoint":18626,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":19652,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd":{"entryPoint":21224,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495":{"entryPoint":20040,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a":{"entryPoint":19794,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614":{"entryPoint":17873,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124":{"entryPoint":18825,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699":{"entryPoint":20723,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79":{"entryPoint":21897,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72":{"entryPoint":17769,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f":{"entryPoint":21613,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":19368,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19":{"entryPoint":19898,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":18980,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df":{"entryPoint":18015,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874":{"entryPoint":20192,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":18209,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69":{"entryPoint":20314,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b":{"entryPoint":17576,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":21509,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":15223,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":15507,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":14869,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":15274,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":16753,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":16355,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:55944:27","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:27","statements":[{"nodeType":"YulAssignment","src":"57:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:27"},"nodeType":"YulFunctionCall","src":"67:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:27"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:27","type":""}],"src":"7:75:27"},{"body":{"nodeType":"YulBlock","src":"177:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:27"},"nodeType":"YulFunctionCall","src":"187:12:27"},"nodeType":"YulExpressionStatement","src":"187:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:27"},{"body":{"nodeType":"YulBlock","src":"300:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:27"},"nodeType":"YulFunctionCall","src":"310:12:27"},"nodeType":"YulExpressionStatement","src":"310:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:27"},{"body":{"nodeType":"YulBlock","src":"378:105:27","statements":[{"nodeType":"YulAssignment","src":"388:89:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:27","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:27"},"nodeType":"YulFunctionCall","src":"399:78:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:27"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:27","type":""}],"src":"334:149:27"},{"body":{"nodeType":"YulBlock","src":"531:78:27","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:27"},"nodeType":"YulFunctionCall","src":"589:12:27"},"nodeType":"YulExpressionStatement","src":"589:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:27"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:27"},"nodeType":"YulFunctionCall","src":"561:23:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:27"},"nodeType":"YulFunctionCall","src":"551:34:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:27"},"nodeType":"YulFunctionCall","src":"544:42:27"},"nodeType":"YulIf","src":"541:62:27"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:27","type":""}],"src":"489:120:27"},{"body":{"nodeType":"YulBlock","src":"666:86:27","statements":[{"nodeType":"YulAssignment","src":"676:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:27"},"nodeType":"YulFunctionCall","src":"685:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:27"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:27"},"nodeType":"YulFunctionCall","src":"714:32:27"},"nodeType":"YulExpressionStatement","src":"714:32:27"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:27","type":""}],"src":"615:137:27"},{"body":{"nodeType":"YulBlock","src":"823:262:27","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:27"},"nodeType":"YulFunctionCall","src":"871:79:27"},"nodeType":"YulExpressionStatement","src":"871:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:27"},"nodeType":"YulFunctionCall","src":"840:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:27"},"nodeType":"YulFunctionCall","src":"836:32:27"},"nodeType":"YulIf","src":"833:119:27"},{"nodeType":"YulBlock","src":"962:116:27","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:27","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:27"},"nodeType":"YulFunctionCall","src":"1036:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:27"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:27"},"nodeType":"YulFunctionCall","src":"1016:52:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:27"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:27","type":""}],"src":"758:327:27"},{"body":{"nodeType":"YulBlock","src":"1133:48:27","statements":[{"nodeType":"YulAssignment","src":"1143:32:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:27"},"nodeType":"YulFunctionCall","src":"1161:13:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:27"},"nodeType":"YulFunctionCall","src":"1154:21:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:27"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:27","type":""}],"src":"1091:90:27"},{"body":{"nodeType":"YulBlock","src":"1246:50:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:27"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:27"},"nodeType":"YulFunctionCall","src":"1268:21:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:27"},"nodeType":"YulFunctionCall","src":"1256:34:27"},"nodeType":"YulExpressionStatement","src":"1256:34:27"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:27","type":""}],"src":"1187:109:27"},{"body":{"nodeType":"YulBlock","src":"1394:118:27","statements":[{"nodeType":"YulAssignment","src":"1404:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:27"},"nodeType":"YulFunctionCall","src":"1412:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:27"},"nodeType":"YulFunctionCall","src":"1487:17:27"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:27"},"nodeType":"YulFunctionCall","src":"1440:65:27"},"nodeType":"YulExpressionStatement","src":"1440:65:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:27","type":""}],"src":"1302:210:27"},{"body":{"nodeType":"YulBlock","src":"1577:40:27","statements":[{"nodeType":"YulAssignment","src":"1588:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:27"},"nodeType":"YulFunctionCall","src":"1598:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:27"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:27","type":""}],"src":"1518:99:27"},{"body":{"nodeType":"YulBlock","src":"1719:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:27"},"nodeType":"YulFunctionCall","src":"1729:19:27"},"nodeType":"YulExpressionStatement","src":"1729:19:27"},{"nodeType":"YulAssignment","src":"1757:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:27"},"nodeType":"YulFunctionCall","src":"1772:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:27","type":""}],"src":"1623:169:27"},{"body":{"nodeType":"YulBlock","src":"1860:184:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1874:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1939:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1964:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"1969:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:27"},"nodeType":"YulFunctionCall","src":"1960:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1983:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"1988:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:27"},"nodeType":"YulFunctionCall","src":"1979:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1973:5:27"},"nodeType":"YulFunctionCall","src":"1973:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:27"},"nodeType":"YulFunctionCall","src":"1953:39:27"},"nodeType":"YulExpressionStatement","src":"1953:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"1903:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1897:2:27"},"nodeType":"YulFunctionCall","src":"1897:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1911:19:27","statements":[{"nodeType":"YulAssignment","src":"1913:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1922:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"1925:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:27"},"nodeType":"YulFunctionCall","src":"1918:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1913:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"1893:3:27","statements":[]},"src":"1889:113:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2022:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2027:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:27"},"nodeType":"YulFunctionCall","src":"2018:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"2036:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:27"},"nodeType":"YulFunctionCall","src":"2011:27:27"},"nodeType":"YulExpressionStatement","src":"2011:27:27"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1842:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1847:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"1852:6:27","type":""}],"src":"1798:246:27"},{"body":{"nodeType":"YulBlock","src":"2098:54:27","statements":[{"nodeType":"YulAssignment","src":"2108:38:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2126:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:27"},"nodeType":"YulFunctionCall","src":"2122:14:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2138:3:27"},"nodeType":"YulFunctionCall","src":"2138:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2118:3:27"},"nodeType":"YulFunctionCall","src":"2118:28:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2108:6:27"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2091:6:27","type":""}],"src":"2050:102:27"},{"body":{"nodeType":"YulBlock","src":"2250:285:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2260:53:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2274:32:27"},"nodeType":"YulFunctionCall","src":"2274:39:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2264:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2322:78:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2388:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2329:58:27"},"nodeType":"YulFunctionCall","src":"2329:71:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2322:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2448:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"2455:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:27"},"nodeType":"YulFunctionCall","src":"2444:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"2462:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2467:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2409:34:27"},"nodeType":"YulFunctionCall","src":"2409:65:27"},"nodeType":"YulExpressionStatement","src":"2409:65:27"},{"nodeType":"YulAssignment","src":"2483:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2494:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2521:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2499:21:27"},"nodeType":"YulFunctionCall","src":"2499:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:27"},"nodeType":"YulFunctionCall","src":"2490:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2483:3:27"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2231:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2238:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2246:3:27","type":""}],"src":"2158:377:27"},{"body":{"nodeType":"YulBlock","src":"2659:195:27","statements":[{"nodeType":"YulAssignment","src":"2669:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2692:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2677:3:27"},"nodeType":"YulFunctionCall","src":"2677:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2669:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:27"},"nodeType":"YulFunctionCall","src":"2712:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2731:3:27"},"nodeType":"YulFunctionCall","src":"2731:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:27"},"nodeType":"YulFunctionCall","src":"2705:47:27"},"nodeType":"YulExpressionStatement","src":"2705:47:27"},{"nodeType":"YulAssignment","src":"2761:86:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2833:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"2842:4:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2769:63:27"},"nodeType":"YulFunctionCall","src":"2769:78:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2761:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2643:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2654:4:27","type":""}],"src":"2541:313:27"},{"body":{"nodeType":"YulBlock","src":"2905:81:27","statements":[{"nodeType":"YulAssignment","src":"2915:65:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2930:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"2937:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2926:3:27"},"nodeType":"YulFunctionCall","src":"2926:54:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2915:7:27"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2887:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2897:7:27","type":""}],"src":"2860:126:27"},{"body":{"nodeType":"YulBlock","src":"3037:51:27","statements":[{"nodeType":"YulAssignment","src":"3047:35:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3076:5:27"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3058:17:27"},"nodeType":"YulFunctionCall","src":"3058:24:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3047:7:27"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3019:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3029:7:27","type":""}],"src":"2992:96:27"},{"body":{"nodeType":"YulBlock","src":"3137:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"3194:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3203:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3206:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3196:6:27"},"nodeType":"YulFunctionCall","src":"3196:12:27"},"nodeType":"YulExpressionStatement","src":"3196:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3160:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3185:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3167:17:27"},"nodeType":"YulFunctionCall","src":"3167:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3157:2:27"},"nodeType":"YulFunctionCall","src":"3157:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3150:6:27"},"nodeType":"YulFunctionCall","src":"3150:43:27"},"nodeType":"YulIf","src":"3147:63:27"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3130:5:27","type":""}],"src":"3094:122:27"},{"body":{"nodeType":"YulBlock","src":"3274:87:27","statements":[{"nodeType":"YulAssignment","src":"3284:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3306:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3293:12:27"},"nodeType":"YulFunctionCall","src":"3293:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3284:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3349:5:27"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3322:26:27"},"nodeType":"YulFunctionCall","src":"3322:33:27"},"nodeType":"YulExpressionStatement","src":"3322:33:27"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3252:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"3260:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3268:5:27","type":""}],"src":"3222:139:27"},{"body":{"nodeType":"YulBlock","src":"3412:32:27","statements":[{"nodeType":"YulAssignment","src":"3422:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"3433:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3422:7:27"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3394:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3404:7:27","type":""}],"src":"3367:77:27"},{"body":{"nodeType":"YulBlock","src":"3493:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"3550:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3559:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3562:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3552:6:27"},"nodeType":"YulFunctionCall","src":"3552:12:27"},"nodeType":"YulExpressionStatement","src":"3552:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3516:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3541:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3523:17:27"},"nodeType":"YulFunctionCall","src":"3523:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3513:2:27"},"nodeType":"YulFunctionCall","src":"3513:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3506:6:27"},"nodeType":"YulFunctionCall","src":"3506:43:27"},"nodeType":"YulIf","src":"3503:63:27"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3486:5:27","type":""}],"src":"3450:122:27"},{"body":{"nodeType":"YulBlock","src":"3630:87:27","statements":[{"nodeType":"YulAssignment","src":"3640:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3662:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3649:12:27"},"nodeType":"YulFunctionCall","src":"3649:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3640:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3705:5:27"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3678:26:27"},"nodeType":"YulFunctionCall","src":"3678:33:27"},"nodeType":"YulExpressionStatement","src":"3678:33:27"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3608:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"3616:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3624:5:27","type":""}],"src":"3578:139:27"},{"body":{"nodeType":"YulBlock","src":"3806:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"3852:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3854:77:27"},"nodeType":"YulFunctionCall","src":"3854:79:27"},"nodeType":"YulExpressionStatement","src":"3854:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3827:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3836:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3823:3:27"},"nodeType":"YulFunctionCall","src":"3823:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"3848:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3819:3:27"},"nodeType":"YulFunctionCall","src":"3819:32:27"},"nodeType":"YulIf","src":"3816:119:27"},{"nodeType":"YulBlock","src":"3945:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3960:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3974:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3964:6:27","type":""}]},{"nodeType":"YulAssignment","src":"3989:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4024:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4035:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4020:3:27"},"nodeType":"YulFunctionCall","src":"4020:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4044:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3999:20:27"},"nodeType":"YulFunctionCall","src":"3999:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3989:6:27"}]}]},{"nodeType":"YulBlock","src":"4072:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4087:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4101:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4091:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4117:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4152:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4163:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4148:3:27"},"nodeType":"YulFunctionCall","src":"4148:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4172:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4127:20:27"},"nodeType":"YulFunctionCall","src":"4127:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4117:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3768:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3779:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3791:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3799:6:27","type":""}],"src":"3723:474:27"},{"body":{"nodeType":"YulBlock","src":"4268:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4285:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4308:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4290:17:27"},"nodeType":"YulFunctionCall","src":"4290:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4278:6:27"},"nodeType":"YulFunctionCall","src":"4278:37:27"},"nodeType":"YulExpressionStatement","src":"4278:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4256:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4263:3:27","type":""}],"src":"4203:118:27"},{"body":{"nodeType":"YulBlock","src":"4425:124:27","statements":[{"nodeType":"YulAssignment","src":"4435:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4447:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4458:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4443:3:27"},"nodeType":"YulFunctionCall","src":"4443:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4435:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4515:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4528:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4539:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4524:3:27"},"nodeType":"YulFunctionCall","src":"4524:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4471:43:27"},"nodeType":"YulFunctionCall","src":"4471:71:27"},"nodeType":"YulExpressionStatement","src":"4471:71:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4397:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4409:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4420:4:27","type":""}],"src":"4327:222:27"},{"body":{"nodeType":"YulBlock","src":"4655:519:27","statements":[{"body":{"nodeType":"YulBlock","src":"4701:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4703:77:27"},"nodeType":"YulFunctionCall","src":"4703:79:27"},"nodeType":"YulExpressionStatement","src":"4703:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4676:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"4685:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4672:3:27"},"nodeType":"YulFunctionCall","src":"4672:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"4697:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4668:3:27"},"nodeType":"YulFunctionCall","src":"4668:32:27"},"nodeType":"YulIf","src":"4665:119:27"},{"nodeType":"YulBlock","src":"4794:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4809:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4823:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4813:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4838:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4873:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4884:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4869:3:27"},"nodeType":"YulFunctionCall","src":"4869:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4893:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4848:20:27"},"nodeType":"YulFunctionCall","src":"4848:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4838:6:27"}]}]},{"nodeType":"YulBlock","src":"4921:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4936:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4950:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4940:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4966:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5001:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5012:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4997:3:27"},"nodeType":"YulFunctionCall","src":"4997:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5021:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4976:20:27"},"nodeType":"YulFunctionCall","src":"4976:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4966:6:27"}]}]},{"nodeType":"YulBlock","src":"5049:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5064:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5078:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5068:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5094:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5129:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5140:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5125:3:27"},"nodeType":"YulFunctionCall","src":"5125:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5149:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5104:20:27"},"nodeType":"YulFunctionCall","src":"5104:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5094:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4609:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4620:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4632:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4640:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4648:6:27","type":""}],"src":"4555:619:27"},{"body":{"nodeType":"YulBlock","src":"5225:32:27","statements":[{"nodeType":"YulAssignment","src":"5235:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"5246:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5235:7:27"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5207:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5217:7:27","type":""}],"src":"5180:77:27"},{"body":{"nodeType":"YulBlock","src":"5306:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"5363:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5372:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5375:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5365:6:27"},"nodeType":"YulFunctionCall","src":"5365:12:27"},"nodeType":"YulExpressionStatement","src":"5365:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5329:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5354:5:27"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5336:17:27"},"nodeType":"YulFunctionCall","src":"5336:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5326:2:27"},"nodeType":"YulFunctionCall","src":"5326:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5319:6:27"},"nodeType":"YulFunctionCall","src":"5319:43:27"},"nodeType":"YulIf","src":"5316:63:27"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5299:5:27","type":""}],"src":"5263:122:27"},{"body":{"nodeType":"YulBlock","src":"5443:87:27","statements":[{"nodeType":"YulAssignment","src":"5453:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5475:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5462:12:27"},"nodeType":"YulFunctionCall","src":"5462:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5453:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5518:5:27"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"5491:26:27"},"nodeType":"YulFunctionCall","src":"5491:33:27"},"nodeType":"YulExpressionStatement","src":"5491:33:27"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5421:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"5429:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5437:5:27","type":""}],"src":"5391:139:27"},{"body":{"nodeType":"YulBlock","src":"5602:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"5648:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5650:77:27"},"nodeType":"YulFunctionCall","src":"5650:79:27"},"nodeType":"YulExpressionStatement","src":"5650:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5623:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5632:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5619:3:27"},"nodeType":"YulFunctionCall","src":"5619:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5644:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5615:3:27"},"nodeType":"YulFunctionCall","src":"5615:32:27"},"nodeType":"YulIf","src":"5612:119:27"},{"nodeType":"YulBlock","src":"5741:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5756:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5770:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5760:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5785:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5820:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5831:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5816:3:27"},"nodeType":"YulFunctionCall","src":"5816:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5840:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"5795:20:27"},"nodeType":"YulFunctionCall","src":"5795:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5785:6:27"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5572:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5583:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5595:6:27","type":""}],"src":"5536:329:27"},{"body":{"nodeType":"YulBlock","src":"5936:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5953:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5976:5:27"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5958:17:27"},"nodeType":"YulFunctionCall","src":"5958:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5946:6:27"},"nodeType":"YulFunctionCall","src":"5946:37:27"},"nodeType":"YulExpressionStatement","src":"5946:37:27"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5924:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5931:3:27","type":""}],"src":"5871:118:27"},{"body":{"nodeType":"YulBlock","src":"6093:124:27","statements":[{"nodeType":"YulAssignment","src":"6103:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6115:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6126:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6111:3:27"},"nodeType":"YulFunctionCall","src":"6111:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6103:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6183:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6196:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6207:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6192:3:27"},"nodeType":"YulFunctionCall","src":"6192:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6139:43:27"},"nodeType":"YulFunctionCall","src":"6139:71:27"},"nodeType":"YulExpressionStatement","src":"6139:71:27"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6065:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6077:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6088:4:27","type":""}],"src":"5995:222:27"},{"body":{"nodeType":"YulBlock","src":"6306:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"6352:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6354:77:27"},"nodeType":"YulFunctionCall","src":"6354:79:27"},"nodeType":"YulExpressionStatement","src":"6354:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6327:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"6336:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6323:3:27"},"nodeType":"YulFunctionCall","src":"6323:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"6348:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6319:3:27"},"nodeType":"YulFunctionCall","src":"6319:32:27"},"nodeType":"YulIf","src":"6316:119:27"},{"nodeType":"YulBlock","src":"6445:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6460:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"6474:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6464:6:27","type":""}]},{"nodeType":"YulAssignment","src":"6489:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6524:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"6535:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6520:3:27"},"nodeType":"YulFunctionCall","src":"6520:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6544:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"6499:20:27"},"nodeType":"YulFunctionCall","src":"6499:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6489:6:27"}]}]},{"nodeType":"YulBlock","src":"6572:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6587:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"6601:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6591:6:27","type":""}]},{"nodeType":"YulAssignment","src":"6617:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6652:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"6663:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6648:3:27"},"nodeType":"YulFunctionCall","src":"6648:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6672:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6627:20:27"},"nodeType":"YulFunctionCall","src":"6627:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6617:6:27"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6268:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6279:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6291:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6299:6:27","type":""}],"src":"6223:474:27"},{"body":{"nodeType":"YulBlock","src":"6746:43:27","statements":[{"nodeType":"YulAssignment","src":"6756:27:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6771:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"6778:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6767:3:27"},"nodeType":"YulFunctionCall","src":"6767:16:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6756:7:27"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6728:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6738:7:27","type":""}],"src":"6703:86:27"},{"body":{"nodeType":"YulBlock","src":"6856:51:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6873:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6894:5:27"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"6878:15:27"},"nodeType":"YulFunctionCall","src":"6878:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6866:6:27"},"nodeType":"YulFunctionCall","src":"6866:35:27"},"nodeType":"YulExpressionStatement","src":"6866:35:27"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6844:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6851:3:27","type":""}],"src":"6795:112:27"},{"body":{"nodeType":"YulBlock","src":"7007:120:27","statements":[{"nodeType":"YulAssignment","src":"7017:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7029:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7040:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7025:3:27"},"nodeType":"YulFunctionCall","src":"7025:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7017:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7093:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7106:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7117:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7102:3:27"},"nodeType":"YulFunctionCall","src":"7102:17:27"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"7053:39:27"},"nodeType":"YulFunctionCall","src":"7053:67:27"},"nodeType":"YulExpressionStatement","src":"7053:67:27"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6979:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6991:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7002:4:27","type":""}],"src":"6913:214:27"},{"body":{"nodeType":"YulBlock","src":"7199:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"7245:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7247:77:27"},"nodeType":"YulFunctionCall","src":"7247:79:27"},"nodeType":"YulExpressionStatement","src":"7247:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7220:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"7229:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7216:3:27"},"nodeType":"YulFunctionCall","src":"7216:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"7241:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7212:3:27"},"nodeType":"YulFunctionCall","src":"7212:32:27"},"nodeType":"YulIf","src":"7209:119:27"},{"nodeType":"YulBlock","src":"7338:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"7353:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7367:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7357:6:27","type":""}]},{"nodeType":"YulAssignment","src":"7382:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7417:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"7428:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7413:3:27"},"nodeType":"YulFunctionCall","src":"7413:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7437:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7392:20:27"},"nodeType":"YulFunctionCall","src":"7392:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7382:6:27"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7169:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7180:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7192:6:27","type":""}],"src":"7133:329:27"},{"body":{"nodeType":"YulBlock","src":"7534:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"7580:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7582:77:27"},"nodeType":"YulFunctionCall","src":"7582:79:27"},"nodeType":"YulExpressionStatement","src":"7582:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7555:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"7564:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7551:3:27"},"nodeType":"YulFunctionCall","src":"7551:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"7576:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7547:3:27"},"nodeType":"YulFunctionCall","src":"7547:32:27"},"nodeType":"YulIf","src":"7544:119:27"},{"nodeType":"YulBlock","src":"7673:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"7688:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7702:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7692:6:27","type":""}]},{"nodeType":"YulAssignment","src":"7717:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7752:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"7763:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7748:3:27"},"nodeType":"YulFunctionCall","src":"7748:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7772:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7727:20:27"},"nodeType":"YulFunctionCall","src":"7727:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7717:6:27"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7504:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7515:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7527:6:27","type":""}],"src":"7468:329:27"},{"body":{"nodeType":"YulBlock","src":"7868:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7885:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7908:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7890:17:27"},"nodeType":"YulFunctionCall","src":"7890:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7878:6:27"},"nodeType":"YulFunctionCall","src":"7878:37:27"},"nodeType":"YulExpressionStatement","src":"7878:37:27"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7856:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7863:3:27","type":""}],"src":"7803:118:27"},{"body":{"nodeType":"YulBlock","src":"8025:124:27","statements":[{"nodeType":"YulAssignment","src":"8035:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8047:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:27"},"nodeType":"YulFunctionCall","src":"8043:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8035:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8115:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8128:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8139:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8124:3:27"},"nodeType":"YulFunctionCall","src":"8124:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8071:43:27"},"nodeType":"YulFunctionCall","src":"8071:71:27"},"nodeType":"YulExpressionStatement","src":"8071:71:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7997:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8009:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8020:4:27","type":""}],"src":"7927:222:27"},{"body":{"nodeType":"YulBlock","src":"8199:49:27","statements":[{"nodeType":"YulAssignment","src":"8209:33:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8224:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"8231:10:27","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8220:3:27"},"nodeType":"YulFunctionCall","src":"8220:22:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8209:7:27"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8181:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8191:7:27","type":""}],"src":"8155:93:27"},{"body":{"nodeType":"YulBlock","src":"8317:52:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8334:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8356:5:27"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"8339:16:27"},"nodeType":"YulFunctionCall","src":"8339:23:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8327:6:27"},"nodeType":"YulFunctionCall","src":"8327:36:27"},"nodeType":"YulExpressionStatement","src":"8327:36:27"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8305:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8312:3:27","type":""}],"src":"8254:115:27"},{"body":{"nodeType":"YulBlock","src":"8471:122:27","statements":[{"nodeType":"YulAssignment","src":"8481:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8493:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8504:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8489:3:27"},"nodeType":"YulFunctionCall","src":"8489:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8481:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8559:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8572:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8583:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8568:3:27"},"nodeType":"YulFunctionCall","src":"8568:17:27"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"8517:41:27"},"nodeType":"YulFunctionCall","src":"8517:69:27"},"nodeType":"YulExpressionStatement","src":"8517:69:27"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8443:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8455:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8466:4:27","type":""}],"src":"8375:218:27"},{"body":{"nodeType":"YulBlock","src":"8643:105:27","statements":[{"nodeType":"YulAssignment","src":"8653:89:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8668:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"8675:66:27","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8664:3:27"},"nodeType":"YulFunctionCall","src":"8664:78:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8653:7:27"}]}]},"name":"cleanup_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8625:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8635:7:27","type":""}],"src":"8599:149:27"},{"body":{"nodeType":"YulBlock","src":"8817:52:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8834:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8856:5:27"}],"functionName":{"name":"cleanup_t_bytes1","nodeType":"YulIdentifier","src":"8839:16:27"},"nodeType":"YulFunctionCall","src":"8839:23:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8827:6:27"},"nodeType":"YulFunctionCall","src":"8827:36:27"},"nodeType":"YulExpressionStatement","src":"8827:36:27"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8805:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8812:3:27","type":""}],"src":"8754:115:27"},{"body":{"nodeType":"YulBlock","src":"8949:40:27","statements":[{"nodeType":"YulAssignment","src":"8960:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8976:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8970:5:27"},"nodeType":"YulFunctionCall","src":"8970:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8960:6:27"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8932:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8942:6:27","type":""}],"src":"8875:114:27"},{"body":{"nodeType":"YulBlock","src":"9106:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9123:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"9128:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9116:6:27"},"nodeType":"YulFunctionCall","src":"9116:19:27"},"nodeType":"YulExpressionStatement","src":"9116:19:27"},{"nodeType":"YulAssignment","src":"9144:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9163:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9168:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9159:3:27"},"nodeType":"YulFunctionCall","src":"9159:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9144:11:27"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9078:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"9083:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9094:11:27","type":""}],"src":"8995:184:27"},{"body":{"nodeType":"YulBlock","src":"9257:60:27","statements":[{"nodeType":"YulAssignment","src":"9267:11:27","value":{"name":"ptr","nodeType":"YulIdentifier","src":"9275:3:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9267:4:27"}]},{"nodeType":"YulAssignment","src":"9288:22:27","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9300:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9305:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9296:3:27"},"nodeType":"YulFunctionCall","src":"9296:14:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9288:4:27"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9244:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"9252:4:27","type":""}],"src":"9185:132:27"},{"body":{"nodeType":"YulBlock","src":"9378:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9395:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9418:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9400:17:27"},"nodeType":"YulFunctionCall","src":"9400:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9388:6:27"},"nodeType":"YulFunctionCall","src":"9388:37:27"},"nodeType":"YulExpressionStatement","src":"9388:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9366:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9373:3:27","type":""}],"src":"9323:108:27"},{"body":{"nodeType":"YulBlock","src":"9517:99:27","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9561:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"9569:3:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9527:33:27"},"nodeType":"YulFunctionCall","src":"9527:46:27"},"nodeType":"YulExpressionStatement","src":"9527:46:27"},{"nodeType":"YulAssignment","src":"9582:28:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9600:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9605:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9596:3:27"},"nodeType":"YulFunctionCall","src":"9596:14:27"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"9582:10:27"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"9490:6:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9498:3:27","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"9506:10:27","type":""}],"src":"9437:179:27"},{"body":{"nodeType":"YulBlock","src":"9697:38:27","statements":[{"nodeType":"YulAssignment","src":"9707:22:27","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9719:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9724:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9715:3:27"},"nodeType":"YulFunctionCall","src":"9715:14:27"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"9707:4:27"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9684:3:27","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"9692:4:27","type":""}],"src":"9622:113:27"},{"body":{"nodeType":"YulBlock","src":"9895:608:27","statements":[{"nodeType":"YulVariableDeclaration","src":"9905:68:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9967:5:27"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9919:47:27"},"nodeType":"YulFunctionCall","src":"9919:54:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9909:6:27","type":""}]},{"nodeType":"YulAssignment","src":"9982:93:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10063:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"10068:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9989:73:27"},"nodeType":"YulFunctionCall","src":"9989:86:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9982:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"10084:71:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10149:5:27"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10099:49:27"},"nodeType":"YulFunctionCall","src":"10099:56:27"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"10088:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10164:21:27","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"10178:7:27"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"10168:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"10254:224:27","statements":[{"nodeType":"YulVariableDeclaration","src":"10268:34:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10295:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10289:5:27"},"nodeType":"YulFunctionCall","src":"10289:13:27"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"10272:13:27","type":""}]},{"nodeType":"YulAssignment","src":"10315:70:27","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"10366:13:27"},{"name":"pos","nodeType":"YulIdentifier","src":"10381:3:27"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10322:43:27"},"nodeType":"YulFunctionCall","src":"10322:63:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10315:3:27"}]},{"nodeType":"YulAssignment","src":"10398:70:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10461:6:27"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10408:52:27"},"nodeType":"YulFunctionCall","src":"10408:60:27"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10398:6:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10216:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"10219:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10213:2:27"},"nodeType":"YulFunctionCall","src":"10213:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10227:18:27","statements":[{"nodeType":"YulAssignment","src":"10229:14:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10238:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"10241:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10234:3:27"},"nodeType":"YulFunctionCall","src":"10234:9:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10229:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"10198:14:27","statements":[{"nodeType":"YulVariableDeclaration","src":"10200:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"10209:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10204:1:27","type":""}]}]},"src":"10194:284:27"},{"nodeType":"YulAssignment","src":"10487:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"10494:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10487:3:27"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9874:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9881:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9890:3:27","type":""}],"src":"9771:732:27"},{"body":{"nodeType":"YulBlock","src":"10863:861:27","statements":[{"nodeType":"YulAssignment","src":"10873:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10885:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10896:3:27","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10881:3:27"},"nodeType":"YulFunctionCall","src":"10881:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10873:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10952:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10965:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10976:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10961:3:27"},"nodeType":"YulFunctionCall","src":"10961:17:27"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulIdentifier","src":"10910:41:27"},"nodeType":"YulFunctionCall","src":"10910:69:27"},"nodeType":"YulExpressionStatement","src":"10910:69:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11000:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11011:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10996:3:27"},"nodeType":"YulFunctionCall","src":"10996:18:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11020:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"11026:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11016:3:27"},"nodeType":"YulFunctionCall","src":"11016:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10989:6:27"},"nodeType":"YulFunctionCall","src":"10989:48:27"},"nodeType":"YulExpressionStatement","src":"10989:48:27"},{"nodeType":"YulAssignment","src":"11046:86:27","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11118:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"11127:4:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11054:63:27"},"nodeType":"YulFunctionCall","src":"11054:78:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11046:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11153:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11164:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11149:3:27"},"nodeType":"YulFunctionCall","src":"11149:18:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11173:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"11179:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11169:3:27"},"nodeType":"YulFunctionCall","src":"11169:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11142:6:27"},"nodeType":"YulFunctionCall","src":"11142:48:27"},"nodeType":"YulExpressionStatement","src":"11142:48:27"},{"nodeType":"YulAssignment","src":"11199:86:27","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11271:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"11280:4:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11207:63:27"},"nodeType":"YulFunctionCall","src":"11207:78:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11199:4:27"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11339:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11352:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11363:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11348:3:27"},"nodeType":"YulFunctionCall","src":"11348:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11295:43:27"},"nodeType":"YulFunctionCall","src":"11295:72:27"},"nodeType":"YulExpressionStatement","src":"11295:72:27"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"11421:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11434:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11445:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11430:3:27"},"nodeType":"YulFunctionCall","src":"11430:19:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11377:43:27"},"nodeType":"YulFunctionCall","src":"11377:73:27"},"nodeType":"YulExpressionStatement","src":"11377:73:27"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"11504:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11517:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11528:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11513:3:27"},"nodeType":"YulFunctionCall","src":"11513:19:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"11460:43:27"},"nodeType":"YulFunctionCall","src":"11460:73:27"},"nodeType":"YulExpressionStatement","src":"11460:73:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11554:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11565:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11550:3:27"},"nodeType":"YulFunctionCall","src":"11550:19:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11575:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"11581:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11571:3:27"},"nodeType":"YulFunctionCall","src":"11571:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11543:6:27"},"nodeType":"YulFunctionCall","src":"11543:49:27"},"nodeType":"YulExpressionStatement","src":"11543:49:27"},{"nodeType":"YulAssignment","src":"11601:116:27","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"11703:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"11712:4:27"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11609:93:27"},"nodeType":"YulFunctionCall","src":"11609:108:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11601:4:27"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10787:9:27","type":""},{"name":"value6","nodeType":"YulTypedName","src":"10799:6:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"10807:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10815:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10823:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10831:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10839:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10847:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10858:4:27","type":""}],"src":"10509:1215:27"},{"body":{"nodeType":"YulBlock","src":"11774:53:27","statements":[{"nodeType":"YulAssignment","src":"11784:37:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11799:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"11806:14:27","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11795:3:27"},"nodeType":"YulFunctionCall","src":"11795:26:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11784:7:27"}]}]},"name":"cleanup_t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11756:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11766:7:27","type":""}],"src":"11730:97:27"},{"body":{"nodeType":"YulBlock","src":"11896:52:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11913:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11935:5:27"}],"functionName":{"name":"cleanup_t_uint48","nodeType":"YulIdentifier","src":"11918:16:27"},"nodeType":"YulFunctionCall","src":"11918:23:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11906:6:27"},"nodeType":"YulFunctionCall","src":"11906:36:27"},"nodeType":"YulExpressionStatement","src":"11906:36:27"}]},"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11884:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11891:3:27","type":""}],"src":"11833:115:27"},{"body":{"nodeType":"YulBlock","src":"12050:122:27","statements":[{"nodeType":"YulAssignment","src":"12060:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12072:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12083:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12068:3:27"},"nodeType":"YulFunctionCall","src":"12068:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12060:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12138:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12151:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12162:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12147:3:27"},"nodeType":"YulFunctionCall","src":"12147:17:27"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulIdentifier","src":"12096:41:27"},"nodeType":"YulFunctionCall","src":"12096:69:27"},"nodeType":"YulExpressionStatement","src":"12096:69:27"}]},"name":"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12022:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12034:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12045:4:27","type":""}],"src":"11954:218:27"},{"body":{"nodeType":"YulBlock","src":"12219:77:27","statements":[{"body":{"nodeType":"YulBlock","src":"12274:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12283:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12286:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12276:6:27"},"nodeType":"YulFunctionCall","src":"12276:12:27"},"nodeType":"YulExpressionStatement","src":"12276:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12242:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12265:5:27"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"12249:15:27"},"nodeType":"YulFunctionCall","src":"12249:22:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12239:2:27"},"nodeType":"YulFunctionCall","src":"12239:33:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12232:6:27"},"nodeType":"YulFunctionCall","src":"12232:41:27"},"nodeType":"YulIf","src":"12229:61:27"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12212:5:27","type":""}],"src":"12178:118:27"},{"body":{"nodeType":"YulBlock","src":"12352:85:27","statements":[{"nodeType":"YulAssignment","src":"12362:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12384:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12371:12:27"},"nodeType":"YulFunctionCall","src":"12371:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12362:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12425:5:27"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"12400:24:27"},"nodeType":"YulFunctionCall","src":"12400:31:27"},"nodeType":"YulExpressionStatement","src":"12400:31:27"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12330:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"12338:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12346:5:27","type":""}],"src":"12302:135:27"},{"body":{"nodeType":"YulBlock","src":"12592:904:27","statements":[{"body":{"nodeType":"YulBlock","src":"12639:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12641:77:27"},"nodeType":"YulFunctionCall","src":"12641:79:27"},"nodeType":"YulExpressionStatement","src":"12641:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12613:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"12622:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12609:3:27"},"nodeType":"YulFunctionCall","src":"12609:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"12634:3:27","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12605:3:27"},"nodeType":"YulFunctionCall","src":"12605:33:27"},"nodeType":"YulIf","src":"12602:120:27"},{"nodeType":"YulBlock","src":"12732:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"12747:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"12761:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12751:6:27","type":""}]},{"nodeType":"YulAssignment","src":"12776:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12811:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"12822:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12807:3:27"},"nodeType":"YulFunctionCall","src":"12807:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12831:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12786:20:27"},"nodeType":"YulFunctionCall","src":"12786:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12776:6:27"}]}]},{"nodeType":"YulBlock","src":"12859:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"12874:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"12888:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12878:6:27","type":""}]},{"nodeType":"YulAssignment","src":"12904:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12939:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"12950:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12935:3:27"},"nodeType":"YulFunctionCall","src":"12935:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12959:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12914:20:27"},"nodeType":"YulFunctionCall","src":"12914:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12904:6:27"}]}]},{"nodeType":"YulBlock","src":"12987:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"13002:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"13016:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13006:6:27","type":""}]},{"nodeType":"YulAssignment","src":"13032:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13067:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"13078:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13063:3:27"},"nodeType":"YulFunctionCall","src":"13063:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13087:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"13042:20:27"},"nodeType":"YulFunctionCall","src":"13042:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13032:6:27"}]}]},{"nodeType":"YulBlock","src":"13115:116:27","statements":[{"nodeType":"YulVariableDeclaration","src":"13130:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"13144:2:27","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13134:6:27","type":""}]},{"nodeType":"YulAssignment","src":"13160:61:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13193:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"13204:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13189:3:27"},"nodeType":"YulFunctionCall","src":"13189:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13213:7:27"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"13170:18:27"},"nodeType":"YulFunctionCall","src":"13170:51:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"13160:6:27"}]}]},{"nodeType":"YulBlock","src":"13241:119:27","statements":[{"nodeType":"YulVariableDeclaration","src":"13256:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"13270:3:27","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13260:6:27","type":""}]},{"nodeType":"YulAssignment","src":"13287:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13322:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"13333:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13318:3:27"},"nodeType":"YulFunctionCall","src":"13318:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13342:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"13297:20:27"},"nodeType":"YulFunctionCall","src":"13297:53:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"13287:6:27"}]}]},{"nodeType":"YulBlock","src":"13370:119:27","statements":[{"nodeType":"YulVariableDeclaration","src":"13385:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"13399:3:27","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13389:6:27","type":""}]},{"nodeType":"YulAssignment","src":"13416:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13451:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"13462:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13447:3:27"},"nodeType":"YulFunctionCall","src":"13447:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13471:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"13426:20:27"},"nodeType":"YulFunctionCall","src":"13426:53:27"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"13416:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12522:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12533:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12545:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12553:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12561:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12569:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12577:6:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"12585:6:27","type":""}],"src":"12443:1053:27"},{"body":{"nodeType":"YulBlock","src":"13668:1033:27","statements":[{"body":{"nodeType":"YulBlock","src":"13715:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13717:77:27"},"nodeType":"YulFunctionCall","src":"13717:79:27"},"nodeType":"YulExpressionStatement","src":"13717:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13689:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"13698:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13685:3:27"},"nodeType":"YulFunctionCall","src":"13685:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"13710:3:27","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13681:3:27"},"nodeType":"YulFunctionCall","src":"13681:33:27"},"nodeType":"YulIf","src":"13678:120:27"},{"nodeType":"YulBlock","src":"13808:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"13823:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"13837:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13827:6:27","type":""}]},{"nodeType":"YulAssignment","src":"13852:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13887:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"13898:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13883:3:27"},"nodeType":"YulFunctionCall","src":"13883:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13907:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13862:20:27"},"nodeType":"YulFunctionCall","src":"13862:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13852:6:27"}]}]},{"nodeType":"YulBlock","src":"13935:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"13950:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"13964:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13954:6:27","type":""}]},{"nodeType":"YulAssignment","src":"13980:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14015:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"14026:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14011:3:27"},"nodeType":"YulFunctionCall","src":"14011:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14035:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13990:20:27"},"nodeType":"YulFunctionCall","src":"13990:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13980:6:27"}]}]},{"nodeType":"YulBlock","src":"14063:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"14078:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"14092:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14082:6:27","type":""}]},{"nodeType":"YulAssignment","src":"14108:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14143:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"14154:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14139:3:27"},"nodeType":"YulFunctionCall","src":"14139:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14163:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"14118:20:27"},"nodeType":"YulFunctionCall","src":"14118:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14108:6:27"}]}]},{"nodeType":"YulBlock","src":"14191:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"14206:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"14220:2:27","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14210:6:27","type":""}]},{"nodeType":"YulAssignment","src":"14236:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14271:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"14282:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14267:3:27"},"nodeType":"YulFunctionCall","src":"14267:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14291:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"14246:20:27"},"nodeType":"YulFunctionCall","src":"14246:53:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"14236:6:27"}]}]},{"nodeType":"YulBlock","src":"14319:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"14334:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"14348:3:27","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14338:6:27","type":""}]},{"nodeType":"YulAssignment","src":"14365:61:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14398:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"14409:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14394:3:27"},"nodeType":"YulFunctionCall","src":"14394:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14418:7:27"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"14375:18:27"},"nodeType":"YulFunctionCall","src":"14375:51:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"14365:6:27"}]}]},{"nodeType":"YulBlock","src":"14446:119:27","statements":[{"nodeType":"YulVariableDeclaration","src":"14461:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"14475:3:27","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14465:6:27","type":""}]},{"nodeType":"YulAssignment","src":"14492:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14527:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"14538:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14523:3:27"},"nodeType":"YulFunctionCall","src":"14523:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14547:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"14502:20:27"},"nodeType":"YulFunctionCall","src":"14502:53:27"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"14492:6:27"}]}]},{"nodeType":"YulBlock","src":"14575:119:27","statements":[{"nodeType":"YulVariableDeclaration","src":"14590:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"14604:3:27","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14594:6:27","type":""}]},{"nodeType":"YulAssignment","src":"14621:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14656:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"14667:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14652:3:27"},"nodeType":"YulFunctionCall","src":"14652:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14676:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"14631:20:27"},"nodeType":"YulFunctionCall","src":"14631:53:27"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"14621:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13590:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13601:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13613:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13621:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13629:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13637:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"13645:6:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"13653:6:27","type":""},{"name":"value6","nodeType":"YulTypedName","src":"13661:6:27","type":""}],"src":"13502:1199:27"},{"body":{"nodeType":"YulBlock","src":"14790:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"14836:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14838:77:27"},"nodeType":"YulFunctionCall","src":"14838:79:27"},"nodeType":"YulExpressionStatement","src":"14838:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14811:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"14820:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14807:3:27"},"nodeType":"YulFunctionCall","src":"14807:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"14832:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14803:3:27"},"nodeType":"YulFunctionCall","src":"14803:32:27"},"nodeType":"YulIf","src":"14800:119:27"},{"nodeType":"YulBlock","src":"14929:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"14944:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"14958:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14948:6:27","type":""}]},{"nodeType":"YulAssignment","src":"14973:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15008:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"15019:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15004:3:27"},"nodeType":"YulFunctionCall","src":"15004:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15028:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14983:20:27"},"nodeType":"YulFunctionCall","src":"14983:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14973:6:27"}]}]},{"nodeType":"YulBlock","src":"15056:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"15071:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"15085:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15075:6:27","type":""}]},{"nodeType":"YulAssignment","src":"15101:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15136:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"15147:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15132:3:27"},"nodeType":"YulFunctionCall","src":"15132:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15156:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15111:20:27"},"nodeType":"YulFunctionCall","src":"15111:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15101:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14752:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14763:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14775:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14783:6:27","type":""}],"src":"14707:474:27"},{"body":{"nodeType":"YulBlock","src":"15229:78:27","statements":[{"body":{"nodeType":"YulBlock","src":"15285:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15294:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15297:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15287:6:27"},"nodeType":"YulFunctionCall","src":"15287:12:27"},"nodeType":"YulExpressionStatement","src":"15287:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15252:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15276:5:27"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"15259:16:27"},"nodeType":"YulFunctionCall","src":"15259:23:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15249:2:27"},"nodeType":"YulFunctionCall","src":"15249:34:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15242:6:27"},"nodeType":"YulFunctionCall","src":"15242:42:27"},"nodeType":"YulIf","src":"15239:62:27"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15222:5:27","type":""}],"src":"15187:120:27"},{"body":{"nodeType":"YulBlock","src":"15364:86:27","statements":[{"nodeType":"YulAssignment","src":"15374:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15396:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15383:12:27"},"nodeType":"YulFunctionCall","src":"15383:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15374:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15438:5:27"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"15412:25:27"},"nodeType":"YulFunctionCall","src":"15412:32:27"},"nodeType":"YulExpressionStatement","src":"15412:32:27"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15342:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"15350:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15358:5:27","type":""}],"src":"15313:137:27"},{"body":{"nodeType":"YulBlock","src":"15538:390:27","statements":[{"body":{"nodeType":"YulBlock","src":"15584:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15586:77:27"},"nodeType":"YulFunctionCall","src":"15586:79:27"},"nodeType":"YulExpressionStatement","src":"15586:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15559:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"15568:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15555:3:27"},"nodeType":"YulFunctionCall","src":"15555:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"15580:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15551:3:27"},"nodeType":"YulFunctionCall","src":"15551:32:27"},"nodeType":"YulIf","src":"15548:119:27"},{"nodeType":"YulBlock","src":"15677:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"15692:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"15706:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15696:6:27","type":""}]},{"nodeType":"YulAssignment","src":"15721:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15756:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"15767:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15752:3:27"},"nodeType":"YulFunctionCall","src":"15752:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15776:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15731:20:27"},"nodeType":"YulFunctionCall","src":"15731:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15721:6:27"}]}]},{"nodeType":"YulBlock","src":"15804:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"15819:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"15833:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15823:6:27","type":""}]},{"nodeType":"YulAssignment","src":"15849:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15883:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"15894:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15879:3:27"},"nodeType":"YulFunctionCall","src":"15879:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15903:7:27"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"15859:19:27"},"nodeType":"YulFunctionCall","src":"15859:52:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15849:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15500:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15511:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15523:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15531:6:27","type":""}],"src":"15456:472:27"},{"body":{"nodeType":"YulBlock","src":"15987:52:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16004:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16026:5:27"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"16009:16:27"},"nodeType":"YulFunctionCall","src":"16009:23:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15997:6:27"},"nodeType":"YulFunctionCall","src":"15997:36:27"},"nodeType":"YulExpressionStatement","src":"15997:36:27"}]},"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15975:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15982:3:27","type":""}],"src":"15934:105:27"},{"body":{"nodeType":"YulBlock","src":"16090:97:27","statements":[{"nodeType":"YulAssignment","src":"16100:81:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16115:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"16122:58:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16111:3:27"},"nodeType":"YulFunctionCall","src":"16111:70:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"16100:7:27"}]}]},"name":"cleanup_t_uint224","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16072:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"16082:7:27","type":""}],"src":"16045:142:27"},{"body":{"nodeType":"YulBlock","src":"16248:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16265:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16288:5:27"}],"functionName":{"name":"cleanup_t_uint224","nodeType":"YulIdentifier","src":"16270:17:27"},"nodeType":"YulFunctionCall","src":"16270:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16258:6:27"},"nodeType":"YulFunctionCall","src":"16258:37:27"},"nodeType":"YulExpressionStatement","src":"16258:37:27"}]},"name":"abi_encode_t_uint224_to_t_uint224","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16236:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16243:3:27","type":""}],"src":"16193:108:27"},{"body":{"nodeType":"YulBlock","src":"16497:395:27","statements":[{"nodeType":"YulVariableDeclaration","src":"16507:26:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16523:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"16528:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16519:3:27"},"nodeType":"YulFunctionCall","src":"16519:14:27"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"16511:4:27","type":""}]},{"nodeType":"YulBlock","src":"16543:167:27","statements":[{"nodeType":"YulVariableDeclaration","src":"16583:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16613:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"16620:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16609:3:27"},"nodeType":"YulFunctionCall","src":"16609:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16603:5:27"},"nodeType":"YulFunctionCall","src":"16603:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"16587:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16671:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16689:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"16694:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16685:3:27"},"nodeType":"YulFunctionCall","src":"16685:14:27"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"16639:31:27"},"nodeType":"YulFunctionCall","src":"16639:61:27"},"nodeType":"YulExpressionStatement","src":"16639:61:27"}]},{"nodeType":"YulBlock","src":"16720:165:27","statements":[{"nodeType":"YulVariableDeclaration","src":"16756:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16786:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"16793:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16782:3:27"},"nodeType":"YulFunctionCall","src":"16782:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16776:5:27"},"nodeType":"YulFunctionCall","src":"16776:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"16760:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16846:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16864:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"16869:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16860:3:27"},"nodeType":"YulFunctionCall","src":"16860:14:27"}],"functionName":{"name":"abi_encode_t_uint224_to_t_uint224","nodeType":"YulIdentifier","src":"16812:33:27"},"nodeType":"YulFunctionCall","src":"16812:63:27"},"nodeType":"YulExpressionStatement","src":"16812:63:27"}]}]},"name":"abi_encode_t_struct$_Checkpoint_$1521_memory_ptr_to_t_struct$_Checkpoint_$1521_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16484:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16491:3:27","type":""}],"src":"16375:517:27"},{"body":{"nodeType":"YulBlock","src":"17052:180:27","statements":[{"nodeType":"YulAssignment","src":"17062:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17074:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17085:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17070:3:27"},"nodeType":"YulFunctionCall","src":"17070:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17062:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17198:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17211:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17222:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17207:3:27"},"nodeType":"YulFunctionCall","src":"17207:17:27"}],"functionName":{"name":"abi_encode_t_struct$_Checkpoint_$1521_memory_ptr_to_t_struct$_Checkpoint_$1521_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17098:99:27"},"nodeType":"YulFunctionCall","src":"17098:127:27"},"nodeType":"YulExpressionStatement","src":"17098:127:27"}]},"name":"abi_encode_tuple_t_struct$_Checkpoint_$1521_memory_ptr__to_t_struct$_Checkpoint_$1521_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17024:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17036:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17047:4:27","type":""}],"src":"16898:334:27"},{"body":{"nodeType":"YulBlock","src":"17266:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17283:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17286:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17276:6:27"},"nodeType":"YulFunctionCall","src":"17276:88:27"},"nodeType":"YulExpressionStatement","src":"17276:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17380:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17383:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17373:6:27"},"nodeType":"YulFunctionCall","src":"17373:15:27"},"nodeType":"YulExpressionStatement","src":"17373:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17404:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17407:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17397:6:27"},"nodeType":"YulFunctionCall","src":"17397:15:27"},"nodeType":"YulExpressionStatement","src":"17397:15:27"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"17238:180:27"},{"body":{"nodeType":"YulBlock","src":"17475:269:27","statements":[{"nodeType":"YulAssignment","src":"17485:22:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"17499:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"17505:1:27","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17495:3:27"},"nodeType":"YulFunctionCall","src":"17495:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17485:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"17516:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"17546:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"17552:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17542:3:27"},"nodeType":"YulFunctionCall","src":"17542:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"17520:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"17593:51:27","statements":[{"nodeType":"YulAssignment","src":"17607:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17621:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"17629:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17617:3:27"},"nodeType":"YulFunctionCall","src":"17617:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17607:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"17573:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17566:6:27"},"nodeType":"YulFunctionCall","src":"17566:26:27"},"nodeType":"YulIf","src":"17563:81:27"},{"body":{"nodeType":"YulBlock","src":"17696:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"17710:16:27"},"nodeType":"YulFunctionCall","src":"17710:18:27"},"nodeType":"YulExpressionStatement","src":"17710:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"17660:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17683:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"17691:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17680:2:27"},"nodeType":"YulFunctionCall","src":"17680:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17657:2:27"},"nodeType":"YulFunctionCall","src":"17657:38:27"},"nodeType":"YulIf","src":"17654:84:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"17459:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17468:6:27","type":""}],"src":"17424:320:27"},{"body":{"nodeType":"YulBlock","src":"17778:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17795:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17798:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17788:6:27"},"nodeType":"YulFunctionCall","src":"17788:88:27"},"nodeType":"YulExpressionStatement","src":"17788:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17892:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17895:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17885:6:27"},"nodeType":"YulFunctionCall","src":"17885:15:27"},"nodeType":"YulExpressionStatement","src":"17885:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17916:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17919:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17909:6:27"},"nodeType":"YulFunctionCall","src":"17909:15:27"},"nodeType":"YulExpressionStatement","src":"17909:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"17750:180:27"},{"body":{"nodeType":"YulBlock","src":"17987:51:27","statements":[{"nodeType":"YulAssignment","src":"17997:34:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18022:1:27","type":"","value":"1"},{"name":"value","nodeType":"YulIdentifier","src":"18025:5:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18018:3:27"},"nodeType":"YulFunctionCall","src":"18018:13:27"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"17997:8:27"}]}]},"name":"shift_right_1_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17968:5:27","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"17978:8:27","type":""}],"src":"17936:102:27"},{"body":{"nodeType":"YulBlock","src":"18117:775:27","statements":[{"nodeType":"YulAssignment","src":"18127:15:27","value":{"name":"_power","nodeType":"YulIdentifier","src":"18136:6:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18127:5:27"}]},{"nodeType":"YulAssignment","src":"18151:14:27","value":{"name":"_base","nodeType":"YulIdentifier","src":"18160:5:27"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"18151:4:27"}]},{"body":{"nodeType":"YulBlock","src":"18209:677:27","statements":[{"body":{"nodeType":"YulBlock","src":"18297:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18299:16:27"},"nodeType":"YulFunctionCall","src":"18299:18:27"},"nodeType":"YulExpressionStatement","src":"18299:18:27"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"18275:4:27"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"18285:3:27"},{"name":"base","nodeType":"YulIdentifier","src":"18290:4:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18281:3:27"},"nodeType":"YulFunctionCall","src":"18281:14:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18272:2:27"},"nodeType":"YulFunctionCall","src":"18272:24:27"},"nodeType":"YulIf","src":"18269:50:27"},{"body":{"nodeType":"YulBlock","src":"18364:419:27","statements":[{"nodeType":"YulAssignment","src":"18744:25:27","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"18757:5:27"},{"name":"base","nodeType":"YulIdentifier","src":"18764:4:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18753:3:27"},"nodeType":"YulFunctionCall","src":"18753:16:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18744:5:27"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"18339:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"18349:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18335:3:27"},"nodeType":"YulFunctionCall","src":"18335:16:27"},"nodeType":"YulIf","src":"18332:451:27"},{"nodeType":"YulAssignment","src":"18796:23:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"18808:4:27"},{"name":"base","nodeType":"YulIdentifier","src":"18814:4:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18804:3:27"},"nodeType":"YulFunctionCall","src":"18804:15:27"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"18796:4:27"}]},{"nodeType":"YulAssignment","src":"18832:44:27","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"18867:8:27"}],"functionName":{"name":"shift_right_1_unsigned","nodeType":"YulIdentifier","src":"18844:22:27"},"nodeType":"YulFunctionCall","src":"18844:32:27"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"18832:8:27"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"18185:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"18195:1:27","type":"","value":"1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18182:2:27"},"nodeType":"YulFunctionCall","src":"18182:15:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18198:2:27","statements":[]},"pre":{"nodeType":"YulBlock","src":"18178:3:27","statements":[]},"src":"18174:712:27"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nodeType":"YulTypedName","src":"18072:6:27","type":""},{"name":"_base","nodeType":"YulTypedName","src":"18080:5:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"18087:8:27","type":""},{"name":"max","nodeType":"YulTypedName","src":"18097:3:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"18105:5:27","type":""},{"name":"base","nodeType":"YulTypedName","src":"18112:4:27","type":""}],"src":"18044:848:27"},{"body":{"nodeType":"YulBlock","src":"18958:1013:27","statements":[{"body":{"nodeType":"YulBlock","src":"19153:20:27","statements":[{"nodeType":"YulAssignment","src":"19155:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"19164:1:27","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"19155:5:27"}]},{"nodeType":"YulLeave","src":"19166:5:27"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"19143:8:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19136:6:27"},"nodeType":"YulFunctionCall","src":"19136:16:27"},"nodeType":"YulIf","src":"19133:40:27"},{"body":{"nodeType":"YulBlock","src":"19198:20:27","statements":[{"nodeType":"YulAssignment","src":"19200:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"19209:1:27","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"19200:5:27"}]},{"nodeType":"YulLeave","src":"19211:5:27"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"19192:4:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19185:6:27"},"nodeType":"YulFunctionCall","src":"19185:12:27"},"nodeType":"YulIf","src":"19182:36:27"},{"cases":[{"body":{"nodeType":"YulBlock","src":"19328:20:27","statements":[{"nodeType":"YulAssignment","src":"19330:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"19339:1:27","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"19330:5:27"}]},{"nodeType":"YulLeave","src":"19341:5:27"}]},"nodeType":"YulCase","src":"19321:27:27","value":{"kind":"number","nodeType":"YulLiteral","src":"19326:1:27","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"19372:176:27","statements":[{"body":{"nodeType":"YulBlock","src":"19407:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19409:16:27"},"nodeType":"YulFunctionCall","src":"19409:18:27"},"nodeType":"YulExpressionStatement","src":"19409:18:27"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"19392:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"19402:3:27","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19389:2:27"},"nodeType":"YulFunctionCall","src":"19389:17:27"},"nodeType":"YulIf","src":"19386:43:27"},{"nodeType":"YulAssignment","src":"19442:25:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19455:1:27","type":"","value":"2"},{"name":"exponent","nodeType":"YulIdentifier","src":"19458:8:27"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"19451:3:27"},"nodeType":"YulFunctionCall","src":"19451:16:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"19442:5:27"}]},{"body":{"nodeType":"YulBlock","src":"19498:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19500:16:27"},"nodeType":"YulFunctionCall","src":"19500:18:27"},"nodeType":"YulExpressionStatement","src":"19500:18:27"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"19486:5:27"},{"name":"max","nodeType":"YulIdentifier","src":"19493:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19483:2:27"},"nodeType":"YulFunctionCall","src":"19483:14:27"},"nodeType":"YulIf","src":"19480:40:27"},{"nodeType":"YulLeave","src":"19533:5:27"}]},"nodeType":"YulCase","src":"19357:191:27","value":{"kind":"number","nodeType":"YulLiteral","src":"19362:1:27","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"19278:4:27"},"nodeType":"YulSwitch","src":"19271:277:27"},{"body":{"nodeType":"YulBlock","src":"19680:123:27","statements":[{"nodeType":"YulAssignment","src":"19694:28:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"19707:4:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"19713:8:27"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"19703:3:27"},"nodeType":"YulFunctionCall","src":"19703:19:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"19694:5:27"}]},{"body":{"nodeType":"YulBlock","src":"19753:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19755:16:27"},"nodeType":"YulFunctionCall","src":"19755:18:27"},"nodeType":"YulExpressionStatement","src":"19755:18:27"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"19741:5:27"},{"name":"max","nodeType":"YulIdentifier","src":"19748:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19738:2:27"},"nodeType":"YulFunctionCall","src":"19738:14:27"},"nodeType":"YulIf","src":"19735:40:27"},{"nodeType":"YulLeave","src":"19788:5:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"19583:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"19589:2:27","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19580:2:27"},"nodeType":"YulFunctionCall","src":"19580:12:27"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"19597:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"19607:2:27","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19594:2:27"},"nodeType":"YulFunctionCall","src":"19594:16:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19576:3:27"},"nodeType":"YulFunctionCall","src":"19576:35:27"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"19632:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"19638:3:27","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19629:2:27"},"nodeType":"YulFunctionCall","src":"19629:13:27"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"19647:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"19657:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19644:2:27"},"nodeType":"YulFunctionCall","src":"19644:16:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19625:3:27"},"nodeType":"YulFunctionCall","src":"19625:36:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"19560:2:27"},"nodeType":"YulFunctionCall","src":"19560:111:27"},"nodeType":"YulIf","src":"19557:246:27"},{"nodeType":"YulAssignment","src":"19813:57:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19847:1:27","type":"","value":"1"},{"name":"base","nodeType":"YulIdentifier","src":"19850:4:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"19856:8:27"},{"name":"max","nodeType":"YulIdentifier","src":"19866:3:27"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"19828:18:27"},"nodeType":"YulFunctionCall","src":"19828:42:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"19813:5:27"},{"name":"base","nodeType":"YulIdentifier","src":"19820:4:27"}]},{"body":{"nodeType":"YulBlock","src":"19909:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19911:16:27"},"nodeType":"YulFunctionCall","src":"19911:18:27"},"nodeType":"YulExpressionStatement","src":"19911:18:27"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"19886:5:27"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"19897:3:27"},{"name":"base","nodeType":"YulIdentifier","src":"19902:4:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"19893:3:27"},"nodeType":"YulFunctionCall","src":"19893:14:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19883:2:27"},"nodeType":"YulFunctionCall","src":"19883:25:27"},"nodeType":"YulIf","src":"19880:51:27"},{"nodeType":"YulAssignment","src":"19940:25:27","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"19953:5:27"},{"name":"base","nodeType":"YulIdentifier","src":"19960:4:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19949:3:27"},"nodeType":"YulFunctionCall","src":"19949:16:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"19940:5:27"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"18928:4:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"18934:8:27","type":""},{"name":"max","nodeType":"YulTypedName","src":"18944:3:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"18952:5:27","type":""}],"src":"18898:1073:27"},{"body":{"nodeType":"YulBlock","src":"20043:219:27","statements":[{"nodeType":"YulAssignment","src":"20053:31:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"20079:4:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20061:17:27"},"nodeType":"YulFunctionCall","src":"20061:23:27"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"20053:4:27"}]},{"nodeType":"YulAssignment","src":"20093:39:27","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"20123:8:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20105:17:27"},"nodeType":"YulFunctionCall","src":"20105:27:27"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"20093:8:27"}]},{"nodeType":"YulAssignment","src":"20142:113:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"20172:4:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"20178:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"20188:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"20151:20:27"},"nodeType":"YulFunctionCall","src":"20151:104:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"20142:5:27"}]}]},"name":"checked_exp_t_uint256_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"20018:4:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"20024:8:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"20037:5:27","type":""}],"src":"19977:285:27"},{"body":{"nodeType":"YulBlock","src":"20316:362:27","statements":[{"nodeType":"YulAssignment","src":"20326:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20349:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20331:17:27"},"nodeType":"YulFunctionCall","src":"20331:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"20326:1:27"}]},{"nodeType":"YulAssignment","src":"20360:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20383:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20365:17:27"},"nodeType":"YulFunctionCall","src":"20365:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"20360:1:27"}]},{"nodeType":"YulVariableDeclaration","src":"20394:28:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20417:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"20420:1:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"20413:3:27"},"nodeType":"YulFunctionCall","src":"20413:9:27"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"20398:11:27","type":""}]},{"nodeType":"YulAssignment","src":"20431:41:27","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"20460:11:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20442:17:27"},"nodeType":"YulFunctionCall","src":"20442:30:27"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"20431:7:27"}]},{"body":{"nodeType":"YulBlock","src":"20649:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20651:16:27"},"nodeType":"YulFunctionCall","src":"20651:18:27"},"nodeType":"YulExpressionStatement","src":"20651:18:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20582:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20575:6:27"},"nodeType":"YulFunctionCall","src":"20575:9:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20605:1:27"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"20612:7:27"},{"name":"x","nodeType":"YulIdentifier","src":"20621:1:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"20608:3:27"},"nodeType":"YulFunctionCall","src":"20608:15:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20602:2:27"},"nodeType":"YulFunctionCall","src":"20602:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"20555:2:27"},"nodeType":"YulFunctionCall","src":"20555:83:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20535:6:27"},"nodeType":"YulFunctionCall","src":"20535:113:27"},"nodeType":"YulIf","src":"20532:139:27"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20299:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"20302:1:27","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"20308:7:27","type":""}],"src":"20268:410:27"},{"body":{"nodeType":"YulBlock","src":"20790:128:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20812:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"20820:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20808:3:27"},"nodeType":"YulFunctionCall","src":"20808:14:27"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"20824:34:27","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20801:6:27"},"nodeType":"YulFunctionCall","src":"20801:58:27"},"nodeType":"YulExpressionStatement","src":"20801:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20880:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"20888:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20876:3:27"},"nodeType":"YulFunctionCall","src":"20876:15:27"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"20893:17:27","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20869:6:27"},"nodeType":"YulFunctionCall","src":"20869:42:27"},"nodeType":"YulExpressionStatement","src":"20869:42:27"}]},"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20782:6:27","type":""}],"src":"20684:234:27"},{"body":{"nodeType":"YulBlock","src":"21070:220:27","statements":[{"nodeType":"YulAssignment","src":"21080:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21146:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"21151:2:27","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21087:58:27"},"nodeType":"YulFunctionCall","src":"21087:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21080:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21252:3:27"}],"functionName":{"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulIdentifier","src":"21163:88:27"},"nodeType":"YulFunctionCall","src":"21163:93:27"},"nodeType":"YulExpressionStatement","src":"21163:93:27"},{"nodeType":"YulAssignment","src":"21265:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21276:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"21281:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21272:3:27"},"nodeType":"YulFunctionCall","src":"21272:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21265:3:27"}]}]},"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21058:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21066:3:27","type":""}],"src":"20924:366:27"},{"body":{"nodeType":"YulBlock","src":"21467:248:27","statements":[{"nodeType":"YulAssignment","src":"21477:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21489:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21500:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21485:3:27"},"nodeType":"YulFunctionCall","src":"21485:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21477:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21524:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21535:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21520:3:27"},"nodeType":"YulFunctionCall","src":"21520:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21543:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"21549:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21539:3:27"},"nodeType":"YulFunctionCall","src":"21539:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21513:6:27"},"nodeType":"YulFunctionCall","src":"21513:47:27"},"nodeType":"YulExpressionStatement","src":"21513:47:27"},{"nodeType":"YulAssignment","src":"21569:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21703:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21577:124:27"},"nodeType":"YulFunctionCall","src":"21577:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21569:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21447:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21462:4:27","type":""}],"src":"21296:419:27"},{"body":{"nodeType":"YulBlock","src":"21765:147:27","statements":[{"nodeType":"YulAssignment","src":"21775:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21798:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21780:17:27"},"nodeType":"YulFunctionCall","src":"21780:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"21775:1:27"}]},{"nodeType":"YulAssignment","src":"21809:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21832:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21814:17:27"},"nodeType":"YulFunctionCall","src":"21814:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"21809:1:27"}]},{"nodeType":"YulAssignment","src":"21843:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21854:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"21857:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21850:3:27"},"nodeType":"YulFunctionCall","src":"21850:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"21843:3:27"}]},{"body":{"nodeType":"YulBlock","src":"21883:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21885:16:27"},"nodeType":"YulFunctionCall","src":"21885:18:27"},"nodeType":"YulExpressionStatement","src":"21885:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21875:1:27"},{"name":"sum","nodeType":"YulIdentifier","src":"21878:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21872:2:27"},"nodeType":"YulFunctionCall","src":"21872:10:27"},"nodeType":"YulIf","src":"21869:36:27"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21752:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"21755:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"21761:3:27","type":""}],"src":"21721:191:27"},{"body":{"nodeType":"YulBlock","src":"22024:69:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22046:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"22054:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22042:3:27"},"nodeType":"YulFunctionCall","src":"22042:14:27"},{"hexValue":"4552433230566f7465733a20667574757265206c6f6f6b7570","kind":"string","nodeType":"YulLiteral","src":"22058:27:27","type":"","value":"ERC20Votes: future lookup"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22035:6:27"},"nodeType":"YulFunctionCall","src":"22035:51:27"},"nodeType":"YulExpressionStatement","src":"22035:51:27"}]},"name":"store_literal_in_memory_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22016:6:27","type":""}],"src":"21918:175:27"},{"body":{"nodeType":"YulBlock","src":"22245:220:27","statements":[{"nodeType":"YulAssignment","src":"22255:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22321:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"22326:2:27","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22262:58:27"},"nodeType":"YulFunctionCall","src":"22262:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22255:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22427:3:27"}],"functionName":{"name":"store_literal_in_memory_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","nodeType":"YulIdentifier","src":"22338:88:27"},"nodeType":"YulFunctionCall","src":"22338:93:27"},"nodeType":"YulExpressionStatement","src":"22338:93:27"},{"nodeType":"YulAssignment","src":"22440:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22451:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"22456:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22447:3:27"},"nodeType":"YulFunctionCall","src":"22447:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22440:3:27"}]}]},"name":"abi_encode_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22233:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22241:3:27","type":""}],"src":"22099:366:27"},{"body":{"nodeType":"YulBlock","src":"22642:248:27","statements":[{"nodeType":"YulAssignment","src":"22652:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22664:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22675:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22660:3:27"},"nodeType":"YulFunctionCall","src":"22660:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22652:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22699:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22710:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22695:3:27"},"nodeType":"YulFunctionCall","src":"22695:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22718:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"22724:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22714:3:27"},"nodeType":"YulFunctionCall","src":"22714:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22688:6:27"},"nodeType":"YulFunctionCall","src":"22688:47:27"},"nodeType":"YulExpressionStatement","src":"22688:47:27"},{"nodeType":"YulAssignment","src":"22744:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22878:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22752:124:27"},"nodeType":"YulFunctionCall","src":"22752:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22744:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22622:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22637:4:27","type":""}],"src":"22471:419:27"},{"body":{"nodeType":"YulBlock","src":"23002:128:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23024:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"23032:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23020:3:27"},"nodeType":"YulFunctionCall","src":"23020:14:27"},{"hexValue":"546f6b656e20746f206265206d696e7465642073686f756c64206e6f74206578","kind":"string","nodeType":"YulLiteral","src":"23036:34:27","type":"","value":"Token to be minted should not ex"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23013:6:27"},"nodeType":"YulFunctionCall","src":"23013:58:27"},"nodeType":"YulExpressionStatement","src":"23013:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23092:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"23100:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23088:3:27"},"nodeType":"YulFunctionCall","src":"23088:15:27"},{"hexValue":"63656564204d617820737570706c79","kind":"string","nodeType":"YulLiteral","src":"23105:17:27","type":"","value":"ceed Max supply"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23081:6:27"},"nodeType":"YulFunctionCall","src":"23081:42:27"},"nodeType":"YulExpressionStatement","src":"23081:42:27"}]},"name":"store_literal_in_memory_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22994:6:27","type":""}],"src":"22896:234:27"},{"body":{"nodeType":"YulBlock","src":"23282:220:27","statements":[{"nodeType":"YulAssignment","src":"23292:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23358:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"23363:2:27","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23299:58:27"},"nodeType":"YulFunctionCall","src":"23299:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23292:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23464:3:27"}],"functionName":{"name":"store_literal_in_memory_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614","nodeType":"YulIdentifier","src":"23375:88:27"},"nodeType":"YulFunctionCall","src":"23375:93:27"},"nodeType":"YulExpressionStatement","src":"23375:93:27"},{"nodeType":"YulAssignment","src":"23477:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23488:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"23493:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23484:3:27"},"nodeType":"YulFunctionCall","src":"23484:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23477:3:27"}]}]},"name":"abi_encode_t_stringliteral_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23270:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23278:3:27","type":""}],"src":"23136:366:27"},{"body":{"nodeType":"YulBlock","src":"23679:248:27","statements":[{"nodeType":"YulAssignment","src":"23689:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23701:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23712:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23697:3:27"},"nodeType":"YulFunctionCall","src":"23697:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23689:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23736:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23747:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23732:3:27"},"nodeType":"YulFunctionCall","src":"23732:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23755:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"23761:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23751:3:27"},"nodeType":"YulFunctionCall","src":"23751:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23725:6:27"},"nodeType":"YulFunctionCall","src":"23725:47:27"},"nodeType":"YulExpressionStatement","src":"23725:47:27"},{"nodeType":"YulAssignment","src":"23781:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23915:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23789:124:27"},"nodeType":"YulFunctionCall","src":"23789:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23781:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23659:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23674:4:27","type":""}],"src":"23508:419:27"},{"body":{"nodeType":"YulBlock","src":"24039:73:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24061:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"24069:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24057:3:27"},"nodeType":"YulFunctionCall","src":"24057:14:27"},{"hexValue":"4552433230566f7465733a2062726f6b656e20636c6f636b206d6f6465","kind":"string","nodeType":"YulLiteral","src":"24073:31:27","type":"","value":"ERC20Votes: broken clock mode"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24050:6:27"},"nodeType":"YulFunctionCall","src":"24050:55:27"},"nodeType":"YulExpressionStatement","src":"24050:55:27"}]},"name":"store_literal_in_memory_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24031:6:27","type":""}],"src":"23933:179:27"},{"body":{"nodeType":"YulBlock","src":"24264:220:27","statements":[{"nodeType":"YulAssignment","src":"24274:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24340:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"24345:2:27","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24281:58:27"},"nodeType":"YulFunctionCall","src":"24281:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24274:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24446:3:27"}],"functionName":{"name":"store_literal_in_memory_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df","nodeType":"YulIdentifier","src":"24357:88:27"},"nodeType":"YulFunctionCall","src":"24357:93:27"},"nodeType":"YulExpressionStatement","src":"24357:93:27"},{"nodeType":"YulAssignment","src":"24459:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24470:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"24475:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24466:3:27"},"nodeType":"YulFunctionCall","src":"24466:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24459:3:27"}]}]},"name":"abi_encode_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24252:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24260:3:27","type":""}],"src":"24118:366:27"},{"body":{"nodeType":"YulBlock","src":"24661:248:27","statements":[{"nodeType":"YulAssignment","src":"24671:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24683:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"24694:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24679:3:27"},"nodeType":"YulFunctionCall","src":"24679:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24671:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24718:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"24729:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24714:3:27"},"nodeType":"YulFunctionCall","src":"24714:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24737:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"24743:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24733:3:27"},"nodeType":"YulFunctionCall","src":"24733:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24707:6:27"},"nodeType":"YulFunctionCall","src":"24707:47:27"},"nodeType":"YulExpressionStatement","src":"24707:47:27"},{"nodeType":"YulAssignment","src":"24763:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24897:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24771:124:27"},"nodeType":"YulFunctionCall","src":"24771:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24763:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24641:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24656:4:27","type":""}],"src":"24490:419:27"},{"body":{"nodeType":"YulBlock","src":"24943:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24960:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24963:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24953:6:27"},"nodeType":"YulFunctionCall","src":"24953:88:27"},"nodeType":"YulExpressionStatement","src":"24953:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25057:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"25060:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25050:6:27"},"nodeType":"YulFunctionCall","src":"25050:15:27"},"nodeType":"YulExpressionStatement","src":"25050:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25081:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25084:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25074:6:27"},"nodeType":"YulFunctionCall","src":"25074:15:27"},"nodeType":"YulExpressionStatement","src":"25074:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"24915:180:27"},{"body":{"nodeType":"YulBlock","src":"25129:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25146:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25149:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25139:6:27"},"nodeType":"YulFunctionCall","src":"25139:88:27"},"nodeType":"YulExpressionStatement","src":"25139:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25243:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"25246:4:27","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25236:6:27"},"nodeType":"YulFunctionCall","src":"25236:15:27"},"nodeType":"YulExpressionStatement","src":"25236:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25267:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25270:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25260:6:27"},"nodeType":"YulFunctionCall","src":"25260:15:27"},"nodeType":"YulExpressionStatement","src":"25260:15:27"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"25101:180:27"},{"body":{"nodeType":"YulBlock","src":"25393:118:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25415:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"25423:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25411:3:27"},"nodeType":"YulFunctionCall","src":"25411:14:27"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"25427:34:27","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25404:6:27"},"nodeType":"YulFunctionCall","src":"25404:58:27"},"nodeType":"YulExpressionStatement","src":"25404:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25483:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"25491:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25479:3:27"},"nodeType":"YulFunctionCall","src":"25479:15:27"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"25496:7:27","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25472:6:27"},"nodeType":"YulFunctionCall","src":"25472:32:27"},"nodeType":"YulExpressionStatement","src":"25472:32:27"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25385:6:27","type":""}],"src":"25287:224:27"},{"body":{"nodeType":"YulBlock","src":"25663:220:27","statements":[{"nodeType":"YulAssignment","src":"25673:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25739:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"25744:2:27","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25680:58:27"},"nodeType":"YulFunctionCall","src":"25680:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25673:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25845:3:27"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"25756:88:27"},"nodeType":"YulFunctionCall","src":"25756:93:27"},"nodeType":"YulExpressionStatement","src":"25756:93:27"},{"nodeType":"YulAssignment","src":"25858:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25869:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"25874:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25865:3:27"},"nodeType":"YulFunctionCall","src":"25865:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25858:3:27"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25651:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25659:3:27","type":""}],"src":"25517:366:27"},{"body":{"nodeType":"YulBlock","src":"26060:248:27","statements":[{"nodeType":"YulAssignment","src":"26070:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26082:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"26093:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26078:3:27"},"nodeType":"YulFunctionCall","src":"26078:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26070:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26117:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"26128:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26113:3:27"},"nodeType":"YulFunctionCall","src":"26113:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26136:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"26142:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26132:3:27"},"nodeType":"YulFunctionCall","src":"26132:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26106:6:27"},"nodeType":"YulFunctionCall","src":"26106:47:27"},"nodeType":"YulExpressionStatement","src":"26106:47:27"},{"nodeType":"YulAssignment","src":"26162:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26296:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26170:124:27"},"nodeType":"YulFunctionCall","src":"26170:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26162:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26040:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26055:4:27","type":""}],"src":"25889:419:27"},{"body":{"nodeType":"YulBlock","src":"26420:73:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26442:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"26450:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26438:3:27"},"nodeType":"YulFunctionCall","src":"26438:14:27"},{"hexValue":"4552433230566f7465733a207369676e61747572652065787069726564","kind":"string","nodeType":"YulLiteral","src":"26454:31:27","type":"","value":"ERC20Votes: signature expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26431:6:27"},"nodeType":"YulFunctionCall","src":"26431:55:27"},"nodeType":"YulExpressionStatement","src":"26431:55:27"}]},"name":"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26412:6:27","type":""}],"src":"26314:179:27"},{"body":{"nodeType":"YulBlock","src":"26645:220:27","statements":[{"nodeType":"YulAssignment","src":"26655:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26721:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"26726:2:27","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26662:58:27"},"nodeType":"YulFunctionCall","src":"26662:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26655:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26827:3:27"}],"functionName":{"name":"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","nodeType":"YulIdentifier","src":"26738:88:27"},"nodeType":"YulFunctionCall","src":"26738:93:27"},"nodeType":"YulExpressionStatement","src":"26738:93:27"},{"nodeType":"YulAssignment","src":"26840:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26851:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"26856:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26847:3:27"},"nodeType":"YulFunctionCall","src":"26847:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26840:3:27"}]}]},"name":"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26633:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26641:3:27","type":""}],"src":"26499:366:27"},{"body":{"nodeType":"YulBlock","src":"27042:248:27","statements":[{"nodeType":"YulAssignment","src":"27052:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27064:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27075:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27060:3:27"},"nodeType":"YulFunctionCall","src":"27060:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27052:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27099:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27110:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27095:3:27"},"nodeType":"YulFunctionCall","src":"27095:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27118:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"27124:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27114:3:27"},"nodeType":"YulFunctionCall","src":"27114:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27088:6:27"},"nodeType":"YulFunctionCall","src":"27088:47:27"},"nodeType":"YulExpressionStatement","src":"27088:47:27"},{"nodeType":"YulAssignment","src":"27144:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27278:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27152:124:27"},"nodeType":"YulFunctionCall","src":"27152:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27144:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27022:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27037:4:27","type":""}],"src":"26871:419:27"},{"body":{"nodeType":"YulBlock","src":"27478:371:27","statements":[{"nodeType":"YulAssignment","src":"27488:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27500:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27511:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27496:3:27"},"nodeType":"YulFunctionCall","src":"27496:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27488:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27569:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27582:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27593:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27578:3:27"},"nodeType":"YulFunctionCall","src":"27578:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"27525:43:27"},"nodeType":"YulFunctionCall","src":"27525:71:27"},"nodeType":"YulExpressionStatement","src":"27525:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27650:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27663:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27674:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27659:3:27"},"nodeType":"YulFunctionCall","src":"27659:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27606:43:27"},"nodeType":"YulFunctionCall","src":"27606:72:27"},"nodeType":"YulExpressionStatement","src":"27606:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27732:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27745:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27756:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27741:3:27"},"nodeType":"YulFunctionCall","src":"27741:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27688:43:27"},"nodeType":"YulFunctionCall","src":"27688:72:27"},"nodeType":"YulExpressionStatement","src":"27688:72:27"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"27814:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27827:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27838:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27823:3:27"},"nodeType":"YulFunctionCall","src":"27823:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27770:43:27"},"nodeType":"YulFunctionCall","src":"27770:72:27"},"nodeType":"YulExpressionStatement","src":"27770:72:27"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27426:9:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"27438:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27446:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27454:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27462:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27473:4:27","type":""}],"src":"27296:553:27"},{"body":{"nodeType":"YulBlock","src":"27961:69:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27983:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"27991:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27979:3:27"},"nodeType":"YulFunctionCall","src":"27979:14:27"},{"hexValue":"4552433230566f7465733a20696e76616c6964206e6f6e6365","kind":"string","nodeType":"YulLiteral","src":"27995:27:27","type":"","value":"ERC20Votes: invalid nonce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27972:6:27"},"nodeType":"YulFunctionCall","src":"27972:51:27"},"nodeType":"YulExpressionStatement","src":"27972:51:27"}]},"name":"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27953:6:27","type":""}],"src":"27855:175:27"},{"body":{"nodeType":"YulBlock","src":"28182:220:27","statements":[{"nodeType":"YulAssignment","src":"28192:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28258:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"28263:2:27","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28199:58:27"},"nodeType":"YulFunctionCall","src":"28199:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28192:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28364:3:27"}],"functionName":{"name":"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","nodeType":"YulIdentifier","src":"28275:88:27"},"nodeType":"YulFunctionCall","src":"28275:93:27"},"nodeType":"YulExpressionStatement","src":"28275:93:27"},{"nodeType":"YulAssignment","src":"28377:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28388:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"28393:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28384:3:27"},"nodeType":"YulFunctionCall","src":"28384:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28377:3:27"}]}]},"name":"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28170:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28178:3:27","type":""}],"src":"28036:366:27"},{"body":{"nodeType":"YulBlock","src":"28579:248:27","statements":[{"nodeType":"YulAssignment","src":"28589:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28601:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28612:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28597:3:27"},"nodeType":"YulFunctionCall","src":"28597:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28589:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28636:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28647:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28632:3:27"},"nodeType":"YulFunctionCall","src":"28632:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28655:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"28661:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28651:3:27"},"nodeType":"YulFunctionCall","src":"28651:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28625:6:27"},"nodeType":"YulFunctionCall","src":"28625:47:27"},"nodeType":"YulExpressionStatement","src":"28625:47:27"},{"nodeType":"YulAssignment","src":"28681:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28815:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28689:124:27"},"nodeType":"YulFunctionCall","src":"28689:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28681:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28559:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28574:4:27","type":""}],"src":"28408:419:27"},{"body":{"nodeType":"YulBlock","src":"28939:73:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28961:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"28969:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28957:3:27"},"nodeType":"YulFunctionCall","src":"28957:14:27"},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","kind":"string","nodeType":"YulLiteral","src":"28973:31:27","type":"","value":"ERC20Permit: expired deadline"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28950:6:27"},"nodeType":"YulFunctionCall","src":"28950:55:27"},"nodeType":"YulExpressionStatement","src":"28950:55:27"}]},"name":"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28931:6:27","type":""}],"src":"28833:179:27"},{"body":{"nodeType":"YulBlock","src":"29164:220:27","statements":[{"nodeType":"YulAssignment","src":"29174:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29240:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"29245:2:27","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29181:58:27"},"nodeType":"YulFunctionCall","src":"29181:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29174:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29346:3:27"}],"functionName":{"name":"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","nodeType":"YulIdentifier","src":"29257:88:27"},"nodeType":"YulFunctionCall","src":"29257:93:27"},"nodeType":"YulExpressionStatement","src":"29257:93:27"},{"nodeType":"YulAssignment","src":"29359:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29370:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"29375:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29366:3:27"},"nodeType":"YulFunctionCall","src":"29366:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29359:3:27"}]}]},"name":"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29152:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29160:3:27","type":""}],"src":"29018:366:27"},{"body":{"nodeType":"YulBlock","src":"29561:248:27","statements":[{"nodeType":"YulAssignment","src":"29571:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29583:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"29594:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29579:3:27"},"nodeType":"YulFunctionCall","src":"29579:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29571:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29618:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"29629:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29614:3:27"},"nodeType":"YulFunctionCall","src":"29614:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29637:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"29643:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29633:3:27"},"nodeType":"YulFunctionCall","src":"29633:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29607:6:27"},"nodeType":"YulFunctionCall","src":"29607:47:27"},"nodeType":"YulExpressionStatement","src":"29607:47:27"},{"nodeType":"YulAssignment","src":"29663:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29797:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29671:124:27"},"nodeType":"YulFunctionCall","src":"29671:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29663:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29541:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29556:4:27","type":""}],"src":"29390:419:27"},{"body":{"nodeType":"YulBlock","src":"30053:537:27","statements":[{"nodeType":"YulAssignment","src":"30063:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30075:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"30086:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30071:3:27"},"nodeType":"YulFunctionCall","src":"30071:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30063:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30144:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30157:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"30168:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30153:3:27"},"nodeType":"YulFunctionCall","src":"30153:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"30100:43:27"},"nodeType":"YulFunctionCall","src":"30100:71:27"},"nodeType":"YulExpressionStatement","src":"30100:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"30225:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30238:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"30249:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30234:3:27"},"nodeType":"YulFunctionCall","src":"30234:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"30181:43:27"},"nodeType":"YulFunctionCall","src":"30181:72:27"},"nodeType":"YulExpressionStatement","src":"30181:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"30307:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30320:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"30331:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30316:3:27"},"nodeType":"YulFunctionCall","src":"30316:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"30263:43:27"},"nodeType":"YulFunctionCall","src":"30263:72:27"},"nodeType":"YulExpressionStatement","src":"30263:72:27"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"30389:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30402:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"30413:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30398:3:27"},"nodeType":"YulFunctionCall","src":"30398:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"30345:43:27"},"nodeType":"YulFunctionCall","src":"30345:72:27"},"nodeType":"YulExpressionStatement","src":"30345:72:27"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"30471:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30484:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"30495:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30480:3:27"},"nodeType":"YulFunctionCall","src":"30480:19:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"30427:43:27"},"nodeType":"YulFunctionCall","src":"30427:73:27"},"nodeType":"YulExpressionStatement","src":"30427:73:27"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"30554:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30567:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"30578:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30563:3:27"},"nodeType":"YulFunctionCall","src":"30563:19:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"30510:43:27"},"nodeType":"YulFunctionCall","src":"30510:73:27"},"nodeType":"YulExpressionStatement","src":"30510:73:27"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29985:9:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"29997:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"30005:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"30013:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"30021:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30029:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30037:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30048:4:27","type":""}],"src":"29815:775:27"},{"body":{"nodeType":"YulBlock","src":"30702:74:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30724:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"30732:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30720:3:27"},"nodeType":"YulFunctionCall","src":"30720:14:27"},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"30736:32:27","type":"","value":"ERC20Permit: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30713:6:27"},"nodeType":"YulFunctionCall","src":"30713:56:27"},"nodeType":"YulExpressionStatement","src":"30713:56:27"}]},"name":"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30694:6:27","type":""}],"src":"30596:180:27"},{"body":{"nodeType":"YulBlock","src":"30928:220:27","statements":[{"nodeType":"YulAssignment","src":"30938:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31004:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"31009:2:27","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30945:58:27"},"nodeType":"YulFunctionCall","src":"30945:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30938:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31110:3:27"}],"functionName":{"name":"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","nodeType":"YulIdentifier","src":"31021:88:27"},"nodeType":"YulFunctionCall","src":"31021:93:27"},"nodeType":"YulExpressionStatement","src":"31021:93:27"},{"nodeType":"YulAssignment","src":"31123:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31134:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"31139:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31130:3:27"},"nodeType":"YulFunctionCall","src":"31130:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31123:3:27"}]}]},"name":"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30916:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30924:3:27","type":""}],"src":"30782:366:27"},{"body":{"nodeType":"YulBlock","src":"31325:248:27","statements":[{"nodeType":"YulAssignment","src":"31335:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31347:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"31358:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31343:3:27"},"nodeType":"YulFunctionCall","src":"31343:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31335:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31382:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"31393:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31378:3:27"},"nodeType":"YulFunctionCall","src":"31378:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31401:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"31407:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31397:3:27"},"nodeType":"YulFunctionCall","src":"31397:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31371:6:27"},"nodeType":"YulFunctionCall","src":"31371:47:27"},"nodeType":"YulExpressionStatement","src":"31371:47:27"},{"nodeType":"YulAssignment","src":"31427:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31561:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31435:124:27"},"nodeType":"YulFunctionCall","src":"31435:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31427:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31305:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31320:4:27","type":""}],"src":"31154:419:27"},{"body":{"nodeType":"YulBlock","src":"31624:149:27","statements":[{"nodeType":"YulAssignment","src":"31634:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"31657:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"31639:17:27"},"nodeType":"YulFunctionCall","src":"31639:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"31634:1:27"}]},{"nodeType":"YulAssignment","src":"31668:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"31691:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"31673:17:27"},"nodeType":"YulFunctionCall","src":"31673:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"31668:1:27"}]},{"nodeType":"YulAssignment","src":"31702:17:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"31714:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"31717:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31710:3:27"},"nodeType":"YulFunctionCall","src":"31710:9:27"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"31702:4:27"}]},{"body":{"nodeType":"YulBlock","src":"31744:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"31746:16:27"},"nodeType":"YulFunctionCall","src":"31746:18:27"},"nodeType":"YulExpressionStatement","src":"31746:18:27"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"31735:4:27"},{"name":"x","nodeType":"YulIdentifier","src":"31741:1:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31732:2:27"},"nodeType":"YulFunctionCall","src":"31732:11:27"},"nodeType":"YulIf","src":"31729:37:27"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"31610:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"31613:1:27","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"31619:4:27","type":""}],"src":"31579:194:27"},{"body":{"nodeType":"YulBlock","src":"31885:117:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31907:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"31915:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31903:3:27"},"nodeType":"YulFunctionCall","src":"31903:14:27"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"31919:34:27","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31896:6:27"},"nodeType":"YulFunctionCall","src":"31896:58:27"},"nodeType":"YulExpressionStatement","src":"31896:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31975:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"31983:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31971:3:27"},"nodeType":"YulFunctionCall","src":"31971:15:27"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"31988:6:27","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31964:6:27"},"nodeType":"YulFunctionCall","src":"31964:31:27"},"nodeType":"YulExpressionStatement","src":"31964:31:27"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31877:6:27","type":""}],"src":"31779:223:27"},{"body":{"nodeType":"YulBlock","src":"32154:220:27","statements":[{"nodeType":"YulAssignment","src":"32164:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32230:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"32235:2:27","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32171:58:27"},"nodeType":"YulFunctionCall","src":"32171:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32164:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32336:3:27"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"32247:88:27"},"nodeType":"YulFunctionCall","src":"32247:93:27"},"nodeType":"YulExpressionStatement","src":"32247:93:27"},{"nodeType":"YulAssignment","src":"32349:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32360:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"32365:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32356:3:27"},"nodeType":"YulFunctionCall","src":"32356:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32349:3:27"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32142:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32150:3:27","type":""}],"src":"32008:366:27"},{"body":{"nodeType":"YulBlock","src":"32551:248:27","statements":[{"nodeType":"YulAssignment","src":"32561:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32573:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"32584:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32569:3:27"},"nodeType":"YulFunctionCall","src":"32569:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32561:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32608:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"32619:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32604:3:27"},"nodeType":"YulFunctionCall","src":"32604:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32627:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"32633:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32623:3:27"},"nodeType":"YulFunctionCall","src":"32623:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32597:6:27"},"nodeType":"YulFunctionCall","src":"32597:47:27"},"nodeType":"YulExpressionStatement","src":"32597:47:27"},{"nodeType":"YulAssignment","src":"32653:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32787:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32661:124:27"},"nodeType":"YulFunctionCall","src":"32661:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32653:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32531:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32546:4:27","type":""}],"src":"32380:419:27"},{"body":{"nodeType":"YulBlock","src":"32911:115:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32933:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"32941:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32929:3:27"},"nodeType":"YulFunctionCall","src":"32929:14:27"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"32945:34:27","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32922:6:27"},"nodeType":"YulFunctionCall","src":"32922:58:27"},"nodeType":"YulExpressionStatement","src":"32922:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33001:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"33009:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32997:3:27"},"nodeType":"YulFunctionCall","src":"32997:15:27"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"33014:4:27","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32990:6:27"},"nodeType":"YulFunctionCall","src":"32990:29:27"},"nodeType":"YulExpressionStatement","src":"32990:29:27"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32903:6:27","type":""}],"src":"32805:221:27"},{"body":{"nodeType":"YulBlock","src":"33178:220:27","statements":[{"nodeType":"YulAssignment","src":"33188:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33254:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"33259:2:27","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33195:58:27"},"nodeType":"YulFunctionCall","src":"33195:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33188:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33360:3:27"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"33271:88:27"},"nodeType":"YulFunctionCall","src":"33271:93:27"},"nodeType":"YulExpressionStatement","src":"33271:93:27"},{"nodeType":"YulAssignment","src":"33373:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33384:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"33389:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33380:3:27"},"nodeType":"YulFunctionCall","src":"33380:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33373:3:27"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33166:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33174:3:27","type":""}],"src":"33032:366:27"},{"body":{"nodeType":"YulBlock","src":"33575:248:27","statements":[{"nodeType":"YulAssignment","src":"33585:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33597:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"33608:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33593:3:27"},"nodeType":"YulFunctionCall","src":"33593:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33585:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33632:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"33643:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33628:3:27"},"nodeType":"YulFunctionCall","src":"33628:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33651:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"33657:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33647:3:27"},"nodeType":"YulFunctionCall","src":"33647:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33621:6:27"},"nodeType":"YulFunctionCall","src":"33621:47:27"},"nodeType":"YulExpressionStatement","src":"33621:47:27"},{"nodeType":"YulAssignment","src":"33677:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33811:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33685:124:27"},"nodeType":"YulFunctionCall","src":"33685:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33677:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33555:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33570:4:27","type":""}],"src":"33404:419:27"},{"body":{"nodeType":"YulBlock","src":"33935:73:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33957:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"33965:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33953:3:27"},"nodeType":"YulFunctionCall","src":"33953:14:27"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"33969:31:27","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33946:6:27"},"nodeType":"YulFunctionCall","src":"33946:55:27"},"nodeType":"YulExpressionStatement","src":"33946:55:27"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33927:6:27","type":""}],"src":"33829:179:27"},{"body":{"nodeType":"YulBlock","src":"34160:220:27","statements":[{"nodeType":"YulAssignment","src":"34170:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34236:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"34241:2:27","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34177:58:27"},"nodeType":"YulFunctionCall","src":"34177:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34170:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34342:3:27"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"34253:88:27"},"nodeType":"YulFunctionCall","src":"34253:93:27"},"nodeType":"YulExpressionStatement","src":"34253:93:27"},{"nodeType":"YulAssignment","src":"34355:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34366:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"34371:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34362:3:27"},"nodeType":"YulFunctionCall","src":"34362:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34355:3:27"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34148:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34156:3:27","type":""}],"src":"34014:366:27"},{"body":{"nodeType":"YulBlock","src":"34557:248:27","statements":[{"nodeType":"YulAssignment","src":"34567:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34579:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"34590:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34575:3:27"},"nodeType":"YulFunctionCall","src":"34575:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34567:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34614:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"34625:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34610:3:27"},"nodeType":"YulFunctionCall","src":"34610:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34633:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"34639:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34629:3:27"},"nodeType":"YulFunctionCall","src":"34629:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34603:6:27"},"nodeType":"YulFunctionCall","src":"34603:47:27"},"nodeType":"YulExpressionStatement","src":"34603:47:27"},{"nodeType":"YulAssignment","src":"34659:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34793:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34667:124:27"},"nodeType":"YulFunctionCall","src":"34667:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34659:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34537:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34552:4:27","type":""}],"src":"34386:419:27"},{"body":{"nodeType":"YulBlock","src":"34917:118:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34939:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"34947:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34935:3:27"},"nodeType":"YulFunctionCall","src":"34935:14:27"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"34951:34:27","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34928:6:27"},"nodeType":"YulFunctionCall","src":"34928:58:27"},"nodeType":"YulExpressionStatement","src":"34928:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35007:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"35015:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35003:3:27"},"nodeType":"YulFunctionCall","src":"35003:15:27"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"35020:7:27","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34996:6:27"},"nodeType":"YulFunctionCall","src":"34996:32:27"},"nodeType":"YulExpressionStatement","src":"34996:32:27"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34909:6:27","type":""}],"src":"34811:224:27"},{"body":{"nodeType":"YulBlock","src":"35187:220:27","statements":[{"nodeType":"YulAssignment","src":"35197:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35263:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"35268:2:27","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35204:58:27"},"nodeType":"YulFunctionCall","src":"35204:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35197:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35369:3:27"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"35280:88:27"},"nodeType":"YulFunctionCall","src":"35280:93:27"},"nodeType":"YulExpressionStatement","src":"35280:93:27"},{"nodeType":"YulAssignment","src":"35382:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35393:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"35398:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35389:3:27"},"nodeType":"YulFunctionCall","src":"35389:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35382:3:27"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35175:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35183:3:27","type":""}],"src":"35041:366:27"},{"body":{"nodeType":"YulBlock","src":"35584:248:27","statements":[{"nodeType":"YulAssignment","src":"35594:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35606:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"35617:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35602:3:27"},"nodeType":"YulFunctionCall","src":"35602:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35594:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35641:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"35652:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35637:3:27"},"nodeType":"YulFunctionCall","src":"35637:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35660:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"35666:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35656:3:27"},"nodeType":"YulFunctionCall","src":"35656:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35630:6:27"},"nodeType":"YulFunctionCall","src":"35630:47:27"},"nodeType":"YulExpressionStatement","src":"35630:47:27"},{"nodeType":"YulAssignment","src":"35686:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35820:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35694:124:27"},"nodeType":"YulFunctionCall","src":"35694:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35686:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35564:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35579:4:27","type":""}],"src":"35413:419:27"},{"body":{"nodeType":"YulBlock","src":"35944:116:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35966:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"35974:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35962:3:27"},"nodeType":"YulFunctionCall","src":"35962:14:27"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"35978:34:27","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35955:6:27"},"nodeType":"YulFunctionCall","src":"35955:58:27"},"nodeType":"YulExpressionStatement","src":"35955:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36034:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"36042:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36030:3:27"},"nodeType":"YulFunctionCall","src":"36030:15:27"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"36047:5:27","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36023:6:27"},"nodeType":"YulFunctionCall","src":"36023:30:27"},"nodeType":"YulExpressionStatement","src":"36023:30:27"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35936:6:27","type":""}],"src":"35838:222:27"},{"body":{"nodeType":"YulBlock","src":"36212:220:27","statements":[{"nodeType":"YulAssignment","src":"36222:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36288:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"36293:2:27","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36229:58:27"},"nodeType":"YulFunctionCall","src":"36229:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36222:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36394:3:27"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"36305:88:27"},"nodeType":"YulFunctionCall","src":"36305:93:27"},"nodeType":"YulExpressionStatement","src":"36305:93:27"},{"nodeType":"YulAssignment","src":"36407:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36418:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"36423:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36414:3:27"},"nodeType":"YulFunctionCall","src":"36414:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36407:3:27"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36200:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36208:3:27","type":""}],"src":"36066:366:27"},{"body":{"nodeType":"YulBlock","src":"36609:248:27","statements":[{"nodeType":"YulAssignment","src":"36619:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36631:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"36642:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36627:3:27"},"nodeType":"YulFunctionCall","src":"36627:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36619:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36666:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"36677:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36662:3:27"},"nodeType":"YulFunctionCall","src":"36662:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36685:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"36691:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36681:3:27"},"nodeType":"YulFunctionCall","src":"36681:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36655:6:27"},"nodeType":"YulFunctionCall","src":"36655:47:27"},"nodeType":"YulExpressionStatement","src":"36655:47:27"},{"nodeType":"YulAssignment","src":"36711:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36845:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36719:124:27"},"nodeType":"YulFunctionCall","src":"36719:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36711:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36589:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36604:4:27","type":""}],"src":"36438:419:27"},{"body":{"nodeType":"YulBlock","src":"36969:119:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36991:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"36999:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36987:3:27"},"nodeType":"YulFunctionCall","src":"36987:14:27"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"37003:34:27","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36980:6:27"},"nodeType":"YulFunctionCall","src":"36980:58:27"},"nodeType":"YulExpressionStatement","src":"36980:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37059:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"37067:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37055:3:27"},"nodeType":"YulFunctionCall","src":"37055:15:27"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"37072:8:27","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37048:6:27"},"nodeType":"YulFunctionCall","src":"37048:33:27"},"nodeType":"YulExpressionStatement","src":"37048:33:27"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36961:6:27","type":""}],"src":"36863:225:27"},{"body":{"nodeType":"YulBlock","src":"37240:220:27","statements":[{"nodeType":"YulAssignment","src":"37250:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37316:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"37321:2:27","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37257:58:27"},"nodeType":"YulFunctionCall","src":"37257:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37250:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37422:3:27"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"37333:88:27"},"nodeType":"YulFunctionCall","src":"37333:93:27"},"nodeType":"YulExpressionStatement","src":"37333:93:27"},{"nodeType":"YulAssignment","src":"37435:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37446:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"37451:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37442:3:27"},"nodeType":"YulFunctionCall","src":"37442:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37435:3:27"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37228:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37236:3:27","type":""}],"src":"37094:366:27"},{"body":{"nodeType":"YulBlock","src":"37637:248:27","statements":[{"nodeType":"YulAssignment","src":"37647:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37659:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"37670:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37655:3:27"},"nodeType":"YulFunctionCall","src":"37655:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37647:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37694:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"37705:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37690:3:27"},"nodeType":"YulFunctionCall","src":"37690:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37713:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"37719:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37709:3:27"},"nodeType":"YulFunctionCall","src":"37709:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37683:6:27"},"nodeType":"YulFunctionCall","src":"37683:47:27"},"nodeType":"YulExpressionStatement","src":"37683:47:27"},{"nodeType":"YulAssignment","src":"37739:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37873:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37747:124:27"},"nodeType":"YulFunctionCall","src":"37747:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37739:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37617:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37632:4:27","type":""}],"src":"37466:419:27"},{"body":{"nodeType":"YulBlock","src":"37997:60:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38019:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"38027:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38015:3:27"},"nodeType":"YulFunctionCall","src":"38015:14:27"},{"hexValue":"5061757361626c653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"38031:18:27","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38008:6:27"},"nodeType":"YulFunctionCall","src":"38008:42:27"},"nodeType":"YulExpressionStatement","src":"38008:42:27"}]},"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37989:6:27","type":""}],"src":"37891:166:27"},{"body":{"nodeType":"YulBlock","src":"38209:220:27","statements":[{"nodeType":"YulAssignment","src":"38219:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38285:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"38290:2:27","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38226:58:27"},"nodeType":"YulFunctionCall","src":"38226:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38219:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38391:3:27"}],"functionName":{"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulIdentifier","src":"38302:88:27"},"nodeType":"YulFunctionCall","src":"38302:93:27"},"nodeType":"YulExpressionStatement","src":"38302:93:27"},{"nodeType":"YulAssignment","src":"38404:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38415:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"38420:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38411:3:27"},"nodeType":"YulFunctionCall","src":"38411:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38404:3:27"}]}]},"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38197:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38205:3:27","type":""}],"src":"38063:366:27"},{"body":{"nodeType":"YulBlock","src":"38606:248:27","statements":[{"nodeType":"YulAssignment","src":"38616:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38628:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"38639:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38624:3:27"},"nodeType":"YulFunctionCall","src":"38624:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38616:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38663:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"38674:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38659:3:27"},"nodeType":"YulFunctionCall","src":"38659:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38682:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"38688:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38678:3:27"},"nodeType":"YulFunctionCall","src":"38678:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38652:6:27"},"nodeType":"YulFunctionCall","src":"38652:47:27"},"nodeType":"YulExpressionStatement","src":"38652:47:27"},{"nodeType":"YulAssignment","src":"38708:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38842:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38716:124:27"},"nodeType":"YulFunctionCall","src":"38716:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38708:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38586:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38601:4:27","type":""}],"src":"38435:419:27"},{"body":{"nodeType":"YulBlock","src":"38966:119:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38988:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"38996:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38984:3:27"},"nodeType":"YulFunctionCall","src":"38984:14:27"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033","kind":"string","nodeType":"YulLiteral","src":"39000:34:27","type":"","value":"SafeCast: value doesn't fit in 3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38977:6:27"},"nodeType":"YulFunctionCall","src":"38977:58:27"},"nodeType":"YulExpressionStatement","src":"38977:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39056:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"39064:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39052:3:27"},"nodeType":"YulFunctionCall","src":"39052:15:27"},{"hexValue":"322062697473","kind":"string","nodeType":"YulLiteral","src":"39069:8:27","type":"","value":"2 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39045:6:27"},"nodeType":"YulFunctionCall","src":"39045:33:27"},"nodeType":"YulExpressionStatement","src":"39045:33:27"}]},"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38958:6:27","type":""}],"src":"38860:225:27"},{"body":{"nodeType":"YulBlock","src":"39237:220:27","statements":[{"nodeType":"YulAssignment","src":"39247:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39313:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"39318:2:27","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39254:58:27"},"nodeType":"YulFunctionCall","src":"39254:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39247:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39419:3:27"}],"functionName":{"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulIdentifier","src":"39330:88:27"},"nodeType":"YulFunctionCall","src":"39330:93:27"},"nodeType":"YulExpressionStatement","src":"39330:93:27"},{"nodeType":"YulAssignment","src":"39432:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39443:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"39448:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39439:3:27"},"nodeType":"YulFunctionCall","src":"39439:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39432:3:27"}]}]},"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39225:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39233:3:27","type":""}],"src":"39091:366:27"},{"body":{"nodeType":"YulBlock","src":"39634:248:27","statements":[{"nodeType":"YulAssignment","src":"39644:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39656:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"39667:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39652:3:27"},"nodeType":"YulFunctionCall","src":"39652:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39644:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39691:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"39702:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39687:3:27"},"nodeType":"YulFunctionCall","src":"39687:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39710:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"39716:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39706:3:27"},"nodeType":"YulFunctionCall","src":"39706:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39680:6:27"},"nodeType":"YulFunctionCall","src":"39680:47:27"},"nodeType":"YulExpressionStatement","src":"39680:47:27"},{"nodeType":"YulAssignment","src":"39736:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39870:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39744:124:27"},"nodeType":"YulFunctionCall","src":"39744:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39736:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39614:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39629:4:27","type":""}],"src":"39463:419:27"},{"body":{"nodeType":"YulBlock","src":"39994:119:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40016:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"40024:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40012:3:27"},"nodeType":"YulFunctionCall","src":"40012:14:27"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034","kind":"string","nodeType":"YulLiteral","src":"40028:34:27","type":"","value":"SafeCast: value doesn't fit in 4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40005:6:27"},"nodeType":"YulFunctionCall","src":"40005:58:27"},"nodeType":"YulExpressionStatement","src":"40005:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40084:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"40092:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40080:3:27"},"nodeType":"YulFunctionCall","src":"40080:15:27"},{"hexValue":"382062697473","kind":"string","nodeType":"YulLiteral","src":"40097:8:27","type":"","value":"8 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40073:6:27"},"nodeType":"YulFunctionCall","src":"40073:33:27"},"nodeType":"YulExpressionStatement","src":"40073:33:27"}]},"name":"store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39986:6:27","type":""}],"src":"39888:225:27"},{"body":{"nodeType":"YulBlock","src":"40265:220:27","statements":[{"nodeType":"YulAssignment","src":"40275:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40341:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"40346:2:27","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40282:58:27"},"nodeType":"YulFunctionCall","src":"40282:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40275:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40447:3:27"}],"functionName":{"name":"store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","nodeType":"YulIdentifier","src":"40358:88:27"},"nodeType":"YulFunctionCall","src":"40358:93:27"},"nodeType":"YulExpressionStatement","src":"40358:93:27"},{"nodeType":"YulAssignment","src":"40460:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40471:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"40476:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40467:3:27"},"nodeType":"YulFunctionCall","src":"40467:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40460:3:27"}]}]},"name":"abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40253:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40261:3:27","type":""}],"src":"40119:366:27"},{"body":{"nodeType":"YulBlock","src":"40662:248:27","statements":[{"nodeType":"YulAssignment","src":"40672:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40684:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"40695:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40680:3:27"},"nodeType":"YulFunctionCall","src":"40680:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40672:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40719:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"40730:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40715:3:27"},"nodeType":"YulFunctionCall","src":"40715:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40738:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"40744:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40734:3:27"},"nodeType":"YulFunctionCall","src":"40734:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40708:6:27"},"nodeType":"YulFunctionCall","src":"40708:47:27"},"nodeType":"YulExpressionStatement","src":"40708:47:27"},{"nodeType":"YulAssignment","src":"40764:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40898:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40772:124:27"},"nodeType":"YulFunctionCall","src":"40772:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40764:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40642:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40657:4:27","type":""}],"src":"40491:419:27"},{"body":{"nodeType":"YulBlock","src":"41030:34:27","statements":[{"nodeType":"YulAssignment","src":"41040:18:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"41055:3:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"41040:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"41002:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"41007:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"41018:11:27","type":""}],"src":"40916:148:27"},{"body":{"nodeType":"YulBlock","src":"41176:67:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41198:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"41206:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41194:3:27"},"nodeType":"YulFunctionCall","src":"41194:14:27"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"41210:25:27","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41187:6:27"},"nodeType":"YulFunctionCall","src":"41187:49:27"},"nodeType":"YulExpressionStatement","src":"41187:49:27"}]},"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41168:6:27","type":""}],"src":"41070:173:27"},{"body":{"nodeType":"YulBlock","src":"41413:238:27","statements":[{"nodeType":"YulAssignment","src":"41423:92:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41507:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"41512:2:27","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"41430:76:27"},"nodeType":"YulFunctionCall","src":"41430:85:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41423:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41613:3:27"}],"functionName":{"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulIdentifier","src":"41524:88:27"},"nodeType":"YulFunctionCall","src":"41524:93:27"},"nodeType":"YulExpressionStatement","src":"41524:93:27"},{"nodeType":"YulAssignment","src":"41626:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41637:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"41642:2:27","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41633:3:27"},"nodeType":"YulFunctionCall","src":"41633:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41626:3:27"}]}]},"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"41401:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41409:3:27","type":""}],"src":"41249:402:27"},{"body":{"nodeType":"YulBlock","src":"41767:280:27","statements":[{"nodeType":"YulVariableDeclaration","src":"41777:53:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41824:5:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"41791:32:27"},"nodeType":"YulFunctionCall","src":"41791:39:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"41781:6:27","type":""}]},{"nodeType":"YulAssignment","src":"41839:96:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41923:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"41928:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"41846:76:27"},"nodeType":"YulFunctionCall","src":"41846:89:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41839:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41983:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"41990:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41979:3:27"},"nodeType":"YulFunctionCall","src":"41979:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"41997:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"42002:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"41944:34:27"},"nodeType":"YulFunctionCall","src":"41944:65:27"},"nodeType":"YulExpressionStatement","src":"41944:65:27"},{"nodeType":"YulAssignment","src":"42018:23:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42029:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"42034:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42025:3:27"},"nodeType":"YulFunctionCall","src":"42025:16:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42018:3:27"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41748:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"41755:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41763:3:27","type":""}],"src":"41657:390:27"},{"body":{"nodeType":"YulBlock","src":"42159:61:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42181:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"42189:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42177:3:27"},"nodeType":"YulFunctionCall","src":"42177:14:27"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"42193:19:27","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42170:6:27"},"nodeType":"YulFunctionCall","src":"42170:43:27"},"nodeType":"YulExpressionStatement","src":"42170:43:27"}]},"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"42151:6:27","type":""}],"src":"42053:167:27"},{"body":{"nodeType":"YulBlock","src":"42390:238:27","statements":[{"nodeType":"YulAssignment","src":"42400:92:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42484:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"42489:2:27","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"42407:76:27"},"nodeType":"YulFunctionCall","src":"42407:85:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42400:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42590:3:27"}],"functionName":{"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulIdentifier","src":"42501:88:27"},"nodeType":"YulFunctionCall","src":"42501:93:27"},"nodeType":"YulExpressionStatement","src":"42501:93:27"},{"nodeType":"YulAssignment","src":"42603:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42614:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"42619:2:27","type":"","value":"17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42610:3:27"},"nodeType":"YulFunctionCall","src":"42610:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42603:3:27"}]}]},"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42378:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42386:3:27","type":""}],"src":"42226:402:27"},{"body":{"nodeType":"YulBlock","src":"43020:581:27","statements":[{"nodeType":"YulAssignment","src":"43031:155:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43182:3:27"}],"functionName":{"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"43038:142:27"},"nodeType":"YulFunctionCall","src":"43038:148:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"43031:3:27"}]},{"nodeType":"YulAssignment","src":"43196:102:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"43285:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"43294:3:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"43203:81:27"},"nodeType":"YulFunctionCall","src":"43203:95:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"43196:3:27"}]},{"nodeType":"YulAssignment","src":"43308:155:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43459:3:27"}],"functionName":{"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"43315:142:27"},"nodeType":"YulFunctionCall","src":"43315:148:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"43308:3:27"}]},{"nodeType":"YulAssignment","src":"43473:102:27","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"43562:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"43571:3:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"43480:81:27"},"nodeType":"YulFunctionCall","src":"43480:95:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"43473:3:27"}]},{"nodeType":"YulAssignment","src":"43585:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"43592:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"43585:3:27"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42991:3:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"42997:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"43005:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"43016:3:27","type":""}],"src":"42634:967:27"},{"body":{"nodeType":"YulBlock","src":"43817:454:27","statements":[{"nodeType":"YulAssignment","src":"43827:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43839:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"43850:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43835:3:27"},"nodeType":"YulFunctionCall","src":"43835:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43827:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"43908:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43921:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"43932:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43917:3:27"},"nodeType":"YulFunctionCall","src":"43917:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"43864:43:27"},"nodeType":"YulFunctionCall","src":"43864:71:27"},"nodeType":"YulExpressionStatement","src":"43864:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"43989:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44002:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"44013:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43998:3:27"},"nodeType":"YulFunctionCall","src":"43998:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"43945:43:27"},"nodeType":"YulFunctionCall","src":"43945:72:27"},"nodeType":"YulExpressionStatement","src":"43945:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"44071:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44084:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"44095:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44080:3:27"},"nodeType":"YulFunctionCall","src":"44080:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"44027:43:27"},"nodeType":"YulFunctionCall","src":"44027:72:27"},"nodeType":"YulExpressionStatement","src":"44027:72:27"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"44153:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44166:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"44177:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44162:3:27"},"nodeType":"YulFunctionCall","src":"44162:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"44109:43:27"},"nodeType":"YulFunctionCall","src":"44109:72:27"},"nodeType":"YulExpressionStatement","src":"44109:72:27"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"44235:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44248:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"44259:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44244:3:27"},"nodeType":"YulFunctionCall","src":"44244:19:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"44191:43:27"},"nodeType":"YulFunctionCall","src":"44191:73:27"},"nodeType":"YulExpressionStatement","src":"44191:73:27"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43757:9:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"43769:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"43777:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"43785:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"43793:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"43801:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43812:4:27","type":""}],"src":"43607:664:27"},{"body":{"nodeType":"YulBlock","src":"44305:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44322:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44325:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44315:6:27"},"nodeType":"YulFunctionCall","src":"44315:88:27"},"nodeType":"YulExpressionStatement","src":"44315:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44419:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"44422:4:27","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44412:6:27"},"nodeType":"YulFunctionCall","src":"44412:15:27"},"nodeType":"YulExpressionStatement","src":"44412:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44443:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44446:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"44436:6:27"},"nodeType":"YulFunctionCall","src":"44436:15:27"},"nodeType":"YulExpressionStatement","src":"44436:15:27"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"44277:180:27"},{"body":{"nodeType":"YulBlock","src":"44505:143:27","statements":[{"nodeType":"YulAssignment","src":"44515:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"44538:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"44520:17:27"},"nodeType":"YulFunctionCall","src":"44520:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"44515:1:27"}]},{"nodeType":"YulAssignment","src":"44549:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"44572:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"44554:17:27"},"nodeType":"YulFunctionCall","src":"44554:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"44549:1:27"}]},{"body":{"nodeType":"YulBlock","src":"44596:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"44598:16:27"},"nodeType":"YulFunctionCall","src":"44598:18:27"},"nodeType":"YulExpressionStatement","src":"44598:18:27"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"44593:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"44586:6:27"},"nodeType":"YulFunctionCall","src":"44586:9:27"},"nodeType":"YulIf","src":"44583:35:27"},{"nodeType":"YulAssignment","src":"44628:14:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"44637:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"44640:1:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"44633:3:27"},"nodeType":"YulFunctionCall","src":"44633:9:27"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"44628:1:27"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"44494:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"44497:1:27","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"44503:1:27","type":""}],"src":"44463:185:27"},{"body":{"nodeType":"YulBlock","src":"44760:64:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44782:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"44790:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44778:3:27"},"nodeType":"YulFunctionCall","src":"44778:14:27"},{"hexValue":"5061757361626c653a206e6f7420706175736564","kind":"string","nodeType":"YulLiteral","src":"44794:22:27","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44771:6:27"},"nodeType":"YulFunctionCall","src":"44771:46:27"},"nodeType":"YulExpressionStatement","src":"44771:46:27"}]},"name":"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44752:6:27","type":""}],"src":"44654:170:27"},{"body":{"nodeType":"YulBlock","src":"44976:220:27","statements":[{"nodeType":"YulAssignment","src":"44986:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45052:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"45057:2:27","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44993:58:27"},"nodeType":"YulFunctionCall","src":"44993:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"44986:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45158:3:27"}],"functionName":{"name":"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","nodeType":"YulIdentifier","src":"45069:88:27"},"nodeType":"YulFunctionCall","src":"45069:93:27"},"nodeType":"YulExpressionStatement","src":"45069:93:27"},{"nodeType":"YulAssignment","src":"45171:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45182:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"45187:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45178:3:27"},"nodeType":"YulFunctionCall","src":"45178:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"45171:3:27"}]}]},"name":"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"44964:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"44972:3:27","type":""}],"src":"44830:366:27"},{"body":{"nodeType":"YulBlock","src":"45373:248:27","statements":[{"nodeType":"YulAssignment","src":"45383:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45395:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"45406:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45391:3:27"},"nodeType":"YulFunctionCall","src":"45391:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45383:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45430:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"45441:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45426:3:27"},"nodeType":"YulFunctionCall","src":"45426:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45449:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"45455:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45445:3:27"},"nodeType":"YulFunctionCall","src":"45445:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45419:6:27"},"nodeType":"YulFunctionCall","src":"45419:47:27"},"nodeType":"YulExpressionStatement","src":"45419:47:27"},{"nodeType":"YulAssignment","src":"45475:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45609:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45483:124:27"},"nodeType":"YulFunctionCall","src":"45483:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45475:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45353:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45368:4:27","type":""}],"src":"45202:419:27"},{"body":{"nodeType":"YulBlock","src":"45733:129:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45755:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"45763:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45751:3:27"},"nodeType":"YulFunctionCall","src":"45751:14:27"},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f","kind":"string","nodeType":"YulLiteral","src":"45767:34:27","type":"","value":"ERC20Votes: total supply risks o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45744:6:27"},"nodeType":"YulFunctionCall","src":"45744:58:27"},"nodeType":"YulExpressionStatement","src":"45744:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45823:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"45831:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45819:3:27"},"nodeType":"YulFunctionCall","src":"45819:15:27"},{"hexValue":"766572666c6f77696e6720766f746573","kind":"string","nodeType":"YulLiteral","src":"45836:18:27","type":"","value":"verflowing votes"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45812:6:27"},"nodeType":"YulFunctionCall","src":"45812:43:27"},"nodeType":"YulExpressionStatement","src":"45812:43:27"}]},"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45725:6:27","type":""}],"src":"45627:235:27"},{"body":{"nodeType":"YulBlock","src":"46014:220:27","statements":[{"nodeType":"YulAssignment","src":"46024:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46090:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"46095:2:27","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46031:58:27"},"nodeType":"YulFunctionCall","src":"46031:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46024:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46196:3:27"}],"functionName":{"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulIdentifier","src":"46107:88:27"},"nodeType":"YulFunctionCall","src":"46107:93:27"},"nodeType":"YulExpressionStatement","src":"46107:93:27"},{"nodeType":"YulAssignment","src":"46209:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46220:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"46225:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46216:3:27"},"nodeType":"YulFunctionCall","src":"46216:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46209:3:27"}]}]},"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"46002:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"46010:3:27","type":""}],"src":"45868:366:27"},{"body":{"nodeType":"YulBlock","src":"46411:248:27","statements":[{"nodeType":"YulAssignment","src":"46421:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46433:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"46444:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46429:3:27"},"nodeType":"YulFunctionCall","src":"46429:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46421:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46468:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"46479:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46464:3:27"},"nodeType":"YulFunctionCall","src":"46464:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46487:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"46493:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46483:3:27"},"nodeType":"YulFunctionCall","src":"46483:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46457:6:27"},"nodeType":"YulFunctionCall","src":"46457:47:27"},"nodeType":"YulExpressionStatement","src":"46457:47:27"},{"nodeType":"YulAssignment","src":"46513:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46647:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46521:124:27"},"nodeType":"YulFunctionCall","src":"46521:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46513:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46391:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46406:4:27","type":""}],"src":"46240:419:27"},{"body":{"nodeType":"YulBlock","src":"46791:206:27","statements":[{"nodeType":"YulAssignment","src":"46801:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46813:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"46824:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46809:3:27"},"nodeType":"YulFunctionCall","src":"46809:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46801:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"46881:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46894:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"46905:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46890:3:27"},"nodeType":"YulFunctionCall","src":"46890:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"46837:43:27"},"nodeType":"YulFunctionCall","src":"46837:71:27"},"nodeType":"YulExpressionStatement","src":"46837:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"46962:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46975:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"46986:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46971:3:27"},"nodeType":"YulFunctionCall","src":"46971:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"46918:43:27"},"nodeType":"YulFunctionCall","src":"46918:72:27"},"nodeType":"YulExpressionStatement","src":"46918:72:27"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46755:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"46767:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"46775:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46786:4:27","type":""}],"src":"46665:332:27"},{"body":{"nodeType":"YulBlock","src":"47181:367:27","statements":[{"nodeType":"YulAssignment","src":"47191:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47203:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"47214:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47199:3:27"},"nodeType":"YulFunctionCall","src":"47199:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47191:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"47272:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47285:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"47296:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47281:3:27"},"nodeType":"YulFunctionCall","src":"47281:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"47228:43:27"},"nodeType":"YulFunctionCall","src":"47228:71:27"},"nodeType":"YulExpressionStatement","src":"47228:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"47349:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47362:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"47373:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47358:3:27"},"nodeType":"YulFunctionCall","src":"47358:18:27"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"47309:39:27"},"nodeType":"YulFunctionCall","src":"47309:68:27"},"nodeType":"YulExpressionStatement","src":"47309:68:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"47431:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47444:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"47455:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47440:3:27"},"nodeType":"YulFunctionCall","src":"47440:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"47387:43:27"},"nodeType":"YulFunctionCall","src":"47387:72:27"},"nodeType":"YulExpressionStatement","src":"47387:72:27"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"47513:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47526:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"47537:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47522:3:27"},"nodeType":"YulFunctionCall","src":"47522:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"47469:43:27"},"nodeType":"YulFunctionCall","src":"47469:72:27"},"nodeType":"YulExpressionStatement","src":"47469:72:27"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47129:9:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"47141:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"47149:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"47157:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"47165:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47176:4:27","type":""}],"src":"47003:545:27"},{"body":{"nodeType":"YulBlock","src":"47582:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47599:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"47602:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47592:6:27"},"nodeType":"YulFunctionCall","src":"47592:88:27"},"nodeType":"YulExpressionStatement","src":"47592:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47696:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"47699:4:27","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47689:6:27"},"nodeType":"YulFunctionCall","src":"47689:15:27"},"nodeType":"YulExpressionStatement","src":"47689:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47720:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"47723:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"47713:6:27"},"nodeType":"YulFunctionCall","src":"47713:15:27"},"nodeType":"YulExpressionStatement","src":"47713:15:27"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"47554:180:27"},{"body":{"nodeType":"YulBlock","src":"47846:68:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"47868:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"47876:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47864:3:27"},"nodeType":"YulFunctionCall","src":"47864:14:27"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"47880:26:27","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47857:6:27"},"nodeType":"YulFunctionCall","src":"47857:50:27"},"nodeType":"YulExpressionStatement","src":"47857:50:27"}]},"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"47838:6:27","type":""}],"src":"47740:174:27"},{"body":{"nodeType":"YulBlock","src":"48066:220:27","statements":[{"nodeType":"YulAssignment","src":"48076:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48142:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"48147:2:27","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"48083:58:27"},"nodeType":"YulFunctionCall","src":"48083:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"48076:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48248:3:27"}],"functionName":{"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulIdentifier","src":"48159:88:27"},"nodeType":"YulFunctionCall","src":"48159:93:27"},"nodeType":"YulExpressionStatement","src":"48159:93:27"},{"nodeType":"YulAssignment","src":"48261:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48272:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"48277:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48268:3:27"},"nodeType":"YulFunctionCall","src":"48268:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"48261:3:27"}]}]},"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"48054:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"48062:3:27","type":""}],"src":"47920:366:27"},{"body":{"nodeType":"YulBlock","src":"48463:248:27","statements":[{"nodeType":"YulAssignment","src":"48473:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48485:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"48496:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48481:3:27"},"nodeType":"YulFunctionCall","src":"48481:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48473:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48520:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"48531:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48516:3:27"},"nodeType":"YulFunctionCall","src":"48516:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"48539:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"48545:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"48535:3:27"},"nodeType":"YulFunctionCall","src":"48535:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48509:6:27"},"nodeType":"YulFunctionCall","src":"48509:47:27"},"nodeType":"YulExpressionStatement","src":"48509:47:27"},{"nodeType":"YulAssignment","src":"48565:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"48699:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"48573:124:27"},"nodeType":"YulFunctionCall","src":"48573:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48565:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"48443:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"48458:4:27","type":""}],"src":"48292:419:27"},{"body":{"nodeType":"YulBlock","src":"48823:75:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48845:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"48853:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48841:3:27"},"nodeType":"YulFunctionCall","src":"48841:14:27"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"48857:33:27","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48834:6:27"},"nodeType":"YulFunctionCall","src":"48834:57:27"},"nodeType":"YulExpressionStatement","src":"48834:57:27"}]},"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"48815:6:27","type":""}],"src":"48717:181:27"},{"body":{"nodeType":"YulBlock","src":"49050:220:27","statements":[{"nodeType":"YulAssignment","src":"49060:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49126:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"49131:2:27","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"49067:58:27"},"nodeType":"YulFunctionCall","src":"49067:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"49060:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49232:3:27"}],"functionName":{"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulIdentifier","src":"49143:88:27"},"nodeType":"YulFunctionCall","src":"49143:93:27"},"nodeType":"YulExpressionStatement","src":"49143:93:27"},{"nodeType":"YulAssignment","src":"49245:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49256:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"49261:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49252:3:27"},"nodeType":"YulFunctionCall","src":"49252:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"49245:3:27"}]}]},"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"49038:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"49046:3:27","type":""}],"src":"48904:366:27"},{"body":{"nodeType":"YulBlock","src":"49447:248:27","statements":[{"nodeType":"YulAssignment","src":"49457:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49469:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"49480:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49465:3:27"},"nodeType":"YulFunctionCall","src":"49465:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49457:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49504:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"49515:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49500:3:27"},"nodeType":"YulFunctionCall","src":"49500:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"49523:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"49529:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"49519:3:27"},"nodeType":"YulFunctionCall","src":"49519:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49493:6:27"},"nodeType":"YulFunctionCall","src":"49493:47:27"},"nodeType":"YulExpressionStatement","src":"49493:47:27"},{"nodeType":"YulAssignment","src":"49549:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"49683:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"49557:124:27"},"nodeType":"YulFunctionCall","src":"49557:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49549:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49427:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"49442:4:27","type":""}],"src":"49276:419:27"},{"body":{"nodeType":"YulBlock","src":"49807:115:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49829:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"49837:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49825:3:27"},"nodeType":"YulFunctionCall","src":"49825:14:27"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"49841:34:27","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49818:6:27"},"nodeType":"YulFunctionCall","src":"49818:58:27"},"nodeType":"YulExpressionStatement","src":"49818:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49897:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"49905:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49893:3:27"},"nodeType":"YulFunctionCall","src":"49893:15:27"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"49910:4:27","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49886:6:27"},"nodeType":"YulFunctionCall","src":"49886:29:27"},"nodeType":"YulExpressionStatement","src":"49886:29:27"}]},"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"49799:6:27","type":""}],"src":"49701:221:27"},{"body":{"nodeType":"YulBlock","src":"50074:220:27","statements":[{"nodeType":"YulAssignment","src":"50084:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50150:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"50155:2:27","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"50091:58:27"},"nodeType":"YulFunctionCall","src":"50091:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"50084:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50256:3:27"}],"functionName":{"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulIdentifier","src":"50167:88:27"},"nodeType":"YulFunctionCall","src":"50167:93:27"},"nodeType":"YulExpressionStatement","src":"50167:93:27"},{"nodeType":"YulAssignment","src":"50269:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50280:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"50285:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50276:3:27"},"nodeType":"YulFunctionCall","src":"50276:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"50269:3:27"}]}]},"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"50062:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"50070:3:27","type":""}],"src":"49928:366:27"},{"body":{"nodeType":"YulBlock","src":"50471:248:27","statements":[{"nodeType":"YulAssignment","src":"50481:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50493:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"50504:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50489:3:27"},"nodeType":"YulFunctionCall","src":"50489:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50481:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50528:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"50539:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50524:3:27"},"nodeType":"YulFunctionCall","src":"50524:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"50547:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"50553:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"50543:3:27"},"nodeType":"YulFunctionCall","src":"50543:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50517:6:27"},"nodeType":"YulFunctionCall","src":"50517:47:27"},"nodeType":"YulExpressionStatement","src":"50517:47:27"},{"nodeType":"YulAssignment","src":"50573:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"50707:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"50581:124:27"},"nodeType":"YulFunctionCall","src":"50581:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50573:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50451:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"50466:4:27","type":""}],"src":"50300:419:27"},{"body":{"nodeType":"YulBlock","src":"50768:128:27","statements":[{"nodeType":"YulAssignment","src":"50778:33:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50805:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"50787:17:27"},"nodeType":"YulFunctionCall","src":"50787:24:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"50778:5:27"}]},{"body":{"nodeType":"YulBlock","src":"50839:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"50841:16:27"},"nodeType":"YulFunctionCall","src":"50841:18:27"},"nodeType":"YulExpressionStatement","src":"50841:18:27"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50826:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"50833:4:27","type":"","value":"0x00"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"50823:2:27"},"nodeType":"YulFunctionCall","src":"50823:15:27"},"nodeType":"YulIf","src":"50820:41:27"},{"nodeType":"YulAssignment","src":"50870:20:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50881:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"50888:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"50877:3:27"},"nodeType":"YulFunctionCall","src":"50877:13:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"50870:3:27"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"50754:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"50764:3:27","type":""}],"src":"50725:171:27"},{"body":{"nodeType":"YulBlock","src":"51008:76:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"51030:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"51038:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51026:3:27"},"nodeType":"YulFunctionCall","src":"51026:14:27"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"51042:34:27","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51019:6:27"},"nodeType":"YulFunctionCall","src":"51019:58:27"},"nodeType":"YulExpressionStatement","src":"51019:58:27"}]},"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"51000:6:27","type":""}],"src":"50902:182:27"},{"body":{"nodeType":"YulBlock","src":"51236:220:27","statements":[{"nodeType":"YulAssignment","src":"51246:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51312:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"51317:2:27","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"51253:58:27"},"nodeType":"YulFunctionCall","src":"51253:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"51246:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51418:3:27"}],"functionName":{"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulIdentifier","src":"51329:88:27"},"nodeType":"YulFunctionCall","src":"51329:93:27"},"nodeType":"YulExpressionStatement","src":"51329:93:27"},{"nodeType":"YulAssignment","src":"51431:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51442:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"51447:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51438:3:27"},"nodeType":"YulFunctionCall","src":"51438:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"51431:3:27"}]}]},"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"51224:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"51232:3:27","type":""}],"src":"51090:366:27"},{"body":{"nodeType":"YulBlock","src":"51633:248:27","statements":[{"nodeType":"YulAssignment","src":"51643:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51655:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"51666:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51651:3:27"},"nodeType":"YulFunctionCall","src":"51651:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51643:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51690:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"51701:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51686:3:27"},"nodeType":"YulFunctionCall","src":"51686:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51709:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"51715:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"51705:3:27"},"nodeType":"YulFunctionCall","src":"51705:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51679:6:27"},"nodeType":"YulFunctionCall","src":"51679:47:27"},"nodeType":"YulExpressionStatement","src":"51679:47:27"},{"nodeType":"YulAssignment","src":"51735:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51869:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"51743:124:27"},"nodeType":"YulFunctionCall","src":"51743:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51735:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"51613:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"51628:4:27","type":""}],"src":"51462:419:27"},{"body":{"nodeType":"YulBlock","src":"51993:75:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"52015:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"52023:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52011:3:27"},"nodeType":"YulFunctionCall","src":"52011:14:27"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"52027:33:27","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52004:6:27"},"nodeType":"YulFunctionCall","src":"52004:57:27"},"nodeType":"YulExpressionStatement","src":"52004:57:27"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"51985:6:27","type":""}],"src":"51887:181:27"},{"body":{"nodeType":"YulBlock","src":"52220:220:27","statements":[{"nodeType":"YulAssignment","src":"52230:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52296:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"52301:2:27","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"52237:58:27"},"nodeType":"YulFunctionCall","src":"52237:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"52230:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52402:3:27"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"52313:88:27"},"nodeType":"YulFunctionCall","src":"52313:93:27"},"nodeType":"YulExpressionStatement","src":"52313:93:27"},{"nodeType":"YulAssignment","src":"52415:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52426:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"52431:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52422:3:27"},"nodeType":"YulFunctionCall","src":"52422:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"52415:3:27"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"52208:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"52216:3:27","type":""}],"src":"52074:366:27"},{"body":{"nodeType":"YulBlock","src":"52617:248:27","statements":[{"nodeType":"YulAssignment","src":"52627:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52639:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"52650:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52635:3:27"},"nodeType":"YulFunctionCall","src":"52635:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52627:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52674:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"52685:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52670:3:27"},"nodeType":"YulFunctionCall","src":"52670:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"52693:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"52699:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"52689:3:27"},"nodeType":"YulFunctionCall","src":"52689:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52663:6:27"},"nodeType":"YulFunctionCall","src":"52663:47:27"},"nodeType":"YulExpressionStatement","src":"52663:47:27"},{"nodeType":"YulAssignment","src":"52719:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"52853:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"52727:124:27"},"nodeType":"YulFunctionCall","src":"52727:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52719:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"52597:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"52612:4:27","type":""}],"src":"52446:419:27"},{"body":{"nodeType":"YulBlock","src":"52977:114:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"52999:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"53007:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52995:3:27"},"nodeType":"YulFunctionCall","src":"52995:14:27"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"53011:34:27","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52988:6:27"},"nodeType":"YulFunctionCall","src":"52988:58:27"},"nodeType":"YulExpressionStatement","src":"52988:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"53067:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"53075:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53063:3:27"},"nodeType":"YulFunctionCall","src":"53063:15:27"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"53080:3:27","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53056:6:27"},"nodeType":"YulFunctionCall","src":"53056:28:27"},"nodeType":"YulExpressionStatement","src":"53056:28:27"}]},"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"52969:6:27","type":""}],"src":"52871:220:27"},{"body":{"nodeType":"YulBlock","src":"53243:220:27","statements":[{"nodeType":"YulAssignment","src":"53253:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53319:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"53324:2:27","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"53260:58:27"},"nodeType":"YulFunctionCall","src":"53260:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"53253:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53425:3:27"}],"functionName":{"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulIdentifier","src":"53336:88:27"},"nodeType":"YulFunctionCall","src":"53336:93:27"},"nodeType":"YulExpressionStatement","src":"53336:93:27"},{"nodeType":"YulAssignment","src":"53438:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53449:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"53454:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53445:3:27"},"nodeType":"YulFunctionCall","src":"53445:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"53438:3:27"}]}]},"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"53231:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"53239:3:27","type":""}],"src":"53097:366:27"},{"body":{"nodeType":"YulBlock","src":"53640:248:27","statements":[{"nodeType":"YulAssignment","src":"53650:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53662:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"53673:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53658:3:27"},"nodeType":"YulFunctionCall","src":"53658:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"53650:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53697:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"53708:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53693:3:27"},"nodeType":"YulFunctionCall","src":"53693:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"53716:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"53722:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"53712:3:27"},"nodeType":"YulFunctionCall","src":"53712:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53686:6:27"},"nodeType":"YulFunctionCall","src":"53686:47:27"},"nodeType":"YulExpressionStatement","src":"53686:47:27"},{"nodeType":"YulAssignment","src":"53742:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"53876:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"53750:124:27"},"nodeType":"YulFunctionCall","src":"53750:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"53742:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"53620:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"53635:4:27","type":""}],"src":"53469:419:27"},{"body":{"nodeType":"YulBlock","src":"54000:115:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"54022:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"54030:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54018:3:27"},"nodeType":"YulFunctionCall","src":"54018:14:27"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"54034:34:27","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54011:6:27"},"nodeType":"YulFunctionCall","src":"54011:58:27"},"nodeType":"YulExpressionStatement","src":"54011:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"54090:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"54098:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54086:3:27"},"nodeType":"YulFunctionCall","src":"54086:15:27"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"54103:4:27","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54079:6:27"},"nodeType":"YulFunctionCall","src":"54079:29:27"},"nodeType":"YulExpressionStatement","src":"54079:29:27"}]},"name":"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"53992:6:27","type":""}],"src":"53894:221:27"},{"body":{"nodeType":"YulBlock","src":"54267:220:27","statements":[{"nodeType":"YulAssignment","src":"54277:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54343:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"54348:2:27","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"54284:58:27"},"nodeType":"YulFunctionCall","src":"54284:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"54277:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54449:3:27"}],"functionName":{"name":"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","nodeType":"YulIdentifier","src":"54360:88:27"},"nodeType":"YulFunctionCall","src":"54360:93:27"},"nodeType":"YulExpressionStatement","src":"54360:93:27"},{"nodeType":"YulAssignment","src":"54462:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54473:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"54478:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54469:3:27"},"nodeType":"YulFunctionCall","src":"54469:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"54462:3:27"}]}]},"name":"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"54255:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"54263:3:27","type":""}],"src":"54121:366:27"},{"body":{"nodeType":"YulBlock","src":"54664:248:27","statements":[{"nodeType":"YulAssignment","src":"54674:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54686:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"54697:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54682:3:27"},"nodeType":"YulFunctionCall","src":"54682:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"54674:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54721:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"54732:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54717:3:27"},"nodeType":"YulFunctionCall","src":"54717:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"54740:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"54746:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"54736:3:27"},"nodeType":"YulFunctionCall","src":"54736:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54710:6:27"},"nodeType":"YulFunctionCall","src":"54710:47:27"},"nodeType":"YulExpressionStatement","src":"54710:47:27"},{"nodeType":"YulAssignment","src":"54766:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"54900:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"54774:124:27"},"nodeType":"YulFunctionCall","src":"54774:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"54766:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"54644:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"54659:4:27","type":""}],"src":"54493:419:27"},{"body":{"nodeType":"YulBlock","src":"55024:120:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"55046:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"55054:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55042:3:27"},"nodeType":"YulFunctionCall","src":"55042:14:27"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032","kind":"string","nodeType":"YulLiteral","src":"55058:34:27","type":"","value":"SafeCast: value doesn't fit in 2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55035:6:27"},"nodeType":"YulFunctionCall","src":"55035:58:27"},"nodeType":"YulExpressionStatement","src":"55035:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"55114:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"55122:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55110:3:27"},"nodeType":"YulFunctionCall","src":"55110:15:27"},{"hexValue":"32342062697473","kind":"string","nodeType":"YulLiteral","src":"55127:9:27","type":"","value":"24 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55103:6:27"},"nodeType":"YulFunctionCall","src":"55103:34:27"},"nodeType":"YulExpressionStatement","src":"55103:34:27"}]},"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"55016:6:27","type":""}],"src":"54918:226:27"},{"body":{"nodeType":"YulBlock","src":"55296:220:27","statements":[{"nodeType":"YulAssignment","src":"55306:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55372:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"55377:2:27","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"55313:58:27"},"nodeType":"YulFunctionCall","src":"55313:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"55306:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55478:3:27"}],"functionName":{"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulIdentifier","src":"55389:88:27"},"nodeType":"YulFunctionCall","src":"55389:93:27"},"nodeType":"YulExpressionStatement","src":"55389:93:27"},{"nodeType":"YulAssignment","src":"55491:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55502:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"55507:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55498:3:27"},"nodeType":"YulFunctionCall","src":"55498:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"55491:3:27"}]}]},"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"55284:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"55292:3:27","type":""}],"src":"55150:366:27"},{"body":{"nodeType":"YulBlock","src":"55693:248:27","statements":[{"nodeType":"YulAssignment","src":"55703:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55715:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"55726:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55711:3:27"},"nodeType":"YulFunctionCall","src":"55711:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"55703:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55750:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"55761:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55746:3:27"},"nodeType":"YulFunctionCall","src":"55746:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"55769:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"55775:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"55765:3:27"},"nodeType":"YulFunctionCall","src":"55765:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55739:6:27"},"nodeType":"YulFunctionCall","src":"55739:47:27"},"nodeType":"YulExpressionStatement","src":"55739:47:27"},{"nodeType":"YulAssignment","src":"55795:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"55929:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"55803:124:27"},"nodeType":"YulFunctionCall","src":"55803:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"55795:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"55673:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"55688:4:27","type":""}],"src":"55522:419:27"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function cleanup_t_uint48(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffff)\n    }\n\n    function abi_encode_t_uint48_to_t_uint48_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint48(value))\n    }\n\n    function abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function cleanup_t_uint224(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint224_to_t_uint224(value, pos) {\n        mstore(pos, cleanup_t_uint224(value))\n    }\n\n    // struct ERC20Votes.Checkpoint -> struct ERC20Votes.Checkpoint\n    function abi_encode_t_struct$_Checkpoint_$1521_memory_ptr_to_t_struct$_Checkpoint_$1521_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // fromBlock\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // votes\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint224_to_t_uint224(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Checkpoint_$1521_memory_ptr__to_t_struct$_Checkpoint_$1521_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_Checkpoint_$1521_memory_ptr_to_t_struct$_Checkpoint_$1521_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: future lookup\")\n\n    }\n\n    function abi_encode_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token to be minted should not ex\")\n\n        mstore(add(memPtr, 32), \"ceed Max supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7fec8cf84f292156dd6cf63ff6c3d028ba306f1b171363af4fbbfce51a8b4614_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: broken clock mode\")\n\n    }\n\n    function abi_encode_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: signature expired\")\n\n    }\n\n    function abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: invalid nonce\")\n\n    }\n\n    function abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Permit: expired deadline\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Permit: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 3\")\n\n        mstore(add(memPtr, 32), \"2 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 4\")\n\n        mstore(add(memPtr, 32), \"8 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: total supply risks o\")\n\n        mstore(add(memPtr, 32), \"verflowing votes\")\n\n    }\n\n    function abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature length\")\n\n    }\n\n    function abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature 's' val\")\n\n        mstore(add(memPtr, 32), \"ue\")\n\n    }\n\n    function abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn amount exceeds balan\")\n\n        mstore(add(memPtr, 32), \"ce\")\n\n    }\n\n    function abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 2\")\n\n        mstore(add(memPtr, 32), \"24 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3333":[{"length":32,"start":8060}],"3335":[{"length":32,"start":8019}],"3337":[{"length":32,"start":7933}],"3339":[{"length":32,"start":10218}],"3341":[{"length":32,"start":10251}],"3344":[{"length":32,"start":4239}],"3347":[{"length":32,"start":4291}]},"linkReferences":{},"object":"608060405234801561000f575f80fd5b5060043610610251575f3560e01c80636fcfff45116101445780639ab24eb0116100c1578063d505accf11610085578063d505accf1461074d578063d539139314610769578063d547741f14610787578063dd62ed3e146107a3578063e63ab1e9146107d3578063f1127ed8146107f157610251565b80639ab24eb014610683578063a217fddf146106b3578063a457c2d7146106d1578063a9059cbb14610701578063c3cda5201461073157610251565b806384b0196e1161010857806384b0196e146105c35780638e539e8c146105e757806391d148541461061757806391ddadf41461064757806395d89b411461066557610251565b80636fcfff451461050d57806370a082311461053d57806379cc67901461056d5780637ecebe00146105895780638456cb59146105b957610251565b806336568abe116101d257806342966c681161019657806342966c68146104695780634bf5d7e914610485578063587cde1e146104a35780635c19a95c146104d35780635c975abb146104ef57610251565b806336568abe146103c757806339509351146103e35780633a46b1a8146104135780633f4ba83a1461044357806340c10f191461044d57610251565b8063248a9ca311610219578063248a9ca3146103215780632f2ff15d14610351578063313ce5671461036d57806332cb6b0c1461038b5780633644e515146103a957610251565b806301ffc9a71461025557806306fdde0314610285578063095ea7b3146102a357806318160ddd146102d357806323b872dd146102f1575b5f80fd5b61026f600480360381019061026a9190613a3f565b610821565b60405161027c9190613a84565b60405180910390f35b61028d61089a565b60405161029a9190613b27565b60405180910390f35b6102bd60048036038101906102b89190613bd4565b61092a565b6040516102ca9190613a84565b60405180910390f35b6102db61094c565b6040516102e89190613c21565b60405180910390f35b61030b60048036038101906103069190613c3a565b610955565b6040516103189190613a84565b60405180910390f35b61033b60048036038101906103369190613cbd565b610983565b6040516103489190613cf7565b60405180910390f35b61036b60048036038101906103669190613d10565b6109a0565b005b6103756109c1565b6040516103829190613d69565b60405180910390f35b610393610a05565b6040516103a09190613c21565b60405180910390f35b6103b1610a25565b6040516103be9190613cf7565b60405180910390f35b6103e160048036038101906103dc9190613d10565b610a33565b005b6103fd60048036038101906103f89190613bd4565b610ab6565b60405161040a9190613a84565b60405180910390f35b61042d60048036038101906104289190613bd4565b610aec565b60405161043a9190613c21565b60405180910390f35b61044b610b8c565b005b61046760048036038101906104629190613bd4565b610c25565b005b610483600480360381019061047e9190613d82565b610db3565b005b61048d610dc7565b60405161049a9190613b27565b60405180910390f35b6104bd60048036038101906104b89190613dad565b610e55565b6040516104ca9190613de7565b60405180910390f35b6104ed60048036038101906104e89190613dad565b610eba565b005b6104f7610ece565b6040516105049190613a84565b60405180910390f35b61052760048036038101906105229190613dad565b610ee3565b6040516105349190613e1e565b60405180910390f35b61055760048036038101906105529190613dad565b610f34565b6040516105649190613c21565b60405180910390f35b61058760048036038101906105829190613bd4565b610f79565b005b6105a3600480360381019061059e9190613dad565b610f99565b6040516105b09190613c21565b60405180910390f35b6105c1610fe6565b005b6105cb61107f565b6040516105de9796959493929190613f28565b60405180910390f35b61060160048036038101906105fc9190613d82565b61117c565b60405161060e9190613c21565b60405180910390f35b610631600480360381019061062c9190613d10565b6111e0565b60405161063e9190613a84565b60405180910390f35b61064f611244565b60405161065c9190613fca565b60405180910390f35b61066d611253565b60405161067a9190613b27565b60405180910390f35b61069d60048036038101906106989190613dad565b6112e3565b6040516106aa9190613c21565b60405180910390f35b6106bb6113e1565b6040516106c89190613cf7565b60405180910390f35b6106eb60048036038101906106e69190613bd4565b6113e7565b6040516106f89190613a84565b60405180910390f35b61071b60048036038101906107169190613bd4565b61145c565b6040516107289190613a84565b60405180910390f35b61074b6004803603810190610746919061400d565b61147e565b005b61076760048036038101906107629190614096565b611581565b005b6107716116c0565b60405161077e9190613cf7565b60405180910390f35b6107a1600480360381019061079c9190613d10565b6116e4565b005b6107bd60048036038101906107b89190614133565b611705565b6040516107ca9190613c21565b60405180910390f35b6107db611787565b6040516107e89190613cf7565b60405180910390f35b61080b6004803603810190610806919061419b565b6117ab565b604051610818919061424b565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806108935750610892826118de565b5b9050919050565b6060600380546108a990614291565b80601f01602080910402602001604051908101604052809291908181526020018280546108d590614291565b80156109205780601f106108f757610100808354040283529160200191610920565b820191905f5260205f20905b81548152906001019060200180831161090357829003601f168201915b5050505050905090565b5f80610934611947565b905061094181858561194e565b600191505092915050565b5f600254905090565b5f8061095f611947565b905061096c858285611b11565b610977858585611b9c565b60019150509392505050565b5f600d5f8381526020019081526020015f20600101549050919050565b6109a982610983565b6109b281611e08565b6109bc8383611e1c565b505050565b5f6109d66711a8dfff866ee39760c01b611ef7565b6109ea670d43225a74de2d3a60c01b611ef7565b6109fe672ac7bc60210945db60c01b611ef7565b6006905090565b6006600a610a13919061441d565b633b9aca00610a229190614467565b81565b5f610a2e611efa565b905090565b610a3b611947565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610aa8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9f90614518565b60405180910390fd5b610ab28282611fb0565b5050565b5f80610ac0611947565b9050610ae1818585610ad28589611705565b610adc9190614536565b61194e565b600191505092915050565b5f610af5611244565b65ffffffffffff168210610b3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b35906145b3565b60405180910390fd5b610b84600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208361208b565b905092915050565b610ba067e92d42db38907ad660c01b611ef7565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610bca81611e08565b610bde67276455260c16655d60c01b611ef7565b610bf267036e936efaed435c60c01b611ef7565b610c06672aa604e1c28f718f60c01b611ef7565b610c1a67552e728a203151f460c01b611ef7565b610c226121c8565b50565b610c3967f4e7492f9daf180e60c01b611ef7565b610c41612229565b610c55675c94a4b4954cf76560c01b611ef7565b610c69678191c84fdd98c68e60c01b611ef7565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610c9381611e08565b610ca7678398169f875f39bd60c01b611ef7565b610cbb67d186fc3c7d5c085760c01b611ef7565b610ccf67bbccc91f5edd3dfd60c01b611ef7565b610ce367e04a6d1d34b3bc5360c01b611ef7565b610cf7674093e13d0685255260c01b611ef7565b6006600a610d05919061441d565b633b9aca00610d149190614467565b82610d1d61094c565b610d279190614536565b1115610d68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5f90614641565b60405180910390fd5b610d7c679dbeb46d1393cd3f60c01b611ef7565b610d9067d1fb9ed397c21e5560c01b611ef7565b610da467197095a704d8fbc660c01b611ef7565b610dae8383612273565b505050565b610dc4610dbe611947565b826122bd565b50565b606043610dd2611244565b65ffffffffffff1614610e1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e11906146a9565b60405180910390fd5b6040518060400160405280601d81526020017f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000815250905090565b5f60095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610ecb610ec5611947565b82612307565b50565b5f600c5f9054906101000a900460ff16905090565b5f610f2d600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905061241c565b9050919050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610f8b82610f85611947565b83611b11565b610f9582826122bd565b5050565b5f610fdf60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2061246e565b9050919050565b610ffa67e425eb11adc8483d60c01b611ef7565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61102481611e08565b61103867af518162f0bae07760c01b611ef7565b61104c67b53283ada1a9a05a60c01b611ef7565b61106067adffed96f4d632c260c01b611ef7565b61107467c6dbfa490cfdb46960c01b611ef7565b61107c61247a565b50565b5f6060805f805f60606110bc60057f00000000000000000000000000000000000000000000000000000000000000006124dc90919063ffffffff16565b6110f060067f00000000000000000000000000000000000000000000000000000000000000006124dc90919063ffffffff16565b46305f801b5f67ffffffffffffffff81111561110f5761110e6146c7565b5b60405190808252806020026020018201604052801561113d5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b5f611185611244565b65ffffffffffff1682106111ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c5906145b3565b60405180910390fd5b6111d9600b8361208b565b9050919050565b5f600d5f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f61124e43612589565b905090565b60606004805461126290614291565b80601f016020809104026020016040519081016040528092919081815260200182805461128e90614291565b80156112d95780601f106112b0576101008083540402835291602001916112d9565b820191905f5260205f20905b8154815290600101906020018083116112bc57829003601f168201915b5050505050905090565b5f80600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905090505f81146113b957600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001820381548110611381576113806146f4565b5b905f5260205f20015f0160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166113bb565b5f5b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16915050919050565b5f801b81565b5f806113f1611947565b90505f6113fe8286611705565b905083811015611443576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143a90614791565b60405180910390fd5b611450828686840361194e565b60019250505092915050565b5f80611466611947565b9050611473818585611b9c565b600191505092915050565b834211156114c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b8906147f9565b60405180910390fd5b5f61152261151a7fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf8989896040516020016114ff9493929190614817565b604051602081830303815290604052805190602001206125dd565b8585856125f6565b905061152d8161261f565b861461156e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611565906148a4565b60405180910390fd5b6115788188612307565b50505050505050565b834211156115c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115bb9061490c565b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886115f28c61261f565b896040516020016116089695949392919061492a565b6040516020818303038152906040528051906020012090505f61162a826125dd565b90505f611639828787876125f6565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146116a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a0906149d3565b60405180910390fd5b6116b48a8a8a61194e565b50505050505050505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6116ed82610983565b6116f681611e08565b6117008383611fb0565b505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6117b36139aa565b600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208263ffffffff1681548110611808576118076146f4565b5b905f5260205f20016040518060400160405290815f82015f9054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020015f820160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b5f81836118c19190614536565b905092915050565b5f81836118d691906149f1565b905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036119bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119b390614a94565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a2190614b22565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051611b049190613c21565b60405180910390a3505050565b5f611b1c8484611705565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611b965781811015611b88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b7f90614b8a565b60405180910390fd5b611b95848484840361194e565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c0190614c18565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c6f90614ca6565b60405180910390fd5b611c8383838361267a565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611d06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cfd90614d34565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611def9190613c21565b60405180910390a3611e028484846126f6565b50505050565b611e1981611e14611947565b612742565b50565b611e2682826111e0565b611ef3576001600d5f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611e98611947565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b50565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015611f7557507f000000000000000000000000000000000000000000000000000000000000000046145b15611fa2577f00000000000000000000000000000000000000000000000000000000000000009050611fad565b611faa6127c6565b90505b90565b611fba82826111e0565b15612087575f600d5f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061202c611947565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b5f80838054905090505f8082905060058311156120fc575f6120ac8461285b565b846120b791906149f1565b9050856120c48883612951565b5f015f9054906101000a900463ffffffff1663ffffffff1611156120ea578091506120fa565b6001816120f79190614536565b92505b505b5b80821015612159575f6121108383612963565b90508561211d8883612951565b5f015f9054906101000a900463ffffffff1663ffffffff16111561214357809150612153565b6001816121509190614536565b92505b506120fd565b5f811461219d5761216d8660018303612951565b5f0160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661219f565b5f5b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16935050505092915050565b6121d0612988565b5f600c5f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa612212611947565b60405161221f9190613de7565b60405180910390a1565b612231610ece565b15612271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161226890614d9c565b60405180910390fd5b565b61228767387313e8392f807860c01b611ef7565b61229b67a8d134d5181650e360c01b611ef7565b6122af675a4458da72185b2060c01b611ef7565b6122b982826129d1565b5050565b6122d1679a48b9048b92444760c01b611ef7565b6122e56725868aeced47b2e360c01b611ef7565b6122f967a9ff7514cae174a360c01b611ef7565b6123038282612a5e565b5050565b5f61231183610e55565b90505f61231d84610f34565b90508260095f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a4612416828483612a7c565b50505050565b5f63ffffffff8016821115612466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161245d90614e2a565b60405180910390fd5b819050919050565b5f815f01549050919050565b612482612229565b6001600c5f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586124c5611947565b6040516124d29190613de7565b60405180910390a1565b606060ff5f1b83146124f8576124f183612c6c565b9050612583565b81805461250490614291565b80601f016020809104026020016040519081016040528092919081815260200182805461253090614291565b801561257b5780601f106125525761010080835404028352916020019161257b565b820191905f5260205f20905b81548152906001019060200180831161255e57829003601f168201915b505050505090505b92915050565b5f65ffffffffffff80168211156125d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125cc90614eb8565b60405180910390fd5b819050919050565b5f6125ef6125e9611efa565b83612cde565b9050919050565b5f805f61260587878787612d1e565b9150915061261281612df6565b8192505050949350505050565b5f8060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090506126698161246e565b915061267481612f5b565b50919050565b61268e672f5ad4669bd321e060c01b611ef7565b612696612229565b6126aa67e7799f75aa74b71b60c01b611ef7565b6126be67fc80a80801390eff60c01b611ef7565b6126d2677ee51835770edb0960c01b611ef7565b6126e667d598313a3f39905e60c01b611ef7565b6126f1838383612f6f565b505050565b61270a673fcd046526a50e6b60c01b611ef7565b61271e67d352e7a2ac74bdd060c01b611ef7565b61273267cfeac663810cc1d760c01b611ef7565b61273d838383612f74565b505050565b61274c82826111e0565b6127c25761275981612f9f565b612766835f1c6020612fcc565b604051602001612777929190614fa4565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127b99190613b27565b60405180910390fd5b5050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001612840959493929190614fdd565b60405160208183030381529060405280519060200120905090565b5f80820361286b575f905061294c565b5f600161287784613201565b901c6001901b905060018184816128915761289061502e565b5b048201901c905060018184816128aa576128a961502e565b5b048201901c905060018184816128c3576128c261502e565b5b048201901c905060018184816128dc576128db61502e565b5b048201901c905060018184816128f5576128f461502e565b5b048201901c9050600181848161290e5761290d61502e565b5b048201901c905060018184816129275761292661502e565b5b048201901c9050612948818285816129425761294161502e565b5b046132d8565b9150505b919050565b5f825f528160205f2001905092915050565b5f6002828418612973919061505b565b8284166129809190614536565b905092915050565b612990610ece565b6129cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129c6906150d5565b60405180910390fd5b565b6129db82826132f0565b6129e361343e565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612a0961094c565b1115612a4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a4190615163565b60405180910390fd5b612a58600b6118b483613461565b50505050565b612a68828261372a565b612a76600b6118c983613461565b50505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015612ab757505f81115b15612c67575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612b91575f80612b3a600a5f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206118c985613461565b915091508473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612b86929190615181565b60405180910390a250505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612c66575f80612c0f600a5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206118b485613461565b915091508373ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612c5b929190615181565b60405180910390a250505b5b505050565b60605f612c78836138ed565b90505f602067ffffffffffffffff811115612c9657612c956146c7565b5b6040519080825280601f01601f191660200182016040528015612cc85781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b5f6040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b5f807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0835f1c1115612d56575f600391509150612ded565b5f6001878787876040515f8152602001604052604051612d7994939291906151a8565b6020604051602081039080840390855afa158015612d99573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612de5575f60019250925050612ded565b805f92509250505b94509492505050565b5f6004811115612e0957612e086151eb565b5b816004811115612e1c57612e1b6151eb565b5b0315612f585760016004811115612e3657612e356151eb565b5b816004811115612e4957612e486151eb565b5b03612e89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e8090615262565b60405180910390fd5b60026004811115612e9d57612e9c6151eb565b5b816004811115612eb057612eaf6151eb565b5b03612ef0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ee7906152ca565b60405180910390fd5b60036004811115612f0457612f036151eb565b5b816004811115612f1757612f166151eb565b5b03612f57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f4e90615358565b60405180910390fd5b5b50565b6001815f015f828254019250508190555050565b505050565b612f7f83838361393b565b612f9a612f8b84610e55565b612f9484610e55565b83612a7c565b505050565b6060612fc58273ffffffffffffffffffffffffffffffffffffffff16601460ff16612fcc565b9050919050565b60605f6002836002612fde9190614467565b612fe89190614536565b67ffffffffffffffff811115613001576130006146c7565b5b6040519080825280601f01601f1916602001820160405280156130335781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000815f8151811061306a576130696146f4565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106130cd576130cc6146f4565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053505f600184600261310b9190614467565b6131159190614536565b90505b60018111156131b4577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110613157576131566146f4565b5b1a60f81b82828151811061316e5761316d6146f4565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350600485901c9450806131ad90615376565b9050613118565b505f84146131f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016131ee906153e7565b60405180910390fd5b8091505092915050565b5f805f90505f608084901c111561322057608083901c92506080810190505b5f604084901c111561323a57604083901c92506040810190505b5f602084901c111561325457602083901c92506020810190505b5f601084901c111561326e57601083901c92506010810190505b5f600884901c111561328857600883901c92506008810190505b5f600484901c11156132a257600483901c92506004810190505b5f600284901c11156132bc57600283901c92506002810190505b5f600184901c11156132cf576001810190505b80915050919050565b5f8183106132e657816132e8565b825b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361335e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016133559061544f565b60405180910390fd5b6133695f838361267a565b8060025f82825461337a9190614536565b92505081905550805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508173ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516134279190613c21565b60405180910390a361343a5f83836126f6565b5050565b5f7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b5f805f858054905090505f808214613521576134808760018403612951565b6040518060400160405290815f82015f9054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020015f820160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152505061355b565b60405180604001604052805f63ffffffff1681526020015f7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152505b905080602001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16935061359084868863ffffffff16565b92505f821180156135b857506135a4611244565b65ffffffffffff16815f015163ffffffff16145b15613628576135c683613940565b6135d38860018503612951565b5f0160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff160217905550613720565b86604051806040016040528061364c61363f611244565b65ffffffffffff1661241c565b63ffffffff16815260200161366086613940565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003905f5260205f20015f909190919091505f820151815f015f6101000a81548163ffffffff021916908363ffffffff1602179055506020820151815f0160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555050505b5050935093915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603613798576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161378f906154dd565b60405180910390fd5b6137a3825f8361267a565b5f805f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015613826576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161381d9061556b565b60405180910390fd5b8181035f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508160025f82825403925050819055505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516138d59190613c21565b60405180910390a36138e8835f846126f6565b505050565b5f8060ff835f1c169050601f811115613932576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b505050565b5f7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff80168211156139a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613999906155f9565b60405180910390fd5b819050919050565b60405180604001604052805f63ffffffff1681526020015f7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525090565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b613a1e816139ea565b8114613a28575f80fd5b50565b5f81359050613a3981613a15565b92915050565b5f60208284031215613a5457613a536139e6565b5b5f613a6184828501613a2b565b91505092915050565b5f8115159050919050565b613a7e81613a6a565b82525050565b5f602082019050613a975f830184613a75565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015613ad4578082015181840152602081019050613ab9565b5f8484015250505050565b5f601f19601f8301169050919050565b5f613af982613a9d565b613b038185613aa7565b9350613b13818560208601613ab7565b613b1c81613adf565b840191505092915050565b5f6020820190508181035f830152613b3f8184613aef565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f613b7082613b47565b9050919050565b613b8081613b66565b8114613b8a575f80fd5b50565b5f81359050613b9b81613b77565b92915050565b5f819050919050565b613bb381613ba1565b8114613bbd575f80fd5b50565b5f81359050613bce81613baa565b92915050565b5f8060408385031215613bea57613be96139e6565b5b5f613bf785828601613b8d565b9250506020613c0885828601613bc0565b9150509250929050565b613c1b81613ba1565b82525050565b5f602082019050613c345f830184613c12565b92915050565b5f805f60608486031215613c5157613c506139e6565b5b5f613c5e86828701613b8d565b9350506020613c6f86828701613b8d565b9250506040613c8086828701613bc0565b9150509250925092565b5f819050919050565b613c9c81613c8a565b8114613ca6575f80fd5b50565b5f81359050613cb781613c93565b92915050565b5f60208284031215613cd257613cd16139e6565b5b5f613cdf84828501613ca9565b91505092915050565b613cf181613c8a565b82525050565b5f602082019050613d0a5f830184613ce8565b92915050565b5f8060408385031215613d2657613d256139e6565b5b5f613d3385828601613ca9565b9250506020613d4485828601613b8d565b9150509250929050565b5f60ff82169050919050565b613d6381613d4e565b82525050565b5f602082019050613d7c5f830184613d5a565b92915050565b5f60208284031215613d9757613d966139e6565b5b5f613da484828501613bc0565b91505092915050565b5f60208284031215613dc257613dc16139e6565b5b5f613dcf84828501613b8d565b91505092915050565b613de181613b66565b82525050565b5f602082019050613dfa5f830184613dd8565b92915050565b5f63ffffffff82169050919050565b613e1881613e00565b82525050565b5f602082019050613e315f830184613e0f565b92915050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b613e6b81613e37565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b613ea381613ba1565b82525050565b5f613eb48383613e9a565b60208301905092915050565b5f602082019050919050565b5f613ed682613e71565b613ee08185613e7b565b9350613eeb83613e8b565b805f5b83811015613f1b578151613f028882613ea9565b9750613f0d83613ec0565b925050600181019050613eee565b5085935050505092915050565b5f60e082019050613f3b5f83018a613e62565b8181036020830152613f4d8189613aef565b90508181036040830152613f618188613aef565b9050613f706060830187613c12565b613f7d6080830186613dd8565b613f8a60a0830185613ce8565b81810360c0830152613f9c8184613ecc565b905098975050505050505050565b5f65ffffffffffff82169050919050565b613fc481613faa565b82525050565b5f602082019050613fdd5f830184613fbb565b92915050565b613fec81613d4e565b8114613ff6575f80fd5b50565b5f8135905061400781613fe3565b92915050565b5f805f805f8060c08789031215614027576140266139e6565b5b5f61403489828a01613b8d565b965050602061404589828a01613bc0565b955050604061405689828a01613bc0565b945050606061406789828a01613ff9565b935050608061407889828a01613ca9565b92505060a061408989828a01613ca9565b9150509295509295509295565b5f805f805f805f60e0888a0312156140b1576140b06139e6565b5b5f6140be8a828b01613b8d565b97505060206140cf8a828b01613b8d565b96505060406140e08a828b01613bc0565b95505060606140f18a828b01613bc0565b94505060806141028a828b01613ff9565b93505060a06141138a828b01613ca9565b92505060c06141248a828b01613ca9565b91505092959891949750929550565b5f8060408385031215614149576141486139e6565b5b5f61415685828601613b8d565b925050602061416785828601613b8d565b9150509250929050565b61417a81613e00565b8114614184575f80fd5b50565b5f8135905061419581614171565b92915050565b5f80604083850312156141b1576141b06139e6565b5b5f6141be85828601613b8d565b92505060206141cf85828601614187565b9150509250929050565b6141e281613e00565b82525050565b5f7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b614218816141e8565b82525050565b604082015f8201516142325f8501826141d9565b506020820151614245602085018261420f565b50505050565b5f60408201905061425e5f83018461421e565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806142a857607f821691505b6020821081036142bb576142ba614264565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156143435780860481111561431f5761431e6142c1565b5b600185161561432e5780820291505b808102905061433c856142ee565b9450614303565b94509492505050565b5f8261435b5760019050614416565b81614368575f9050614416565b816001811461437e5760028114614388576143b7565b6001915050614416565b60ff84111561439a576143996142c1565b5b8360020a9150848211156143b1576143b06142c1565b5b50614416565b5060208310610133831016604e8410600b84101617156143ec5782820a9050838111156143e7576143e66142c1565b5b614416565b6143f984848460016142fa565b925090508184048111156144105761440f6142c1565b5b81810290505b9392505050565b5f61442782613ba1565b915061443283613ba1565b925061445f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461434c565b905092915050565b5f61447182613ba1565b915061447c83613ba1565b925082820261448a81613ba1565b915082820484148315176144a1576144a06142c1565b5b5092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e63655f8201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b5f614502602f83613aa7565b915061450d826144a8565b604082019050919050565b5f6020820190508181035f83015261452f816144f6565b9050919050565b5f61454082613ba1565b915061454b83613ba1565b9250828201905080821115614563576145626142c1565b5b92915050565b7f4552433230566f7465733a20667574757265206c6f6f6b7570000000000000005f82015250565b5f61459d601983613aa7565b91506145a882614569565b602082019050919050565b5f6020820190508181035f8301526145ca81614591565b9050919050565b7f546f6b656e20746f206265206d696e7465642073686f756c64206e6f742065785f8201527f63656564204d617820737570706c790000000000000000000000000000000000602082015250565b5f61462b602f83613aa7565b9150614636826145d1565b604082019050919050565b5f6020820190508181035f8301526146588161461f565b9050919050565b7f4552433230566f7465733a2062726f6b656e20636c6f636b206d6f64650000005f82015250565b5f614693601d83613aa7565b915061469e8261465f565b602082019050919050565b5f6020820190508181035f8301526146c081614687565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f61477b602583613aa7565b915061478682614721565b604082019050919050565b5f6020820190508181035f8301526147a88161476f565b9050919050565b7f4552433230566f7465733a207369676e617475726520657870697265640000005f82015250565b5f6147e3601d83613aa7565b91506147ee826147af565b602082019050919050565b5f6020820190508181035f830152614810816147d7565b9050919050565b5f60808201905061482a5f830187613ce8565b6148376020830186613dd8565b6148446040830185613c12565b6148516060830184613c12565b95945050505050565b7f4552433230566f7465733a20696e76616c6964206e6f6e6365000000000000005f82015250565b5f61488e601983613aa7565b91506148998261485a565b602082019050919050565b5f6020820190508181035f8301526148bb81614882565b9050919050565b7f45524332305065726d69743a206578706972656420646561646c696e650000005f82015250565b5f6148f6601d83613aa7565b9150614901826148c2565b602082019050919050565b5f6020820190508181035f830152614923816148ea565b9050919050565b5f60c08201905061493d5f830189613ce8565b61494a6020830188613dd8565b6149576040830187613dd8565b6149646060830186613c12565b6149716080830185613c12565b61497e60a0830184613c12565b979650505050505050565b7f45524332305065726d69743a20696e76616c6964207369676e617475726500005f82015250565b5f6149bd601e83613aa7565b91506149c882614989565b602082019050919050565b5f6020820190508181035f8301526149ea816149b1565b9050919050565b5f6149fb82613ba1565b9150614a0683613ba1565b9250828203905081811115614a1e57614a1d6142c1565b5b92915050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f614a7e602483613aa7565b9150614a8982614a24565b604082019050919050565b5f6020820190508181035f830152614aab81614a72565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f614b0c602283613aa7565b9150614b1782614ab2565b604082019050919050565b5f6020820190508181035f830152614b3981614b00565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f614b74601d83613aa7565b9150614b7f82614b40565b602082019050919050565b5f6020820190508181035f830152614ba181614b68565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f614c02602583613aa7565b9150614c0d82614ba8565b604082019050919050565b5f6020820190508181035f830152614c2f81614bf6565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f614c90602383613aa7565b9150614c9b82614c36565b604082019050919050565b5f6020820190508181035f830152614cbd81614c84565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f614d1e602683613aa7565b9150614d2982614cc4565b604082019050919050565b5f6020820190508181035f830152614d4b81614d12565b9050919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f614d86601083613aa7565b9150614d9182614d52565b602082019050919050565b5f6020820190508181035f830152614db381614d7a565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e20335f8201527f3220626974730000000000000000000000000000000000000000000000000000602082015250565b5f614e14602683613aa7565b9150614e1f82614dba565b604082019050919050565b5f6020820190508181035f830152614e4181614e08565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e20345f8201527f3820626974730000000000000000000000000000000000000000000000000000602082015250565b5f614ea2602683613aa7565b9150614ead82614e48565b604082019050919050565b5f6020820190508181035f830152614ecf81614e96565b9050919050565b5f81905092915050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000005f82015250565b5f614f14601783614ed6565b9150614f1f82614ee0565b601782019050919050565b5f614f3482613a9d565b614f3e8185614ed6565b9350614f4e818560208601613ab7565b80840191505092915050565b7f206973206d697373696e6720726f6c65200000000000000000000000000000005f82015250565b5f614f8e601183614ed6565b9150614f9982614f5a565b601182019050919050565b5f614fae82614f08565b9150614fba8285614f2a565b9150614fc582614f82565b9150614fd18284614f2a565b91508190509392505050565b5f60a082019050614ff05f830188613ce8565b614ffd6020830187613ce8565b61500a6040830186613ce8565b6150176060830185613c12565b6150246080830184613dd8565b9695505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61506582613ba1565b915061507083613ba1565b9250826150805761507f61502e565b5b828204905092915050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f6150bf601483613aa7565b91506150ca8261508b565b602082019050919050565b5f6020820190508181035f8301526150ec816150b3565b9050919050565b7f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f5f8201527f766572666c6f77696e6720766f74657300000000000000000000000000000000602082015250565b5f61514d603083613aa7565b9150615158826150f3565b604082019050919050565b5f6020820190508181035f83015261517a81615141565b9050919050565b5f6040820190506151945f830185613c12565b6151a16020830184613c12565b9392505050565b5f6080820190506151bb5f830187613ce8565b6151c86020830186613d5a565b6151d56040830185613ce8565b6151e26060830184613ce8565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b7f45434453413a20696e76616c6964207369676e617475726500000000000000005f82015250565b5f61524c601883613aa7565b915061525782615218565b602082019050919050565b5f6020820190508181035f83015261527981615240565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e677468005f82015250565b5f6152b4601f83613aa7565b91506152bf82615280565b602082019050919050565b5f6020820190508181035f8301526152e1816152a8565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c5f8201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b5f615342602283613aa7565b915061534d826152e8565b604082019050919050565b5f6020820190508181035f83015261536f81615336565b9050919050565b5f61538082613ba1565b91505f8203615392576153916142c1565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e745f82015250565b5f6153d1602083613aa7565b91506153dc8261539d565b602082019050919050565b5f6020820190508181035f8301526153fe816153c5565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f2061646472657373005f82015250565b5f615439601f83613aa7565b915061544482615405565b602082019050919050565b5f6020820190508181035f8301526154668161542d565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f206164647265735f8201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b5f6154c7602183613aa7565b91506154d28261546d565b604082019050919050565b5f6020820190508181035f8301526154f4816154bb565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e5f8201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b5f615555602283613aa7565b9150615560826154fb565b604082019050919050565b5f6020820190508181035f83015261558281615549565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e20325f8201527f3234206269747300000000000000000000000000000000000000000000000000602082015250565b5f6155e3602783613aa7565b91506155ee82615589565b604082019050919050565b5f6020820190508181035f830152615610816155d7565b905091905056fea2646970667358221220b5b98b36a6a636e3f1caf8c75c9374fd2aa2caca0d7fdec828bebd2b848f6a9164736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x251 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FCFFF45 GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x9AB24EB0 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x85 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x74D JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x769 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x787 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7A3 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x7D3 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x7F1 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x683 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x6B3 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x6D1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x701 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x731 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x84B0196E GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x5E7 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x617 JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x647 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x665 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x50D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5B9 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x196 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x4EF JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x44D JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x219 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x3A9 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2F1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x3A3F JUMP JUMPDEST PUSH2 0x821 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x3A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH2 0x89A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x3B27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x3BD4 JUMP JUMPDEST PUSH2 0x92A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x3A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH2 0x94C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x3C3A JUMP JUMPDEST PUSH2 0x955 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x3A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x3CBD JUMP JUMPDEST PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x3CF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x3D10 JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x375 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x3D69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x393 PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B1 PUSH2 0xA25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x3CF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x3D10 JUMP JUMPDEST PUSH2 0xA33 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x3BD4 JUMP JUMPDEST PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40A SWAP2 SWAP1 PUSH2 0x3A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x3BD4 JUMP JUMPDEST PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44B PUSH2 0xB8C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x462 SWAP2 SWAP1 PUSH2 0x3BD4 JUMP JUMPDEST PUSH2 0xC25 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x483 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x3D82 JUMP JUMPDEST PUSH2 0xDB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48D PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x3B27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x3DAD JUMP JUMPDEST PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0x3DE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E8 SWAP2 SWAP1 PUSH2 0x3DAD JUMP JUMPDEST PUSH2 0xEBA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F7 PUSH2 0xECE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x3A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x527 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x522 SWAP2 SWAP1 PUSH2 0x3DAD JUMP JUMPDEST PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x534 SWAP2 SWAP1 PUSH2 0x3E1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x557 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x552 SWAP2 SWAP1 PUSH2 0x3DAD JUMP JUMPDEST PUSH2 0xF34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x564 SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x587 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x582 SWAP2 SWAP1 PUSH2 0x3BD4 JUMP JUMPDEST PUSH2 0xF79 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59E SWAP2 SWAP1 PUSH2 0x3DAD JUMP JUMPDEST PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C1 PUSH2 0xFE6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5CB PUSH2 0x107F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DE SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x601 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FC SWAP2 SWAP1 PUSH2 0x3D82 JUMP JUMPDEST PUSH2 0x117C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60E SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x631 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62C SWAP2 SWAP1 PUSH2 0x3D10 JUMP JUMPDEST PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63E SWAP2 SWAP1 PUSH2 0x3A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64F PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65C SWAP2 SWAP1 PUSH2 0x3FCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x66D PUSH2 0x1253 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67A SWAP2 SWAP1 PUSH2 0x3B27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x698 SWAP2 SWAP1 PUSH2 0x3DAD JUMP JUMPDEST PUSH2 0x12E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6BB PUSH2 0x13E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C8 SWAP2 SWAP1 PUSH2 0x3CF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0x3BD4 JUMP JUMPDEST PUSH2 0x13E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0x3A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x71B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x716 SWAP2 SWAP1 PUSH2 0x3BD4 JUMP JUMPDEST PUSH2 0x145C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x728 SWAP2 SWAP1 PUSH2 0x3A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x400D JUMP JUMPDEST PUSH2 0x147E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x767 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x762 SWAP2 SWAP1 PUSH2 0x4096 JUMP JUMPDEST PUSH2 0x1581 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x771 PUSH2 0x16C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77E SWAP2 SWAP1 PUSH2 0x3CF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79C SWAP2 SWAP1 PUSH2 0x3D10 JUMP JUMPDEST PUSH2 0x16E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7B8 SWAP2 SWAP1 PUSH2 0x4133 JUMP JUMPDEST PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7CA SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7DB PUSH2 0x1787 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E8 SWAP2 SWAP1 PUSH2 0x3CF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x80B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x806 SWAP2 SWAP1 PUSH2 0x419B JUMP JUMPDEST PUSH2 0x17AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x818 SWAP2 SWAP1 PUSH2 0x424B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x893 JUMPI POP PUSH2 0x892 DUP3 PUSH2 0x18DE JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x8A9 SWAP1 PUSH2 0x4291 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8D5 SWAP1 PUSH2 0x4291 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x920 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x920 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x903 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x934 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP PUSH2 0x941 DUP2 DUP6 DUP6 PUSH2 0x194E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x95F PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP PUSH2 0x96C DUP6 DUP3 DUP6 PUSH2 0x1B11 JUMP JUMPDEST PUSH2 0x977 DUP6 DUP6 DUP6 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A9 DUP3 PUSH2 0x983 JUMP JUMPDEST PUSH2 0x9B2 DUP2 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0x9BC DUP4 DUP4 PUSH2 0x1E1C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9D6 PUSH8 0x11A8DFFF866EE397 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x9EA PUSH8 0xD43225A74DE2D3A PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x9FE PUSH8 0x2AC7BC60210945DB PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x6 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0xA PUSH2 0xA13 SWAP2 SWAP1 PUSH2 0x441D JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH2 0xA22 SWAP2 SWAP1 PUSH2 0x4467 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xA2E PUSH2 0x1EFA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA3B PUSH2 0x1947 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9F SWAP1 PUSH2 0x4518 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB2 DUP3 DUP3 PUSH2 0x1FB0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAC0 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP PUSH2 0xAE1 DUP2 DUP6 DUP6 PUSH2 0xAD2 DUP6 DUP10 PUSH2 0x1705 JUMP JUMPDEST PUSH2 0xADC SWAP2 SWAP1 PUSH2 0x4536 JUMP JUMPDEST PUSH2 0x194E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAF5 PUSH2 0x1244 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP3 LT PUSH2 0xB3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB35 SWAP1 PUSH2 0x45B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB84 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 PUSH2 0x208B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBA0 PUSH8 0xE92D42DB38907AD6 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xBCA DUP2 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0xBDE PUSH8 0x276455260C16655D PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xBF2 PUSH8 0x36E936EFAED435C PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xC06 PUSH8 0x2AA604E1C28F718F PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xC1A PUSH8 0x552E728A203151F4 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xC22 PUSH2 0x21C8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC39 PUSH8 0xF4E7492F9DAF180E PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xC41 PUSH2 0x2229 JUMP JUMPDEST PUSH2 0xC55 PUSH8 0x5C94A4B4954CF765 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xC69 PUSH8 0x8191C84FDD98C68E PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xC93 DUP2 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0xCA7 PUSH8 0x8398169F875F39BD PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xCBB PUSH8 0xD186FC3C7D5C0857 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xCCF PUSH8 0xBBCCC91F5EDD3DFD PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xCE3 PUSH8 0xE04A6D1D34B3BC53 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xCF7 PUSH8 0x4093E13D06852552 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x6 PUSH1 0xA PUSH2 0xD05 SWAP2 SWAP1 PUSH2 0x441D JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH2 0xD14 SWAP2 SWAP1 PUSH2 0x4467 JUMP JUMPDEST DUP3 PUSH2 0xD1D PUSH2 0x94C JUMP JUMPDEST PUSH2 0xD27 SWAP2 SWAP1 PUSH2 0x4536 JUMP JUMPDEST GT ISZERO PUSH2 0xD68 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5F SWAP1 PUSH2 0x4641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD7C PUSH8 0x9DBEB46D1393CD3F PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xD90 PUSH8 0xD1FB9ED397C21E55 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xDA4 PUSH8 0x197095A704D8FBC6 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xDAE DUP4 DUP4 PUSH2 0x2273 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xDC4 PUSH2 0xDBE PUSH2 0x1947 JUMP JUMPDEST DUP3 PUSH2 0x22BD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 NUMBER PUSH2 0xDD2 PUSH2 0x1244 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND EQ PUSH2 0xE1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE11 SWAP1 PUSH2 0x46A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xECB PUSH2 0xEC5 PUSH2 0x1947 JUMP JUMPDEST DUP3 PUSH2 0x2307 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xF2D PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x241C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF8B DUP3 PUSH2 0xF85 PUSH2 0x1947 JUMP JUMPDEST DUP4 PUSH2 0x1B11 JUMP JUMPDEST PUSH2 0xF95 DUP3 DUP3 PUSH2 0x22BD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFDF PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH2 0x246E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFA PUSH8 0xE425EB11ADC8483D PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x1024 DUP2 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0x1038 PUSH8 0xAF518162F0BAE077 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x104C PUSH8 0xB53283ADA1A9A05A PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x1060 PUSH8 0xADFFED96F4D632C2 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x1074 PUSH8 0xC6DBFA490CFDB469 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x107C PUSH2 0x247A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x10BC PUSH1 0x5 PUSH32 0x0 PUSH2 0x24DC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x10F0 PUSH1 0x6 PUSH32 0x0 PUSH2 0x24DC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x110F JUMPI PUSH2 0x110E PUSH2 0x46C7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x113D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH0 PUSH2 0x1185 PUSH2 0x1244 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP3 LT PUSH2 0x11CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C5 SWAP1 PUSH2 0x45B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11D9 PUSH1 0xB DUP4 PUSH2 0x208B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x124E NUMBER PUSH2 0x2589 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1262 SWAP1 PUSH2 0x4291 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x128E SWAP1 PUSH2 0x4291 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12B0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 DUP2 EQ PUSH2 0x13B9 JUMPI PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 DUP3 SUB DUP2 SLOAD DUP2 LT PUSH2 0x1381 JUMPI PUSH2 0x1380 PUSH2 0x46F4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13BB JUMP JUMPDEST PUSH0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x13F1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x13FE DUP3 DUP7 PUSH2 0x1705 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1443 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143A SWAP1 PUSH2 0x4791 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1450 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x194E JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1466 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP PUSH2 0x1473 DUP2 DUP6 DUP6 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x14C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B8 SWAP1 PUSH2 0x47F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1522 PUSH2 0x151A PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x14FF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4817 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x25DD JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x25F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x152D DUP2 PUSH2 0x261F JUMP JUMPDEST DUP7 EQ PUSH2 0x156E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1565 SWAP1 PUSH2 0x48A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1578 DUP2 DUP9 PUSH2 0x2307 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x15C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BB SWAP1 PUSH2 0x490C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x15F2 DUP13 PUSH2 0x261F JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1608 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x492A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x162A DUP3 PUSH2 0x25DD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1639 DUP3 DUP8 DUP8 DUP8 PUSH2 0x25F6 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A0 SWAP1 PUSH2 0x49D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16B4 DUP11 DUP11 DUP11 PUSH2 0x194E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x16ED DUP3 PUSH2 0x983 JUMP JUMPDEST PUSH2 0x16F6 DUP2 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0x1700 DUP4 DUP4 PUSH2 0x1FB0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH2 0x17B3 PUSH2 0x39AA JUMP JUMPDEST PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1808 JUMPI PUSH2 0x1807 PUSH2 0x46F4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x18C1 SWAP2 SWAP1 PUSH2 0x4536 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x18D6 SWAP2 SWAP1 PUSH2 0x49F1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B3 SWAP1 PUSH2 0x4A94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A21 SWAP1 PUSH2 0x4B22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B04 SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B1C DUP5 DUP5 PUSH2 0x1705 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1B96 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1B88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B7F SWAP1 PUSH2 0x4B8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B95 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x194E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C01 SWAP1 PUSH2 0x4C18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C6F SWAP1 PUSH2 0x4CA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C83 DUP4 DUP4 DUP4 PUSH2 0x267A JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1D06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CFD SWAP1 PUSH2 0x4D34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1DEF SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1E02 DUP5 DUP5 DUP5 PUSH2 0x26F6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1E19 DUP2 PUSH2 0x1E14 PUSH2 0x1947 JUMP JUMPDEST PUSH2 0x2742 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E26 DUP3 DUP3 PUSH2 0x11E0 JUMP JUMPDEST PUSH2 0x1EF3 JUMPI PUSH1 0x1 PUSH1 0xD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1E98 PUSH2 0x1947 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1F75 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1FA2 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1FAD JUMP JUMPDEST PUSH2 0x1FAA PUSH2 0x27C6 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1FBA DUP3 DUP3 PUSH2 0x11E0 JUMP JUMPDEST ISZERO PUSH2 0x2087 JUMPI PUSH0 PUSH1 0xD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x202C PUSH2 0x1947 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 DUP1 DUP3 SWAP1 POP PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x20FC JUMPI PUSH0 PUSH2 0x20AC DUP5 PUSH2 0x285B JUMP JUMPDEST DUP5 PUSH2 0x20B7 SWAP2 SWAP1 PUSH2 0x49F1 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x20C4 DUP9 DUP4 PUSH2 0x2951 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x20EA JUMPI DUP1 SWAP2 POP PUSH2 0x20FA JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x20F7 SWAP2 SWAP1 PUSH2 0x4536 JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x2159 JUMPI PUSH0 PUSH2 0x2110 DUP4 DUP4 PUSH2 0x2963 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x211D DUP9 DUP4 PUSH2 0x2951 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x2143 JUMPI DUP1 SWAP2 POP PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x2150 SWAP2 SWAP1 PUSH2 0x4536 JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x20FD JUMP JUMPDEST PUSH0 DUP2 EQ PUSH2 0x219D JUMPI PUSH2 0x216D DUP7 PUSH1 0x1 DUP4 SUB PUSH2 0x2951 JUMP JUMPDEST PUSH0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x219F JUMP JUMPDEST PUSH0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21D0 PUSH2 0x2988 JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x2212 PUSH2 0x1947 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221F SWAP2 SWAP1 PUSH2 0x3DE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x2231 PUSH2 0xECE JUMP JUMPDEST ISZERO PUSH2 0x2271 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2268 SWAP1 PUSH2 0x4D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2287 PUSH8 0x387313E8392F8078 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x229B PUSH8 0xA8D134D5181650E3 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x22AF PUSH8 0x5A4458DA72185B20 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x22B9 DUP3 DUP3 PUSH2 0x29D1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x22D1 PUSH8 0x9A48B9048B924447 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x22E5 PUSH8 0x25868AECED47B2E3 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x22F9 PUSH8 0xA9FF7514CAE174A3 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x2303 DUP3 DUP3 PUSH2 0x2A5E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2311 DUP4 PUSH2 0xE55 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x231D DUP5 PUSH2 0xF34 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x9 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2416 DUP3 DUP5 DUP4 PUSH2 0x2A7C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x2466 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245D SWAP1 PUSH2 0x4E2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2482 PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x24C5 PUSH2 0x1947 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D2 SWAP2 SWAP1 PUSH2 0x3DE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0x24F8 JUMPI PUSH2 0x24F1 DUP4 PUSH2 0x2C6C JUMP JUMPDEST SWAP1 POP PUSH2 0x2583 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x2504 SWAP1 PUSH2 0x4291 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2530 SWAP1 PUSH2 0x4291 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x257B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2552 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x257B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x255E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH6 0xFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x25D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25CC SWAP1 PUSH2 0x4EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25EF PUSH2 0x25E9 PUSH2 0x1EFA JUMP JUMPDEST DUP4 PUSH2 0x2CDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x2605 DUP8 DUP8 DUP8 DUP8 PUSH2 0x2D1E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x2612 DUP2 PUSH2 0x2DF6 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x2669 DUP2 PUSH2 0x246E JUMP JUMPDEST SWAP2 POP PUSH2 0x2674 DUP2 PUSH2 0x2F5B JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x268E PUSH8 0x2F5AD4669BD321E0 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x2696 PUSH2 0x2229 JUMP JUMPDEST PUSH2 0x26AA PUSH8 0xE7799F75AA74B71B PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x26BE PUSH8 0xFC80A80801390EFF PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x26D2 PUSH8 0x7EE51835770EDB09 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x26E6 PUSH8 0xD598313A3F39905E PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x26F1 DUP4 DUP4 DUP4 PUSH2 0x2F6F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x270A PUSH8 0x3FCD046526A50E6B PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x271E PUSH8 0xD352E7A2AC74BDD0 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x2732 PUSH8 0xCFEAC663810CC1D7 PUSH1 0xC0 SHL PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x273D DUP4 DUP4 DUP4 PUSH2 0x2F74 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x274C DUP3 DUP3 PUSH2 0x11E0 JUMP JUMPDEST PUSH2 0x27C2 JUMPI PUSH2 0x2759 DUP2 PUSH2 0x2F9F JUMP JUMPDEST PUSH2 0x2766 DUP4 PUSH0 SHR PUSH1 0x20 PUSH2 0x2FCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2777 SWAP3 SWAP2 SWAP1 PUSH2 0x4FA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27B9 SWAP2 SWAP1 PUSH2 0x3B27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2840 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4FDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 DUP3 SUB PUSH2 0x286B JUMPI PUSH0 SWAP1 POP PUSH2 0x294C JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0x2877 DUP5 PUSH2 0x3201 JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2891 JUMPI PUSH2 0x2890 PUSH2 0x502E JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28AA JUMPI PUSH2 0x28A9 PUSH2 0x502E JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28C3 JUMPI PUSH2 0x28C2 PUSH2 0x502E JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28DC JUMPI PUSH2 0x28DB PUSH2 0x502E JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x28F5 JUMPI PUSH2 0x28F4 PUSH2 0x502E JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x290E JUMPI PUSH2 0x290D PUSH2 0x502E JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2927 JUMPI PUSH2 0x2926 PUSH2 0x502E JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x2948 DUP2 DUP3 DUP6 DUP2 PUSH2 0x2942 JUMPI PUSH2 0x2941 PUSH2 0x502E JUMP JUMPDEST JUMPDEST DIV PUSH2 0x32D8 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 MSTORE DUP2 PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x2973 SWAP2 SWAP1 PUSH2 0x505B JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x2980 SWAP2 SWAP1 PUSH2 0x4536 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2990 PUSH2 0xECE JUMP JUMPDEST PUSH2 0x29CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29C6 SWAP1 PUSH2 0x50D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x29DB DUP3 DUP3 PUSH2 0x32F0 JUMP JUMPDEST PUSH2 0x29E3 PUSH2 0x343E JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A09 PUSH2 0x94C JUMP JUMPDEST GT ISZERO PUSH2 0x2A4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A41 SWAP1 PUSH2 0x5163 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A58 PUSH1 0xB PUSH2 0x18B4 DUP4 PUSH2 0x3461 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2A68 DUP3 DUP3 PUSH2 0x372A JUMP JUMPDEST PUSH2 0x2A76 PUSH1 0xB PUSH2 0x18C9 DUP4 PUSH2 0x3461 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2AB7 JUMPI POP PUSH0 DUP2 GT JUMPDEST ISZERO PUSH2 0x2C67 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2B91 JUMPI PUSH0 DUP1 PUSH2 0x2B3A PUSH1 0xA PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH2 0x18C9 DUP6 PUSH2 0x3461 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2B86 SWAP3 SWAP2 SWAP1 PUSH2 0x5181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2C66 JUMPI PUSH0 DUP1 PUSH2 0x2C0F PUSH1 0xA PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH2 0x18B4 DUP6 PUSH2 0x3461 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2C5B SWAP3 SWAP2 SWAP1 PUSH2 0x5181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x2C78 DUP4 PUSH2 0x38ED JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C96 JUMPI PUSH2 0x2C95 PUSH2 0x46C7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2CC8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH0 SHR GT ISZERO PUSH2 0x2D56 JUMPI PUSH0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x2DED JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2D79 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x51A8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D99 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2DE5 JUMPI PUSH0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x2DED JUMP JUMPDEST DUP1 PUSH0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2E09 JUMPI PUSH2 0x2E08 PUSH2 0x51EB JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2E1C JUMPI PUSH2 0x2E1B PUSH2 0x51EB JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x2F58 JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2E36 JUMPI PUSH2 0x2E35 PUSH2 0x51EB JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2E49 JUMPI PUSH2 0x2E48 PUSH2 0x51EB JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2E89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E80 SWAP1 PUSH2 0x5262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2E9D JUMPI PUSH2 0x2E9C PUSH2 0x51EB JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2EB0 JUMPI PUSH2 0x2EAF PUSH2 0x51EB JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2EF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EE7 SWAP1 PUSH2 0x52CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2F04 JUMPI PUSH2 0x2F03 PUSH2 0x51EB JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2F17 JUMPI PUSH2 0x2F16 PUSH2 0x51EB JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2F57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F4E SWAP1 PUSH2 0x5358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2F7F DUP4 DUP4 DUP4 PUSH2 0x393B JUMP JUMPDEST PUSH2 0x2F9A PUSH2 0x2F8B DUP5 PUSH2 0xE55 JUMP JUMPDEST PUSH2 0x2F94 DUP5 PUSH2 0xE55 JUMP JUMPDEST DUP4 PUSH2 0x2A7C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2FC5 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x2FCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x2FDE SWAP2 SWAP1 PUSH2 0x4467 JUMP JUMPDEST PUSH2 0x2FE8 SWAP2 SWAP1 PUSH2 0x4536 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3001 JUMPI PUSH2 0x3000 PUSH2 0x46C7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3033 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x306A JUMPI PUSH2 0x3069 PUSH2 0x46F4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x30CD JUMPI PUSH2 0x30CC PUSH2 0x46F4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x310B SWAP2 SWAP1 PUSH2 0x4467 JUMP JUMPDEST PUSH2 0x3115 SWAP2 SWAP1 PUSH2 0x4536 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x31B4 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x3157 JUMPI PUSH2 0x3156 PUSH2 0x46F4 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x316E JUMPI PUSH2 0x316D PUSH2 0x46F4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x31AD SWAP1 PUSH2 0x5376 JUMP JUMPDEST SWAP1 POP PUSH2 0x3118 JUMP JUMPDEST POP PUSH0 DUP5 EQ PUSH2 0x31F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31EE SWAP1 PUSH2 0x53E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3220 JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x80 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x323A JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3254 JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x326E JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x3288 JUMPI PUSH1 0x8 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x4 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x32A2 JUMPI PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x2 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x32BC JUMPI PUSH1 0x2 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH0 PUSH1 0x1 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x32CF JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x32E6 JUMPI DUP2 PUSH2 0x32E8 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x335E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3355 SWAP1 PUSH2 0x544F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3369 PUSH0 DUP4 DUP4 PUSH2 0x267A JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x337A SWAP2 SWAP1 PUSH2 0x4536 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3427 SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x343A PUSH0 DUP4 DUP4 PUSH2 0x26F6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 DUP1 DUP3 EQ PUSH2 0x3521 JUMPI PUSH2 0x3480 DUP8 PUSH1 0x1 DUP5 SUB PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x355B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH2 0x3590 DUP5 DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x35B8 JUMPI POP PUSH2 0x35A4 PUSH2 0x1244 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x3628 JUMPI PUSH2 0x35C6 DUP4 PUSH2 0x3940 JUMP JUMPDEST PUSH2 0x35D3 DUP9 PUSH1 0x1 DUP6 SUB PUSH2 0x2951 JUMP JUMPDEST PUSH0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x3720 JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x364C PUSH2 0x363F PUSH2 0x1244 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x241C JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3660 DUP7 PUSH2 0x3940 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3798 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x378F SWAP1 PUSH2 0x54DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x37A3 DUP3 PUSH0 DUP4 PUSH2 0x267A JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x3826 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381D SWAP1 PUSH2 0x556B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x38D5 SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x38E8 DUP4 PUSH0 DUP5 PUSH2 0x26F6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x3932 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x39A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3999 SWAP1 PUSH2 0x55F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A1E DUP2 PUSH2 0x39EA JUMP JUMPDEST DUP2 EQ PUSH2 0x3A28 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A39 DUP2 PUSH2 0x3A15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A54 JUMPI PUSH2 0x3A53 PUSH2 0x39E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3A61 DUP5 DUP3 DUP6 ADD PUSH2 0x3A2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A7E DUP2 PUSH2 0x3A6A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A97 PUSH0 DUP4 ADD DUP5 PUSH2 0x3A75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3AD4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3AB9 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3AF9 DUP3 PUSH2 0x3A9D JUMP JUMPDEST PUSH2 0x3B03 DUP2 DUP6 PUSH2 0x3AA7 JUMP JUMPDEST SWAP4 POP PUSH2 0x3B13 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3AB7 JUMP JUMPDEST PUSH2 0x3B1C DUP2 PUSH2 0x3ADF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3B3F DUP2 DUP5 PUSH2 0x3AEF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3B70 DUP3 PUSH2 0x3B47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B80 DUP2 PUSH2 0x3B66 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B8A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3B9B DUP2 PUSH2 0x3B77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3BB3 DUP2 PUSH2 0x3BA1 JUMP JUMPDEST DUP2 EQ PUSH2 0x3BBD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3BCE DUP2 PUSH2 0x3BAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BEA JUMPI PUSH2 0x3BE9 PUSH2 0x39E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3BF7 DUP6 DUP3 DUP7 ADD PUSH2 0x3B8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3C08 DUP6 DUP3 DUP7 ADD PUSH2 0x3BC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C1B DUP2 PUSH2 0x3BA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C34 PUSH0 DUP4 ADD DUP5 PUSH2 0x3C12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3C51 JUMPI PUSH2 0x3C50 PUSH2 0x39E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3C5E DUP7 DUP3 DUP8 ADD PUSH2 0x3B8D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3C6F DUP7 DUP3 DUP8 ADD PUSH2 0x3B8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3C80 DUP7 DUP3 DUP8 ADD PUSH2 0x3BC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C9C DUP2 PUSH2 0x3C8A JUMP JUMPDEST DUP2 EQ PUSH2 0x3CA6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3CB7 DUP2 PUSH2 0x3C93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CD2 JUMPI PUSH2 0x3CD1 PUSH2 0x39E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3CDF DUP5 DUP3 DUP6 ADD PUSH2 0x3CA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3CF1 DUP2 PUSH2 0x3C8A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D0A PUSH0 DUP4 ADD DUP5 PUSH2 0x3CE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3D26 JUMPI PUSH2 0x3D25 PUSH2 0x39E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3D33 DUP6 DUP3 DUP7 ADD PUSH2 0x3CA9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3D44 DUP6 DUP3 DUP7 ADD PUSH2 0x3B8D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D63 DUP2 PUSH2 0x3D4E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D7C PUSH0 DUP4 ADD DUP5 PUSH2 0x3D5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D97 JUMPI PUSH2 0x3D96 PUSH2 0x39E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3DA4 DUP5 DUP3 DUP6 ADD PUSH2 0x3BC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DC2 JUMPI PUSH2 0x3DC1 PUSH2 0x39E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3DCF DUP5 DUP3 DUP6 ADD PUSH2 0x3B8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3DE1 DUP2 PUSH2 0x3B66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3DFA PUSH0 DUP4 ADD DUP5 PUSH2 0x3DD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E18 DUP2 PUSH2 0x3E00 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E31 PUSH0 DUP4 ADD DUP5 PUSH2 0x3E0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E6B DUP2 PUSH2 0x3E37 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EA3 DUP2 PUSH2 0x3BA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3EB4 DUP4 DUP4 PUSH2 0x3E9A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3ED6 DUP3 PUSH2 0x3E71 JUMP JUMPDEST PUSH2 0x3EE0 DUP2 DUP6 PUSH2 0x3E7B JUMP JUMPDEST SWAP4 POP PUSH2 0x3EEB DUP4 PUSH2 0x3E8B JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F1B JUMPI DUP2 MLOAD PUSH2 0x3F02 DUP9 DUP3 PUSH2 0x3EA9 JUMP JUMPDEST SWAP8 POP PUSH2 0x3F0D DUP4 PUSH2 0x3EC0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3EEE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x3F3B PUSH0 DUP4 ADD DUP11 PUSH2 0x3E62 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3F4D DUP2 DUP10 PUSH2 0x3AEF JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3F61 DUP2 DUP9 PUSH2 0x3AEF JUMP JUMPDEST SWAP1 POP PUSH2 0x3F70 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x3C12 JUMP JUMPDEST PUSH2 0x3F7D PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x3DD8 JUMP JUMPDEST PUSH2 0x3F8A PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3CE8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x3F9C DUP2 DUP5 PUSH2 0x3ECC JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FC4 DUP2 PUSH2 0x3FAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3FDD PUSH0 DUP4 ADD DUP5 PUSH2 0x3FBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3FEC DUP2 PUSH2 0x3D4E JUMP JUMPDEST DUP2 EQ PUSH2 0x3FF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4007 DUP2 PUSH2 0x3FE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x4027 JUMPI PUSH2 0x4026 PUSH2 0x39E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4034 DUP10 DUP3 DUP11 ADD PUSH2 0x3B8D JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x4045 DUP10 DUP3 DUP11 ADD PUSH2 0x3BC0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x4056 DUP10 DUP3 DUP11 ADD PUSH2 0x3BC0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x4067 DUP10 DUP3 DUP11 ADD PUSH2 0x3FF9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x4078 DUP10 DUP3 DUP11 ADD PUSH2 0x3CA9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x4089 DUP10 DUP3 DUP11 ADD PUSH2 0x3CA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x40B1 JUMPI PUSH2 0x40B0 PUSH2 0x39E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x40BE DUP11 DUP3 DUP12 ADD PUSH2 0x3B8D JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x40CF DUP11 DUP3 DUP12 ADD PUSH2 0x3B8D JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x40E0 DUP11 DUP3 DUP12 ADD PUSH2 0x3BC0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x40F1 DUP11 DUP3 DUP12 ADD PUSH2 0x3BC0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x4102 DUP11 DUP3 DUP12 ADD PUSH2 0x3FF9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x4113 DUP11 DUP3 DUP12 ADD PUSH2 0x3CA9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x4124 DUP11 DUP3 DUP12 ADD PUSH2 0x3CA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4149 JUMPI PUSH2 0x4148 PUSH2 0x39E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4156 DUP6 DUP3 DUP7 ADD PUSH2 0x3B8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4167 DUP6 DUP3 DUP7 ADD PUSH2 0x3B8D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x417A DUP2 PUSH2 0x3E00 JUMP JUMPDEST DUP2 EQ PUSH2 0x4184 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4195 DUP2 PUSH2 0x4171 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x41B1 JUMPI PUSH2 0x41B0 PUSH2 0x39E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x41BE DUP6 DUP3 DUP7 ADD PUSH2 0x3B8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x41CF DUP6 DUP3 DUP7 ADD PUSH2 0x4187 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x41E2 DUP2 PUSH2 0x3E00 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4218 DUP2 PUSH2 0x41E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x4232 PUSH0 DUP6 ADD DUP3 PUSH2 0x41D9 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x4245 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x420F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x425E PUSH0 DUP4 ADD DUP5 PUSH2 0x421E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x42A8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x42BB JUMPI PUSH2 0x42BA PUSH2 0x4264 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x4343 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x431F JUMPI PUSH2 0x431E PUSH2 0x42C1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x432E JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x433C DUP6 PUSH2 0x42EE JUMP JUMPDEST SWAP5 POP PUSH2 0x4303 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x435B JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x4416 JUMP JUMPDEST DUP2 PUSH2 0x4368 JUMPI PUSH0 SWAP1 POP PUSH2 0x4416 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x437E JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x4388 JUMPI PUSH2 0x43B7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x4416 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x439A JUMPI PUSH2 0x4399 PUSH2 0x42C1 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x43B1 JUMPI PUSH2 0x43B0 PUSH2 0x42C1 JUMP JUMPDEST JUMPDEST POP PUSH2 0x4416 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x43EC JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x43E7 JUMPI PUSH2 0x43E6 PUSH2 0x42C1 JUMP JUMPDEST JUMPDEST PUSH2 0x4416 JUMP JUMPDEST PUSH2 0x43F9 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x42FA JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x4410 JUMPI PUSH2 0x440F PUSH2 0x42C1 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4427 DUP3 PUSH2 0x3BA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x4432 DUP4 PUSH2 0x3BA1 JUMP JUMPDEST SWAP3 POP PUSH2 0x445F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x434C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4471 DUP3 PUSH2 0x3BA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x447C DUP4 PUSH2 0x3BA1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x448A DUP2 PUSH2 0x3BA1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x44A1 JUMPI PUSH2 0x44A0 PUSH2 0x42C1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4502 PUSH1 0x2F DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x450D DUP3 PUSH2 0x44A8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x452F DUP2 PUSH2 0x44F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4540 DUP3 PUSH2 0x3BA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x454B DUP4 PUSH2 0x3BA1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4563 JUMPI PUSH2 0x4562 PUSH2 0x42C1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20667574757265206C6F6F6B757000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x459D PUSH1 0x19 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x45A8 DUP3 PUSH2 0x4569 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x45CA DUP2 PUSH2 0x4591 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20746F206265206D696E7465642073686F756C64206E6F74206578 PUSH0 DUP3 ADD MSTORE PUSH32 0x63656564204D617820737570706C790000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x462B PUSH1 0x2F DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4636 DUP3 PUSH2 0x45D1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4658 DUP2 PUSH2 0x461F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A2062726F6B656E20636C6F636B206D6F6465000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4693 PUSH1 0x1D DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x469E DUP3 PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x46C0 DUP2 PUSH2 0x4687 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x477B PUSH1 0x25 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4786 DUP3 PUSH2 0x4721 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x47A8 DUP2 PUSH2 0x476F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A207369676E61747572652065787069726564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x47E3 PUSH1 0x1D DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x47EE DUP3 PUSH2 0x47AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4810 DUP2 PUSH2 0x47D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x482A PUSH0 DUP4 ADD DUP8 PUSH2 0x3CE8 JUMP JUMPDEST PUSH2 0x4837 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3DD8 JUMP JUMPDEST PUSH2 0x4844 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3C12 JUMP JUMPDEST PUSH2 0x4851 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3C12 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20696E76616C6964206E6F6E636500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x488E PUSH1 0x19 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4899 DUP3 PUSH2 0x485A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x48BB DUP2 PUSH2 0x4882 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x48F6 PUSH1 0x1D DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4901 DUP3 PUSH2 0x48C2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4923 DUP2 PUSH2 0x48EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x493D PUSH0 DUP4 ADD DUP10 PUSH2 0x3CE8 JUMP JUMPDEST PUSH2 0x494A PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x3DD8 JUMP JUMPDEST PUSH2 0x4957 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x3DD8 JUMP JUMPDEST PUSH2 0x4964 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x3C12 JUMP JUMPDEST PUSH2 0x4971 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x3C12 JUMP JUMPDEST PUSH2 0x497E PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x3C12 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x49BD PUSH1 0x1E DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x49C8 DUP3 PUSH2 0x4989 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x49EA DUP2 PUSH2 0x49B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x49FB DUP3 PUSH2 0x3BA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A06 DUP4 PUSH2 0x3BA1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x4A1E JUMPI PUSH2 0x4A1D PUSH2 0x42C1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4A7E PUSH1 0x24 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A89 DUP3 PUSH2 0x4A24 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4AAB DUP2 PUSH2 0x4A72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4B0C PUSH1 0x22 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B17 DUP3 PUSH2 0x4AB2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4B39 DUP2 PUSH2 0x4B00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4B74 PUSH1 0x1D DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B7F DUP3 PUSH2 0x4B40 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4BA1 DUP2 PUSH2 0x4B68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4C02 PUSH1 0x25 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C0D DUP3 PUSH2 0x4BA8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4C2F DUP2 PUSH2 0x4BF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4C90 PUSH1 0x23 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C9B DUP3 PUSH2 0x4C36 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4CBD DUP2 PUSH2 0x4C84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4D1E PUSH1 0x26 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D29 DUP3 PUSH2 0x4CC4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4D4B DUP2 PUSH2 0x4D12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4D86 PUSH1 0x10 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D91 DUP3 PUSH2 0x4D52 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4DB3 DUP2 PUSH2 0x4D7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4E14 PUSH1 0x26 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E1F DUP3 PUSH2 0x4DBA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4E41 DUP2 PUSH2 0x4E08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2034 PUSH0 DUP3 ADD MSTORE PUSH32 0x3820626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4EA2 PUSH1 0x26 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EAD DUP3 PUSH2 0x4E48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4ECF DUP2 PUSH2 0x4E96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4F14 PUSH1 0x17 DUP4 PUSH2 0x4ED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F1F DUP3 PUSH2 0x4EE0 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4F34 DUP3 PUSH2 0x3A9D JUMP JUMPDEST PUSH2 0x4F3E DUP2 DUP6 PUSH2 0x4ED6 JUMP JUMPDEST SWAP4 POP PUSH2 0x4F4E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3AB7 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4F8E PUSH1 0x11 DUP4 PUSH2 0x4ED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F99 DUP3 PUSH2 0x4F5A JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4FAE DUP3 PUSH2 0x4F08 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FBA DUP3 DUP6 PUSH2 0x4F2A JUMP JUMPDEST SWAP2 POP PUSH2 0x4FC5 DUP3 PUSH2 0x4F82 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FD1 DUP3 DUP5 PUSH2 0x4F2A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4FF0 PUSH0 DUP4 ADD DUP9 PUSH2 0x3CE8 JUMP JUMPDEST PUSH2 0x4FFD PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3CE8 JUMP JUMPDEST PUSH2 0x500A PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3CE8 JUMP JUMPDEST PUSH2 0x5017 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x3C12 JUMP JUMPDEST PUSH2 0x5024 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3DD8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x5065 DUP3 PUSH2 0x3BA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x5070 DUP4 PUSH2 0x3BA1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x5080 JUMPI PUSH2 0x507F PUSH2 0x502E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x50BF PUSH1 0x14 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x50CA DUP3 PUSH2 0x508B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x50EC DUP2 PUSH2 0x50B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH0 DUP3 ADD MSTORE PUSH32 0x766572666C6F77696E6720766F74657300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x514D PUSH1 0x30 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x5158 DUP3 PUSH2 0x50F3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x517A DUP2 PUSH2 0x5141 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5194 PUSH0 DUP4 ADD DUP6 PUSH2 0x3C12 JUMP JUMPDEST PUSH2 0x51A1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C12 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x51BB PUSH0 DUP4 ADD DUP8 PUSH2 0x3CE8 JUMP JUMPDEST PUSH2 0x51C8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3D5A JUMP JUMPDEST PUSH2 0x51D5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3CE8 JUMP JUMPDEST PUSH2 0x51E2 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3CE8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x524C PUSH1 0x18 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x5257 DUP3 PUSH2 0x5218 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5279 DUP2 PUSH2 0x5240 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x52B4 PUSH1 0x1F DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x52BF DUP3 PUSH2 0x5280 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x52E1 DUP2 PUSH2 0x52A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5342 PUSH1 0x22 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x534D DUP3 PUSH2 0x52E8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x536F DUP2 PUSH2 0x5336 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5380 DUP3 PUSH2 0x3BA1 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x5392 JUMPI PUSH2 0x5391 PUSH2 0x42C1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x53D1 PUSH1 0x20 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x53DC DUP3 PUSH2 0x539D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x53FE DUP2 PUSH2 0x53C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5439 PUSH1 0x1F DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x5444 DUP3 PUSH2 0x5405 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5466 DUP2 PUSH2 0x542D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x54C7 PUSH1 0x21 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x54D2 DUP3 PUSH2 0x546D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x54F4 DUP2 PUSH2 0x54BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5555 PUSH1 0x22 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x5560 DUP3 PUSH2 0x54FB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5582 DUP2 PUSH2 0x5549 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x55E3 PUSH1 0x27 DUP4 PUSH2 0x3AA7 JUMP JUMPDEST SWAP2 POP PUSH2 0x55EE DUP3 PUSH2 0x5589 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5610 DUP2 PUSH2 0x55D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 0xB9 DUP12 CALLDATASIZE 0xA6 0xA6 CALLDATASIZE 0xE3 CALL 0xCA 0xF8 0xC7 0x5C SWAP4 PUSH21 0xFD2AA2CACA0D7FDEC828BEBD2B848F6A9164736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"844:6507:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3255:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4504:129:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4929:145;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5188:223:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2309:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2867:113:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6038:214:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5854:234:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3466:248:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4730::26;;;:::i;:::-;;3309:711;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;578:89:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2047:254:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2838:126;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6275:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1615:84:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2601:149:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3419:125:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;973:161:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2617:126:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4253:244:26;;;:::i;:::-;;5021:633:20;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;3976:239:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3021:145:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1817:118:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:102:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3043:243:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2153:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6575:427:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6464:574:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1930:626:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2210:62:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5354:147:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3987:149:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2077:62:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2378:148:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2732:202:0;2817:4;2855:32;2840:47;;;:11;:47;;;;:87;;;;2891:36;2915:11;2891:23;:36::i;:::-;2840:87;2833:94;;2732:202;;;:::o;2158:98:7:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;3255:106::-;3316:7;3342:12;;3335:19;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;4504:129:0:-;4578:7;4604:6;:12;4611:4;4604:12;;;;;;;;;;;:22;;;4597:29;;4504:129;;;:::o;4929:145::-;5012:18;5025:4;5012:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;5188:223:26:-;5238:5;5246:30;5257:18;5246:30;;:10;:30::i;:::-;5295;5306:18;5295:30;;:10;:30::i;:::-;5347;5358:18;5347:30;;:10;:30::i;:::-;5403:1;5396:8;;5188:223;:::o;2309:64::-;2371:1;2359:2;:14;;;;:::i;:::-;2346:10;:27;;;;:::i;:::-;2309:64;:::o;2867:113:10:-;2927:7;2953:20;:18;:20::i;:::-;2946:27;;2867:113;:::o;6038:214:0:-;6144:12;:10;:12::i;:::-;6133:23;;:7;:23;;;6125:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;5854:234:7:-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;3466:248:11:-;3562:7;3601;:5;:7::i;:::-;3589:19;;:9;:19;3581:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3655:52;3674:12;:21;3687:7;3674:21;;;;;;;;;;;;;;;3697:9;3655:18;:52::i;:::-;3648:59;;3466:248;;;;:::o;4730::26:-;1452:30;1463:18;1452:30;;:10;:30::i;:::-;2115:24:::1;2631:16:0;2642:4;2631:10;:16::i;:::-;1369:30:26::2;1380:18;1369:30;;:10;:30::i;:::-;4811::::3;4822:18;4811:30;;:10;:30::i;:::-;4860;4871:18;4860:30;;:10;:30::i;:::-;4912;4923:18;4912:30;;:10;:30::i;:::-;4961:10;:8;:10::i;:::-;1505:1:::1;4730:248::o:0;3309:711::-;1947:30;1958:18;1947:30;;:10;:30::i;:::-;1239:19:6::1;:17;:19::i;:::-;1864:30:26::2;1875:18;1864:30;;:10;:30::i;:::-;1782::::3;1793:18;1782:30;;:10;:30::i;:::-;2248:24:::4;2631:16:0;2642:4;2631:10;:16::i;:::-;1699:30:26::5;1710:18;1699:30;;:10;:30::i;:::-;3511::::6;3522:18;3511:30;;:10;:30::i;:::-;3560;3571:18;3560:30;;:10;:30::i;:::-;3612;3623:18;3612:30;;:10;:30::i;:::-;3662;3673:18;3662:30;;:10;:30::i;:::-;2371:1;2359:2;:14;;;;:::i;:::-;2346:10;:27;;;;:::i;:::-;3748:6;3732:13;:11;:13::i;:::-;:22;;;;:::i;:::-;:36;;3711:130;;;;;;;;;;;;:::i;:::-;;;;;;;;;3842:30;3853:18;3842:30;;:10;:30::i;:::-;3895;3906:18;3895:30;;:10;:30::i;:::-;3947;3958:18;3947:30;;:10;:30::i;:::-;3996:17;4002:2;4006:6;3996:5;:17::i;:::-;1835:1:::4;3309:711:::0;;:::o;578:89:9:-;633:27;639:12;:10;:12::i;:::-;653:6;633:5;:27::i;:::-;578:89;:::o;2047:254:11:-;2107:13;2200:12;2189:7;:5;:7::i;:::-;:23;;;2181:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;2256:38;;;;;;;;;;;;;;;;;;;2047:254;:::o;2838:126::-;2912:7;2938:10;:19;2949:7;2938:19;;;;;;;;;;;;;;;;;;;;;;;;;2931:26;;2838:126;;;:::o;6275:112::-;6346:34;6356:12;:10;:12::i;:::-;6370:9;6346;:34::i;:::-;6275:112;:::o;1615:84:6:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;2601:149:11:-;2671:6;2696:47;2714:12;:21;2727:7;2714:21;;;;;;;;;;;;;;;:28;;;;2696:17;:47::i;:::-;2689:54;;2601:149;;;:::o;3419:125:7:-;3493:7;3519:9;:18;3529:7;3519:18;;;;;;;;;;;;;;;;3512:25;;3419:125;;;:::o;973:161:9:-;1049:46;1065:7;1074:12;:10;:12::i;:::-;1088:6;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;:::-;973:161;;:::o;2617:126:10:-;2686:7;2712:24;:7;:14;2720:5;2712:14;;;;;;;;;;;;;;;:22;:24::i;:::-;2705:31;;2617:126;;;:::o;4253:244:26:-;1617:30;1628:18;1617:30;;:10;:30::i;:::-;2115:24:::1;2631:16:0;2642:4;2631:10;:16::i;:::-;1534:30:26::2;1545:18;1534:30;;:10;:30::i;:::-;4332::::3;4343:18;4332:30;;:10;:30::i;:::-;4381;4392:18;4381:30;;:10;:30::i;:::-;4433;4444:18;4433:30;;:10;:30::i;:::-;4482:8;:6;:8::i;:::-;1670:1:::1;4253:244::o:0;5021:633:20:-;5136:13;5163:18;5195:21;5230:15;5259:25;5298:12;5324:27;5427:41;5454:13;5427:5;:26;;:41;;;;:::i;:::-;5482:47;5512:16;5482:8;:29;;:47;;;;:::i;:::-;5543:13;5578:4;5605:1;5597:10;;5635:1;5621:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5376:271;;;;;;;;;;;;;;;;;;;;;5021:633;;;;;;;:::o;3976:239:11:-;4061:7;4100;:5;:7::i;:::-;4088:19;;:9;:19;4080:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;4154:54;4173:23;4198:9;4154:18;:54::i;:::-;4147:61;;3976:239;;;:::o;3021:145:0:-;3107:4;3130:6;:12;3137:4;3130:12;;;;;;;;;;;:20;;:29;3151:7;3130:29;;;;;;;;;;;;;;;;;;;;;;;;;3123:36;;3021:145;;;;:::o;1817:118:11:-;1872:6;1897:31;1915:12;1897:17;:31::i;:::-;1890:38;;1817:118;:::o;2369:102:7:-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;3043:243:11:-;3116:7;3135:11;3149:12;:21;3162:7;3149:21;;;;;;;;;;;;;;;:28;;;;3135:42;;3225:1;3218:3;:8;:51;;3233:12;:21;3246:7;3233:21;;;;;;;;;;;;;;;3261:1;3255:3;:7;3233:30;;;;;;;;:::i;:::-;;;;;;;;;:36;;;;;;;;;;;;3218:51;;;3229:1;3218:51;3211:58;;;;;3043:243;;;:::o;2153:49:0:-;2198:4;2153:49;;;:::o;6575:427:7:-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;:::-;3918:4;3911:11;;;3740:189;;;;:::o;6464:574:11:-;6683:6;6664:15;:25;;6656:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;6733:14;6750:169;6777:87;1439:71;6837:9;6848:5;6855:6;6804:58;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6794:69;;;;;;6777:16;:87::i;:::-;6878:1;6893;6908;6750:13;:169::i;:::-;6733:186;;6946:17;6956:6;6946:9;:17::i;:::-;6937:5;:26;6929:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7003:28;7013:6;7021:9;7003;:28::i;:::-;6646:392;6464:574;;;;;;:::o;1930:626:10:-;2165:8;2146:15;:27;;2138:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2218:18;1125:95;2278:5;2285:7;2294:5;2301:16;2311:5;2301:9;:16::i;:::-;2319:8;2249:79;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2239:90;;;;;;2218:111;;2340:12;2355:28;2372:10;2355:16;:28::i;:::-;2340:43;;2394:14;2411:28;2425:4;2431:1;2434;2437;2411:13;:28::i;:::-;2394:45;;2467:5;2457:15;;:6;:15;;;2449:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2518:31;2527:5;2534:7;2543:5;2518:8;:31::i;:::-;2128:428;;;1930:626;;;;;;;:::o;2210:62:26:-;2248:24;2210:62;:::o;5354:147:0:-;5438:18;5451:4;5438:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;:::-;5354:147:::0;;;:::o;3987:149:7:-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;2077:62:26:-;2115:24;2077:62;:::o;2378:148:11:-;2457:17;;:::i;:::-;2493:12;:21;2506:7;2493:21;;;;;;;;;;;;;;;2515:3;2493:26;;;;;;;;;;:::i;:::-;;;;;;;;;2486:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2378:148;;;;:::o;10194:96::-;10252:7;10282:1;10278;:5;;;;:::i;:::-;10271:12;;10194:96;;;;:::o;10296:101::-;10359:7;10389:1;10385;:5;;;;:::i;:::-;10378:12;;10296:101;;;;:::o;829:155:21:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;640:96:14:-;693:7;719:10;712:17;;640:96;:::o;10457:340:7:-;10575:1;10558:19;;:5;:19;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;7456:788::-;7568:1;7552:18;;:4;:18;;;7544:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7644:1;7630:16;;:2;:16;;;7622:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;7746:19;7768:9;:15;7778:4;7768:15;;;;;;;;;;;;;;;;7746:37;;7816:6;7801:11;:21;;7793:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7931:6;7917:11;:20;7899:9;:15;7909:4;7899:15;;;;;;;;;;;;;;;:38;;;;8131:6;8114:9;:13;8124:2;8114:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8178:2;8163:26;;8172:4;8163:26;;;8182:6;8163:26;;;;;;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;:::-;7534:710;7456:788;;;:::o;3460:103:0:-;3526:30;3537:4;3543:12;:10;:12::i;:::-;3526:10;:30::i;:::-;3460:103;:::o;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7740:4;7708:6;:12;7715:4;7708:12;;;;;;;;;;;:20;;:29;7729:7;7708:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7790:12;:10;:12::i;:::-;7763:40;;7781:7;7763:40;;7775:4;7763:40;;;;;;;;;;7665:149;7587:233;;:::o;943:56:26:-;;:::o;3695:262:20:-;3748:7;3788:11;3771:28;;3779:4;3771:28;;;:63;;;;;3820:14;3803:13;:31;3771:63;3767:184;;;3857:22;3850:29;;;;3767:184;3917:23;:21;:23::i;:::-;3910:30;;3695:262;;:::o;7991:234:0:-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:6;:12;8119:4;8112:12;;;;;;;;;;;:20;;:29;8133:7;8112:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8195:12;:10;:12::i;:::-;8168:40;;8186:7;8168:40;;8180:4;8168:40;;;;;;;;;;8070:149;7991:234;;:::o;4299:1895:11:-;4396:7;5493:14;5510:5;:12;;;;5493:29;;5533:11;5558:12;5573:6;5558:21;;5603:1;5594:6;:10;5590:242;;;5620:11;5643:17;5653:6;5643:9;:17::i;:::-;5634:6;:26;;;;:::i;:::-;5620:40;;5716:9;5678:25;5692:5;5699:3;5678:13;:25::i;:::-;:35;;;;;;;;;;;;:47;;;5674:148;;;5752:3;5745:10;;5674:148;;;5806:1;5800:3;:7;;;;:::i;:::-;5794:13;;5674:148;5606:226;5590:242;5842;5855:4;5849:3;:10;5842:242;;;5875:11;5889:23;5902:3;5907:4;5889:12;:23::i;:::-;5875:37;;5968:9;5930:25;5944:5;5951:3;5930:13;:25::i;:::-;:35;;;;;;;;;;;;:47;;;5926:148;;;6004:3;5997:10;;5926:148;;;6058:1;6052:3;:7;;;;:::i;:::-;6046:13;;5926:148;5861:223;5842:242;;;6133:1;6125:4;:9;:52;;6141:30;6155:5;6169:1;6162:4;:8;6141:13;:30::i;:::-;:36;;;;;;;;;;;;6125:52;;;6137:1;6125:52;6118:59;;;;;;;4299:1895;;;;:::o;2433:117:6:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7;;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;1767:106::-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;6626:317:26:-;6758:30;6769:18;6758:30;;:10;:30::i;:::-;6807;6818:18;6807:30;;:10;:30::i;:::-;6859;6870:18;6859:30;;:10;:30::i;:::-;6908:28;6920:7;6929:6;6908:11;:28::i;:::-;6626:317;;:::o;7032:::-;7164:30;7175:18;7164:30;;:10;:30::i;:::-;7213;7224:18;7213:30;;:10;:30::i;:::-;7265;7276:18;7265:30;;:10;:30::i;:::-;7314:28;7326:7;7335:6;7314:11;:28::i;:::-;7032:317;;:::o;8431:380:11:-;8515:23;8541:20;8551:9;8541;:20::i;:::-;8515:46;;8571:24;8598:20;8608:9;8598;:20::i;:::-;8571:47;;8652:9;8628:10;:21;8639:9;8628:21;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;8721:9;8677:54;;8704:15;8677:54;;8693:9;8677:54;;;;;;;;;;;;8742:62;8759:15;8776:9;8787:16;8742;:62::i;:::-;8505:306;;8431:380;;:::o;15264:187:24:-;15320:6;15355:16;15346:25;;:5;:25;;15338:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;15438:5;15424:20;;15264:187;;;:::o;827:112:15:-;892:7;918;:14;;;911:21;;827:112;;;:::o;2186:115:6:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;3367:268:16:-;3461:13;1371:66;3519:18;;3509:5;3490:47;3486:143;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3486:143;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3367:268;;;;;:::o;14240:187:24:-;14296:6;14331:16;14322:25;;:5;:25;;14314:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;14414:5;14400:20;;14240:187;;;:::o;4768:165:20:-;4845:7;4871:55;4893:20;:18;:20::i;:::-;4915:10;4871:21;:55::i;:::-;4864:62;;4768:165;;;:::o;6598:232:19:-;6683:7;6703:17;6722:18;6744:25;6755:4;6761:1;6764;6767;6744:10;:25::i;:::-;6702:67;;;;6779:18;6791:5;6779:11;:18::i;:::-;6814:9;6807:16;;;;6598:232;;;;;;:::o;3111:203:10:-;3171:15;3198:30;3231:7;:14;3239:5;3231:14;;;;;;;;;;;;;;;3198:47;;3265:15;:5;:13;:15::i;:::-;3255:25;;3290:17;:5;:15;:17::i;:::-;3188:126;3111:203;;;:::o;5636:399:26:-;1287:30;1298:18;1287:30;;:10;:30::i;:::-;1239:19:6::1;:17;:19::i;:::-;1204:30:26::2;1215:18;1204:30;;:10;:30::i;:::-;5834::::3;5845:18;5834:30;;:10;:30::i;:::-;5883;5894:18;5883:30;;:10;:30::i;:::-;5935;5946:18;5935:30;;:10;:30::i;:::-;5984:44;6011:4;6017:2;6021:6;5984:26;:44::i;:::-;5636:399:::0;;;:::o;6174:363::-;6337:30;6348:18;6337:30;;:10;:30::i;:::-;6386;6397:18;6386:30;;:10;:30::i;:::-;6438;6449:18;6438:30;;:10;:30::i;:::-;6487:43;6513:4;6519:2;6523:6;6487:25;:43::i;:::-;6174:363;;;:::o;3844:479:0:-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4234:13;;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3970:336;;;;;;;;;;;:::i;:::-;;;;;;;;3927:390;3844:479;;:::o;3963:180:20:-;4018:7;1929:95;4077:11;4090:14;4106:13;4129:4;4054:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;:::o;6530:1642:23:-;6578:7;6606:1;6601;:6;6597:45;;6630:1;6623:8;;;;6597:45;7321:14;7355:1;7344:7;7349:1;7344:4;:7::i;:::-;:12;;7338:1;:19;;7321:36;;7816:1;7805:6;7801:1;:10;;;;;:::i;:::-;;;7792:6;:19;7791:26;;7782:35;;7865:1;7854:6;7850:1;:10;;;;;:::i;:::-;;;7841:6;:19;7840:26;;7831:35;;7914:1;7903:6;7899:1;:10;;;;;:::i;:::-;;;7890:6;:19;7889:26;;7880:35;;7963:1;7952:6;7948:1;:10;;;;;:::i;:::-;;;7939:6;:19;7938:26;;7929:35;;8012:1;8001:6;7997:1;:10;;;;;:::i;:::-;;;7988:6;:19;7987:26;;7978:35;;8061:1;8050:6;8046:1;:10;;;;;:::i;:::-;;;8037:6;:19;8036:26;;8027:35;;8110:1;8099:6;8095:1;:10;;;;;:::i;:::-;;;8086:6;:19;8085:26;;8076:35;;8132:23;8136:6;8148;8144:1;:10;;;;;:::i;:::-;;;8132:3;:23::i;:::-;8125:30;;;6530:1642;;;;:::o;10540:239:11:-;10626:25;10696:10;10693:1;10686:21;10759:3;10752:4;10749:1;10739:18;10735:28;10720:43;;10540:239;;;;:::o;805:153:23:-;867:7;950:1;945;941;:5;940:11;;;;:::i;:::-;935:1;931;:5;930:21;;;;:::i;:::-;923:28;;805:153;;;;:::o;1945:106:6:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;7332:285:11:-;7416:28;7428:7;7437:6;7416:11;:28::i;:::-;7479:12;:10;:12::i;:::-;7462:29;;:13;:11;:13::i;:::-;:29;;7454:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;7555:55;7572:23;7597:4;7603:6;7555:16;:55::i;:::-;;;7332:285;;:::o;7706:190::-;7790:28;7802:7;7811:6;7790:11;:28::i;:::-;7829:60;7846:23;7871:9;7882:6;7829:16;:60::i;:::-;;;7706:190;;:::o;8817:597::-;8914:3;8907:10;;:3;:10;;;;:24;;;;;8930:1;8921:6;:10;8907:24;8903:505;;;8966:1;8951:17;;:3;:17;;;8947:221;;8989:17;9008;9029:54;9046:12;:17;9059:3;9046:17;;;;;;;;;;;;;;;9065:9;9076:6;9029:16;:54::i;:::-;8988:95;;;;9127:3;9106:47;;;9132:9;9143;9106:47;;;;;;;:::i;:::-;;;;;;;;8970:198;;8947:221;9201:1;9186:17;;:3;:17;;;9182:216;;9224:17;9243;9264:49;9281:12;:17;9294:3;9281:17;;;;;;;;;;;;;;;9300:4;9306:6;9264:16;:49::i;:::-;9223:90;;;;9357:3;9336:47;;;9362:9;9373;9336:47;;;;;;;:::i;:::-;;;;;;;;9205:193;;9182:216;8903:505;8817:597;;;:::o;2059:405:16:-;2118:13;2143:11;2157:16;2168:4;2157:10;:16::i;:::-;2143:30;;2261:17;2292:2;2281:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2261:34;;2383:3;2378;2371:16;2423:4;2416;2411:3;2407:14;2400:28;2454:3;2447:10;;;;2059:405;;;:::o;8336:397:19:-;8429:12;8536:4;8530:11;8566:10;8561:3;8554:23;8613:15;8606:4;8601:3;8597:14;8590:39;8665:10;8658:4;8653:3;8649:14;8642:34;8712:4;8707:3;8697:20;8689:28;;8505:222;8336:397;;;;:::o;5009:1456::-;5097:7;5106:12;6021:66;6016:1;6008:10;;:79;6004:161;;;6119:1;6123:30;6103:51;;;;;;6004:161;6259:14;6276:24;6286:4;6292:1;6295;6298;6276:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6259:41;;6332:1;6314:20;;:6;:20;;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;6437:20;6421:37;;;;;5009:1456;;;;;;;;:::o;570:511::-;647:20;638:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;634:441;683:7;634:441;743:29;734:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;730:345;;788:34;;;;;;;;;;:::i;:::-;;;;;;;;730:345;852:35;843:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;839:236;;903:41;;;;;;;;;;:::i;:::-;;;;;;;;839:236;974:30;965:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;961:114;;1020:44;;;;;;;;;;:::i;:::-;;;;;;;;961:114;570:511;;:::o;945:123:15:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;12073:91:7:-;;;;:::o;8036:224:11:-;8143:43;8169:4;8175:2;8179:6;8143:25;:43::i;:::-;8197:56;8214:15;8224:4;8214:9;:15::i;:::-;8231:13;8241:2;8231:9;:13::i;:::-;8246:6;8197:16;:56::i;:::-;8036:224;;;:::o;2407:149:18:-;2465:13;2497:52;2525:4;2509:22;;343:2;2497:52;;:11;:52::i;:::-;2490:59;;2407:149;;;:::o;1818:437::-;1893:13;1918:19;1963:1;1954:6;1950:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:47;;1975:15;:6;1982:1;1975:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2000;:6;2007:1;2000:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2030:9;2055:1;2046:6;2042:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;2096:8;2113:3;2105:5;:11;2096:21;;;;;;;:::i;:::-;;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;2141:1;2131:11;;;;;2065:3;;;;:::i;:::-;;;2025:128;;;;2179:1;2170:5;:10;2162:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2241:6;2227:21;;;1818:437;;;;:::o;8633:983:23:-;8685:7;8704:14;8721:1;8704:18;;8775:1;8769:3;8760:5;:12;;:16;8756:99;;;8806:3;8796:13;;;;;8837:3;8827:13;;;;8756:99;8886:1;8881:2;8872:5;:11;;:15;8868:96;;;8917:2;8907:12;;;;;8947:2;8937:12;;;;8868:96;8995:1;8990:2;8981:5;:11;;:15;8977:96;;;9026:2;9016:12;;;;;9056:2;9046:12;;;;8977:96;9104:1;9099:2;9090:5;:11;;:15;9086:96;;;9135:2;9125:12;;;;;9165:2;9155:12;;;;9086:96;9212:1;9208;9199:5;:10;;:14;9195:93;;;9243:1;9233:11;;;;;9272:1;9262:11;;;;9195:93;9318:1;9314;9305:5;:10;;:14;9301:93;;;9349:1;9339:11;;;;;9378:1;9368:11;;;;9301:93;9424:1;9420;9411:5;:10;;:14;9407:93;;;9455:1;9445:11;;;;;9484:1;9474:11;;;;9407:93;9530:1;9526;9517:5;:10;;:14;9513:64;;;9561:1;9551:11;;;;9513:64;9603:6;9596:13;;;8633:983;;;:::o;588:104::-;646:7;676:1;672;:5;:13;;684:1;672:13;;;680:1;672:13;665:20;;588:104;;;;:::o;8520:535:7:-;8622:1;8603:21;;:7;:21;;;8595:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;;;;;8921:6;8899:9;:18;8909:7;8899:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;8973:7;8952:37;;8969:1;8952:37;;;8982:6;8952:37;;;;;;:::i;:::-;;;;;;;;9000:48;9028:1;9032:7;9041:6;9000:19;:48::i;:::-;8520:535;;:::o;7140:103:11:-;7193:7;7219:17;7212:24;;7140:103;:::o;9420:768::-;9590:17;9609;9638:11;9652:5;:12;;;;9638:26;;9699:25;9734:1;9727:3;:8;:59;;9757:29;9771:5;9784:1;9778:3;:7;9757:13;:29::i;:::-;9727:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9738:16;;;;;;;;9749:1;9738:16;;;;;;9752:1;9738:16;;;;;9727:59;9699:87;;9813:7;:13;;;9801:25;;;;9852:20;9855:9;9866:5;9852:2;:20;;:::i;:::-;9840:32;;9897:1;9891:3;:7;:39;;;;;9923:7;:5;:7::i;:::-;9902:28;;:7;:17;;;:28;;;9891:39;9887:285;;;9988:29;10007:9;9988:18;:29::i;:::-;9950;9964:5;9977:1;9971:3;:7;9950:13;:29::i;:::-;:35;;;:67;;;;;;;;;;;;;;;;;;9887:285;;;10056:5;10067:89;;;;;;;;10090:26;10108:7;:5;:7::i;:::-;10090:26;;:17;:26::i;:::-;10067:89;;;;;;10125:29;10144:9;10125:18;:29::i;:::-;10067:89;;;;;10056:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9887:285;9675:507;9628:560;9420:768;;;;;;:::o;9375:659:7:-;9477:1;9458:21;;:7;:21;;;9450:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9528:49;9549:7;9566:1;9570:6;9528:20;:49::i;:::-;9588:22;9613:9;:18;9623:7;9613:18;;;;;;;;;;;;;;;;9588:43;;9667:6;9649:14;:24;;9641:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;9784:6;9767:14;:23;9746:9;:18;9756:7;9746:18;;;;;;;;;;;;;;;:44;;;;9899:6;9883:12;;:22;;;;;;;;;;;9957:1;9931:37;;9940:7;9931:37;;;9961:6;9931:37;;;;;;:::i;:::-;;;;;;;;9979:48;9999:7;10016:1;10020:6;9979:19;:48::i;:::-;9440:594;9375:659;;:::o;2536:245:16:-;2597:7;2616:14;2669:4;2660;2633:33;;:40;2616:57;;2696:2;2687:6;:11;2683:69;;;2721:20;;;;;;;;;;;;;;2683:69;2768:6;2761:13;;;2536:245;;;:::o;12752:90:7:-;;;;:::o;2836:192:24:-;2893:7;2929:17;2920:26;;:5;:26;;2912:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3015:5;3000:21;;2836:192;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:27:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:126::-;2897:7;2937:42;2930:5;2926:54;2915:65;;2860:126;;;:::o;2992:96::-;3029:7;3058:24;3076:5;3058:24;:::i;:::-;3047:35;;2992:96;;;:::o;3094:122::-;3167:24;3185:5;3167:24;:::i;:::-;3160:5;3157:35;3147:63;;3206:1;3203;3196:12;3147:63;3094:122;:::o;3222:139::-;3268:5;3306:6;3293:20;3284:29;;3322:33;3349:5;3322:33;:::i;:::-;3222:139;;;;:::o;3367:77::-;3404:7;3433:5;3422:16;;3367:77;;;:::o;3450:122::-;3523:24;3541:5;3523:24;:::i;:::-;3516:5;3513:35;3503:63;;3562:1;3559;3552:12;3503:63;3450:122;:::o;3578:139::-;3624:5;3662:6;3649:20;3640:29;;3678:33;3705:5;3678:33;:::i;:::-;3578:139;;;;:::o;3723:474::-;3791:6;3799;3848:2;3836:9;3827:7;3823:23;3819:32;3816:119;;;3854:79;;:::i;:::-;3816:119;3974:1;3999:53;4044:7;4035:6;4024:9;4020:22;3999:53;:::i;:::-;3989:63;;3945:117;4101:2;4127:53;4172:7;4163:6;4152:9;4148:22;4127:53;:::i;:::-;4117:63;;4072:118;3723:474;;;;;:::o;4203:118::-;4290:24;4308:5;4290:24;:::i;:::-;4285:3;4278:37;4203:118;;:::o;4327:222::-;4420:4;4458:2;4447:9;4443:18;4435:26;;4471:71;4539:1;4528:9;4524:17;4515:6;4471:71;:::i;:::-;4327:222;;;;:::o;4555:619::-;4632:6;4640;4648;4697:2;4685:9;4676:7;4672:23;4668:32;4665:119;;;4703:79;;:::i;:::-;4665:119;4823:1;4848:53;4893:7;4884:6;4873:9;4869:22;4848:53;:::i;:::-;4838:63;;4794:117;4950:2;4976:53;5021:7;5012:6;5001:9;4997:22;4976:53;:::i;:::-;4966:63;;4921:118;5078:2;5104:53;5149:7;5140:6;5129:9;5125:22;5104:53;:::i;:::-;5094:63;;5049:118;4555:619;;;;;:::o;5180:77::-;5217:7;5246:5;5235:16;;5180:77;;;:::o;5263:122::-;5336:24;5354:5;5336:24;:::i;:::-;5329:5;5326:35;5316:63;;5375:1;5372;5365:12;5316:63;5263:122;:::o;5391:139::-;5437:5;5475:6;5462:20;5453:29;;5491:33;5518:5;5491:33;:::i;:::-;5391:139;;;;:::o;5536:329::-;5595:6;5644:2;5632:9;5623:7;5619:23;5615:32;5612:119;;;5650:79;;:::i;:::-;5612:119;5770:1;5795:53;5840:7;5831:6;5820:9;5816:22;5795:53;:::i;:::-;5785:63;;5741:117;5536:329;;;;:::o;5871:118::-;5958:24;5976:5;5958:24;:::i;:::-;5953:3;5946:37;5871:118;;:::o;5995:222::-;6088:4;6126:2;6115:9;6111:18;6103:26;;6139:71;6207:1;6196:9;6192:17;6183:6;6139:71;:::i;:::-;5995:222;;;;:::o;6223:474::-;6291:6;6299;6348:2;6336:9;6327:7;6323:23;6319:32;6316:119;;;6354:79;;:::i;:::-;6316:119;6474:1;6499:53;6544:7;6535:6;6524:9;6520:22;6499:53;:::i;:::-;6489:63;;6445:117;6601:2;6627:53;6672:7;6663:6;6652:9;6648:22;6627:53;:::i;:::-;6617:63;;6572:118;6223:474;;;;;:::o;6703:86::-;6738:7;6778:4;6771:5;6767:16;6756:27;;6703:86;;;:::o;6795:112::-;6878:22;6894:5;6878:22;:::i;:::-;6873:3;6866:35;6795:112;;:::o;6913:214::-;7002:4;7040:2;7029:9;7025:18;7017:26;;7053:67;7117:1;7106:9;7102:17;7093:6;7053:67;:::i;:::-;6913:214;;;;:::o;7133:329::-;7192:6;7241:2;7229:9;7220:7;7216:23;7212:32;7209:119;;;7247:79;;:::i;:::-;7209:119;7367:1;7392:53;7437:7;7428:6;7417:9;7413:22;7392:53;:::i;:::-;7382:63;;7338:117;7133:329;;;;:::o;7468:::-;7527:6;7576:2;7564:9;7555:7;7551:23;7547:32;7544:119;;;7582:79;;:::i;:::-;7544:119;7702:1;7727:53;7772:7;7763:6;7752:9;7748:22;7727:53;:::i;:::-;7717:63;;7673:117;7468:329;;;;:::o;7803:118::-;7890:24;7908:5;7890:24;:::i;:::-;7885:3;7878:37;7803:118;;:::o;7927:222::-;8020:4;8058:2;8047:9;8043:18;8035:26;;8071:71;8139:1;8128:9;8124:17;8115:6;8071:71;:::i;:::-;7927:222;;;;:::o;8155:93::-;8191:7;8231:10;8224:5;8220:22;8209:33;;8155:93;;;:::o;8254:115::-;8339:23;8356:5;8339:23;:::i;:::-;8334:3;8327:36;8254:115;;:::o;8375:218::-;8466:4;8504:2;8493:9;8489:18;8481:26;;8517:69;8583:1;8572:9;8568:17;8559:6;8517:69;:::i;:::-;8375:218;;;;:::o;8599:149::-;8635:7;8675:66;8668:5;8664:78;8653:89;;8599:149;;;:::o;8754:115::-;8839:23;8856:5;8839:23;:::i;:::-;8834:3;8827:36;8754:115;;:::o;8875:114::-;8942:6;8976:5;8970:12;8960:22;;8875:114;;;:::o;8995:184::-;9094:11;9128:6;9123:3;9116:19;9168:4;9163:3;9159:14;9144:29;;8995:184;;;;:::o;9185:132::-;9252:4;9275:3;9267:11;;9305:4;9300:3;9296:14;9288:22;;9185:132;;;:::o;9323:108::-;9400:24;9418:5;9400:24;:::i;:::-;9395:3;9388:37;9323:108;;:::o;9437:179::-;9506:10;9527:46;9569:3;9561:6;9527:46;:::i;:::-;9605:4;9600:3;9596:14;9582:28;;9437:179;;;;:::o;9622:113::-;9692:4;9724;9719:3;9715:14;9707:22;;9622:113;;;:::o;9771:732::-;9890:3;9919:54;9967:5;9919:54;:::i;:::-;9989:86;10068:6;10063:3;9989:86;:::i;:::-;9982:93;;10099:56;10149:5;10099:56;:::i;:::-;10178:7;10209:1;10194:284;10219:6;10216:1;10213:13;10194:284;;;10295:6;10289:13;10322:63;10381:3;10366:13;10322:63;:::i;:::-;10315:70;;10408:60;10461:6;10408:60;:::i;:::-;10398:70;;10254:224;10241:1;10238;10234:9;10229:14;;10194:284;;;10198:14;10494:3;10487:10;;9895:608;;;9771:732;;;;:::o;10509:1215::-;10858:4;10896:3;10885:9;10881:19;10873:27;;10910:69;10976:1;10965:9;10961:17;10952:6;10910:69;:::i;:::-;11026:9;11020:4;11016:20;11011:2;11000:9;10996:18;10989:48;11054:78;11127:4;11118:6;11054:78;:::i;:::-;11046:86;;11179:9;11173:4;11169:20;11164:2;11153:9;11149:18;11142:48;11207:78;11280:4;11271:6;11207:78;:::i;:::-;11199:86;;11295:72;11363:2;11352:9;11348:18;11339:6;11295:72;:::i;:::-;11377:73;11445:3;11434:9;11430:19;11421:6;11377:73;:::i;:::-;11460;11528:3;11517:9;11513:19;11504:6;11460:73;:::i;:::-;11581:9;11575:4;11571:20;11565:3;11554:9;11550:19;11543:49;11609:108;11712:4;11703:6;11609:108;:::i;:::-;11601:116;;10509:1215;;;;;;;;;;:::o;11730:97::-;11766:7;11806:14;11799:5;11795:26;11784:37;;11730:97;;;:::o;11833:115::-;11918:23;11935:5;11918:23;:::i;:::-;11913:3;11906:36;11833:115;;:::o;11954:218::-;12045:4;12083:2;12072:9;12068:18;12060:26;;12096:69;12162:1;12151:9;12147:17;12138:6;12096:69;:::i;:::-;11954:218;;;;:::o;12178:118::-;12249:22;12265:5;12249:22;:::i;:::-;12242:5;12239:33;12229:61;;12286:1;12283;12276:12;12229:61;12178:118;:::o;12302:135::-;12346:5;12384:6;12371:20;12362:29;;12400:31;12425:5;12400:31;:::i;:::-;12302:135;;;;:::o;12443:1053::-;12545:6;12553;12561;12569;12577;12585;12634:3;12622:9;12613:7;12609:23;12605:33;12602:120;;;12641:79;;:::i;:::-;12602:120;12761:1;12786:53;12831:7;12822:6;12811:9;12807:22;12786:53;:::i;:::-;12776:63;;12732:117;12888:2;12914:53;12959:7;12950:6;12939:9;12935:22;12914:53;:::i;:::-;12904:63;;12859:118;13016:2;13042:53;13087:7;13078:6;13067:9;13063:22;13042:53;:::i;:::-;13032:63;;12987:118;13144:2;13170:51;13213:7;13204:6;13193:9;13189:22;13170:51;:::i;:::-;13160:61;;13115:116;13270:3;13297:53;13342:7;13333:6;13322:9;13318:22;13297:53;:::i;:::-;13287:63;;13241:119;13399:3;13426:53;13471:7;13462:6;13451:9;13447:22;13426:53;:::i;:::-;13416:63;;13370:119;12443:1053;;;;;;;;:::o;13502:1199::-;13613:6;13621;13629;13637;13645;13653;13661;13710:3;13698:9;13689:7;13685:23;13681:33;13678:120;;;13717:79;;:::i;:::-;13678:120;13837:1;13862:53;13907:7;13898:6;13887:9;13883:22;13862:53;:::i;:::-;13852:63;;13808:117;13964:2;13990:53;14035:7;14026:6;14015:9;14011:22;13990:53;:::i;:::-;13980:63;;13935:118;14092:2;14118:53;14163:7;14154:6;14143:9;14139:22;14118:53;:::i;:::-;14108:63;;14063:118;14220:2;14246:53;14291:7;14282:6;14271:9;14267:22;14246:53;:::i;:::-;14236:63;;14191:118;14348:3;14375:51;14418:7;14409:6;14398:9;14394:22;14375:51;:::i;:::-;14365:61;;14319:117;14475:3;14502:53;14547:7;14538:6;14527:9;14523:22;14502:53;:::i;:::-;14492:63;;14446:119;14604:3;14631:53;14676:7;14667:6;14656:9;14652:22;14631:53;:::i;:::-;14621:63;;14575:119;13502:1199;;;;;;;;;;:::o;14707:474::-;14775:6;14783;14832:2;14820:9;14811:7;14807:23;14803:32;14800:119;;;14838:79;;:::i;:::-;14800:119;14958:1;14983:53;15028:7;15019:6;15008:9;15004:22;14983:53;:::i;:::-;14973:63;;14929:117;15085:2;15111:53;15156:7;15147:6;15136:9;15132:22;15111:53;:::i;:::-;15101:63;;15056:118;14707:474;;;;;:::o;15187:120::-;15259:23;15276:5;15259:23;:::i;:::-;15252:5;15249:34;15239:62;;15297:1;15294;15287:12;15239:62;15187:120;:::o;15313:137::-;15358:5;15396:6;15383:20;15374:29;;15412:32;15438:5;15412:32;:::i;:::-;15313:137;;;;:::o;15456:472::-;15523:6;15531;15580:2;15568:9;15559:7;15555:23;15551:32;15548:119;;;15586:79;;:::i;:::-;15548:119;15706:1;15731:53;15776:7;15767:6;15756:9;15752:22;15731:53;:::i;:::-;15721:63;;15677:117;15833:2;15859:52;15903:7;15894:6;15883:9;15879:22;15859:52;:::i;:::-;15849:62;;15804:117;15456:472;;;;;:::o;15934:105::-;16009:23;16026:5;16009:23;:::i;:::-;16004:3;15997:36;15934:105;;:::o;16045:142::-;16082:7;16122:58;16115:5;16111:70;16100:81;;16045:142;;;:::o;16193:108::-;16270:24;16288:5;16270:24;:::i;:::-;16265:3;16258:37;16193:108;;:::o;16375:517::-;16528:4;16523:3;16519:14;16620:4;16613:5;16609:16;16603:23;16639:61;16694:4;16689:3;16685:14;16671:12;16639:61;:::i;:::-;16543:167;16793:4;16786:5;16782:16;16776:23;16812:63;16869:4;16864:3;16860:14;16846:12;16812:63;:::i;:::-;16720:165;16497:395;16375:517;;:::o;16898:334::-;17047:4;17085:2;17074:9;17070:18;17062:26;;17098:127;17222:1;17211:9;17207:17;17198:6;17098:127;:::i;:::-;16898:334;;;;:::o;17238:180::-;17286:77;17283:1;17276:88;17383:4;17380:1;17373:15;17407:4;17404:1;17397:15;17424:320;17468:6;17505:1;17499:4;17495:12;17485:22;;17552:1;17546:4;17542:12;17573:18;17563:81;;17629:4;17621:6;17617:17;17607:27;;17563:81;17691:2;17683:6;17680:14;17660:18;17657:38;17654:84;;17710:18;;:::i;:::-;17654:84;17475:269;17424:320;;;:::o;17750:180::-;17798:77;17795:1;17788:88;17895:4;17892:1;17885:15;17919:4;17916:1;17909:15;17936:102;17978:8;18025:5;18022:1;18018:13;17997:34;;17936:102;;;:::o;18044:848::-;18105:5;18112:4;18136:6;18127:15;;18160:5;18151:14;;18174:712;18195:1;18185:8;18182:15;18174:712;;;18290:4;18285:3;18281:14;18275:4;18272:24;18269:50;;;18299:18;;:::i;:::-;18269:50;18349:1;18339:8;18335:16;18332:451;;;18764:4;18757:5;18753:16;18744:25;;18332:451;18814:4;18808;18804:15;18796:23;;18844:32;18867:8;18844:32;:::i;:::-;18832:44;;18174:712;;;18044:848;;;;;;;:::o;18898:1073::-;18952:5;19143:8;19133:40;;19164:1;19155:10;;19166:5;;19133:40;19192:4;19182:36;;19209:1;19200:10;;19211:5;;19182:36;19278:4;19326:1;19321:27;;;;19362:1;19357:191;;;;19271:277;;19321:27;19339:1;19330:10;;19341:5;;;19357:191;19402:3;19392:8;19389:17;19386:43;;;19409:18;;:::i;:::-;19386:43;19458:8;19455:1;19451:16;19442:25;;19493:3;19486:5;19483:14;19480:40;;;19500:18;;:::i;:::-;19480:40;19533:5;;;19271:277;;19657:2;19647:8;19644:16;19638:3;19632:4;19629:13;19625:36;19607:2;19597:8;19594:16;19589:2;19583:4;19580:12;19576:35;19560:111;19557:246;;;19713:8;19707:4;19703:19;19694:28;;19748:3;19741:5;19738:14;19735:40;;;19755:18;;:::i;:::-;19735:40;19788:5;;19557:246;19828:42;19866:3;19856:8;19850:4;19847:1;19828:42;:::i;:::-;19813:57;;;;19902:4;19897:3;19893:14;19886:5;19883:25;19880:51;;;19911:18;;:::i;:::-;19880:51;19960:4;19953:5;19949:16;19940:25;;18898:1073;;;;;;:::o;19977:285::-;20037:5;20061:23;20079:4;20061:23;:::i;:::-;20053:31;;20105:27;20123:8;20105:27;:::i;:::-;20093:39;;20151:104;20188:66;20178:8;20172:4;20151:104;:::i;:::-;20142:113;;19977:285;;;;:::o;20268:410::-;20308:7;20331:20;20349:1;20331:20;:::i;:::-;20326:25;;20365:20;20383:1;20365:20;:::i;:::-;20360:25;;20420:1;20417;20413:9;20442:30;20460:11;20442:30;:::i;:::-;20431:41;;20621:1;20612:7;20608:15;20605:1;20602:22;20582:1;20575:9;20555:83;20532:139;;20651:18;;:::i;:::-;20532:139;20316:362;20268:410;;;;:::o;20684:234::-;20824:34;20820:1;20812:6;20808:14;20801:58;20893:17;20888:2;20880:6;20876:15;20869:42;20684:234;:::o;20924:366::-;21066:3;21087:67;21151:2;21146:3;21087:67;:::i;:::-;21080:74;;21163:93;21252:3;21163:93;:::i;:::-;21281:2;21276:3;21272:12;21265:19;;20924:366;;;:::o;21296:419::-;21462:4;21500:2;21489:9;21485:18;21477:26;;21549:9;21543:4;21539:20;21535:1;21524:9;21520:17;21513:47;21577:131;21703:4;21577:131;:::i;:::-;21569:139;;21296:419;;;:::o;21721:191::-;21761:3;21780:20;21798:1;21780:20;:::i;:::-;21775:25;;21814:20;21832:1;21814:20;:::i;:::-;21809:25;;21857:1;21854;21850:9;21843:16;;21878:3;21875:1;21872:10;21869:36;;;21885:18;;:::i;:::-;21869:36;21721:191;;;;:::o;21918:175::-;22058:27;22054:1;22046:6;22042:14;22035:51;21918:175;:::o;22099:366::-;22241:3;22262:67;22326:2;22321:3;22262:67;:::i;:::-;22255:74;;22338:93;22427:3;22338:93;:::i;:::-;22456:2;22451:3;22447:12;22440:19;;22099:366;;;:::o;22471:419::-;22637:4;22675:2;22664:9;22660:18;22652:26;;22724:9;22718:4;22714:20;22710:1;22699:9;22695:17;22688:47;22752:131;22878:4;22752:131;:::i;:::-;22744:139;;22471:419;;;:::o;22896:234::-;23036:34;23032:1;23024:6;23020:14;23013:58;23105:17;23100:2;23092:6;23088:15;23081:42;22896:234;:::o;23136:366::-;23278:3;23299:67;23363:2;23358:3;23299:67;:::i;:::-;23292:74;;23375:93;23464:3;23375:93;:::i;:::-;23493:2;23488:3;23484:12;23477:19;;23136:366;;;:::o;23508:419::-;23674:4;23712:2;23701:9;23697:18;23689:26;;23761:9;23755:4;23751:20;23747:1;23736:9;23732:17;23725:47;23789:131;23915:4;23789:131;:::i;:::-;23781:139;;23508:419;;;:::o;23933:179::-;24073:31;24069:1;24061:6;24057:14;24050:55;23933:179;:::o;24118:366::-;24260:3;24281:67;24345:2;24340:3;24281:67;:::i;:::-;24274:74;;24357:93;24446:3;24357:93;:::i;:::-;24475:2;24470:3;24466:12;24459:19;;24118:366;;;:::o;24490:419::-;24656:4;24694:2;24683:9;24679:18;24671:26;;24743:9;24737:4;24733:20;24729:1;24718:9;24714:17;24707:47;24771:131;24897:4;24771:131;:::i;:::-;24763:139;;24490:419;;;:::o;24915:180::-;24963:77;24960:1;24953:88;25060:4;25057:1;25050:15;25084:4;25081:1;25074:15;25101:180;25149:77;25146:1;25139:88;25246:4;25243:1;25236:15;25270:4;25267:1;25260:15;25287:224;25427:34;25423:1;25415:6;25411:14;25404:58;25496:7;25491:2;25483:6;25479:15;25472:32;25287:224;:::o;25517:366::-;25659:3;25680:67;25744:2;25739:3;25680:67;:::i;:::-;25673:74;;25756:93;25845:3;25756:93;:::i;:::-;25874:2;25869:3;25865:12;25858:19;;25517:366;;;:::o;25889:419::-;26055:4;26093:2;26082:9;26078:18;26070:26;;26142:9;26136:4;26132:20;26128:1;26117:9;26113:17;26106:47;26170:131;26296:4;26170:131;:::i;:::-;26162:139;;25889:419;;;:::o;26314:179::-;26454:31;26450:1;26442:6;26438:14;26431:55;26314:179;:::o;26499:366::-;26641:3;26662:67;26726:2;26721:3;26662:67;:::i;:::-;26655:74;;26738:93;26827:3;26738:93;:::i;:::-;26856:2;26851:3;26847:12;26840:19;;26499:366;;;:::o;26871:419::-;27037:4;27075:2;27064:9;27060:18;27052:26;;27124:9;27118:4;27114:20;27110:1;27099:9;27095:17;27088:47;27152:131;27278:4;27152:131;:::i;:::-;27144:139;;26871:419;;;:::o;27296:553::-;27473:4;27511:3;27500:9;27496:19;27488:27;;27525:71;27593:1;27582:9;27578:17;27569:6;27525:71;:::i;:::-;27606:72;27674:2;27663:9;27659:18;27650:6;27606:72;:::i;:::-;27688;27756:2;27745:9;27741:18;27732:6;27688:72;:::i;:::-;27770;27838:2;27827:9;27823:18;27814:6;27770:72;:::i;:::-;27296:553;;;;;;;:::o;27855:175::-;27995:27;27991:1;27983:6;27979:14;27972:51;27855:175;:::o;28036:366::-;28178:3;28199:67;28263:2;28258:3;28199:67;:::i;:::-;28192:74;;28275:93;28364:3;28275:93;:::i;:::-;28393:2;28388:3;28384:12;28377:19;;28036:366;;;:::o;28408:419::-;28574:4;28612:2;28601:9;28597:18;28589:26;;28661:9;28655:4;28651:20;28647:1;28636:9;28632:17;28625:47;28689:131;28815:4;28689:131;:::i;:::-;28681:139;;28408:419;;;:::o;28833:179::-;28973:31;28969:1;28961:6;28957:14;28950:55;28833:179;:::o;29018:366::-;29160:3;29181:67;29245:2;29240:3;29181:67;:::i;:::-;29174:74;;29257:93;29346:3;29257:93;:::i;:::-;29375:2;29370:3;29366:12;29359:19;;29018:366;;;:::o;29390:419::-;29556:4;29594:2;29583:9;29579:18;29571:26;;29643:9;29637:4;29633:20;29629:1;29618:9;29614:17;29607:47;29671:131;29797:4;29671:131;:::i;:::-;29663:139;;29390:419;;;:::o;29815:775::-;30048:4;30086:3;30075:9;30071:19;30063:27;;30100:71;30168:1;30157:9;30153:17;30144:6;30100:71;:::i;:::-;30181:72;30249:2;30238:9;30234:18;30225:6;30181:72;:::i;:::-;30263;30331:2;30320:9;30316:18;30307:6;30263:72;:::i;:::-;30345;30413:2;30402:9;30398:18;30389:6;30345:72;:::i;:::-;30427:73;30495:3;30484:9;30480:19;30471:6;30427:73;:::i;:::-;30510;30578:3;30567:9;30563:19;30554:6;30510:73;:::i;:::-;29815:775;;;;;;;;;:::o;30596:180::-;30736:32;30732:1;30724:6;30720:14;30713:56;30596:180;:::o;30782:366::-;30924:3;30945:67;31009:2;31004:3;30945:67;:::i;:::-;30938:74;;31021:93;31110:3;31021:93;:::i;:::-;31139:2;31134:3;31130:12;31123:19;;30782:366;;;:::o;31154:419::-;31320:4;31358:2;31347:9;31343:18;31335:26;;31407:9;31401:4;31397:20;31393:1;31382:9;31378:17;31371:47;31435:131;31561:4;31435:131;:::i;:::-;31427:139;;31154:419;;;:::o;31579:194::-;31619:4;31639:20;31657:1;31639:20;:::i;:::-;31634:25;;31673:20;31691:1;31673:20;:::i;:::-;31668:25;;31717:1;31714;31710:9;31702:17;;31741:1;31735:4;31732:11;31729:37;;;31746:18;;:::i;:::-;31729:37;31579:194;;;;:::o;31779:223::-;31919:34;31915:1;31907:6;31903:14;31896:58;31988:6;31983:2;31975:6;31971:15;31964:31;31779:223;:::o;32008:366::-;32150:3;32171:67;32235:2;32230:3;32171:67;:::i;:::-;32164:74;;32247:93;32336:3;32247:93;:::i;:::-;32365:2;32360:3;32356:12;32349:19;;32008:366;;;:::o;32380:419::-;32546:4;32584:2;32573:9;32569:18;32561:26;;32633:9;32627:4;32623:20;32619:1;32608:9;32604:17;32597:47;32661:131;32787:4;32661:131;:::i;:::-;32653:139;;32380:419;;;:::o;32805:221::-;32945:34;32941:1;32933:6;32929:14;32922:58;33014:4;33009:2;33001:6;32997:15;32990:29;32805:221;:::o;33032:366::-;33174:3;33195:67;33259:2;33254:3;33195:67;:::i;:::-;33188:74;;33271:93;33360:3;33271:93;:::i;:::-;33389:2;33384:3;33380:12;33373:19;;33032:366;;;:::o;33404:419::-;33570:4;33608:2;33597:9;33593:18;33585:26;;33657:9;33651:4;33647:20;33643:1;33632:9;33628:17;33621:47;33685:131;33811:4;33685:131;:::i;:::-;33677:139;;33404:419;;;:::o;33829:179::-;33969:31;33965:1;33957:6;33953:14;33946:55;33829:179;:::o;34014:366::-;34156:3;34177:67;34241:2;34236:3;34177:67;:::i;:::-;34170:74;;34253:93;34342:3;34253:93;:::i;:::-;34371:2;34366:3;34362:12;34355:19;;34014:366;;;:::o;34386:419::-;34552:4;34590:2;34579:9;34575:18;34567:26;;34639:9;34633:4;34629:20;34625:1;34614:9;34610:17;34603:47;34667:131;34793:4;34667:131;:::i;:::-;34659:139;;34386:419;;;:::o;34811:224::-;34951:34;34947:1;34939:6;34935:14;34928:58;35020:7;35015:2;35007:6;35003:15;34996:32;34811:224;:::o;35041:366::-;35183:3;35204:67;35268:2;35263:3;35204:67;:::i;:::-;35197:74;;35280:93;35369:3;35280:93;:::i;:::-;35398:2;35393:3;35389:12;35382:19;;35041:366;;;:::o;35413:419::-;35579:4;35617:2;35606:9;35602:18;35594:26;;35666:9;35660:4;35656:20;35652:1;35641:9;35637:17;35630:47;35694:131;35820:4;35694:131;:::i;:::-;35686:139;;35413:419;;;:::o;35838:222::-;35978:34;35974:1;35966:6;35962:14;35955:58;36047:5;36042:2;36034:6;36030:15;36023:30;35838:222;:::o;36066:366::-;36208:3;36229:67;36293:2;36288:3;36229:67;:::i;:::-;36222:74;;36305:93;36394:3;36305:93;:::i;:::-;36423:2;36418:3;36414:12;36407:19;;36066:366;;;:::o;36438:419::-;36604:4;36642:2;36631:9;36627:18;36619:26;;36691:9;36685:4;36681:20;36677:1;36666:9;36662:17;36655:47;36719:131;36845:4;36719:131;:::i;:::-;36711:139;;36438:419;;;:::o;36863:225::-;37003:34;36999:1;36991:6;36987:14;36980:58;37072:8;37067:2;37059:6;37055:15;37048:33;36863:225;:::o;37094:366::-;37236:3;37257:67;37321:2;37316:3;37257:67;:::i;:::-;37250:74;;37333:93;37422:3;37333:93;:::i;:::-;37451:2;37446:3;37442:12;37435:19;;37094:366;;;:::o;37466:419::-;37632:4;37670:2;37659:9;37655:18;37647:26;;37719:9;37713:4;37709:20;37705:1;37694:9;37690:17;37683:47;37747:131;37873:4;37747:131;:::i;:::-;37739:139;;37466:419;;;:::o;37891:166::-;38031:18;38027:1;38019:6;38015:14;38008:42;37891:166;:::o;38063:366::-;38205:3;38226:67;38290:2;38285:3;38226:67;:::i;:::-;38219:74;;38302:93;38391:3;38302:93;:::i;:::-;38420:2;38415:3;38411:12;38404:19;;38063:366;;;:::o;38435:419::-;38601:4;38639:2;38628:9;38624:18;38616:26;;38688:9;38682:4;38678:20;38674:1;38663:9;38659:17;38652:47;38716:131;38842:4;38716:131;:::i;:::-;38708:139;;38435:419;;;:::o;38860:225::-;39000:34;38996:1;38988:6;38984:14;38977:58;39069:8;39064:2;39056:6;39052:15;39045:33;38860:225;:::o;39091:366::-;39233:3;39254:67;39318:2;39313:3;39254:67;:::i;:::-;39247:74;;39330:93;39419:3;39330:93;:::i;:::-;39448:2;39443:3;39439:12;39432:19;;39091:366;;;:::o;39463:419::-;39629:4;39667:2;39656:9;39652:18;39644:26;;39716:9;39710:4;39706:20;39702:1;39691:9;39687:17;39680:47;39744:131;39870:4;39744:131;:::i;:::-;39736:139;;39463:419;;;:::o;39888:225::-;40028:34;40024:1;40016:6;40012:14;40005:58;40097:8;40092:2;40084:6;40080:15;40073:33;39888:225;:::o;40119:366::-;40261:3;40282:67;40346:2;40341:3;40282:67;:::i;:::-;40275:74;;40358:93;40447:3;40358:93;:::i;:::-;40476:2;40471:3;40467:12;40460:19;;40119:366;;;:::o;40491:419::-;40657:4;40695:2;40684:9;40680:18;40672:26;;40744:9;40738:4;40734:20;40730:1;40719:9;40715:17;40708:47;40772:131;40898:4;40772:131;:::i;:::-;40764:139;;40491:419;;;:::o;40916:148::-;41018:11;41055:3;41040:18;;40916:148;;;;:::o;41070:173::-;41210:25;41206:1;41198:6;41194:14;41187:49;41070:173;:::o;41249:402::-;41409:3;41430:85;41512:2;41507:3;41430:85;:::i;:::-;41423:92;;41524:93;41613:3;41524:93;:::i;:::-;41642:2;41637:3;41633:12;41626:19;;41249:402;;;:::o;41657:390::-;41763:3;41791:39;41824:5;41791:39;:::i;:::-;41846:89;41928:6;41923:3;41846:89;:::i;:::-;41839:96;;41944:65;42002:6;41997:3;41990:4;41983:5;41979:16;41944:65;:::i;:::-;42034:6;42029:3;42025:16;42018:23;;41767:280;41657:390;;;;:::o;42053:167::-;42193:19;42189:1;42181:6;42177:14;42170:43;42053:167;:::o;42226:402::-;42386:3;42407:85;42489:2;42484:3;42407:85;:::i;:::-;42400:92;;42501:93;42590:3;42501:93;:::i;:::-;42619:2;42614:3;42610:12;42603:19;;42226:402;;;:::o;42634:967::-;43016:3;43038:148;43182:3;43038:148;:::i;:::-;43031:155;;43203:95;43294:3;43285:6;43203:95;:::i;:::-;43196:102;;43315:148;43459:3;43315:148;:::i;:::-;43308:155;;43480:95;43571:3;43562:6;43480:95;:::i;:::-;43473:102;;43592:3;43585:10;;42634:967;;;;;:::o;43607:664::-;43812:4;43850:3;43839:9;43835:19;43827:27;;43864:71;43932:1;43921:9;43917:17;43908:6;43864:71;:::i;:::-;43945:72;44013:2;44002:9;43998:18;43989:6;43945:72;:::i;:::-;44027;44095:2;44084:9;44080:18;44071:6;44027:72;:::i;:::-;44109;44177:2;44166:9;44162:18;44153:6;44109:72;:::i;:::-;44191:73;44259:3;44248:9;44244:19;44235:6;44191:73;:::i;:::-;43607:664;;;;;;;;:::o;44277:180::-;44325:77;44322:1;44315:88;44422:4;44419:1;44412:15;44446:4;44443:1;44436:15;44463:185;44503:1;44520:20;44538:1;44520:20;:::i;:::-;44515:25;;44554:20;44572:1;44554:20;:::i;:::-;44549:25;;44593:1;44583:35;;44598:18;;:::i;:::-;44583:35;44640:1;44637;44633:9;44628:14;;44463:185;;;;:::o;44654:170::-;44794:22;44790:1;44782:6;44778:14;44771:46;44654:170;:::o;44830:366::-;44972:3;44993:67;45057:2;45052:3;44993:67;:::i;:::-;44986:74;;45069:93;45158:3;45069:93;:::i;:::-;45187:2;45182:3;45178:12;45171:19;;44830:366;;;:::o;45202:419::-;45368:4;45406:2;45395:9;45391:18;45383:26;;45455:9;45449:4;45445:20;45441:1;45430:9;45426:17;45419:47;45483:131;45609:4;45483:131;:::i;:::-;45475:139;;45202:419;;;:::o;45627:235::-;45767:34;45763:1;45755:6;45751:14;45744:58;45836:18;45831:2;45823:6;45819:15;45812:43;45627:235;:::o;45868:366::-;46010:3;46031:67;46095:2;46090:3;46031:67;:::i;:::-;46024:74;;46107:93;46196:3;46107:93;:::i;:::-;46225:2;46220:3;46216:12;46209:19;;45868:366;;;:::o;46240:419::-;46406:4;46444:2;46433:9;46429:18;46421:26;;46493:9;46487:4;46483:20;46479:1;46468:9;46464:17;46457:47;46521:131;46647:4;46521:131;:::i;:::-;46513:139;;46240:419;;;:::o;46665:332::-;46786:4;46824:2;46813:9;46809:18;46801:26;;46837:71;46905:1;46894:9;46890:17;46881:6;46837:71;:::i;:::-;46918:72;46986:2;46975:9;46971:18;46962:6;46918:72;:::i;:::-;46665:332;;;;;:::o;47003:545::-;47176:4;47214:3;47203:9;47199:19;47191:27;;47228:71;47296:1;47285:9;47281:17;47272:6;47228:71;:::i;:::-;47309:68;47373:2;47362:9;47358:18;47349:6;47309:68;:::i;:::-;47387:72;47455:2;47444:9;47440:18;47431:6;47387:72;:::i;:::-;47469;47537:2;47526:9;47522:18;47513:6;47469:72;:::i;:::-;47003:545;;;;;;;:::o;47554:180::-;47602:77;47599:1;47592:88;47699:4;47696:1;47689:15;47723:4;47720:1;47713:15;47740:174;47880:26;47876:1;47868:6;47864:14;47857:50;47740:174;:::o;47920:366::-;48062:3;48083:67;48147:2;48142:3;48083:67;:::i;:::-;48076:74;;48159:93;48248:3;48159:93;:::i;:::-;48277:2;48272:3;48268:12;48261:19;;47920:366;;;:::o;48292:419::-;48458:4;48496:2;48485:9;48481:18;48473:26;;48545:9;48539:4;48535:20;48531:1;48520:9;48516:17;48509:47;48573:131;48699:4;48573:131;:::i;:::-;48565:139;;48292:419;;;:::o;48717:181::-;48857:33;48853:1;48845:6;48841:14;48834:57;48717:181;:::o;48904:366::-;49046:3;49067:67;49131:2;49126:3;49067:67;:::i;:::-;49060:74;;49143:93;49232:3;49143:93;:::i;:::-;49261:2;49256:3;49252:12;49245:19;;48904:366;;;:::o;49276:419::-;49442:4;49480:2;49469:9;49465:18;49457:26;;49529:9;49523:4;49519:20;49515:1;49504:9;49500:17;49493:47;49557:131;49683:4;49557:131;:::i;:::-;49549:139;;49276:419;;;:::o;49701:221::-;49841:34;49837:1;49829:6;49825:14;49818:58;49910:4;49905:2;49897:6;49893:15;49886:29;49701:221;:::o;49928:366::-;50070:3;50091:67;50155:2;50150:3;50091:67;:::i;:::-;50084:74;;50167:93;50256:3;50167:93;:::i;:::-;50285:2;50280:3;50276:12;50269:19;;49928:366;;;:::o;50300:419::-;50466:4;50504:2;50493:9;50489:18;50481:26;;50553:9;50547:4;50543:20;50539:1;50528:9;50524:17;50517:47;50581:131;50707:4;50581:131;:::i;:::-;50573:139;;50300:419;;;:::o;50725:171::-;50764:3;50787:24;50805:5;50787:24;:::i;:::-;50778:33;;50833:4;50826:5;50823:15;50820:41;;50841:18;;:::i;:::-;50820:41;50888:1;50881:5;50877:13;50870:20;;50725:171;;;:::o;50902:182::-;51042:34;51038:1;51030:6;51026:14;51019:58;50902:182;:::o;51090:366::-;51232:3;51253:67;51317:2;51312:3;51253:67;:::i;:::-;51246:74;;51329:93;51418:3;51329:93;:::i;:::-;51447:2;51442:3;51438:12;51431:19;;51090:366;;;:::o;51462:419::-;51628:4;51666:2;51655:9;51651:18;51643:26;;51715:9;51709:4;51705:20;51701:1;51690:9;51686:17;51679:47;51743:131;51869:4;51743:131;:::i;:::-;51735:139;;51462:419;;;:::o;51887:181::-;52027:33;52023:1;52015:6;52011:14;52004:57;51887:181;:::o;52074:366::-;52216:3;52237:67;52301:2;52296:3;52237:67;:::i;:::-;52230:74;;52313:93;52402:3;52313:93;:::i;:::-;52431:2;52426:3;52422:12;52415:19;;52074:366;;;:::o;52446:419::-;52612:4;52650:2;52639:9;52635:18;52627:26;;52699:9;52693:4;52689:20;52685:1;52674:9;52670:17;52663:47;52727:131;52853:4;52727:131;:::i;:::-;52719:139;;52446:419;;;:::o;52871:220::-;53011:34;53007:1;52999:6;52995:14;52988:58;53080:3;53075:2;53067:6;53063:15;53056:28;52871:220;:::o;53097:366::-;53239:3;53260:67;53324:2;53319:3;53260:67;:::i;:::-;53253:74;;53336:93;53425:3;53336:93;:::i;:::-;53454:2;53449:3;53445:12;53438:19;;53097:366;;;:::o;53469:419::-;53635:4;53673:2;53662:9;53658:18;53650:26;;53722:9;53716:4;53712:20;53708:1;53697:9;53693:17;53686:47;53750:131;53876:4;53750:131;:::i;:::-;53742:139;;53469:419;;;:::o;53894:221::-;54034:34;54030:1;54022:6;54018:14;54011:58;54103:4;54098:2;54090:6;54086:15;54079:29;53894:221;:::o;54121:366::-;54263:3;54284:67;54348:2;54343:3;54284:67;:::i;:::-;54277:74;;54360:93;54449:3;54360:93;:::i;:::-;54478:2;54473:3;54469:12;54462:19;;54121:366;;;:::o;54493:419::-;54659:4;54697:2;54686:9;54682:18;54674:26;;54746:9;54740:4;54736:20;54732:1;54721:9;54717:17;54710:47;54774:131;54900:4;54774:131;:::i;:::-;54766:139;;54493:419;;;:::o;54918:226::-;55058:34;55054:1;55046:6;55042:14;55035:58;55127:9;55122:2;55114:6;55110:15;55103:34;54918:226;:::o;55150:366::-;55292:3;55313:67;55377:2;55372:3;55313:67;:::i;:::-;55306:74;;55389:93;55478:3;55389:93;:::i;:::-;55507:2;55502:3;55498:12;55491:19;;55150:366;;;:::o;55522:419::-;55688:4;55726:2;55715:9;55711:18;55703:26;;55775:9;55769:4;55765:20;55761:1;55750:9;55746:17;55739:47;55803:131;55929:4;55803:131;:::i;:::-;55795:139;;55522:419;;;:::o"},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","DEFAULT_ADMIN_ROLE()":"a217fddf","DOMAIN_SEPARATOR()":"3644e515","MAX_SUPPLY()":"32cb6b0c","MINTER_ROLE()":"d5391393","PAUSER_ROLE()":"e63ab1e9","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getRoleAdmin(bytes32)":"248a9ca3","getVotes(address)":"9ab24eb0","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is a fixed supply of {ERC20} token including functionalities:  - To pause and unpause the contract  - To burn and mint tokens  - To restrict functionality access for only specific roles\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"decimals()\":{\"details\":\"Returns the number of decimals `6` used to get its user representation. See {ERC20-decimals}\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `timepoint` must be in the past\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `timepoint`. Requirements: - `timepoint` must be in the past\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"pause()\":{\"details\":\"Pauses all token transfers. See {Pausable-_pause}. Requirements: - The caller must have the `PAUSER_ROLE`. - The contract must not be in paused state \"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers. See {Pausable-_unpause}. Requirements: - The caller must have the `PAUSER_ROLE`. - The contract must be in paused state \"}},\"title\":\"Mindplex Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract represents an {ERC20} utility token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MindplexToken.sol\":\"MindplexToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x36c00327e3f9afd929cc2721aaa111ab57eff78a630cc364b279ad576b899295\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5bf927f4c8b71a5809be184c3107b915b0445ab2c4a33208331e5376692eb5a\",\"dweb:/ipfs/QmVXirsCY1sf4kodhbL6w3NWZkeZeaMuQB7M6DBAdZNqFE\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x4e560f86662b6f72ab76122fff53317677154f14bac4a80dbd46a54172b3abfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca5c2518d247417cb01164f04eff57b7e87b5346bc03478ada916f26117aa7fd\",\"dweb:/ipfs/QmVgK66XGZCiH9x4mhqejKUTujtu68DyE6KrYi6MPuaHRJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/MindplexToken.sol\":{\"keccak256\":\"0xa294b7acc90dc72e92e8e09f1a8bf55a8b97f4e19cecad4db32b7ff6f500bdb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ffff0a7bdb48ba01a38735ce5445ed6bafeebef519731dbef600c6f97c42fbe\",\"dweb:/ipfs/QmVRk4WsjaoZiZ3WcSEzhy6mvTUbYKx6DZrKtLF18FxdHr\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":639,"contract":"contracts/MindplexToken.sol:MindplexToken","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":645,"contract":"contracts/MindplexToken.sol:MindplexToken","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":647,"contract":"contracts/MindplexToken.sol:MindplexToken","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":649,"contract":"contracts/MindplexToken.sol:MindplexToken","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":651,"contract":"contracts/MindplexToken.sol:MindplexToken","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":3349,"contract":"contracts/MindplexToken.sol:MindplexToken","label":"_nameFallback","offset":0,"slot":"5","type":"t_string_storage"},{"astId":3351,"contract":"contracts/MindplexToken.sol:MindplexToken","label":"_versionFallback","offset":0,"slot":"6","type":"t_string_storage"},{"astId":1355,"contract":"contracts/MindplexToken.sol:MindplexToken","label":"_nonces","offset":0,"slot":"7","type":"t_mapping(t_address,t_struct(Counter)2327_storage)"},{"astId":1363,"contract":"contracts/MindplexToken.sol:MindplexToken","label":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","offset":0,"slot":"8","type":"t_bytes32"},{"astId":1530,"contract":"contracts/MindplexToken.sol:MindplexToken","label":"_delegates","offset":0,"slot":"9","type":"t_mapping(t_address,t_address)"},{"astId":1536,"contract":"contracts/MindplexToken.sol:MindplexToken","label":"_checkpoints","offset":0,"slot":"10","type":"t_mapping(t_address,t_array(t_struct(Checkpoint)1521_storage)dyn_storage)"},{"astId":1540,"contract":"contracts/MindplexToken.sol:MindplexToken","label":"_totalSupplyCheckpoints","offset":0,"slot":"11","type":"t_array(t_struct(Checkpoint)1521_storage)dyn_storage"},{"astId":533,"contract":"contracts/MindplexToken.sol:MindplexToken","label":"_paused","offset":0,"slot":"12","type":"t_bool"},{"astId":24,"contract":"contracts/MindplexToken.sol:MindplexToken","label":"_roles","offset":0,"slot":"13","type":"t_mapping(t_bytes32,t_struct(RoleData)19_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(Checkpoint)1521_storage)dyn_storage":{"base":"t_struct(Checkpoint)1521_storage","encoding":"dynamic_array","label":"struct ERC20Votes.Checkpoint[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_array(t_struct(Checkpoint)1521_storage)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct ERC20Votes.Checkpoint[])","numberOfBytes":"32","value":"t_array(t_struct(Checkpoint)1521_storage)dyn_storage"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Counter)2327_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct Counters.Counter)","numberOfBytes":"32","value":"t_struct(Counter)2327_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_struct(RoleData)19_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)19_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Checkpoint)1521_storage":{"encoding":"inplace","label":"struct ERC20Votes.Checkpoint","members":[{"astId":1518,"contract":"contracts/MindplexToken.sol:MindplexToken","label":"fromBlock","offset":0,"slot":"0","type":"t_uint32"},{"astId":1520,"contract":"contracts/MindplexToken.sol:MindplexToken","label":"votes","offset":4,"slot":"0","type":"t_uint224"}],"numberOfBytes":"32"},"t_struct(Counter)2327_storage":{"encoding":"inplace","label":"struct Counters.Counter","members":[{"astId":2326,"contract":"contracts/MindplexToken.sol:MindplexToken","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_struct(RoleData)19_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":16,"contract":"contracts/MindplexToken.sol:MindplexToken","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":18,"contract":"contracts/MindplexToken.sol:MindplexToken","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_uint224":{"encoding":"inplace","label":"uint224","numberOfBytes":"28"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"}}}}}}}}